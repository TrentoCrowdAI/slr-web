{"version":3,"sources":["utils/conn.js","config/index.js","dao/users.dao.js","components/modules/error.js","components/providers/appProvider.js","components/home.js","dao/projects.dao.js","components/svg/loadIcon.js","components/svg/closeButton.js","components/forms/projectForm.js","components/modules/pagination.js","utils/index.js","components/modules/cover.js","components/svg/optionsButton.js","components/modules/sideOptions.js","components/svg/emptyFolder.js","components/projects/projectsList.js","dao/paper.dao.js","dao/projectPapers.dao.js","components/svg/selectTick.js","components/forms/checkbox.js","components/svg/radioTick.js","components/forms/radiobox.js","components/svg/noPapers.js","components/papers/printPapersList.js","components/svg/selectArrow.js","components/forms/select.js","components/svg/searchButton.js","components/svg/searchSimilarButton.js","components/svg/orderArrow.js","components/svg/removeButton.js","components/svg/noSearchResults.js","components/forms/searchform.js","dao/updateFile.dao.js","components/svg/goButton.js","components/forms/searchSimilarPapers.js","components/forms/searchSimilarForm.js","components/papers/papersList.js","components/forms/selectformik.js","components/forms/custompaper.js","components/papers/customPaperPage.js","components/svg/editButton.js","components/projects/projectDescription.js","components/projects/projectName.js","components/svg/forbidden.js","components/svg/ghost.js","components/modules/pageNotFound.js","components/projects/projectPage.js","components/main.js","components/navigation/navBar.js","components/navigation/userInfo.js","components/svg/menuButton.js","components/navigation/sideMenu.js","components/modules/breadCrumbs.js","components/modules/notification.js","components/modules/usersLogin.js","App.js","serviceWorker.js","index.js"],"names":["abortController","abortRequestType","config","home","search","scopus_search","search_similar","projects","papers","customPapers","userLogin","userInfo","userLogout","menu_list","id","content","link","max_total_number_for_results","pdf_parse_server","google_login_client_id","timeOutTime","localStorage","window","request","_callee","url","options","signal","requestOptions","timer","response","data","timeOutError","regenerator_default","a","wrap","_context","prev","next","AbortController","Object","assign","mode","setTimeout","abort","fetch","sent","clearTimeout","parseResponseData","checkResponseStatus","abrupt","t0","Error","name","stop","_callee2","queryData","query","key","jsonHeaders","_args2","arguments","_context2","length","undefined","encodeURIComponent","slice","Headers","append","getItem","method","headers","_callee3","_context3","_callee4","bodyData","body","_args4","_context4","JSON","stringify","_callee5","_args5","_context5","_callee6","_args6","_context6","status","error","statusText","payload","_callee7","contentType","_context7","get","indexOf","text","formData","blob","json","http","post","delete","put","postFile","abortRequest","console","log","id_token","usersDao","postTokenId","getUserByTokenId","logoutUser","withRouter","props","_useState","useState","_useState2","slicedToArray","firstTime","setFirstTime","appConsumer","useContext","AppContext","history","location","useEffect","setError","pathname","statusCode","message","storage","getUserData","_ref","asyncToGenerator","mark","res","removeItem","setUser","apply","this","goBack","e","output","react_default","createElement","Fragment","className","style","textAlign","type","onClick","React","createContext","AppProvider","user","_useState3","_useState4","userFetch","setUserFetch","_useState5","_useState6","_useState7","_useState8","title","setTitle","_useState9","_useState10","notificationMessage","setNotificationMessage","_useState11","_useState12","projectName","setProjectName","contextObject","_user","email","given_name","surname","family_name","image","picture","Provider","value","modules_error","children","push","fontSize","fontWeight","_args","project_id","_callee8","collaborator_id","_context8","projectsDao","getProjectsList","getProject","postProject","putProject","deleteProject","getProjectCollaborators","removeProjectCollaborator","addProjectCollaborator","LoadIcon","class","xmlns","xmlnsXlink","x","y","viewBox","d","CloseButton","x1","y1","x2","y2","ProjectForm","yup","require","projectValidationSchema","object","shape","string","required","description","formik_esm","initialValues","validationSchema","onSubmit","_ref2","values","setSubmitting","_x","_x2","validateOnBlur","_ref3","errors","touched","isSubmitting","validateField","setErrors","handleChange","visibility","setVisibility","closeButton","borderBottom","placeholder","onChange","component","disabled","Pagination","start","count","totalResults","path","queryString","href","split","newQueryString","arryQuery","i","parameterName","setStartAndCountInUrl","firstPage","lastPage","listPage","paged","Math","floor","totalPage","ceil","react_router_dom","to","paginationLength","display","map","element","index","margin","arrayOfObjectsContains","b","_loop","some","v","_ret","join","base","charAt","createQueryStringFromObject","keys","getIndexOfObjectArrayByKeyAndValue","array","Cover","cls","handler","DeleteButton","version","SideOptions","target","focused","setFocused","onBlur","onMouseDown","optionsButton","padding","border","EmptyFolder","PrintList","maps","projectsList","handleDelete","sideOptions","emptyFolder","modules_sideOptions","date_last_modified","ProjectsList","setProjectsList","setTotalResults","setDisplay","toggleform","setToggleForm","params","parse","createQueryData","_handleDelete","newProjectsList","filter","project","mounted","even_projs","odd_projs","objectSpread","orderBy","results","concat","fetchData","loadIcon","cover","projectsList_PrintList","match","pagination","projectForm","paperDao","selectById","searchSimilar","paper_id","projectPapersDao","getPapersList","getPaper","postPaperIntoProject","postCustomPaperIntoProject","putPaper","deletePaper","SelectTick","points","attributeName","dur","repeatCount","fill","from","CheckBox","val","label","isChecked","tick","setTick","selectTick","checked","RadioTick","cx","cy","r","RadioBox","radioTick","NoPapers","PrintPapersList","papersList","localPaperList","setLocalPaperList","handleSideOptions","_x4","_x5","_x6","_handleSideOptions2","newPapersList","paper","setItem","noPapers","authors","eid","doi","year","lib_default","abstract","lines","ellipsis","moreText","lessText","PrintScoupusSearchList","handlePaperSelection","selectedEidList","setSimilarPaperData","_x3","_handleSideOptions","goSimilar","substring","forms_checkbox","includes","SelectArrow","attributeType","begin","Select","selected","handleFocus","document","getElementById","beginElement","tabIndex","onFocus","selectArrow","borderLeft","borderRight","borderTop","data-value","SearchButton","SearchSimilarButton","OrderArrow","up","destination","setDestination","transform","RemoveButton","NoSearchResults","_","orderByOptions","searchByOptions","endYear","Date","getFullYear","yearOptions","toConsumableArray","range","String","SelectedPapersListBox","selectedPapersList","opacity","pointerEvents","removeButton","height","SearchForm","selectedPapersListFromStorage","setPapersList","queryUrl","scopus","searchBy","sort","googleScholar","arXiv","setSelectedPapersList","keywords","setKeyWords","source","setSource","_useState13","_useState14","setSearchBy","_useState15","_useState16","setYear","_useState17","_useState18","setUp","handleSelection","parseInt","getAttribute","handelOrder","event","newList","selectAllPapers","allPapersInPage","tmpList","uniqBy","_handleAddPapers","papersToAdd","_arrayEid","preventDefault","arrayEid","_handleSendSearch","_queryString","handleOnInputChange","newSource","formPart","position","searchButton","searchSimilarButton","radiobox","singleYear","resultPart","forms_select","orderArrow","searchform_SelectedPapersListBox","noSearchResults","updateFileDao","updatePdf","GoButton","SearchSimilarPapers","close","input","paperInfo","fetching","setPaperInfo","setPaperFile","topRightButton","inputElement","useRef","_handleSubmission","current","files","goButton","ref","click","_ref4","SearchSimilarForm","onbeforeunload","similarPaperDataFromStorage","similarPaperData","similarPaperFile","setSimilarPaperFile","_useState19","_useState20","_useState21","_useState22","similarFormVisibility","setSimilarFormVisibility","_useState23","_useState24","similarPaperFetch","setSimilarPaperFetch","resx","test","FormData","fetchMainPaper","paperData","fetchSimilarPapers","marginTop","searchSimilarPapers","boxShadow","searchSimilarForm_SelectedPapersListBox","PapersList","form","setSelected","setFieldValue","paperType","PaperForm","paperValidationSchema","number","min","max","integer","customPaper","document_type","toString","source_title","abstract_structured","filter_oa_include","filter_study_include","notes","manual","projectId","render","field","selectformik","CustomPaperPage","paperDataFetch","setPaperDataFetch","setPaperData","displayForm","setDisplayForm","file","custompaper","EditButton","confirm","ProjectDescription","update","date_created","collaborators","setCollaborators","editing","setEditing","setInput","loadIconDisplay","setLoadIconDisplay","formatDate","date","_removeCollaborator","collaborator","newCollabs","callApi","_addCollaborator","defaultValue","width","focus","editButton","removeCollaborator","ProjectName","Forbidden","Ghost","rx","ry","PageNotFound","ghost","ProjectPageHead","notFound","lc","hash","substr","slider","left","ProjectPage","setProject","setNotFound","unauthorized","setUnauthorized","updateProject","_updateProject","new_name","new_desc","reload","projects_projectName","forbidden","projectPage_ProjectPageHead","react_router","exact","projectDescription","papers_papersList","searchform","searchSimilarForm","customPaperPage","pageNotFound","Main","projects_projectsList","projectPage","NavBar","UserInfo","alt","src","MenuButton","PrintMenu","onMouseUp","handleMenuBlur","SideMenu","shown","setShown","_logout","clsidemenu","clsbutton","menuButton","sideMenu_PrintMenu","bcPath","bc","createBreadCrumbs","Notification","responseGoogle","_responseGoogle","tokenId","profileObj","givenName","familyName","imageUrl","google_login","clientId","buttonText","onSuccess","onFailure","cookiePolicy","App","appProvider_AppProvider","navBar","sideMenu","breadCrumbs","notification","main","usersLogin","Boolean","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35ef192c.chunk.js","sourcesContent":["/*this is the file to communicate with backend by fetch request*/\nimport config from 'config/index';\n\n//signal to abort the request\nlet abortController;\n//int to know abort error type\nlet abortRequestType;\n//10seconds for timeout\nlet timeOutTime = 10 * 1000;\n\n//get the localStorage object\nconst localStorage = window.localStorage;\n\n/**\n * abort all request in progeress by user\n */\nfunction abortRequest() {\n    abortController.abort();\n    abortRequestType = 1;\n    console.log(\"abort\")\n\n}\n\n/**\n * abort all request if timeout\n */\nfunction timeOut() {\n\n    abortController.abort();\n    abortRequestType = 2;\n}\n\n/**\n * create a basic fetch request\n * @param url\n * @param options request config\n * @param {int} timeOutTime\n * @return {object} response data\n\n */\nasync function request(url, options, timeOutTime) {\n    try {\n\n        //create a new abortController for this request\n        abortController = new AbortController();\n        let signal = abortController.signal;\n        //initialize as 0 for every request\n        abortRequestType = 0;\n\n        let requestOptions = Object.assign(\n            {\n                //enable the  sending of cookie\n                //credentials: (url.includes(config.userInfo)) ? 'omit' : 'include', //if it's a google user api request I don't need credentials\n                \"mode\": 'cors',\n                \"signal\": signal\n            },\n            options\n        );\n\n        //set timeout clock\n        let timer = setTimeout(() => timeOut(), timeOutTime);\n\n        let response = await fetch(url, requestOptions);\n\n        //clear timeout clock\n        clearTimeout(timer);\n\n\n        //parse response data\n        let data = await parseResponseData(response);\n        //response error check\n        checkResponseStatus(response,data);\n        return  data;\n\n    }\n    catch (error) {\n\n        //console.dir(error);\n\n        //if abort error is caused by timeout\n        if (abortRequestType === 2) {\n            //create a custom error for timeout\n            let timeOutError = new Error(\"Error: Time out to get response from backend\");\n            timeOutError.name = \"timeout\";\n            return  timeOutError;\n        }\n        //if is a abort error  caused by user\n        else if (abortRequestType === 1) {\n            return null;\n        }\n\n        return error;\n\n\n    }\n}\n\n/**\n * get method\n * @param url\n * @param queryData quey string\n * @return {object} response data\n */\nasync function get(url, queryData = \"\") {\n    let query = \"\";\n    if (queryData !== \"\") {\n        query = \"?\";\n        for (let key in queryData) {\n            query += key + \"=\" + encodeURIComponent(queryData[key]) + \"&\";\n        }\n        //delete the last &\n        query = query.slice(0, query.length - 1);\n    }\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let options = {\n        \"method\": 'GET',\n        \"headers\": jsonHeaders,\n    };\n\n    return await request(url + query, options, timeOutTime);\n}\n\n/**\n * delete method\n * @param url\n */\nasync function deletes(url) {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let options = {\n        \"method\": 'DELETE',\n        \"headers\": jsonHeaders,\n    };\n\n    return await request(url, options, timeOutTime);\n}\n\n/**\n * post method\n * @param url\n * @param bodyData\n * @return {object } response data\n */\nasync function post(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'POST',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options, timeOutTime);\n}\n\n/**\n * post file method\n * @param url\n * @param bodyData\n * @return {object} response data\n */\nasync function postFile(url, bodyData = \"\") {\n\n    //custom timeout for request\n    let customTimeOutTime= 10 * 1000;\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n   // jsonHeaders.append('Content-Type', 'multipart/form-data');\n    let options = {\n        \"method\": 'POST',\n        \"headers\": jsonHeaders,\n        \"body\": bodyData\n    };\n\n    return await request(url, options, customTimeOutTime);\n}\n\n\n/**\n * put method\n * @param url\n * @param bodyData\n */\nasync function put(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'PUT',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options,timeOutTime);\n}\n\n\n/**\n *  * check resposonse status\n * @param response to check\n * @param data data received\n * @throws {Error} if  status code < 200 or status code >= 300\n */\nfunction checkResponseStatus(response, data) {\n\n    if (response.status < 200 || response.status >= 300) {\n        const error = new Error(response.statusText);\n        error.data = response;\n        if(data.payload){\n            error.payload = data.payload;\n        }\n        throw error;\n    }\n\n}\n\n/**\n * parse the response of  http request\n * @param response response object\n * @return {object} data parsed\n */\nasync function parseResponseData(response) {\n    //get response data type\n    const contentType = response.headers.get('Content-Type');\n    let data = null;\n    //parse the data by its type\n    if (contentType != null) {\n        if (contentType.indexOf('text') > -1) {\n            data = await response.text()\n        }\n        if (contentType.indexOf('form') > -1) {\n            data = await response.formData();\n        }\n        if (contentType.indexOf('video') > -1) {\n            data = await response.blob();\n        }\n        if (contentType.indexOf('json') > -1) {\n            data = await response.json();\n        }\n    }\n    else if (response != null) {\n        data = await response.text();\n    }\n    return data;\n}\n\n\n\n//object to export\nconst http = {\n    get,\n    post,\n    \"delete\" : deletes,\n    put,\n    postFile,\n    abortRequest,\n};\n\nexport default http;","/**\n * this is the config file\n */\n\n\nconst config = {\n    \"home\": \"https://crowdai-slr-api-dev.herokuapp.com/\",\n    //\"home\": \"http://localhost:3001/\",\n    \"search\": \"search\",\n    \"scopus_search\": \"search-scopus\",\n    \"search_similar\": \"search/similar\",\n    \"projects\": \"projects\",\n    \"papers\": \"papers\",\n    \"customPapers\": \"customPapers\",\n    \"userLogin\": \"auth/login\",\n    \"userInfo\": \"https://www.googleapis.com/oauth2/v3/tokeninfo\",\n    \"userLogout\": \"auth/logout\",\n    \"menu_list\": [\n        {id: 4, content: \"Home\", link: \"/\"},\n        {id: 5, content: \"My projects\", link: \"/projects\"},\n        {id: 6, content: \"Account\", link: \"#\"}\n    ],\n    \"max_total_number_for_results\": 5000,\n    \"pdf_parse_server\": \"pdf\",\n    \"google_login_client_id\": \"282160526683-84sdnoqh3bc1obojfpepcbonnfg3uks4.apps.googleusercontent.com\",\n\n\n\n\n\n};\n\nexport default config;\n","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to post validation token\n * @param bodyData\n * @return {Object} Google user data\n */\nasync function postTokenId(bodyData) {\n    let url = config.home + config.userLogin;\n    return await http.post(url, bodyData);\n}\n\n/**\n * get user by token\n * @return {Object} user data\n */\nasync function getUserByTokenId(id_token) {\n    let url = config.userInfo;\n    return await http.get(url, {id_token});\n}\n\n/**\n * logout user\n * @return {Object} user data\n */\nasync function logoutUser() {\n    let url = config.home + config.userLogout;\n    return await http.get(url);\n}\n\nconst usersDao = {\n    postTokenId,\n    getUserByTokenId,\n    logoutUser\n}\n\n\nexport {usersDao};","import React, {useContext, useState, useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nimport {AppContext} from \"components/providers/appProvider\";\nimport {usersDao} from \"dao/users.dao\";\n\nconst Error = function (props) {\n\n    //this avoids setting the error to null on mount\n    const [firstTime, setFirstTime] = useState(true);\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //useful router stuff\n    const { history, location } = props;\n\n    //if the pathname changes(and it's not the first time) I remove the error\n    //because it means the user manually changed the path\n    useEffect(() => {\n        \n        if(firstTime){\n            console.log(\"error mountes\")\n            setFirstTime(false);\n        }else{\n            appConsumer.setError(null);\n        }\n\n    }, [location.pathname])\n\n    useEffect(() => {\n        try{\n            console.log(appConsumer.error.payload.statusCode);\n\n            //once the component is mounted I go immediately back if error is 401\n            if(appConsumer.error.payload.statusCode === 401 || appConsumer.error.payload.message === \"the token does not match any user!\"){\n                console.log(\"unauth call\")\n                //once I get unauthorized error I check whether the user token is expired\n                const storage = window.localStorage;\n                if (storage.getItem(\"userToken\")) {\n                    async function getUserData(){\n                        let res = await usersDao.getUserByTokenId(storage.getItem(\"userToken\"));\n                        //If the token is expired I remove it and I logout the user\n                        if(res && res.message){\n                            console.log(\"INVALID TOKEN\");\n                            storage.removeItem(\"userToken\");\n                            appConsumer.setUser(null);\n                        }else{\n                            console.log(\"VALID TOKEN\");\n                        }\n                        \n                    }\n                    console.log(\"checking token\")\n                    getUserData();\n                }\n                //then I go back\n                console.log(\"pushing back\")\n                history.goBack();\n            }\n        }catch (e){\n            console.log(\"YOU MAY NEED TO CHANGE THE HOME URL PARAMETER FROM 'config/index.js'\");\n        }\n        return () => {\n            //delete the error, so app can resume its work\n            appConsumer.setError(null);\n        }\n\n    }, []);\n    \n\n    //function to delete the error object in context\n    function handleOnRefresh(){\n        appConsumer.setError(null);\n    }\n    //function to return to previous page\n    function handleOnGoBack(){\n        history.goBack();\n        appConsumer.setError(null);\n    }\n\n    //console.dir(appConsumer.error);\n    let output = <></>;\n\n    //is a error from backend\n    if (appConsumer.error.payload) {\n        output = (\n            <>\n                <p>Error code:</p>\n                <p>{appConsumer.error.payload.statusCode}</p>\n                <p>Error name:</p>\n                <p>{appConsumer.error.payload.error}</p>\n                <p>Error message</p>\n                <p>{appConsumer.error.payload.message}</p>\n            </>\n        );\n    }\n\n    //is a error of other type\n    else {\n        output = (\n            <>\n                <p>Error name:</p>\n                <p>{appConsumer.error.name}</p>\n                <p>Error message</p>\n                <p>{appConsumer.error.message}</p>\n            </>\n        );\n    }\n\n    output = (\n        <div className=\"error-wrapper\" style={{textAlign: \"center\"}}>\n            {output}\n            <br/>\n            <button type=\"button\" onClick={handleOnGoBack}><u>return to previous page</u></button>\n            <br/>\n            <p>or</p>\n            <br/>\n            <button type=\"button\" onClick={handleOnRefresh}><u>refresh</u></button>\n\n        </div>\n    );\n\n    return output;\n\n}\n\n\nexport default withRouter(Error);","import React, {useState, useEffect} from 'react';\n\nimport Error from 'components/modules/error';\n\nimport {usersDao} from 'dao/users.dao';\n\n//create a context object\nconst AppContext = React.createContext();\n\n/**\n * this is the component that include a context object that it can be access by all its children component\n */\nconst AppProvider = function (props) {\n\n    //user data\n    const [user, setUser] = useState(null);\n\n    //user data fetch flag\n    const [userFetch, setUserFetch] = useState(true);\n\n    //error\n    const [error, setError] = useState(null);\n\n    //title\n    const [title, setTitle] = useState(<div className=\"nav-elements\"> <h2 className=\"static-title\">HOME</h2> </div>);\n\n    //notification message\n    const [notificationMessage, setNotificationMessage] = useState(undefined);\n\n    const [projectName, setProjectName] = useState(\"\");\n\n    //preparate an object to be insertd into context\n    const contextObject ={\n        user,\n        setUser,\n        userFetch,\n        setUserFetch,\n        error,\n        setError,\n        title,\n        setTitle,\n        notificationMessage,\n        setNotificationMessage,\n        projectName,\n        setProjectName\n    };\n\n\n    //effect on context mount to fetch user data if he's logged\n    useEffect(() => {\n        //get the localStorage object\n        const storage = window.localStorage;\n\n        if (storage.getItem(\"userToken\")) {\n            async function getUserData(){\n                let res = await usersDao.getUserByTokenId(storage.getItem(\"userToken\"));\n\n                //if I receive an error I remove the deprecated token\n                if((res && res.message) || !res.email){\n                    storage.removeItem(\"userToken\");\n                }else{\n                    let user = {\"email\": res.email, \n                                \"name\": res.given_name, \n                                \"surname\": res.family_name, \n                                \"image\": res.picture};\n                    setUser(user);\n                }\n\n                setUserFetch(false);\n            }\n            getUserData();\n        }else{\n            setUserFetch(false);\n        }\n\n        \n    }, [])\n\n    //if there isn't error\n    if (!error) {\n\n        return (\n            //*set the values of contenxt*\n            <AppContext.Provider value={contextObject}>\n\n                {/*mount all components children*/}\n                {props.children}\n\n            </AppContext.Provider>\n        );\n    }\n    //if there is a error\n    else {\n        return (\n            //*set the values of contenxt*\n            <AppContext.Provider value={contextObject}>\n\n                    <Error/>\n\n            </AppContext.Provider>\n        )\n    }\n\n\n}\n\nexport {AppContext, AppProvider};","import React, {useContext, useEffect} from \"react\";\n\nimport {withRouter} from 'react-router-dom';\n\nimport {AppContext} from \"components/providers/appProvider\";\n\n/**\n * this is home component\n */\nconst Home = function (props) {\n\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set title when component mounts\n    useEffect(() => {\n        appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">HOME</h2> </div>);\n    },[])//run on component mount\n\n    const { history, location } = props;\n\n    useEffect(() => {\n        //if user is not logged it I redirect to homepage\n        if(!appConsumer.user){\n            history.push(\"/\");\n        }\n    }, [location.pathname]) //every time location changes\n\n    return (\n        <>\n            <h1>\n                Systematic Literature Review manager\n            </h1>\n            <h2 style={{fontSize: 22, fontWeight: \"normal\"}}>the system right now allows you to</h2>\n            <ul style={{fontSize: 18, fontWeight: \"lighter\"}}>\n                <li>browse a list of prjects</li>\n                <li>add a new project</li>\n                <li>browse the list of papers on a project</li>\n                <li>search(from scopus) and add papers to a project</li>\n                <li>add custom papers based on a file or form data</li>\n                <li>'fake search' similar papers</li>\n            </ul>\n            <h2 style={{fontSize: 22, fontWeight: \"normal\"}}>notes</h2>\n            <ul style={{fontSize: 18, fontWeight: \"lighter\"}}>\n                <li><i>the scopus search works partially(can't retrieve the description)</i>\n                    <ul><li style={{fontSize: 16}}><i>from Elsevier developer portal : \"The data available depends on your institutional subscriptions, and only when you're making calls from within your institutional network are you considered a subscriber\"</i></li></ul>\n                </li>\n                <li><i>the options don't affect the search, for now</i></li>\n            </ul>\n        </>\n    );\n\n\n\n\n};\n\n\nexport default withRouter(Home); //I export passing router componets to the Home so it can access history and location","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to get a projects list\n * @param queryData\n * @return {array[objects]}\n */\nasync function getProjectsList(queryData = \"\") {\n    let url = config.home + config.projects\n    let res = await http.get(url, queryData);\n    return res;\n\n\n}\n\n/**\n * dao to get a project\n * @param project_id\n * @return {Object} project requested\n */\nasync function getProject(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    let res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to get project collaborators\n * @param project_id\n * @return {array[objects]} array of collaborators\n */\nasync function getProjectCollaborators(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id + \"/collaborators\";\n    let res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to post a new project\n * @param bodyData\n * @return {Object} project created\n */\nasync function postProject(bodyData) {\n    let url = config.home + config.projects;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to post a new collaborator\n * @param project_id\n * @param bodyData email of collaborator\n * @return {String} empty string\n */\nasync function addProjectCollaborator(project_id, bodyData) {\n    let url = config.home + config.projects + \"/\" + project_id + \"/collaborators\";\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to put a old project\n * @param project_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putProject(project_id, bodyData) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    return await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a project\n * @param project_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function deleteProject(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    let res = await http.delete(url);\n    return res;\n}\n\n/**\n * dao to remove collaborator\n * @param project_id\n * @param collaborator_id the mail of the collaborator\n * @return {String} empty string\n */\nasync function removeProjectCollaborator(project_id, collaborator_id) {\n    let url = config.home + config.projects + \"/\" + project_id + \"/collaborators/\" + collaborator_id;\n    let res = await http.delete(url);\n    return res;\n}\n\n\nconst projectsDao = {\n    getProjectsList,\n    getProject,\n    postProject,\n    putProject,\n    deleteProject,\n    \"abortRequest\": http.abortRequest,\n    getProjectCollaborators,\n    removeProjectCollaborator,\n    addProjectCollaborator\n}\n\n\nexport {projectsDao};","import React from \"react\";\n\n/**\n * component svg loading-icon\n */\nconst LoadIcon = function (props) {\n\n    return (\n\n        <svg id=\"loading-icon\" className={props.class} xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n             y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <g>\n                <path id=\"loading-circle1\" d=\"\n                  M 500, 500\n                  m -160, 0\n                  a 160,160 0 1,0 320,0\n                  a 160,160 0 1,0 -320,0\n          \"/>\n                <path id=\"loading-circle2\" d=\"\n                  M 500, 500\n                  m -305, 0\n                  a 305,305 0 1,0 610,0\n                  a 305,305 0 1,0 -610,0\n          \"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default LoadIcon;\n","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst CloseButton = function (props) {\n\n    return (\n        <svg id=\"close-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <line className=\"ln\" x1=\"134\" y1=\"866\" x2=\"866\" y2=\"134\"/>\n        <line className=\"ln\" x1=\"134\" y1=\"134\" x2=\"866\" y2=\"866\"/>\n        </svg>\n    );\n};\n\nexport default CloseButton;\n","import React, {useState, useContext} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectsDao} from 'dao/projects.dao'\n\nimport CloseButton from 'components/svg/closeButton';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n/**\n * this is the form for create or edit the project\n * @param props.project  project object if we want to update a old project\n * @param null if we want to create a new project\n */\nfunction ProjectForm(props) {\n\n    let yup = require('yup');\n\n    const [touc, setTouc] = useState(false);\n\n    const projectValidationSchema = yup.object().shape({\n        name: yup.string().required('please enter a title'),\n        description: yup.string().required('please enter a description')\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    return (\n        <>\n        <Formik\n            initialValues={{ name: '', description:''}}\n            validationSchema={projectValidationSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                let bodyData = {name: values.name, description: values.description};\n                //call dao\n                let res = await projectsDao.postProject(bodyData);\n\n                //error checking\n                if(res.message){\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }else{\n                    props.history.push(\"/projects/\" + res.id);\n                }\n                setSubmitting(false);\n            }}\n            validateOnBlur={false}\n        >\n        {function ({ errors, touched, isSubmitting, setErrors, validateField, handleChange }) {\n            let output = \"\";\n            output = (<Form className=\"modal add-project\" style={{visibility: (!props.visibility) ? 'hidden' : '' }}>\n                <button type=\"button\" className=\"close-btn\" onClick={(e) => {\n                    props.setVisibility(!props.visibility);\n                }}><CloseButton/></button>\n                <br/>\n                <Field\n                    style={{borderBottom : (errors.name && touched.name) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"name\"\n                    type=\"text\" \n                    placeholder=\"Project Name\"\n                    onChange={(e) => {handleChange(e); validateField('name')}}/>\n                <br/>\n                <br/>\n                <Field\n                    style={{borderBottom : (errors.description && touched.description) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"description\"\n                    component=\"textarea\"\n                    placeholder=\"Project Description\"/>\n                <br/>\n                <button type=\"submit\" disabled={isSubmitting || \n                    ((errors.name && touched.name) ||\n                    (errors.description && touched.description))}>Add Project</button>\n            </Form>\n            );\n            return output;\n        }}\n        </Formik>\n\n       \n        </>\n    );\n\n\n}\n\n\nexport default ProjectForm;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport config from 'config/index';\n\n/**\n * this is the component for pagination\n * @param start offset of results\n * @param count number of element for page\n * @param totalResults the total number of results\n * @param path the path of current page\n * @return {*}\n * @constructor\n */\n\nconst Pagination = function({start, count, totalResults, path}) {\n\n    //set limit max of start\n    if(totalResults >config.max_total_number_for_results){\n        totalResults= config.max_total_number_for_results;\n    }\n    //prepare the correct link path for pagination\n    path = setStartAndCountInUrl(path);\n\n    let prev = \"\", next = \"\", firstPage = \"\", lastPage = \"\";\n    let listPage = [] ;\n    let separator = \"...\";\n    //number*2 of element in pagination\n    let paginationLength = 4;\n    //the page count start by 1.\n    let paged = Math.floor(start / count) + 1;\n    //get total page number\n    let totalPage = Math.ceil(totalResults / count);\n\n\n    //we need the pagination only the totalPage is major than 1\n    if (totalPage > 1) {\n\n        //if it isn't the first page, print the prev-page link\n        if (paged > 1) {\n            prev = (\n                <li>\n                    <Link className=\"prev-page\"\n                          to={path + \"start=\" + (((paged - 1) * count) > 0 ? ((paged - 2) * count) : 0) + \"&count=\" + count}>\n                        {\"<\"}\n                    </Link>\n                </li>\n            );\n        }\n        //if it isn't the last page, print the next-page link\n        if (paged < totalPage) {\n            next = (\n                <li>\n                    <Link className=\"next-page\" to={path + \"start=\" + (paged * count) + \"&count=\" + count}>\n                        {\">\"}\n                    </Link>\n                </li>\n            );\n        }\n\n        //if the first page  isn't include by regular listPage, print the first-page link\n        if (paged > paginationLength + 2) {\n            firstPage = (\n                <>\n                    <li>\n                        <Link className=\"first-page\" to={path + \"start=0&count=\" + count}>\n                            {\"1\"}\n                        </Link>\n                    </li>\n                    <li>\n                        <span>{separator}</span>\n                    </li>\n                </>\n            );\n        }\n\n        //if the last page  isn't include by regular listPage, print the last-page link\n        if (paged < totalPage - (paginationLength + 1)) {\n            lastPage = (\n                <>\n                    <li>\n                        <span>{separator}</span>\n                    </li>\n                    <li>\n                        <Link style={{display: \"inline-block\"}} className=\"last-page\"\n                              to={path + \"start=\" + ((totalPage - 1) * count) + \"&count=\" + count}>\n                            {totalPage}\n                        </Link>\n                    </li>\n                </>\n            );\n        }\n\n        //print the range of page link, the center is current paged\n        for (let i = paged - paginationLength; i <= paged + paginationLength; i++) {\n\n            //print only the i has a valid value\n            if (i > 0 && i <= totalPage) {\n\n                //if i isn't current page, print link\n                if (i !== paged) {\n\n                    listPage.push((\n                            <Link className=\"normal-page\" to={path + \"start=\" + ((i-1) * count) + \"&count=\" + count}>\n                                {i}\n                            </Link>\n                    ));\n                }\n                //if i is current page, print only text\n                else {\n                    listPage.push((\n                            <span className=\"current-page\">{paged}</span>\n                    ));\n                }\n\n            }\n        }\n\n\n    }\n\n    let output = (\n        <ul className=\"pagination\">\n            {prev}\n            {firstPage}\n            {listPage.map((element,index)=><li style={{display: \"inline-block\", margin: 10}} key={index}>{element}</li>)}\n            {lastPage}\n            {next}\n        </ul>\n    );\n    return output;\n};\n\n\n/**\n * internal function to prepare the path link for pagination\n * @param path\n * @return {*}\n */\n\nfunction setStartAndCountInUrl(path){\n\n    let url = window.location.href;\n    //get the queryString from url\n    let queryString = url.split(\"?\")[1];\n    //if it exists\n    if(queryString) {\n        //remove the part after # if it exists\n        queryString = queryString.split(\"#\")[0];\n\n        let newQueryString = \"\";\n        //split queryString in array of string\n        let arryQuery = queryString.split(\"&\");\n        for (let i = 0; i < arryQuery.length; i++) {\n            //check each queryElement\n            let parameterName = arryQuery[i].split(\"=\")[0];\n            //if it isn't start and count\n            if (parameterName !== \"start\" && parameterName !== \"count\") {\n                //add to the new queryString\n                newQueryString += arryQuery[i]+\"&\";\n            }\n        }\n        //create a new path whiteout start and count\n        path = path+\"?\"+newQueryString;\n    }\n    //if path doesn't contain any queryString\n    else {\n        path = path+\"?\";\n    }\n\n\n    return path;\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default Pagination;","//need to parse query string of url\nimport queryString from 'query-string';\n\n//here are the common support function\n\n/**\n * compares two arrays of objects\n */\nfunction arrayOfObjectsEquals(a, b) {\n\n    if (a === null || b === null) {\n        return false;\n    }\n    if (a.length !== b.length) {\n        return false;\n    }\n\n    a.sort();\n    b.sort();\n\n\n    for (var i = 0; i < a.length; ++i) {\n        if (JSON.stringify(a[i]) !== JSON.stringify(b[i])) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * checks if B is contained in A, using a key to check the inclusion\n * @param {array} a\n * @param {array} b\n * @param {string} key (object field)\n */\nfunction arrayOfObjectsContains(a, b, key) {\n\n    if (a === null || b === null) {\n        return false;\n    }\n    if (a.length === 0 || b.length === 0) {\n        return false;\n    }\n\n    //iterate over all elements of B and check if A contains it \n    //by checking wether and element in A has the same key as the selected B element(b[i])\n    for (let i = 0; i < b.length; ++i) {\n        //if doesn't contain the given element then it meand that the vector A doesn't include the vector B\n        if (!a.some(e => e[key] === b[i][key])) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * converts the checkboxes object of the search form into parameters for the url\n */\nfunction searchCheckboxesToParams(checkboxes) {\n    var params = \"\";\n    Object.keys(checkboxes).forEach(key => {//I iterate over each field of the object\n        if (key !== \"years\") {//if it's not an year\n            if (checkboxes[key]) {//if it's a true flag\n                console.log(key)\n                params += \"&\" + key + \"=\" + checkboxes[key];\n            }\n        }\n        else {//if it's a year\n            if (checkboxes.years.length !== 0) {//if there are some years selected\n                params += \"&\" + queryString.stringify({\"years\": checkboxes.years}, {arrayFormat: 'comma'});\n            }\n        }\n    });\n    return params;\n}\n\n/**\n * this is  function to manipolate 2 url string\n * if first string ends with \"/\", removes \"/\".\n * then concate wite second string and return new string\n */\nfunction join(base, path) {\n    let newPath;\n    //if the last element is \"/\"\n    if (base.charAt(base.length - 1) === '/') {\n        newPath = base.slice(0, -1) + path;\n    }\n    else {\n        newPath = base + path;\n    }\n\n    return newPath;\n\n}\n\n/**\n *\n *\n * function to create string of query by queryObject\n * @param queryData query object\n * @return {string} query string\n */\nfunction createQueryStringFromObject(queryData) {\n\n    let queryString = \"?\";\n    //create a array of keys\n    let keys = Object.keys(queryData);\n    //concatenate the object.property\n    for (let i = 0; i < keys.length; i++) {\n        //I don't need to sort for the recently added sorting\n        if (queryData[\"orderBy\"] !== \"date_created\" || keys[i] !== \"sort\") {\n            queryString += keys[i] + \"=\" + encodeURIComponent(queryData[keys[i]]);\n            //if it isn't the last element, add symbol \"&\"\n            if (i !== (keys.length - 1)) {\n                queryString += \"&\";\n            }\n        }\n    }\n    return queryString;\n\n}\n\n\n/**\n * get element index of a object array by [key, value]\n * @param array to find\n * @param key to find\n * @param value to find\n * @return {number} index of element, -1 if didn't find\n */\nfunction getIndexOfObjectArrayByKeyAndValue(array, key, value) {\n    let index = -1;\n    for (let i = 0; i < array.length; i++) {\n        if (array[i][key] === value) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n\n\nexport {\n    arrayOfObjectsEquals,\n    arrayOfObjectsContains,\n    searchCheckboxesToParams,\n    join,\n    createQueryStringFromObject,\n    getIndexOfObjectArrayByKeyAndValue,\n\n};","import React from \"react\";\n\n\n\n/**\n * component for covering the page\n */\nconst Cover = function ({cls, handler}) {\n    //get data from global context\n    return (\n        <div className={\"cover \" + cls} onClick={(e) => {handler(false)}}></div>\n    );\n};\n\nexport default Cover;","import React from \"react\";\n\n/**\n * component svg options menu button\n */\nconst DeleteButton = function (props) {\n\n    return (\n\n        <svg version=\"1.1\" id=\"options-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t        viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M214,482.1\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"250\" x2=\"500\" y2=\"250\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"500\" x2=\"500\" y2=\"500\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"750\" x2=\"500\" y2=\"750\"/>\n        </svg>\n\n    );\n};\n\nexport default DeleteButton;","import React,{useState} from \"react\";\n\nimport OptionsButton from 'components/svg/optionsButton';\n\n/**\n * component side options\n * it needs a class for the styling,\n * an array of options,\n * the function that will handle the click on the option\n * and, if necessary, a target for the handler function\n */\nconst SideOptions = function ({cls, options, handler, target, data}) {\n\n    //this is used to display or hide the options of the menu\n    const [focused, setFocused] = useState(false)\n\n\n    return (\n        <div className={cls}>\n            <button type=\"button\" \n                    onBlur={(e) => \n                        //if the element is blurred then I hide it\n                        {if(focused){setFocused(false)}}} \n                    onMouseDown={(e) => //onMouseDown fires before onBlur\n                        //immediately after the button is clicked I toggle the menu\n                        {setFocused(!focused)}}>\n                <OptionsButton/>\n            </button>\n            <div style={{fontSize: (focused) ? \"12px\" : \"0px\", padding: (focused) ? \"2px\" : \"0px\", border: (focused) ? \"solid 1px #e8e8e8\" : \"solid 0px #e8e8e800\"}} className=\"options-list\">\n                \n                {options.map((element, index) => \n                    <div key={index} onMouseDown={(e) => handler(target, element, data)} className=\"option\">{element}</div>\n                )}\n                \n            </div>\n        </div>\n    );\n}\n\nexport default SideOptions;","import React from \"react\";\n\n/**\n * component svg \n */\nconst EmptyFolder = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"empty-folder\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <g>\n                <g>\n                    <path className=\"st0-empty-folder\" d=\"M967.9,448.6v260c0,15.1-12.2,27.3-27.3,27.3H59.4c-15.1,0-27.3-12.2-27.3-27.3v-260c0-0.3,0-0.7,0-1\n                        c0-0.2,0-0.4,0.1-0.6c0-0.2,0-0.4,0.1-0.7c0-0.2,0.1-0.4,0.1-0.6c0-0.3,0.1-0.6,0.2-1c0.6-2.4,1.7-4.7,3.5-6.8l141.3-168.3\n                        c2.9-3.4,7.1-5.4,11.6-5.4h89.1c8.5,0,15.9,5.4,18.5,13.5l11.4,35.1c6.3,19.3,24.3,32.4,44.7,32.4h294.4\n                        c20.3,0,38.4-13.1,44.7-32.4l11.4-35.1c2.6-8,10.1-13.5,18.5-13.5h89.1c4.5,0,8.8,2,11.6,5.4l141.3,168.3c1.8,2.1,2.9,4.4,3.5,6.8\n                        c0.1,0.3,0.2,0.6,0.2,1c0,0.2,0.1,0.4,0.1,0.6s0.1,0.5,0.1,0.7s0.1,0.4,0.1,0.6C967.8,447.9,967.9,448.2,967.9,448.6z\"/>\n                    <path d=\"M974.9,448.6c0.1,31-0.8,62-1.4,93c-0.2,7.8-0.3,15.5-0.4,23.3c-0.1,7.8-0.1,15.5-0.2,23.3v46.5v46.5v23.3v2.9\n                        c0,0.5,0,0.9,0,1.5l-0.1,1.7c0,1.1-0.2,2.3-0.4,3.4c-0.1,1.1-0.5,2.2-0.7,3.4c-1.2,4.4-3.4,8.6-6.4,12.1s-6.7,6.4-10.8,8.3\n                        c-4.1,2-8.7,3.1-13.3,3.1l-23.3,0.1l-46.5,0.1l-372.1,1.1L127,742.9L80.5,743H68.9h-5.8h-2.9h-0.7h-0.9l-1.8-0.1\n                        c-4.9-0.4-9.7-1.8-14-4.2s-8-5.7-11-9.6c-2.9-3.9-5-8.5-6.1-13.3c-0.3-1.2-0.4-2.4-0.6-3.6c-0.1-1.2-0.1-2.4-0.2-3.7v-5.8v-23.3\n                        L24.8,633v-93l0.2-46.5l0.1-23.3l0.1-11.6v-5.8v-2.9c0-0.5,0-0.9,0-1.5v-0.9c0,0,0-0.6,0.1-0.9c0-0.3,0.1-0.7,0.1-1l-0.1,1.4\n                        c0-0.5,0.1-1,0.1-1.5l0.1-0.6l0.1-0.6l-0.1,0.5l0.2-1c0.1-0.3,0.2-0.7,0.2-1c0.1-0.5,0.3-1.1,0.5-1.6c0.4-1.1,0.8-2.1,1.3-3.1\n                        s1.1-1.9,1.7-2.8c0.3-0.4,0.6-0.9,1-1.3l0.9-1l6.1-7.1l12.1-14.3L73.6,383l48.4-57l48.5-56.9l1.5-1.8l0.8-0.9l0.4-0.5l0.5-0.6\n                        c1.4-1.6,3.1-2.9,5-4c1.8-1.1,3.9-1.8,5.9-2.3c1-0.2,2.1-0.4,3.2-0.4c0.3,0,0.5,0,0.8,0h0.7h1.2l18.7,0.1l37.4,0.3l18.7,0.1\n                        l9.4,0.1h2.3h1.2l1.4,0.1c1.9,0.1,3.9,0.4,5.7,1c3.7,1.1,7.1,3.2,9.9,6c1.4,1.4,2.6,2.9,3.6,4.6s1.8,3.4,2.4,5.3l5.7,17.8\n                        l5.7,17.8c1.8,5.3,4.6,10.3,8.3,14.6c7.4,8.5,18.3,13.9,29.7,14.5l2.1,0.1h2.3h4.7h9.4l18.7,0.1l37.4,0.1l74.8,0.1l74.8-0.1\n                        l37.4-0.1l18.7-0.1h9.4h4.7h2.3l2.1-0.1c11.3-0.5,22.2-6,29.6-14.5c3.7-4.2,6.5-9.2,8.3-14.5l5.7-17.8l5.6-17.8\n                        c0.6-1.9,1.4-3.6,2.4-5.3c1-1.7,2.3-3.2,3.6-4.6c2.8-2.8,6.2-4.9,10-6c1.9-0.6,3.8-0.9,5.8-1.1l1.5-0.1h1.2h2.3l9.4-0.1l18.7-0.1\n                        l37.4-0.3l18.7-0.1h1.2h0.7c0.3,0,0.5,0,0.8,0c1.1,0.1,2.2,0.2,3.2,0.4c2.1,0.5,4.2,1.2,6,2.3c1.9,1.1,3.6,2.4,5.1,4l0.5,0.6\n                        l0.4,0.5l0.8,0.9l1.5,1.8l48.5,56.9l48.4,57.1l24.1,28.6l12.1,14.3l6,7.1l0.9,1.1c0.3,0.4,0.7,0.9,1,1.3c0.6,0.9,1.2,1.8,1.7,2.8\n                        s0.9,2,1.3,3.1c0.2,0.5,0.3,1.1,0.5,1.6c0.1,0.2,0.1,0.6,0.2,1l0.2,1l-0.1-0.5l0.1,0.6l0.1,0.6c0.1,0.5,0.1,1,0.1,1.5l-0.1-1.4\n                        c0.1,0.4,0.1,0.8,0.2,1.2v0.6v0.3L974.9,448.6z M960.8,448.6v-0.7v-0.2c0,0.1,0,0.1,0,0.2s0,0.2,0.1,0.4l-0.1-1.4\n                        c0,0.1,0,0.2,0,0.2l0,0V447l-0.1-0.5l0,0v-0.1c0,0,0,0,0-0.2c-0.1-0.3-0.1-0.4-0.2-0.6c-0.1-0.4-0.3-0.8-0.5-1.2\n                        c-0.2-0.4-0.4-0.8-0.7-1.2c-0.1-0.2-0.3-0.4-0.4-0.6l-0.6-0.7l-6-7.2l-12-14.4l-24-28.7l-47.8-57.5l-47.7-57.6l-2.8-3.4\n                        c-0.6-0.7-1.4-1.3-2.2-1.8s-1.7-0.8-2.6-1.1c-0.5-0.1-0.9-0.2-1.4-0.2c-0.1,0-0.2,0-0.4,0c-0.1,0-0.2,0-0.4,0h-1.2l-18.7-0.1\n                        l-37.4-0.3l-18.7-0.1l-9.4-0.1h-2.3h-1.2h-0.9c-1.1,0.1-2.3,0.2-3.4,0.6c-4.4,1.3-8.1,4.8-9.6,9.2l-5.9,17.8l-5.9,17.8\n                        c-2.3,6.5-5.7,12.5-10.3,17.6c-9.1,10.2-22.4,16.6-36,17.2L500,349.2l-149.8,0.2c-13.6-0.6-26.9-6.9-35.9-17.2\n                        c-4.6-5.1-8-11.1-10.3-17.6l-5.9-17.8l-5.9-17.8c-1.5-4.5-5.2-8.1-9.7-9.4c-1.1-0.4-2.3-0.5-3.4-0.6h-0.9H277h-2.3l-9.4,0.1\n                        l-18.7,0.1l-37.4,0.3l-18.7,0.1h-1.2c-0.2,0-0.3,0-0.5,0c-0.1,0-0.2,0-0.4,0c-0.5,0-1,0.1-1.5,0.2c-1,0.2-1.9,0.6-2.7,1.1\n                        c-0.9,0.5-1.6,1.1-2.3,1.9l-2.8,3.4l-47.7,57.6l-47.8,57.6l-23.9,28.8l-11.9,14.4l-6,7.2l-0.6,0.8c-0.1,0.2-0.3,0.4-0.4,0.6\n                        c-0.3,0.4-0.5,0.8-0.7,1.2c-0.2,0.4-0.4,0.8-0.5,1.2c-0.1,0.2-0.1,0.4-0.2,0.6c0,0.2,0,0.1,0,0.2v0.1v0.1l-0.1,0.5v0.1\n                        c0,0,0,0.1,0,0s0-0.2,0-0.2l-0.1,1.4c0-0.1,0.1-0.2,0.1-0.3c0-0.1,0-0.3,0-0.2v0.6c0,0.4,0,0.9,0,1.4v2.9v5.8l0.1,11.6l0.1,23.3\n                        l0.2,46.5v93l-0.1,46.5v23.3v5.8l0.1,2.1c0.1,0.7,0.2,1.4,0.3,2.1c0.6,2.8,1.8,5.4,3.5,7.7s3.9,4.2,6.4,5.6\n                        c2.5,1.4,5.3,2.2,8.1,2.4l1.1,0.1h0.5h0.7h2.9H69h11.6l46.5,0.1l372.1,0.8l372.1,1.1l46.5,0.1H941c6.3-0.1,12.5-3,16.6-7.9\n                        c2.1-2.4,3.5-5.3,4.4-8.3c0.2-0.8,0.4-1.5,0.5-2.3s0.3-1.6,0.3-2.4l0.1-1.2c0-0.4,0-0.9,0-1.4v-2.9V681v-46.5V588\n                        c0-7.8-0.1-15.5-0.2-23.3c-0.1-7.8-0.2-15.5-0.4-23.3C961.6,510.6,960.7,479.6,960.8,448.6z\"/>\n                </g>\n                <g>\n                    <path className=\"st1-empty-folder\" d=\"M952.8,686.4l-120.7-220l-9.8-17.9c-2.7-4.8-7.7-7.8-13.2-7.8H190.9c-5.5,0-10.6,3-13.2,7.8l-9.8,17.9\n                        L50,681.3\"/>\n                    <path className=\"st2-empty-folder\" d=\"M951.1,687.4L915,622.6l-36-64.9l-35.8-65l-17.9-32.5l-4.5-8.1l-1.1-2c-0.3-0.6-0.6-1.1-1-1.6\n                        c-0.8-1-1.7-1.8-2.7-2.6c-2-1.4-4.5-2.2-7-2.2h-9.3l-296.8,0.2l-296.8-0.2h-9.3h-4.6H191h-0.9c-0.6,0.1-1.2,0.1-1.8,0.3\n                        c-2.4,0.5-4.6,1.8-6.3,3.7c-0.4,0.5-0.8,1-1.1,1.5c-0.2,0.3-0.3,0.5-0.5,0.8l-0.6,1l-2.2,4.1l-17.9,32.5l-35.8,65l-36,64.9\n                        l-36.1,64.8l-3.5-1.9L83.5,615l35.4-65.2l35.6-65.1l17.8-32.6l2.2-4.1l0.6-1c0.2-0.4,0.5-0.8,0.7-1.2c0.5-0.8,1.1-1.5,1.7-2.2\n                        c2.5-2.8,5.8-4.7,9.5-5.6c0.9-0.2,1.8-0.3,2.8-0.4h1.4h1.2h4.6h9.3l296.8-0.2l296.8,0.2h9.3c3.7,0,7.4,1.2,10.5,3.3\n                        c1.5,1.1,2.9,2.4,4,3.8c0.6,0.7,1.1,1.5,1.5,2.3l1.1,2l4.5,8.1l17.8,32.6l35.6,65.1l35.4,65.2l35.3,65.3L951.1,687.4z\"/>\n                </g>\n                <path className=\"st3-empty-folder\" d=\"M967.9,448.6v260c0,15.1-12.2,27.3-27.3,27.3H59.4c-15.1,0-27.3-12.2-27.3-27.3v-260c0,8.7,6.8,16.9,16.8,16.9\n                    h111.4c12.9,0,24.4,8.3,28.3,20.6l17.4,53.8c9.6,29.6,37.2,49.7,68.4,49.7h451c31.2,0,58.8-20.1,68.4-49.7l17.4-53.8\n                    c4-12.3,15.4-20.6,28.3-20.6H951C961.1,465.5,967.9,457.3,967.9,448.6z\"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default EmptyFolder;","import React, {useState, useEffect, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\nimport queryString from 'query-string';\n\n\nimport {projectsDao} from 'dao/projects.dao';\nimport LoadIcon from 'components/svg/loadIcon';\nimport ProjectForm from 'components/forms/projectForm';\nimport Pagination from 'components/modules/pagination';\nimport {join} from 'utils/index';\nimport Cover from 'components/modules/cover';\nimport SideOptions from 'components/modules/sideOptions';\n\nimport {AppContext} from \"components/providers/appProvider\";\nimport EmptyFolder from \"components/svg/emptyFolder\";\n\n/**\n *this component will show a projects list page\n */\n\nconst ProjectsList = function (props) {\n\n\n    //fetch data\n    const [projectsList, setProjectsList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //bool to control the visualization of input form\n    const [toggleform, setToggleForm] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(props.location.search);\n\n\n    //set title when component mounts\n    useEffect(() => {\n        appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">PROJECTS</h2> </div>);\n        //I remove any old project name that was previously saved\n        appConsumer.setProjectName(\"\");\n    },[]); //run on component mount\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let mounted = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //hide the page\n            setDisplay(false);\n\n            //call the dao\n            const res = await projectsDao.getProjectsList({orderBy: \"date_last_modified\", ...queryData});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mounted && res && res.message === \"Not Found\") {\n                setProjectsList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mounted && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mounted && res) {\n                //update state\n\n                //I put even first and then odd ones so I can display 2 columns with left-right flow \n                var even_projs = [];\n                even_projs = res.results.filter(function(element, index){ if( index % 2 ) return element;});\n                var odd_projs = [];\n                odd_projs = res.results.filter(function(element, index){ if( !(index % 2) ) return element;});\n\n                setProjectsList(odd_projs.concat(even_projs));\n                setTotalResults(res.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n        };\n\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mounted = false;\n        };\n    }, [queryData.start, queryData.count]); //re-execute when these variables change\n\n\n    //handle to delete project\n    async function handleDelete(id){\n\n        console.log(\"deleting \" + id);\n        //call the dao\n        let res = await projectsDao.deleteProject(id);\n        //error checking\n        //if is other error\n        if (res && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);  \n        }\n        //if res isn't null\n        else if (res && res !== null) {\n            //create a new array without the project deleted\n            let newProjectsList = projectsList.filter((project)=>project.id !== id);\n            //update project list state\n            setProjectsList(newProjectsList);\n\n            appConsumer.setNotificationMessage(\"Successfully deleted\");\n        }\n    }\n\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print svg image\n        output = <LoadIcon/>;\n    }\n\n    else {\n\n        output = (\n            <div>\n                <Cover cls={toggleform ? \"full-screen\" : \"\"} handler={setToggleForm}/>\n                {/*print list of projects*/}\n                <PrintList projectsList={projectsList} path={props.match.url} handleDelete={handleDelete}/>\n                {/*set listId and continues value*/}\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={props.match.url}/>\n\n                {/*print the input form to create/update the projects*/}\n                <ProjectForm visibility={toggleform} setVisibility={setToggleForm} history={props.history}/>\n                {/*button to show input form*/}\n                <button className=\"bottom-left-btn add-project-btn\" type=\"button\" value=\"toggle-insert-form\" \n                onClick={(e) => {\n                    setToggleForm(!toggleform);\n                }}>\n                    <div className=\"btn-title\">Add Project</div><div className=\"btn-icon\"> </div>\n                </button>\n            </div>\n        );\n\n    }\n\n    return output;\n\n\n};\n\n\n/**\n *  internal component only to print the list\n * @param projectsList projects list data\n * @param path current page url\n * @param handleDelete function to delete the project\n * */\nconst PrintList = function ({projectsList, path, handleDelete}) {\n\n    let sideOptions= [\"delete\"];\n\n    let maps;\n    //if list is empty, print a notice message\n    if (projectsList.length === 0) {\n        maps = (\n            <div className=\"empty-folder-wrapper\"> <EmptyFolder/> <p className=\"empty-folder-description\"> You don't have any projects yet </p></div>\n        );\n    }\n    //if list isn't empty, print list of projects\n    else {\n        maps = (projectsList.map((element, index) =>\n                <div key={element.id} className=\"light-modal project-card\">\n                    <SideOptions options={sideOptions} handler={handleDelete} target={element.id} cls=\"card-options project-card-options\"/>\n                    <Link to={join(path, \"/\" + element.id)}>\n                        <h3>{element.data.name}</h3>\n                        <p className=\"description\">{element.data.description}</p>\n                        <div className=\"project-dates\">\n                            <p>{/*created on <i>{element.date_created.slice(0, 10)}</i>*/}</p>\n                            <p>last modified on <i>{element.date_last_modified.slice(0, 10)}</i></p> \n                        </div>\n                    </Link>\n                </div>\n        ));\n    }\n\n    let output =  (\n        <div className={(projectsList.length === 0) ? \"project-cards-holder-empty\" : \"project-cards-holder\"}>\n            {maps}\n        </div>\n    );\n\n    return output;\n\n};\n\n/**\n * internal function to prepare a object of queryData\n * @param query\n * @return object of queryData for the fetch\n */\nfunction createQueryData(query){\n\n    //set query params from queryString of url\n    let params = queryString.parse( query);\n    let count = params.count || 10;\n    let start = params.start || 0;\n\n    //if \"before\" is defined by query then insert it in object, else insert \"after\" in object\n    let queryData = {start, count};\n    return queryData;\n\n}\n\n\n\n\n\nexport default ProjectsList;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to search local papers\n * @param queryData\n * @return {array[objects]}\n */\nasync function search(queryData){\n    let url = config.home+config.search;\n\n        const res = await http.get(url, queryData);\n        return res;\n\n}\n\n/**\n * get a specific paper\n */\nasync function selectById(id){\n    let url = config.home + config.papers + \"/\" + id;\n\n    const res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to search similar papers\n * @param bodyData\n * @return {array[objects]}\n */\nasync function searchSimilar(bodyData){\n    let url = config.home+config.search_similar;\n\n    console.log(bodyData);\n\n    const res = await http.post(url, bodyData);\n    \n    \n    return res;\n\n}\n\nconst paperDao = {\n    search,\n    selectById,\n    searchSimilar,\n    \"abortRequest\" : http.abortRequest\n}\n\n\n\nexport {paperDao};","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to get a list of paper associated with a project\n * @param queryData\n * @return {array[objects]}\n */\nasync function getPapersList(queryData) {\n    let url = config.home + config.papers\n    const res = await http.get(url, queryData);\n    return res;\n\n}\n\n/**\n * dao to get a paper\n * @param paper_id\n * @return {Object} paper requested\n */\nasync function getPaper(paper_id) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.get(url);\n}\n\n/**\n * dao to post a new paper\n * @param bodyData\n * @return {Object} project created\n */\nasync function postPaperIntoProject(bodyData) {\n    let url = config.home + config.papers;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to post a new custom paper\n * @param bodyData\n * @return {Object} project created\n */\nasync function postCustomPaperIntoProject(bodyData) {\n    let url = config.home + config.customPapers;\n    return await http.post(url, bodyData);\n}\n\n\n/**\n * dao to put a old paper\n * @param paper_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putPaper(paper_id, bodyData) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a paper\n * @param paper_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function deletePaper(paper_id) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.delete(url);\n}\n\n\nconst projectPapersDao = {\n    getPapersList,\n    getPaper,\n    postPaperIntoProject,\n    postCustomPaperIntoProject,\n    putPaper,\n    deletePaper,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {projectPapersDao};","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst SelectTick = function (props) {\n\n    return (\n        <svg id=\"select-tick\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st-tick\" points=\"918,192.3 389.3,807.7 82,450 \">\n                <animate attributeName=\"points\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\"\n                    from=\"500,600 400,700 200,750\"\n                    to=\"918,192.3 389.3,807.7 82,450 \"\n                />\n            </polyline>\n        </svg>\n    );\n};\n\nexport default SelectTick;\n","import React, {useState, useEffect} from \"react\";\n\nimport SelectTick from 'components/svg/selectTick';\n\nconst CheckBox = function ({ val, name, label, isChecked, handler }) {\n\n    let output = \"\";\n    const [tick, setTick] = useState(<></>);\n    useEffect(() => {\n        if(isChecked){\n            setTick(<SelectTick/>);\n        }else{\n            setTick(<></>)\n        }\n    }, [isChecked])\n\n    \n    output = (\n        <label className=\"checkbox-container\">\n            <input type=\"checkbox\" value={val} name={name} checked={isChecked} onChange={(e) => {handler(e)}} />\n            <span className=\"checkmark\">{tick}</span>\n            <span className=\"name\">{label}</span>\n        </label>\n    );\n    return output;\n}\n\nexport default CheckBox;","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst RadioTick = function (props) {\n\n    return (\n        <svg id=\"radio-tick\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t        viewBox=\"0 0 1000 1000\">\n            <circle className=\"st-circle\" cx=\"500\" cy=\"500\" r=\"375\">\n                <animate attributeName=\"r\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\"\n                                from=\"0\"\n                                to=\"375\"\n                />\n            </circle>\n        </svg>\n    );\n};\n\nexport default RadioTick;\n","import React, {useState, useEffect} from \"react\";\n\nimport RadioTick from 'components/svg/radioTick';\n\nconst RadioBox = function ({ label, name, val, isChecked , handler}) {\n\n    let output = \"\";\n    const [tick, setTick] = useState(<></>);\n    useEffect(() => {\n        if(isChecked){\n            setTick(<RadioTick/>);\n        }else{\n            setTick(<></>)\n        }\n    }, [isChecked])\n\n    output= (\n        <label className=\"radiobox-container\">\n        <input type=\"radio\" value={val} name={name} checked={isChecked} onChange={handler}/>\n        <span className=\"radiomark\">{tick}</span>\n        <span>{label}</span>\n        </label>\n    );\n    return output;\n}\n\nexport default RadioBox;","import React from \"react\";\n\n/**\n * component svg \n */\nconst NoPapers = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"no-papers\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <line className=\"st0-no-papers\" x1=\"790\" y1=\"223.1\" x2=\"790\" y2=\"255.6\"/>\n            <line className=\"st1-no-papers\" x1=\"790\" y1=\"357.8\" x2=\"790\" y2=\"801.3\"/>\n            <polyline className=\"st0-no-papers\" points=\"790,852.4 790,884.9 757.5,884.9 \t\t\"/>\n            <line className=\"st2-no-papers\" x1=\"635.6\" y1=\"884.9\" x2=\"303.4\" y2=\"884.9\"/>\n            <polyline className=\"st0-no-papers\" points=\"242.5,884.9 210,884.9 210,852.4 \t\t\"/>\n            <line className=\"st3-no-papers\" x1=\"210\" y1=\"757.8\" x2=\"210\" y2=\"194.9\"/>\n            <polyline className=\"st0-no-papers\" points=\"210,147.6 210,115.1 242.5,115.1 \t\t\"/>\n            <polyline className=\"st4-no-papers\" points=\"338.4,115.1 682,115.1 733.1,166.2 \t\t\"/>\n            <polyline className=\"st0-no-papers\" points=\"767,200.1 790,223.1 757.5,223.1 \t\t\"/>\n            <polyline className=\"st0-no-papers\" points=\"714.5,223.1 682,223.1 682,190.6 \t\t\"/>\n            <line className=\"st0-no-papers\" x1=\"682\" y1=\"147.6\" x2=\"682\" y2=\"115.1\"/>\n        </svg>\n    );\n};\n\nexport default NoPapers;","import React, {useContext, useState} from \"react\";\nimport ClampLines from 'react-clamp-lines';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport CheckBox from \"components/forms/checkbox\";\nimport SideOptions from 'components/modules/sideOptions';\nimport {projectPapersDao} from 'dao/projectPapers.dao';\nimport {AppContext} from 'components/providers/appProvider'\n\nimport NoPapers from \"components/svg/noPapers\";\n\nimport {join} from 'utils/index';\n/**\n * prints the papers list of a local search on the fake database\n */\n/*\nconst PrintLocalSearchList = function ({papersList, handlePaperSelection}) {\n\n    let output = papersList.map((element, index) =>\n        <div key={element.id} className=\"paper-card\">\n            <CheckBox name={\"\"} label={\"\"} val={element.eid}  handler={handlePaperSelection}/>\n            <Link to={\"#\"}><h3>{element.data && element.data.title}</h3></Link>\n            <ClampLines\n                text={element.data && element.data.abstract}\n                lines={4}\n                ellipsis=\"...\"\n                moreText=\"Expand\"\n                lessText=\"Collapse\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    );\n    return output;\n\n};\n*/\n\n/**\n * prints the results of a search on scopus\n */\nconst PrintScoupusSearchList_w = function ({papersList, handlePaperSelection, selectedEidList, history, match, setSimilarPaperData}) {\n\n    //side options\n    let sideOptions= [\"search similar\"];\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //handle for the side options\n    async function handleSideOptions(id, name, data){\n        if(name === \"delete\"){\n            console.log(\"deleting \" + id);\n            //call the dao\n            let res = await projectPapersDao.deletePaper(id);\n            //error checking\n            //if is other error\n            if (res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res !== null) {\n\n                appConsumer.setNotificationMessage(\"Successfully deleted!\");\n\n            }\n        }else if(name === \"search similar\"){\n            console.log(\"here you want to search for a similar paper\");\n            console.log(data);\n\n            //I extract the path to check if I'm on /search or /searchsimilar\n            let path = (match.path[match.path.length - 1] === \"/\") ? match.path.substring(0, match.path.length - 1) : match.path;\n            let goSimilar = path;\n            if(path[path.length - 1] === \"h\"){\n                goSimilar = path + \"similar\";\n                //I set the paper in the storage before switching page\n                const storage = window.localStorage;\n                storage.setItem(\"similarPaperData\", JSON.stringify(data));\n                history.push(goSimilar);\n            }else{\n                setSimilarPaperData(data);\n            }\n\n        }\n    }\n\n    let output = papersList.map((element, index) =>\n        <div key={index} className=\"paper-card\">\n            <CheckBox name={element.title} label={\"\"} val={element.eid}  isChecked ={selectedEidList.includes(element.eid)} handler={handlePaperSelection}/>\n            <SideOptions options={sideOptions} handler={handleSideOptions} target={element.id} data={element} cls=\"card-options paper-card-options\"/>\n            <Link to={\"#\"}><h3>{element.title}</h3></Link>\n            <div className=\"extra-info\">\n                <p className=\"authors\">{element.authors}</p>\n                <p className=\"eid\">{element.eid}</p>\n                <p className=\"date\">{element.year}</p>\n            </div>\n            <ClampLines\n                text={element.abstract}\n                lines={4}\n                ellipsis=\"...\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    );\n    return output;\n\n};\n\n/**\n * prints a list of papers and handles their removal from the project\n */\n\nconst PrintPapersList_w = function ({papersList, location, history}) {\n\n    const [localPaperList, setLocalPaperList] = useState(papersList);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //side options\n    let sideOptions= [\"delete\", \"search similar\"];\n\n    //handle for the side options\n    async function handleSideOptions(id, name, data){\n        if(name === \"delete\"){\n            console.log(\"deleting \" + id);\n            //call the dao\n            let res = await projectPapersDao.deletePaper(id);\n            //error checking\n            //if is other error\n            if (res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res !== null) {\n\n                appConsumer.setNotificationMessage(\"Successfully deleted\");\n                let newPapersList = localPaperList.filter((paper)=>paper.id !== id);\n                setLocalPaperList(newPapersList);\n            }\n        }else if(name === \"search similar\"){\n            console.log(\"here you want to search for a similar paper\");\n            console.log(location);\n\n            const storage = window.localStorage;\n            storage.setItem(\"similarPaperData\", JSON.stringify(data));\n            history.push(join(location.pathname, \"/searchsimilar\"));\n        }\n    }\n\n    let output;\n    //if list is empty, print a notice message\n    if (localPaperList.length === 0) {\n        output = (\n            <div className=\"empty-project-wrapper\"> <NoPapers/> <p className=\"empty-project-description\"> There are no papers here, you can add new ones by searching </p></div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else {\n        output = (\n            localPaperList.map((element) =>\n                <div key={element.id} className=\"paper-card\">\n                    <SideOptions options={sideOptions} handler={handleSideOptions} target={element.id} data={element.data} cls=\"card-options paper-card-options\"/>\n                    <Link to={\"#\"}>\n                        <h3>{element.data.title}</h3>\n                    </Link>\n                    <div className=\"extra-info\">\n                        <p className=\"authors\">{element.data.authors}</p>\n                        <p className=\"eid\">{element.data.eid || element.data.doi}</p>\n                        <p className=\"date\">{element.data.year}</p>\n                    </div>\n                    <ClampLines\n                        text={element.data.abstract}\n                        lines={4}\n                        ellipsis=\"...\"\n                        className=\"paragraph\"\n                        moreText=\"more\"\n                        lessText=\"less\"\n                    />\n                </div>\n            )\n        );\n    }\n    return output;\n\n\n};\n\nexport const PrintPapersList = PrintPapersList_w;\nexport const PrintScoupusSearchList = withRouter(PrintScoupusSearchList_w);","import React from \"react\";\n\n/**\n * component svg select arrow\n * 'focused' is a flag used for displaying a different shape\n */\nconst SelectArrow= function ({focused}) {\n    var from=\"\";\n    var to=\"\";\n    //I check if the upper component is focused and then I animate\n    if(focused){\n        from=\"90,295.5 500,704.5 910,295.5 \";\n        to=\"90,704.5 500,295.5 910,704.5 \";;\n    }else{\n        from=\"90,704.5 500,295.5 910,704.5 \";;\n        to=\"90,295.5 500,704.5 910,295.5 \";\n    }\n    return (\n    <svg version=\"1.1\" id=\"arrow-select\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n        viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st-arrow-select\" points={from}>\n            <animate attributeType=\"XML\" id=\"ani-select-arrow\" attributeName=\"points\" from={from} to={to} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n            </polyline>\n        </svg>\n    );\n};\n\nexport default SelectArrow;\n\n","import React, {useState} from \"react\";\nimport SelectArrow from 'components/svg/selectArrow';\n\n\n/**\n * this component acts as an html <select>\n * it needs an array of options, the index of the selected one and the hadler to change the status of the upper component calling this one\n */\nconst Select = ({ options, selected, handler }) => {\n    \n    //this is useful for the animation\n    const [focused, setFocused] = useState(false);\n\n\n\n    function handleFocus(e){\n        //handle arrow animation and focus of menu\n        document.getElementById(\"ani-select-arrow\").beginElement();//trigger svg animation\n        setFocused(!focused);\n    }\n\n    var output = (\n        <div className=\"custom-select\">\n            <div className=\"selected\" tabIndex={-2} onBlur={handleFocus} onFocus={handleFocus}>{options[selected].label} <div className=\"arrow\"><SelectArrow focused={focused}/></div></div>\n            <div className=\"options-holder\" style={{fontSize: (!focused) ? '0px' : '15px', borderBottom: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderLeft: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderRight: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderTop:\"none\"}}>\n                {options.map((element, index) => (\n                <div key={index} data-value={index} className=\"option\" style={{padding: (!focused) ? '0px' : '2px' }} onMouseDown={handler}>\n                    {element.label}\n                </div>))}\n            </div>\n        </div>\n    );\n    return output;\n}\n\nexport default Select;","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst SearchButton = function (props) {\n\n    return (\n        <svg id=\"search-icon\" xmlns=\"http://www.w3.org/2000/svg\"\n             xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M626.9,644.3c-73.5,0-142.6-28.6-194.6-80.6s-80.6-121.1-80.6-194.6s28.6-142.6,80.6-194.6\n                c52-52,121.1-80.6,194.6-80.6c73.5,0,142.6,28.6,194.6,80.6c52,52,80.6,121.1,80.6,194.6s-28.6,142.6-80.6,194.6\n                S700.4,644.3,626.9,644.3z\"/>\n            <line className=\"st1\" x1=\"145.2\" y1=\"850.8\" x2=\"431.7\" y2=\"564.3\"/>\n        </svg>\n    );\n};\n\nexport default SearchButton;\n","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst SearchSimilarButton = function (props) {\n\n    return (\n        <svg id=\"similar-paper-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" \n            xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st0-sps\" points=\"795.8,214 734.8,214 736.8,146 \t\t\"/>\n            <polyline className=\"st0-sps\" points=\"842.8,214 842.8,875.8 262.8,875.8 262.8,106 734.8,106 \t\t\"/>\n            <line className=\"st0-sps\" x1=\"842.8\" y1=\"214\" x2=\"734.8\" y2=\"106\"/>\n            <line className=\"st1-sps\" x1=\"350.8\" y1=\"198.9\" x2=\"644.8\" y2=\"198.9\"/>\n            <line className=\"st2-sps\" x1=\"346.8\" y1=\"385.4\" x2=\"752.8\" y2=\"385.4\"/>\n            <line className=\"st2-sps\" x1=\"544\" y1=\"485.9\" x2=\"752.8\" y2=\"485.9\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"485.9\" x2=\"544\" y2=\"485.9\"/>\n            <line className=\"st2-sps\" x1=\"575.9\" y1=\"586.4\" x2=\"752.8\" y2=\"586.4\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"586.4\" x2=\"575.9\" y2=\"586.4\"/>\n            <line className=\"st2-sps\" x1=\"555.5\" y1=\"686.9\" x2=\"752.8\" y2=\"686.9\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"686.9\" x2=\"555.5\" y2=\"686.9\"/>\n            <circle className=\"st4-sps\" cx=\"410.8\" cy=\"594.3\" r=\"171.7\"/>\n            <line className=\"st4-sps\" x1=\"111.2\" y1=\"894\" x2=\"289.4\" y2=\"715.7\"/>\n        </svg>\n        \n    );\n};\n\nexport default SearchSimilarButton;\n","import React, {useState, useEffect} from \"react\";\n\n/**\n * component svg order arrow button\n@param {string} up [ASC or DESC]\n */\nconst OrderArrow= function ({display, up}) {\n\n    let output = \"\";\n\n    let from=\"\";\n    let to=\"\";\n\n    //I check where the arrow should point to(up or down) checking the 'up' flag passed by the parent component\n    if(up ===\"ASC\"){\n        from=\"371.7,293 500,165 628.3,293 \";\n        to=\"371.7,491.9 500,619.9 628.3,491.9 \";\n    }else{\n        from=\"371.7,491.9 500,619.9 628.3,491.9 \";\n        to=\"371.7,293 500,165 628.3,293 \";\n    }\n\n    const [destination, setDestination] = useState(to);\n\n    useEffect(() => {\n      setDestination(to);\n    }, [to])\n\n    if(display){\n        output = (\n            <svg version=\"1.1\" id=\"order-arrow\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\" >\n                <polyline className=\"st-order-arrow-head\" points=\"371.7,293 500,165 628.3,293 \" transform=\"matrix(1.5303008,0,0,1.5303008,-279.47582,-105.57059)\">\n                    <animate attributeType=\"XML\" id=\"ani-order-arrow\" attributeName=\"points\" from={from} to={destination} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n                </polyline>\n                <line className=\"st-order-arrow\" x1=\"485.67453\" y1=\"145.09268\" x2=\"485.67453\" y2=\"827.75989\"/>\n            </svg>\n        );\n    }\n    \n    return output;\n};\n\nexport default OrderArrow;","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst RemoveButton = function (props) {\n\n    return (\n        <svg id=\"remove-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <line className=\"rb\" x1=\"134\" y1=\"866\" x2=\"866\" y2=\"134\"/>\n        <line className=\"rb\" x1=\"134\" y1=\"134\" x2=\"866\" y2=\"866\"/>\n        </svg>\n    );\n};\n\nexport default RemoveButton;\n","import React from \"react\";\n\n/**\n * component svg \n */\nconst NoSearchResults = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"no-results\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <circle className=\"st0-no-results\" cx=\"585.3\" cy=\"419.7\" r=\"271.7\"/>\n            <line className=\"st3-no-results\" x1=\"111.2\" y1=\"894\" x2=\"393.2\" y2=\"611.8\"/>\n            <path className=\"st1-no-results\" d=\"M460.6,533c83.1-20,166.2-20,249.4,0\"/>\n            <line className=\"st2-no-results\" x1=\"683.8\" y1=\"329\" x2=\"683.8\" y2=\"337\"/>\n            <line className=\"st2-no-results\" x1=\"512.8\" y1=\"329\" x2=\"512.8\" y2=\"337\"/>\n        </svg>\n    );\n};\n\nexport default NoSearchResults;","import React, {useState, useEffect, useContext} from \"react\";\nimport {Link} from 'react-router-dom'\nimport queryString from \"query-string\";\n\n\nimport {paperDao} from 'dao/paper.dao';\nimport {projectPapersDao} from 'dao/projectPapers.dao'\n\nimport CheckBox from \"components/forms/checkbox\";\nimport RadioBox from \"components/forms/radiobox\";\nimport {PrintScoupusSearchList} from 'components/papers/printPapersList';\nimport Select from 'components/forms/select';\nimport Pagination from \"components/modules/pagination\";\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport SearchButton from 'components/svg/searchButton';\nimport SearchSimilarButton from 'components/svg/searchSimilarButton';\nimport OrderArrow from 'components/svg/orderArrow';\nimport RemoveButton from 'components/svg/removeButton';\nimport NoSearchResults from \"components/svg/noSearchResults\";\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue, arrayOfObjectsContains} from 'utils/index';\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//order options\nconst orderByOptions = [\n    {label: 'Title', value: 'title'},\n    {label: 'Date', value: 'date'}\n];\n\n//search by  options\nconst searchByOptions = [\n    {label: 'all', value: 'all'},\n    {label: 'author', value: 'author'},\n    {label: 'content', value: 'content'},\n    {label: 'adv. query', value: 'advanced'}\n];\n\n//year options\nconst startYear = 2017;\nconst endYear = new Date().getFullYear() + 2;\n//create a int array from startYear to endYear, then convert it to string array, after this concatenate with \"all\"\nconst yearOptions = [\"all\", ...(_.range(startYear, endYear).map(String))];\n\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst SearchForm = function ({project_id, location, match, history}) {\n\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(true);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n\n    //set query params from url\n    let queryData = createQueryData(location.search);\n    //console.log(queryData);\n\n    //get the localStorage object\n    const storage = window.localStorage;\n    let selectedPapersListFromStorage;\n    if (!window.localStorage) {\n        console.log(\"the browser must be support localStorage\");\n    }\n    //if exists already this attribute in the local storage\n    if (storage.getItem(\"selectedPapersList\")) {\n        selectedPapersListFromStorage = JSON.parse(storage.getItem(\"selectedPapersList\"));\n    }\n    //if not exists, we create a new array\n    else {\n        selectedPapersListFromStorage = [];\n    }\n\n    // list of selected papers\n    const [selectedPapersList, setSelectedPapersList] = useState(selectedPapersListFromStorage);\n\n    //state for search form\n    const [keywords, setKeyWords] = useState(\"_\");\n    const [source, setSource] = useState({\"scopus\": true, \"googleScholar\": false, \"arXiv\": false});\n    const [searchBy, setSearchBy] = useState(\"all\");\n    const [year, setYear] = useState(\"all\");\n\n    //state for sorting arrow animation\n    const [up, setUp] = useState(queryData.sort);\n\n\n    useEffect(() => {\n        //flag that represents the state of component\n        let mounted = true;\n\n        //if the sorting parameter changes I update the status and trigger the SVG animation\n        if (up !== queryData.sort) {\n            setUp(queryData.sort);\n            if(document.getElementById(\"ani-order-arrow\")){\n                document.getElementById(\"ani-order-arrow\").beginElement();\n            }\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //update the values of state from url\n            setKeyWords(queryData.query);\n            setSource({\"scopus\": queryData.scopus, \"googleScholar\": queryData.googleScholar, \"arXiv\": queryData.arXiv});\n            setSearchBy(queryData.searchBy);\n            setYear(queryData.year);\n\n            //if there is queryString from URL\n            if (queryData.query !== \"\") {\n\n                setDisplay(false);\n\n                //always call the dao to search on scopus\n                let res = await paperDao.search(queryData);\n\n                //error checking\n                //if the component is still mounted and  is 404 error\n                if (mounted && res && res.message === \"Not Found\") {\n                    setPapersList([]);\n                    setTotalResults(0);\n                    //show the page\n                    setDisplay(true);\n                }\n                //if the component is still mounted and  there are some other errors\n                else if (mounted && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }\n                //if the component is still mounted and  res isn't null\n                else if (mounted && res) {\n                    //update state\n                    setPapersList(res.results);\n                    setTotalResults(res.totalResults);\n                    //show the page\n                    setDisplay(true);\n                }\n            }\n        };\n\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mounted = false;\n        };\n\n    }, [project_id, queryData.query, queryData.orderBy, queryData.searchBy, queryData.sort, queryData.year, queryData.start, queryData.count, queryData.scopus, queryData.googleScholar, queryData.arXiv]);  //re-execute when these variables change\n\n\n    /*\n     START OF 'RESULT PAPERS HANDLING' ########################################################\n     */\n\n    //handler for sort selection\n    function handleSelection(e) {\n        //get index\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.orderBy = orderByOptions[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e) {\n\n        if (queryData.sort === \"ASC\") {\n            queryData.sort = \"DESC\";\n        }\n        else {\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n    /*function to insert and remove the paper id from selected list*/\n    function handlePaperSelection(event) {\n\n        let newList;\n        //get eid\n        let eid = event.target.value;\n        //get ttitle\n        let title = event.target.name;\n        //if id is not included in the list yet\n        if (getIndexOfObjectArrayByKeyAndValue(selectedPapersList, \"eid\", eid) === -1) {\n            //create a copy of array\n            newList = [...selectedPapersList];\n            //insert into array\n            newList.push({\"eid\": eid, \"title\": title});\n\n        }\n        //if id already exists in the list\n        else {\n            //remove the  target paper from array\n            newList = selectedPapersList.filter(function (element) {\n                return element.eid !== eid;\n            });\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*function to select all papers*/\n    function selectAllPapers(event) {\n\n        let newList;\n\n        //if not all papers are selected yet\n        if (!arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")) {\n\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {\n                return {\"eid\": paper.eid, \"title\": paper.title}\n            });\n            //and merge them with the previously selected ones\n            let tmpList = [...allPapersInPage, ...selectedPapersList];\n            newList = _.uniqBy(tmpList, 'eid');\n\n        }\n        //if all papers are selected, we need to remove them\n        else {\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {\n                return {\"eid\": paper.eid, \"title\": paper.title}\n            });\n            //I filter the selectedPapersList by removing the papers that are in the current page\n            newList = selectedPapersList.filter(x => !allPapersInPage.some(paper => paper.eid === x.eid));\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n\n    /*function to add the post in the project*/\n    async function handleAddPapers(event) {\n\n        event.preventDefault();\n\n        if (selectedPapersList.length === 0) {\n            appConsumer.setNotificationMessage(\"The list is empty!\");\n        }\n        else {\n\n            let papersToAdd = selectedPapersList;\n            //empties the state\n            setSelectedPapersList([]);\n            //update the storage\n            storage.removeItem(\"selectedPapersList\");\n\n            //create a eidList from the list of selected paper\n            let arrayEid = papersToAdd.map(element => element.eid);\n            //call dao\n            let res = await projectPapersDao.postPaperIntoProject({\n                \"arrayEid\": arrayEid, \"project_id\": project_id\n            });\n            //if there is the error\n            if (res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n                return null;\n            }\n\n            appConsumer.setNotificationMessage(\"Insert completed\");\n        }\n\n    }\n\n    /*\n     END OF 'RESULT PAPERS HANDLING' ########################################################\n     */\n\n\n    /*function to send the query*/\n    async function handleSendSearch(event) {\n\n        event.preventDefault();\n\n        //if query input is empty\n        if (keywords === \"\") {\n            appConsumer.setNotificationMessage(\"Search string is empty\")\n        }\n        else {\n            //synchronize the query data from react state hooks\n            queryData.query = keywords;\n            queryData.scopus = source.scopus;\n            queryData.googleScholar = source.googleScholar;\n            queryData.arXiv = source.arXiv;\n            queryData.searchBy = searchBy;\n            queryData.year = year;\n\n            //send query url\n            let queryString = createQueryStringFromObject(queryData);\n            //launch to search\n            history.push(queryString);\n\n        }\n\n    }\n\n    /**\n     *handle to update hook state by input change\n     */\n    function handleOnInputChange(event) {\n\n        let newSource;\n\n        switch (event.target.name) {\n            case \"query\":\n                setKeyWords(event.target.value);\n                break;\n            case \"scopus\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.scopus = true;\n                newSource.googleScholar = false;\n                newSource.arXiv = false;\n                setSource(newSource);\n                break;\n\n            case \"googleScholar\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.scopus = false;\n                newSource.googleScholar = true;\n                newSource.arXiv = false;\n                setSource(newSource);\n                break;\n            case \"arXiv\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.scopus = false;\n                newSource.googleScholar = false;\n                newSource.arXiv = true;\n                setSource(newSource);\n                break;\n            case \"searchBy\":\n                setSearchBy(event.target.value);\n                break;\n            case \"year\":\n                setYear(event.target.value);\n                break;\n            default:\n                break;\n        }\n\n\n    }\n\n    /*\n     #######################################\n     need to  create a new child component for the part of <form>, when we have more information on search options\n     ######################################\n     */\n    let formPart = (\n        <>{}\n            <form className={(queryData.query === \"\") ? 'search-form' : 'search-form small'}\n                  onSubmit={handleSendSearch}>\n                {/*search form*/}\n                <div style={{position: 'relative'}}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"search\"\n                        name=\"query\"\n                        value={keywords}\n                        onChange={handleOnInputChange}\n                    />\n                    <button className=\"go-search\" type=\"submit\" value=\"Submit\">\n                        <SearchButton/>\n                    </button>\n                    <Link to={\"/projects/\" + project_id + \"/searchsimilar\"}>\n                        <button className=\"go-similar\" type=\"button\">\n                            <SearchSimilarButton/>\n                        </button>\n                    </Link>\n                </div>\n\n                <div className=\"option-holder\">\n                    <label>Source:</label><br/>\n\n                    <div className=\"checkboxes-holder\">\n                        <RadioBox label=\"Scopus\" name=\"scopus\" val=\"\" isChecked={source.scopus}\n                                  handler={handleOnInputChange}/>\n                        <RadioBox label=\"Google Scholar\" name=\"googleScholar\" val=\"\" isChecked={source.googleScholar}\n                                  handler={handleOnInputChange}/>\n                        <RadioBox label=\"arXiv\" name=\"arXiv\" val=\"\" isChecked={source.arXiv}\n                                  handler={handleOnInputChange}/>\n                    </div>\n\n                    <label>Search by:</label><br/>\n\n                    <div className=\"checkboxes-holder\">\n                        <RadioBox label={searchByOptions[0].label} name=\"searchBy\" val={searchByOptions[0].value}\n                                  isChecked={searchBy === searchByOptions[0].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[1].label} name=\"searchBy\" val={searchByOptions[1].value}\n                                  isChecked={searchBy === searchByOptions[1].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[2].label} name=\"searchBy\" val={searchByOptions[2].value}\n                                  isChecked={searchBy === searchByOptions[2].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[3].label} name=\"searchBy\" val={searchByOptions[3].value}\n                                  isChecked={searchBy === searchByOptions[3].value} handler={handleOnInputChange}/>\n                    </div>\n\n                    <label>Year:</label><br/>\n                    <div className=\"checkboxes-holder\">\n                        {\n                            yearOptions.map((singleYear, index) =>\n                                <RadioBox key={index} label={singleYear} name=\"year\" val={singleYear}\n                                          isChecked={year === singleYear} handler={handleOnInputChange}/>\n                            )\n                        }\n                    </div>\n                </div>\n\n            </form>\n        </>);\n\n\n    let resultPart = \"\";\n\n    //if is loading\n    if (display === false) {\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\"\n                     style={{pointerEvents: \"none\"}}>{/* this way the user cannot sort while loading the results */}\n                    <div className=\"select-all\">\n                        <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={false}\n                                  handler={selectAllPapers}/>\n                    </div>\n                    <div className=\"order\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions}\n                                selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/>\n                        </button>\n                    </div>\n                </div>\n                <SelectedPapersListBox selectedPapersList={selectedPapersList}/>\n                <div className=\"search-loading-holder\">\n                    <LoadIcon class={\"small\"}/>\n                </div>\n            </div>);\n    }\n\n    //if the search results list is empty\n    else if (papersList.length === 0 && queryData.query !== \"\") {\n        //the class is used only to workaround a small bug that display not found just as the search start before the loading icon\n        resultPart = (\n            <div className=\"no-results\"> <NoSearchResults/> <p className=\"not-found-description\"> Nothing was found </p> </div>\n        );\n    }\n    else if (papersList.length > 0 && queryData.query !== \"\") {\n\n        //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\">\n                    <div className=\"select-all\">\n                        <CheckBox label=\"Select All\" name=\"select_all\" val=\"\"\n                                  isChecked={arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")}\n                                  handler={selectAllPapers}/>\n                    </div>\n                    <div className=\"order\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions}\n                                selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/>\n                        </button>\n                    </div>\n                </div>\n                <SelectedPapersListBox selectedPapersList={selectedPapersList}\n                                       handlePaperSelection={handlePaperSelection}/>\n\n                <PrintScoupusSearchList papersList={papersList} handlePaperSelection={handlePaperSelection}\n                                        selectedEidList={arrayEid}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults}\n                            path={match.url}/>\n            </div>\n        );\n    }\n\n\n    let output = (\n        <>\n            {formPart}\n            <form className=\"search-results\" onSubmit={handleAddPapers}>\n                {resultPart}\n            </form>\n        </>\n    );\n\n    return output;\n};\n\n\n/**\n * internal component to print the box of list of selected paper\n */\nconst SelectedPapersListBox = function ({selectedPapersList, handlePaperSelection}) {\n\n    let output = \"\";\n    output = (\n        <div className=\"selected-papers-list\" style={{\n            opacity: (selectedPapersList.length > 0) ? \"1.0\" : \"0.0\",\n            pointerEvents: (selectedPapersList.length > 0) ? \"auto\" : \"none\"\n        }}>\n            <h3>\n                {\"SELECTED PAPERS\"} <br/><span>(total : {selectedPapersList.length})</span>\n            </h3>\n            <div className=\"submission-wrapper\">\n                <div className=\"papers-wrapper\" style={{border: (selectedPapersList.length > 0) ? \"\" : \"0px\"}}>\n                    <div className=\"papers-flex\" style={{padding: (selectedPapersList.length > 0) ? \"\" : \"0px\"}}>\n                        {selectedPapersList.map((element, index) =>\n                            <p key={index}>\n                                <span>{element.title}</span>\n                                <button type=\"button\" className=\"remove-btn\" name={element.title}\n                                        value={element.eid} //name and value don't work on the button event for some reasons\n                                        onClick={(e) => {\n                                            handlePaperSelection({target: {name: element.title, value: element.eid}})\n                                        }}>\n                                    <RemoveButton/>\n                                </button>\n                            </p>\n                        )}\n                    </div>\n                </div>\n                <button style={{\n                    border: (selectedPapersList.length > 0) ? \"\" : \"0px\",\n                    margin: (selectedPapersList.length > 0) ? \"\" : \"0px\",\n                    height: (selectedPapersList.length > 0) ? \"\" : \"0px\",\n                    pointerEvents: (selectedPapersList.length > 0) ? \"auto\" : \"none\"\n                }} className=\"ti-btn add-resultpaper-btn\" type=\"submit\" value=\"Submit\">\n                    <div className=\"btn-title\">Add Selected Paper</div>\n                    <div className=\"btn-icon\"></div>\n                </button>\n            </div>\n        </div>\n    );\n\n    return output;\n\n};\n\n\n/**\n * internal function to prepare a object of queryData\n * @param queryUrl\n * @return object of queryData for the fetch\n */\nfunction createQueryData(queryUrl) {\n\n\n    //set query params from queryString of url\n    let params = queryString.parse(queryUrl);\n    let query = params.query || \"\";\n\n    let searchBy = params.searchBy || \"all\";\n    let orderBy = params.orderBy || \"title\";\n    let sort = params.sort || \"ASC\";\n    let start = params.start || 0;\n    let count = params.count || 10;\n\n\n    let scopus;\n    if (params.scopus === undefined) {\n        scopus = true;\n    }\n    else {\n        scopus = (params.scopus === \"true\");\n    }\n\n    let googleScholar = (params.googleScholar === \"true\" && !scopus);\n    let arXiv = (params.arXiv === \"true\" && !scopus && !googleScholar);\n\n    if(!scopus && !googleScholar && !arXiv){\n        scopus = true;\n    }\n\n    let year = params.year || \"all\";\n\n    let queryData = {query, searchBy, orderBy, sort, scopus, googleScholar, arXiv, year, start, count};\n\n    return queryData;\n\n}\n\n\nexport default SearchForm;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to post the file pdf to backend\n * @param data the file data\n * @return {objects}\n */\nasync function updatePdf(data) {\n    let url = config.home +config.pdf_parse_server;\n\n    let res = await http.postFile(url, data);\n    return res;\n\n}\n\n\nconst updateFileDao = {\n    updatePdf,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {updateFileDao};","import React from \"react\";\n\n/**\n * component svg go-btn\n */\nconst GoButton = function (props) {\n\n    return (\n        <svg id=\"go-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 1000 1000\">\n\n            <polyline\n            className=\"st1-go\"\n            points=\"371.7,481.9 500,609.9 628.3,481.9 \"\n            transform=\"matrix(0,-1.4834458,1.4856134,0,-92.453824,1228.1491)\"/>\n            <line\n            className=\"st0-go\"\n            x1=\"810.69312\"\n            y1=\"486.42624\"\n            x2=\"206.34099\"\n            y2=\"486.42624\"/>\n\n        </svg>\n    );\n};\n\nexport default GoButton;\n","import React, {useRef} from \"react\";\nimport ClampLines from 'react-clamp-lines';\nimport {Link} from 'react-router-dom';\n\nimport CloseButton from 'components/svg/closeButton';\nimport GoButton from \"components/svg/goButton\";\nimport LoadIcon from \"components/svg/loadIcon\";\n\n/**\n * the search form component used for inserting the data relative to the paper we are searching for similar ones\n */\nconst SearchSimilarPapers = ({close, //the setter for closing the form when it's visible(sets the visibility to false)\n                                style, //style of the component\n                                project_id,\n                                input, //the string input\n                                handler, //handler for the string input\n                                paperInfo, //the data of the retrieved paper(should match the paper we are searching similarities for)\n                                fetching, //flag to control when the component is fetching the data related to the paper we are searching similarities for\n                                setPaperInfo, //sets the info of the paper we are searching similarites for\n                                setPaperFile, //handles the input of a file(when we upload a file instead os specifying the paper by a string)\n                                history\n                            }) => {\n    \n    let output = \"\";\n    let content = \"\";\n    let topRightButton = \"\";\n\n    //reference for the input file field\n    const inputElement = useRef(null);\n\n\n    //clicking the button will trigger the input file\n    const onButtonClick = () => {\n        inputElement.current.click();\n    };\n\n    async function handleSubmission(){\n        //if the user submits a paper I set the paperFile variable to its content so the main form can work with it\n        if(inputElement.current.files[0]){\n            setPaperFile(inputElement.current.files[0]);\n        }\n    }\n\n    //output\n    if(fetching){\n        content = (<div className=\"load-icon-similar-paper\"><LoadIcon/></div>);\n    }else if(paperInfo && paperInfo.title){\n        content = (\n            <>\n            <h3 className=\"similar-paper-title\">{paperInfo.title}</h3>\n            <ClampLines\n                text={paperInfo.abstract}\n                lines={4}\n                ellipsis=\"...\"\n                className=\"similar-paper-paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n            </>\n        );\n    }else{\n        content = (\n            <>\n                <p className=\"similar-description\">Search for Similar Papers</p>\n                <div className=\"DOI-holder\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"type DOI, EID, or paper title\"\n                        value={input}\n                        onChange={handler}\n                        name=\"query\"\n                    />\n                    <button className=\"go-search-similar DOI-btn\" type=\"submit\" value=\"Submit\">\n                        <GoButton/>\n                    </button>\n                </div>\n                <p className=\"or\">or</p>\n                <div className=\"file-input-container\">\n                    <input type=\"file\" id=\"real-input\" ref={inputElement} onChange={handleSubmission}/>\n                    <button type=\"button\" className=\"browse-btn\" onClick={onButtonClick}>\n                        Upload a Paper\n                    </button>\n                </div>\n            </>\n        );\n    }\n    if(paperInfo){\n        topRightButton = (\n            <button type=\"button\" className={\"close-btn red-x\"} onClick={(e) => {\n                setPaperInfo(undefined);//I delete the similar paper info\n                setPaperFile(undefined);//I delete its file\n                history.push({});\n            }}><CloseButton/></button>\n        );\n    }else{\n        topRightButton = (\n            <Link to={\"/projects/\"+ project_id + \"/search\"} ><button type=\"button\" className={\"close-btn\"}><CloseButton/></button></Link>\n        );\n    }\n    output = (\n        <div style={{...style}} className=\"light-modal similar-search-paper-upload\">\n            {topRightButton}\n            {content}\n        </div>\n    );\n    return output;\n}\n\nexport default SearchSimilarPapers;","import React, {useState, useEffect, useContext} from \"react\";\nimport queryString from \"query-string\";\n\n\nimport {paperDao} from 'dao/paper.dao';\nimport {projectPapersDao} from 'dao/projectPapers.dao';\nimport {updateFileDao} from \"dao/updateFile.dao\";\n\nimport CheckBox from \"components/forms/checkbox\";\nimport RadioBox from \"components/forms/radiobox\";\nimport {PrintScoupusSearchList} from 'components/papers/printPapersList';\nimport Select from 'components/forms/select';\nimport Pagination from \"components/modules/pagination\";\nimport SearchSimilarPapers from \"components/forms/searchSimilarPapers\";\n\nimport OrderArrow from 'components/svg/orderArrow';\nimport LoadIcon from 'components/svg/loadIcon';\nimport RemoveButton from 'components/svg/removeButton';\nimport NoSearchResults from \"components/svg/noSearchResults\";\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue, arrayOfObjectsContains} from 'utils/index';\n\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//order options\nconst orderByOptions = [\n    {label: 'Title', value: 'title'},\n    {label: 'Date', value: 'date'}\n];\n\n\n//year options\nconst startYear = 2017;\nconst endYear = new Date().getFullYear() + 2;;\n//create a int array from startYear to endYear, then convert it to string array, after this concatenate with \"all\"\nconst yearOptions = [\"all\", ...(_.range(startYear, endYear).map(String))];\n\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst SearchSimilarForm = function ({project_id, location, match, history}) {\n\n    window.onbeforeunload = function(e){\n        window.localStorage.removeItem(\"similarPaperData\");\n    }\n\n    //list of result papers data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to control the visualization of the results when fetching results data\n    const [display, setDisplay] = useState(true);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n\n    //set query params from url\n    let queryData = createQueryData(location.search);\n    //console.log(queryData);\n\n    //get the localStorage object\n    const storage = window.localStorage;\n    let selectedPapersListFromStorage;\n    let similarPaperDataFromStorage;\n    if (!window.localStorage) {\n        console.log(\"the browser must be support localStorage\");\n    }\n    \n    //if exists already this attribute in the local storage\n    if (storage.getItem(\"selectedPapersList\")) {\n        selectedPapersListFromStorage = JSON.parse(storage.getItem(\"selectedPapersList\"));\n    }\n    //if not exists, we create a new array\n    else {\n        selectedPapersListFromStorage = [];\n    }\n\n    //if exists already this attribute in the local storage\n    if (storage.getItem(\"similarPaperData\")) {\n        similarPaperDataFromStorage = JSON.parse(storage.getItem(\"similarPaperData\"));\n    }\n    //if not exists, we create a new array\n    else {\n        similarPaperDataFromStorage = null;\n    }\n\n    // list of selected papers\n    const [selectedPapersList, setSelectedPapersList] = useState(selectedPapersListFromStorage);\n\n    //state for search form\n    const [keywords, setKeyWords] = useState(\"\");\n    const [source, setSource] = useState({\"scopus\": true, \"googleScholar\": false, \"arXiv\": false});\n    const [year, setYear] = useState(\"all\");\n    const [similarPaperData, setSimilarPaperData] = useState(similarPaperDataFromStorage); //the data of the paper to search similarities for\n    const [similarPaperFile, setSimilarPaperFile] = useState(undefined); //the file of the paper to search similarities for\n\n    //state for sorting arrow animation\n    const [up, setUp] = useState(queryData.sort);\n\n    //state for 'similar papers search' form\n    const [similarFormVisibility, setSimilarFormVisibility] = useState(false);\n\n    //bool for target similar paper fetching\n    const [similarPaperFetch, setSimilarPaperFetch] = useState(false);\n\n\n    /*\n        START OF USEEFFECT FOR HANDLING QUERY PARAMETERS ###################################################\n    */\n\n    //effect for query parameters input\n    useEffect(() => {\n\n        let mounted = true;\n\n        console.log(\"RUNNING THE BIG EFFECT\")\n\n        console.log(queryData);\n        //if the sorting parameter changes I update the status and trigger the SVG animation\n        if(up !== queryData.sort){\n            setUp(queryData.sort);\n            if(document.getElementById(\"ani-order-arrow\")){\n                document.getElementById(\"ani-order-arrow\").beginElement();\n            }\n        }\n\n\n        //fetches data when searching for similarities\n        const fetchMainPaper = async () => {\n\n            //standard options parameters\n            setKeyWords(queryData.query);\n            setSource({\"scopus\": queryData.scopus, \"googleScholar\": queryData.googleScholar, \"arXiv\": queryData.arXiv});\n            setYear(queryData.year);\n\n            \n            //if there's a file I can do an api call to parse it\n            if(similarPaperFile){\n                \n                console.log(\"FILE NAME : \" + similarPaperFile.name);\n\n                setPapersList([]);\n                setTotalResults(0);\n\n                //check file extension and its mine type\n                if(!/\\.(pdf|PDF)$/.test(similarPaperFile.name) || similarPaperFile.type.indexOf(\"application/pdf\") === -1){\n                    appConsumer.setNotificationMessage(\"The file must be a pdf!\");\n                }\n                else{\n                    //open flag of loading\n                    setSimilarPaperFetch(true);\n                    console.log(\"FETCHING PARSE PDF\")\n                    //prepare the form data for post\n                    let formData = new FormData();\n                    formData.append('file', similarPaperFile);\n\n                    //call the dao\n                    console.log(\"CALLING THE PAPER PARSER SERVICE\")\n                    let res = await updateFileDao.updatePdf(formData);\n    \n                    //if there is a error\n                    if (mounted && res && res.message) {\n                        //pass error object to global context\n                        appConsumer.setNotificationMessage(\"Error during parsing file\");\n                        setDisplay(true);\n                        setSimilarPaperFetch(false);\n                    }\n                    else if(mounted){\n                        console.log(res);\n                        //set paperdata(which whill call the useEffect on the paperData)\n                        setSimilarPaperData(res);\n                        //display the paper data\n                        setSimilarPaperFetch(false);\n                    }\n\n                }\n            }\n            //if there's a query I can retrieve similar papers based on the query\n            else if (queryData.query !== \"\") {\n                \n                setPapersList([]);\n                setTotalResults(0);\n\n                setSimilarPaperFetch(true);\n                //this will be the call to the service identifying a specific paper\n                let resx = await paperDao.search({\"query\" : queryData.query, \"scopus\": true});\n\n                console.log(resx);\n\n                //if there is a error\n                if (mounted && resx && resx.message) {\n                    //pass error object to global context\n                    appConsumer.setError(resx);\n                }else if(mounted){\n                    console.log(resx);\n                    //set paperdata(which whill call the useEffect on the paperData)\n                    setSimilarPaperData(resx.results[0]);\n                    setSimilarPaperFetch(false);\n\n                }\n            }\n            else{\n                console.log(\"no file (& no similarPaperString)\");\n            }\n\n        };\n\n\n        fetchMainPaper();\n\n        //when the component will unmount\n        return () => {\n            console.log(\"unmounting searchSimilar component\")\n            localStorage.removeItem(\"similarPaperData\");\n            mounted = false;\n        };\n\n    }, [project_id, similarPaperFile, queryData.query]);  //re-execute when these variables change\n\n\n    /*\n        END OF USEEFFECT FOR HANDLING QUERY PARAMETERS #######################################################\n    */\n\n\n    //update local storage every time the similar paper data changes\n    useEffect(() => {\n        \n        let mounted = true;\n\n        console.log(\"RUNNING THE SMALL EFFECT\");\n        if(similarPaperData){\n            //fetches for similar papers\n            const fetchSimilarPapers= async () => {\n                \n                setDisplay(false);\n                storage.setItem(\"similarPaperData\", JSON.stringify(similarPaperData));\n\n                //I call the dao for searching for similar papers based on similarPaperString\n                //this will be the call for the similarity search\n                let resx = await paperDao.searchSimilar({\"paperData\" : similarPaperData, \"start\" : queryData.start, \"count\" : queryData.count, \"scopus\": true});\n                console.log(resx);\n\n                //error checking\n                //if is 404 error\n                if (mounted && resx && resx.message === \"Not Found\") {\n                    setPapersList([]);\n                    setTotalResults(0);\n                    //show the page\n                    setDisplay(true);\n                }\n                //if is other error\n                else if (mounted && resx && resx.message) {\n                    //pass error object to global context\n                    appConsumer.setError(resx);\n                }\n                //if res isn't null\n                else if (mounted && (resx !== null)) {\n                    //update state\n                    setPapersList(resx.results);\n                    setTotalResults(resx.totalResults);\n                    //show the page\n                    setDisplay(true);\n                }\n            }\n\n            fetchSimilarPapers();\n        }else{\n            storage.removeItem(\"similarPaperData\");\n        }\n        //when the component will unmount\n        return () => {\n            mounted = false;\n        };\n    }, [similarPaperData, queryData.orderBy, queryData.sort, queryData.year, queryData.start, queryData.count, queryData.scopus, queryData.googleScholar, queryData.arXiv])\n\n    /*handles the submission of a search */\n    function handleSendSearch(event) {\n\n        console.log(\"SUBMITTING SEARCH\");\n        if(event){\n            event.preventDefault();\n        }\n\n        console.log(\"similarity search was called\");\n        //if query input is empty\n        if (keywords === \"\" && !similarPaperFile) {\n            appConsumer.setNotificationMessage(\"Similar paper string is empty\")\n        }\n        else {\n            //synchronize the query data from react state hooks\n            //if there isn't any file I search with the string\n            if(!similarPaperFile){\n                console.log(\"there isn't a file\")\n                queryData.query = keywords;\n            }else{\n                console.log(\"there's a file\")\n                queryData.query = \"\";\n            }\n            queryData.scopus = source.scopus;\n            queryData.googleScholar = source.googleScholar;\n            queryData.arXiv = source.arXiv;\n            queryData.year = year;\n\n            //send query url\n            let queryString = createQueryStringFromObject(queryData);\n            //launch to search\n            history.push(queryString);//this allows pushing the same data and refreshing the page with the hash router\n\n        }\n\n\n    }\n\n    /**\n     *handle to update hook state by input change on the form fields\n     */\n    function handleOnInputChange(event) {\n\n        let newSource;\n\n        switch (event.target.name) {\n            case \"query\":\n                setKeyWords(event.target.value);\n                break;\n                case \"scopus\":\n                    //copy the old source\n                    newSource = {...source};\n                    //switch between true and false\n                    newSource.scopus = true;\n                    newSource.googleScholar = false;\n                    newSource.arXiv = false;\n                    setSource(newSource);\n                    break;\n    \n                case \"googleScholar\":\n                    //copy the old source\n                    newSource = {...source};\n                    //switch between true and false\n                    newSource.scopus = false;\n                    newSource.googleScholar = true;\n                    newSource.arXiv = false;\n                    setSource(newSource);\n                    break;\n                case \"arXiv\":\n                    //copy the old source\n                    newSource = {...source};\n                    //switch between true and false\n                    newSource.scopus = false;\n                    newSource.googleScholar = false;\n                    newSource.arXiv = true;\n                    setSource(newSource);\n                    break;\n            case \"year\":\n                setYear(event.target.value);\n                break;\n            default:\n                break;\n        }\n\n\n    }\n\n    /*\n     #######################################\n     need to  create a new child component for the part of <form>, when we have more information on search options\n     ######################################\n     */\n    let formPart = (\n        <>\n            <form className={(queryData.query === \"\" && !similarPaperFile && !similarPaperData) ? 'search-form' : 'search-form small'}\n                    style={{marginTop: (similarFormVisibility) ? \"30px\" : \"60px\"}}\n                    onSubmit={handleSendSearch}>\n                {/*search form*/}\n                \n                <SearchSimilarPapers style={{boxShadow: \"0px 0px 3px -1px rgba(0, 0, 0, 0.25)\"}}\n                    project_id={project_id}\n                    close={setSimilarFormVisibility} handler={handleOnInputChange} \n                    input={keywords} paperInfo={similarPaperData}\n                    fetching={similarPaperFetch} setPaperInfo={setSimilarPaperData}\n                    setPaperFile={setSimilarPaperFile}\n                    history={history}/>\n                \n                <div className=\"option-holder\">\n\n                    <label>Year:</label><br/>\n                    <div className=\"checkboxes-holder\" >\n                        {\n                            yearOptions.map((singleYear, index) =>\n                                <RadioBox key={index} label={singleYear} name=\"year\" val={singleYear}\n                                          isChecked={year === singleYear} handler={handleOnInputChange}/>\n                            )\n                        }\n                    </div>\n                </div>\n            </form>\n        </>);\n\n\n    let resultPart = \"\";\n\n     /*\n        START OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //handler for sort selection\n    function handleSelection(e) {\n        //get index\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.orderBy = orderByOptions[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e) {\n\n        if (queryData.sort === \"ASC\") {\n            queryData.sort = \"DESC\";\n        }\n        else {\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n    /*function to insert and remove the paper id from selected list*/\n    function handlePaperSelection(event) {\n        let newList;\n        //get eid\n        let eid = event.target.value;\n        //get ttitle\n        let title = event.target.name;\n        //if id is not included in the list yet\n        if (getIndexOfObjectArrayByKeyAndValue(selectedPapersList, \"eid\", eid) === -1) {\n           //create a copy of array\n            newList = [...selectedPapersList];\n            //insert into array\n            newList.push({\"eid\": eid, \"title\": title});\n\n        }\n        //if id already exists in the list\n        else {\n            //remove the  target paper from array\n            newList = selectedPapersList.filter(function (element) {\n                return element.eid !== eid;\n            });\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*function to select all papers*/\n    function selectAllPapers(event) {\n        \n        let newList;\n        \n        //if not all papers are selected yet\n        if(!arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")){\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //and merge them with the previously selected ones\n            let tmpList = [...allPapersInPage, ...selectedPapersList];\n            newList = _.uniqBy(tmpList, 'eid');\n        }else{//otherwise\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //I filter the selectedPapersList by removing the papers that are in the current page\n            newList = selectedPapersList.filter(x => !allPapersInPage.some(paper => paper.eid === x.eid));\n        }\n        \n        setSelectedPapersList(newList);\n\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*function to add the post in the project*/\n    async function handleAddPapers(event) {\n\n        event.preventDefault();\n        //console.log(selectedPapersList);\n\n        let papersToAdd = selectedPapersList;\n        //empties the state\n        setSelectedPapersList([]);\n        //update the storage\n        storage.removeItem(\"selectedPapersList\");\n\n        //create a eidList from the list of selected paper\n        let arrayEid = papersToAdd.map(element => element.eid);\n\n        //call dao\n        let res = await projectPapersDao.postPaperIntoProject({\n            \"arrayEid\": arrayEid, \"project_id\": project_id\n        });\n        //if there is the error\n        if (res && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);\n            return null;\n        }\n\n        //empties the state\n        setSelectedPapersList([]);\n\n        //update the storage\n        storage.removeItem(\"selectedPapersList\");\n\n        appConsumer.setNotificationMessage(\"Insert completed\");\n\n    }\n\n    /*\n        END OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //if is loading\n    if (display === false) {\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\" style={{pointerEvents: \"none\"}}>{/* this way the user cannot sort while loading the results */}\n                    <div className=\"select-all\">\n                    <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={false} handler={selectAllPapers}/>\n                    </div>\n                    <div className=\"order\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions}\n                                selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/></button>\n                    </div>\n                </div>\n                <SelectedPapersListBox selectedPapersList={selectedPapersList}/>\n                <div className=\"search-loading-holder\">\n                    <LoadIcon class={\"small\"}/>\n                </div>\n            </div>);\n    }\n\n    //if the search results list is empty\n    else if (papersList.length === 0 && (queryData.query !== \"\" || similarPaperFile || similarPaperData) && !similarPaperFetch) {\n        //the class is used only to workaround a small bug that display not found just as the search start before the loading icon\n        resultPart = (\n            <div className=\"no-results\"> <NoSearchResults/> <p className=\"not-found-description\"> Nothing was found </p> </div>\n        );\n    }\n    else if (papersList.length > 0 && (queryData.query !== \"\" || similarPaperFile || similarPaperData)) {\n\n        //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\">\n                    <div className=\"select-all\">\n                    <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")} handler={selectAllPapers}/>\n                    </div>\n                    <div className=\"order\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions}\n                                selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/></button>\n                    </div>\n                </div>\n                <SelectedPapersListBox selectedPapersList={selectedPapersList} handlePaperSelection={handlePaperSelection}/>\n\n                <PrintScoupusSearchList papersList={papersList} handlePaperSelection={handlePaperSelection} selectedEidList={arrayEid} setSimilarPaperData={setSimilarPaperData}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </div>\n        );\n    }\n\n\n    let output = (\n        <>\n            {formPart}\n            <form className=\"search-results\" onSubmit={handleAddPapers}>\n                {resultPart}\n            </form>\n        </>\n    );\n\n    return output;\n};\n\n\n/**\n * internal component to print the box of list of selected paper\n */\nconst SelectedPapersListBox = function ({selectedPapersList, handlePaperSelection}){\n\n    let output = \"\";\n    output = (\n        <div className=\"selected-papers-list\" style={{opacity: (selectedPapersList.length>0) ? \"1.0\" : \"0.0\", pointerEvents: (selectedPapersList.length>0) ? \"auto\" : \"none\"}}>\n            <h3>\n                {\"SELECTED PAPERS\"} <br/><span>(total : {selectedPapersList.length})</span>\n            </h3>\n            <div className=\"submission-wrapper\">\n                <div className=\"papers-wrapper\" style={{border: (selectedPapersList.length>0) ? \"\" : \"0px\"}}>\n                    <div className=\"papers-flex\" style={{padding: (selectedPapersList.length>0) ? \"\" : \"0px\"}}>\n                        {selectedPapersList.map((element, index) =>\n                            <p key={index}>\n                                <span>{element.title}</span> \n                                <button type=\"button\" className=\"remove-btn\" name={element.title} value={element.eid} //name and value don't work on the button event for some reasons\n                                    onClick={(e) => {handlePaperSelection({target: {name: element.title, value:element.eid}})}}>\n                                    <RemoveButton/>\n                                </button>\n                            </p>\n                        )}\n                    </div>\n                </div>\n                <button style={{border: (selectedPapersList.length>0) ? \"\" : \"0px\", margin: (selectedPapersList.length>0) ? \"\" : \"0px\", height: (selectedPapersList.length>0) ? \"\" : \"0px\", pointerEvents: (selectedPapersList.length>0) ? \"auto\" : \"none\"}} className=\"ti-btn add-resultpaper-btn\" type=\"submit\" value=\"Submit\">\n                    <div className=\"btn-title\">Add Selected Paper</div><div className=\"btn-icon\"> </div>\n                </button>\n            </div>\n        </div>\n    );\n\n    return output;\n\n};\n\n\n/**\n * internal function to prepare a object of queryData\n * @param queryUrl\n * @return object of queryData for the fetch\n */\nfunction createQueryData(queryUrl) {\n\n\n    //set query params from queryString of url\n    let params = queryString.parse(queryUrl);\n    let query = params.query || \"\";\n\n    let orderBy = params.orderBy || \"title\";\n    let sort = params.sort || \"ASC\";\n    let start = params.start || 0;\n    let count = params.count || 10;\n\n\n    let scopus;\n    if (params.scopus === undefined) {\n        scopus = true;\n    }\n    else {\n        scopus = (params.scopus === \"true\");\n    }\n\n    let googleScholar = (params.googleScholar === \"true\" && !scopus);\n    let arXiv = (params.arXiv === \"true\" && !scopus && !googleScholar);\n\n    if(!scopus && !googleScholar && !arXiv){\n        scopus = true;\n    }\n\n    let year = params.year || \"all\";\n\n    let queryData = {query, orderBy, sort, scopus, googleScholar, arXiv, year, start, count};\n\n    return queryData;\n\n}\n\n\nexport default SearchSimilarForm;","import React, {useState, useEffect, useContext} from \"react\";\nimport queryString from \"query-string\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport {PrintPapersList} from 'components/papers/printPapersList';\nimport Select from 'components/forms/select';\nimport OrderArrow from 'components/svg/orderArrow';\nimport Pagination from \"components/modules/pagination\";\nimport {createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue} from 'utils/index';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n\n\n//order options\nconst orderByOptions = [\n    { value: 'date_created', label: 'Recently Added' },\n    { value: 'title', label: 'Title' },\n    { value: 'authors', label: 'Authors' }\n  ];\n\n/**\n * the local component that shows the papers list of a project\n */\nconst PapersList = ({project_id, location, match, history}) => {\n\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(location.search);\n\n    const [up, setUp] = useState(queryData.sort);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let  mounted = true;\n\n        if(queryData.orderBy !== \"date_created\" && up !== queryData.sort){\n            setUp(queryData.sort);\n            document.getElementById(\"ani-order-arrow\").beginElement();\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setDisplay(false);\n\n            //call the dao\n            let res = await projectPapersDao.getPapersList({project_id, ...queryData});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mounted && res && res.message === \"Not Found\") {\n                setPapersList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mounted && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mounted && res) {\n\n                //update state\n                setPapersList(res.results);\n                setTotalResults(res.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n\n        };\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mounted = false;\n        };\n    }, [queryData.start, queryData.count, queryData.sort, queryData.orderBy]); //re-execute when these variables change\n\n\n    //handler for sort selection\n    function handleSelection(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n\n        //if I previously ordered by 'most recent' then I sort the next order by ASC\n        if(queryData.orderBy === \"date_created\"){\n            queryData.sort = \"ASC\";\n        }\n        queryData.orderBy=orderByOptions[index].value;\n\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e){\n        //trigger svg animation\n        if(queryData.sort === \"ASC\"){\n            queryData.sort = \"DESC\";\n        }\n        else{\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print loading image\n        output = (\n            <div className=\"paper-card-holder\">\n                <div className=\"order\" style={{pointerEvents: \"none\"}}>{/* this way the user cannot sort while loading the results */}\n                    <label>sort by:</label>\n                    <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\",queryData.orderBy)} handler={handleSelection}/>\n                    <button type=\"button\" onClick={handelOrder}><OrderArrow display={queryData.orderBy !== \"date_created\"} up={up}/></button>\n                </div>\n                <LoadIcon class={\"small\"}/>\n            </div> );\n    }\n    else {\n\n        output = (\n            <div className=\"paper-card-holder\">\n                <div className=\"order\">\n                    <label>sort by:</label>\n                    <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)} handler={handleSelection}/>\n                    <button type=\"button\" onClick={handelOrder}><OrderArrow display={queryData.orderBy !== \"date_created\"} up={up}/></button>\n                </div>\n                <PrintPapersList papersList={papersList} location={location} history={history}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </div>\n        );\n    }\n\n    output = (\n        <div className=\"papers-list\">\n            {output}\n        </div>\n    );\n\n    return output;\n\n};\n\n\n\n\n/**\n * internal function to prepare a object of queryData\n * @param query\n * @return object of queryData for the fetch\n */\nfunction createQueryData(query){\n\n    //set query params from queryString of url\n    let params = queryString.parse( query);\n    let count = params.count || 10;\n    let start = params.start || 0;\n    let orderBy = params.orderBy || \"date_created\";\n    let sort = params.sort || \"ASC\";\n\n    if(orderBy === \"date_created\"){\n        sort = \"DESC\";\n    }\n\n    //if \"before\" is defined by query then insert it in object, else insert \"after\" in object\n    let queryData = {orderBy, sort, start, count };\n    return queryData;\n\n}\n\n\n\nexport default PapersList;","import React, {useState, useEffect} from \"react\";\nimport SelectArrow from 'components/svg/selectArrow';\n\n\n/**\n * this component acts as an html <select>\n * it needs an array of options, the index of the selected one and the hadler to change the status of the upper component calling this one\n */\nconst Select = ({ options, form, name }) => {\n    \n\n    //this is useful for the animation\n    const [focused, setFocused] = useState(false);\n\n    //this keeps the selected option\n    const [selected, setSelected] = useState(0)\n\n    //this handle the selection setting the index of the selected option\n    function handler(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n        setSelected(index);\n    }\n\n    //this updates the field value for formik\n    useEffect(() => {\n        form.setFieldValue(name, options[selected].value);\n    }, [selected])\n\n    function handleFocus(e){\n        //handle arrow animation and focus of menu\n        document.getElementById(\"ani-select-arrow\").beginElement();//trigger svg animation\n        setFocused(!focused);\n    }\n\n    var output = (\n        <div className=\"custom-select\">\n            <div className=\"selected\" tabIndex={-2} onBlur={handleFocus} onFocus={handleFocus}>{options[selected].label} <div className=\"arrow\"><SelectArrow focused={focused}/></div></div>\n            <div className=\"options-holder\" style={{fontSize: (!focused) ? '0px' : '15px', borderBottom: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderLeft: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderRight: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderTop:\"none\"}}>\n                {options.map((element, index) => (\n                <div key={index} data-value={index} className=\"option\" style={{padding: (!focused) ? '0px' : '2px' }} onMouseDown={handler}>\n                    {element.label}\n                </div>))}\n            </div>\n        </div>\n    );\n    return output;\n}\n\nexport default Select;","import React, {useContext} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao'\n\nimport Select from 'components/forms/selectformik';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n//order options\nconst paperType = [\n    { value: 'article', label: 'Article' },\n    { value: 'book_chapter', label: 'Book Chapter' },\n    { value: 'conf_publication', label: 'Conf. Publication' }\n  ];\n\n/**\n * this is the form for create or edit the paper\n * @param props.projectId  relative project where we will insert the paper\n */\nfunction PaperForm(props) {\n\n    let yup = require('yup');\n    const uuid = require(\"uuid\");\n\n    //validation schema for form\n    const paperValidationSchema = yup.object().shape({\n        title: yup.string().required('please enter a title'),\n        authors: yup.string().required('please enter an author'),\n        year: yup.number().required('please enter a year').min(1000).max(new Date().getFullYear() + 1).integer(),\n        //document_type: yup.string().required('please enter a paper type'),\n        abstract: yup.string().required('please enter the abstract')\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    return (\n        <>\n        <Formik\n            initialValues={{\n                title: (props.customPaper && props.customPaper.title) || '',\n                authors: (props.customPaper && props.customPaper.authors) || '',\n                year: (props.customPaper && props.customPaper.year) || '',\n                abstract: (props.customPaper && props.customPaper.abstract) || '',\n                //it is not present in pdf parse service\n                document_type: (props.customPaper && props.customPaper.document_type) || '',\n                doi: (props.customPaper && props.customPaper.doi) || \"\"\n            }}\n            validationSchema={paperValidationSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                //if doi is not specified I set it as empty string\n                if(values.doi === undefined){\n                    values.doi = \"\";\n                }\n                const paperData = {...values, \n                    year: values.year.toString(), \n                    source_title: values.title, \n                    link: \"custom_paper\", \n                    source: \"slr_custom_papers\", \n                    abstract_structured: \"0\",\n                    filter_oa_include: \"0\",\n                    filter_study_include: \"0\",\n                    notes: \"\",\n                    //data necessary for identifying custom papers\n                    manual: \"true\"}\n                console.log(paperData);\n                \n                let res = await projectPapersDao.postCustomPaperIntoProject({\n                    paper: paperData, project_id: props.projectId\n                });\n                //error checking\n                if (res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }else{\n                    props.history.push(props.url);\n                }\n                setSubmitting(false);\n            }}\n            validateOnBlur={false}\n        >\n        {({ errors, touched, isSubmitting }) => (\n            <Form className=\"new-paper-form\">\n                <Field\n                    style={{borderBottom: (errors.title && touched.title) ? \"1px solid #d81e1e\" : \"\"}}\n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\" \n                    placeholder=\"Paper Title\"/>\n                <div className=\"new-paper-form-ad\">\n                    <div className=\"author-year\">\n                        <Field\n                            style={{borderBottom: (errors.authors && touched.authors) ? \"1px solid #d81e1e\" : \"\"}}\n                            name=\"authors\"\n                            type=\"text\" \n                            placeholder=\"paper author\"/>\n                        <Field \n                            style={{borderBottom: (errors.year && touched.year) ? \"1px solid #d81e1e\" : \"\"}}\n                            name=\"year\"\n                            type=\"number\"\n                            placeholder=\"year\"/>\n                    </div>\n                    <div className=\"type-doi\">\n                        <Field\n                            name=\"document_type\"\n                            render={({ field, form }) => (\n                                    <Select options={paperType} {...field} form={form}/>\n                            )}\n                        />\n                        <Field \n                            name=\"doi\"\n                            type=\"text\"\n                            placeholder=\"DOI(optional)\"/>\n                    </div>\n                </div>\n                <Field\n                    style={{borderBottom: (errors.abstract && touched.abstract) ? \"1px solid #d81e1e\" : \"\"}}\n                    name=\"abstract\"\n                    placeholder=\"Paper Abstract\"\n                    component=\"textarea\"/>\n                <button type=\"submit\" disabled={isSubmitting ||\n                    (errors.title && touched.title) ||\n                    (errors.authors && touched.authors) ||\n                    (errors.year && touched.year) ||\n                    (errors.abstract && touched.abstract)\n                }>Add paper</button>\n            </Form>\n        )}\n        </Formik>\n        </>\n    );\n\n\n}\n\n\nexport default PaperForm;","import React, {useState, useRef, useContext} from \"react\";\nimport PaperForm from 'components/forms/custompaper';\nimport LoadIcon from \"components/svg/loadIcon\";\n\nimport {updateFileDao} from \"dao/updateFile.dao\";\n\nimport {AppContext} from 'components/providers/appProvider';\n\nfunction CustomPaperPage({projectId, url, history}) {\n\n\n    const [paperDataFetch, setPaperDataFetch] = useState(false);\n    const [paperData, setPaperData] = useState(undefined);\n    const [displayForm, setDisplayForm] = useState(false);\n\n    //reference for the input file field\n    const inputElement = useRef(null);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    async function handleSubmission(){\n\n        //get the file object\n        let file = inputElement.current.files[0];\n        //if this file exist\n        if(file){\n\n            //check file extension and its mine type\n            if(!/\\.(pdf|PDF)$/.test(file.name) || file.type.indexOf(\"application/pdf\") === -1){\n                appConsumer.setNotificationMessage(\"The file must be a pdf!\");\n            }\n            else{\n                //open flag of loading\n                setPaperDataFetch(true);\n\n                //prepare the form data for post\n                let formData = new FormData();\n                formData.append('file', file);\n\n                //call the dao\n               let res = await updateFileDao.updatePdf(formData);\n\n               //if there is a error\n                if (res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setNotificationMessage(\"Error during parsing file\");\n                   \n                }\n                else{\n                    //set paperdata\n                    setPaperData(res);\n                    //display the form\n                    setDisplayForm(true);\n                }\n\n                //close flag of loading\n                setPaperDataFetch(false);\n\n            }\n        }\n    }\n\n    let output = \"\";\n\n    if(!displayForm && !paperDataFetch){\n        output = (\n            <div className=\"new-paper-page-wrapper\">\n                <div>\n                    <div className=\"file-input-container\">\n                        <input type=\"file\"name =\"file\" id=\"real-input\" ref={inputElement} onChange={handleSubmission}/>\n                        <button type=\"button\" className=\"browse-btn\" onClick={() => {inputElement.current.click();}}>\n                            Upload a Paper\n                        </button>\n                    </div>\n                        or<br/>\n                    <button type=\"button\"\n                        onClick={() => {setDisplayForm(true)}}\n                    >insert data manually</button>\n                </div>\n            </div>\n        );\n    }else if(paperDataFetch){\n        output = (\n            <div className=\"new-paper-page-wrapper\">\n                <div className=\"file-input-container\">\n                    <input type=\"file\" id=\"real-input\"/>\n                    <button type=\"button\" className=\"browse-btn\">\n                        <LoadIcon/>\n                    </button>\n                </div>\n                    or<br/>\n                <button type=\"button\"\n                    onClick={() => {/* reset connection to api if necessary */ setPaperDataFetch(false); setDisplayForm(true);}}\n                >abort and insert data manually</button>\n            </div>\n        );\n    }else{\n        output = (\n            <PaperForm projectId={projectId} url={url} history={history} customPaper={paperData}/>\n        );\n    }\n\n    return output;\n\n}\n\n\nexport default CustomPaperPage;","import React from \"react\";\n\n/**\n * component svg edit button\n * based on the 'confirm' flag the icon will change\n */\nconst EditButton = function ({confirm}) {\n    var output = <></>;\n    if(!confirm){//if the user is not editing\n        output = (<svg version=\"1.1\" id=\"edit-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <path className=\"st-pencil\" d=\"M224,632.3l-81.6,225.3L367.7,776l0,0L833,310.7c39.4-39.4,39.9-103.3,0.7-142.9c-0.5-0.5-1-1-1.4-1.4\n            c-39.6-39.2-103.6-38.7-142.9,0.7L224,632.3L224,632.3z\"/>\n            <path className=\"st-pencil-border\" d=\"M367.7,776c-24-71.7-71.9-119.6-143.7-143.7\"/>\n            <path className=\"st-pencil\" d=\"M805.7,338c-24-71.7-71.9-119.6-143.7-143.7\"/>\n        </svg>);\n    }else{//if the user is editing\n        output = (\n            <svg version=\"1.1\" id=\"confirm-edit-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t            viewBox=\"0 0 1000 1000\">\n                <polyline className=\"st-confirm\" points=\"918,192.3 389.3,807.7 82,450 \"/>\n            </svg>\n        );\n    }\n    return output;\n};\n\nexport default EditButton;\n","import React, {useState, useContext, useEffect} from \"react\";\n\nimport {projectsDao} from 'dao/projects.dao';\nimport {AppContext} from 'components/providers/appProvider'\n\nimport EditButton from \"components/svg/editButton\";\nimport RemoveButton from \"components/svg/removeButton\";\nimport LoadIcon from 'components/svg/loadIcon';\n\n/**\n * this is the description component for the project page\n */\n\n\nconst ProjectDescription = function({project_id, description, update, date_last_modified, date_created, collaborators, setCollaborators}){\n\n\n    //this is used as a toggle for checking if the user is trying to edit the name of the project\n    const [editing, setEditing] = useState(false);\n\n    //form input\n    const [input, setInput] = useState(\"\");\n\n    //flag for collaborators loading\n    const [loadIconDisplay, setLoadIconDisplay] = useState(true);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    let output = <></>;\n\n    //boolean flag for handling hooks\n    let mounted = true;\n\n    useEffect(() => {\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //call the dao for getting collaborators\n            let res = await projectsDao.getProjectCollaborators(project_id);\n\n            //error checking\n            //if the component is still mounted and there is some other errors\n            if (mounted && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and res isn't null\n            else if (mounted && res ) {\n                setCollaborators(res);\n                //show the page\n                setLoadIconDisplay(false);\n            }\n        }\n\n        fetchData();\n\n        return () => {\n            mounted = false;\n        };\n    }, [])\n\n    //handles the click on the edit/confirm button\n    function handleEditRequest(e){\n        console.log(\"CLICK\");\n        if(!editing){//if the user was not editing I allow him to edit\n            setTimeout(//I wait for the button event to fire before blurring out the textarea\n                function(){\n                    document.getElementById(\"edit-project-description-input\").focus();\n                },100);\n            \n            setEditing(true);\n            console.log(editing)\n        }else{//if the user was editing I submit its changes\n            update();\n        }\n    }\n\n    //format the date string\n    function formatDate(date){\n        return <span className=\"date\">{date.slice(0,10)} at {date.slice(11,19)}</span>\n    }\n\n    //function for removing collaborators\n    async function removeCollaborator(collaborator){\n        console.log(\"removing \" + collaborator + \" from \" + project_id);\n\n        const callApi = async () => {\n\n            //call the dao for getting collaborators\n            let res = await projectsDao.removeProjectCollaborator(project_id, collaborator);\n            //error checking\n            //if the component is still mounted and there is some other errors\n            if (mounted && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and didn't get an error\n            else if (mounted) {\n                let newCollabs = collaborators.filter(x => x.id !== collaborator);\n                console.log(newCollabs)\n                setCollaborators(newCollabs);\n            }\n        }\n        callApi();\n    }\n\n    //function for adding collaborator\n    //function for removing collaborators\n    async function addCollaborator(){\n        if(!collaborators.includes(input)){\n            console.log(\"adding \" + input);\n\n            const callApi = async () => {\n\n                //call the dao for getting collaborators\n                let res = await projectsDao.addProjectCollaborator(project_id, {\"email\": input});\n                //error checking\n                //if the component is still mounted and there is some other errors\n                if (mounted && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }\n                //if the component is still mounted and didn't get an error\n                else if (mounted && res) {\n                    setInput(\"\");\n                    setCollaborators([...collaborators, res]);\n                }\n            }\n            callApi();\n        }\n    }\n\n\n    if(loadIconDisplay){\n        output = (\n            <div className=\"project-description hidden-form-description\">\n                <h2>Description:</h2>\n                <LoadIcon/>\n            </div>\n            );\n    }else{\n        output = (\n            <div className={(!editing) ? \"project-description hidden-form-description\" : \"project-description\"}>\n                <h2>Description:</h2>\n                <p style={{fontSize: (editing) ? \"0px\" : \"15px\"}}> {description}</p>\n                <form className=\"edit-project-description\" style={{height:(editing) ? \"\" : \"0px\"}}>\n                        <textarea id=\"edit-project-description-input\"  defaultValue={description} style={{width: (editing) ? \"100%\" : \"0%\", padding: (editing) ? \"\" : \"0px\", height:(editing) ? \"\" : \"0px\"}}\n                        onBlur={(e) => {\n                                        console.log(\"blurring\");\n                                        setEditing(false);\n                                    }}\n                        />\n                        <button className=\"edit-button\" onMouseDown={handleEditRequest} type=\"button\">\n                            <EditButton confirm={editing}/>\n                        </button>\n                </form>\n                <h2>Additional info:</h2>\n                <p className=\"project-date-info\"> <span>Created</span> {formatDate(date_created)} </p>\n                <p className=\"project-date-info\"> <span>Last edited</span> {formatDate(date_last_modified)} </p>\n                <h2>Collaborators:</h2>\n                {(collaborators.length === 0) ? \"You're not sharing this project with anyone\" : \"\"}\n                {collaborators.map((element, index) =>\n                    <div className=\"collaborator-wrapper\" key={index}>\n                        <p className=\"collaborator\">{element.data.email}</p>\n                        <button type=\"button\" className=\"remove-btn\" name={element.data.email}\n                            value={element.data.email} //name and value don't work on the button event for some reasons\n                            onClick={(e) => {\n                                removeCollaborator(element.id);\n                            }}>\n                            <RemoveButton/>\n                        </button>\n                    </div>\n                )}\n                <form className=\"add-collaborator\" onSubmit={addCollaborator}>\n                    <input type=\"text\" id=\"edit-project-description-input\" placeholder=\"add a collaborator\" value={input}\n                        onChange={(e) => {setInput(e.target.value);}}\n                    />\n                    <button className=\"add-collaborator-button\" disabled={(!input || input === \"\")}>\n                        \n                    </button>\n                </form>\n            </div>\n        );\n    }\n\n    return output;\n}\n\nexport default ProjectDescription;","import React, {useState} from \"react\";\n\nimport EditButton from \"components/svg/editButton\";\n\n/**\n * this is the head component of page\n * @param \"menu_elements\" contains the list of menu-items\n */\n\n\nconst ProjectName = function({name, update}){\n\n    //this is used as a toggle for checking if the user is trying to edit the name of the project\n    const [editing, setEditing] = useState(false);\n\n    //checks if there's an edit request\n    function handleEditRequest(e){\n        if(!editing){//if the user is not editing the name yet(the check is useful because handleEditRequest and handleConfirm fire at the same time)\n            document.getElementById(\"edit-project-name-input\").focus();\n            setEditing(!editing);\n        }\n    }\n\n    //checks if the user wants to confirm the change\n    function handleConfirm(e){\n        if(editing){//if the user was editing I confirm its request and call the api(the check is useful because handleEditRequest and handleConfirm fire at the same time)\n            update();\n            setEditing(!editing);\n        }\n    }\n\n    return(\n        <div className={(editing) ? \"nav-elements\" : \"nav-elements hidden-form\"}> <h2 style={{fontSize: (editing) ? \"0px\" : \"21px\"}}>{name}</h2> \n            {/*clicking on the div containing the title will allow the user to access the form for editing the project name*/}\n            <form className=\"edit-project-name\"  onClick={handleEditRequest} onSubmit={(e) => {e.preventDefault()}}>\n                <input type=\"text\" id=\"edit-project-name-input\" defaultValue={name} style={{width: (editing) ? \"\" : \"0px\", padding: (editing) ? \"\" : \"0px\"}}\n                    onBlur={(e) => {setEditing(false)}}\n                />\n                <button className=\"edit-button\" onMouseDown={handleConfirm} type=\"button\"><EditButton confirm={editing}/></button>\n                {/*clicking on the button will confirm the new name*/}\n            </form>\n        </div>\n    );\n}\n\nexport default ProjectName;","import React from \"react\";\n\n/**\n * component svg\n */\nconst Forbidden = function (props) {\n    return(\n        <svg version=\"1.1\" id=\"forbidden\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <circle className=\"st0-forbidden\" cx=\"500\" cy=\"500\" r=\"397\"/>\n        <g>\n            <line className=\"st1-forbidden\" x1=\"780.2\" y1=\"780.2\" x2=\"218.8\" y2=\"218.8\"/>\n        </g>\n        </svg>\n    );\n}\n\nexport default Forbidden;","import React from \"react\";\n\n/**\n * component svg \n */\nconst Ghost = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"ghost\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <path class=\"st0-ghost\" d=\"M949.5,759c-34.3-97-89.7-188.9-98.5-293.2c0-0.3,0-0.6,0-0.9s-0.8-0.1-0.1-1c-5.7-99-58.2-209-174.7-205.1\n                C550.8,263,499.5,395.2,512,505.6c16.2,110.9,19.6,217.5,6.4,329\"/>\n            <ellipse transform=\"matrix(1.122617e-02 -0.9999 0.9999 1.122617e-02 200.0576 961.9827)\" cx=\"586.5\" cy=\"379.8\" rx=\"21.8\" ry=\"27.4\"/>\n            <ellipse transform=\"matrix(1.122617e-02 -0.9999 0.9999 1.122617e-02 329.3011 1095.6136)\" cx=\"718.6\" cy=\"381.3\" rx=\"21.8\" ry=\"29.1\"/>\n            <path d=\"M678.8,453.7c2.3,22-9.1,49.7-35.9,45.1c-26.8-4.6-21.4-27.8-21.6-47.3c-0.2-19.5-3-38.9,20.7-41.1S676.5,431.7,678.8,453.7\n                z\"/>\n            <path class=\"st1-ghost\" d=\"M407.8,331.6c31.9-17.6,51.3-40.8,51.3-66.3c0-55.2-91.5-100-204.3-100s-204.3,44.8-204.3,100\n                s91.5,100,204.3,100c33.7,0,65.5-4,93.6-11.1c21.9,31.4,51.9,40.2,98.4,39.6C417.6,378.1,408.1,355.2,407.8,331.6z\"/>\n            <text transform=\"matrix(1 0 0 1 159.4091 299.821)\" class=\"st2-ghost\">404</text>\n            <path class=\"st0-ghost\" d=\"M518.4,834.6l18.3-11.6c25.3-16.1,57.5-16.4,83.2-0.9l0,0c25.3,15.3,56.9,15.2,82.1-0.2l33.1-20.3\n                c34.3-21,76.8-23.7,113.5-7.1l0,0c37.7,17,82.1,1.4,100.8-35.5l0,0\"/>\n        </svg>\n    );\n};\n\nexport default Ghost;","import React from \"react\";\nimport Ghost from \"components/svg/ghost\";\n\n\n\n/**\n * 404 page\n */\nconst PageNotFound = function (props) {\n    //get data from global context\n    return (\n        <div className=\"page-not-found-wrapper\">\n            <Ghost/>\n        </div>\n    );\n};\n\nexport default PageNotFound;","import React, {useState, useEffect, useContext} from \"react\";\nimport {Route, Link, Switch} from 'react-router-dom';\n\nimport SearchForm from 'components/forms/searchform';\nimport SearchSimilarForm from 'components/forms/searchSimilarForm';\nimport PapersList from 'components/papers/papersList';\nimport CustomPaperPage from 'components/papers/customPaperPage';\nimport {projectsDao} from 'dao/projects.dao';\nimport ProjectDescription from 'components/projects/projectDescription';\nimport ProjectName from 'components/projects/projectName';\nimport {join} from 'utils/index';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport Forbidden from 'components/svg/forbidden';\n\nimport {AppContext} from 'components/providers/appProvider'\nimport PageNotFound from \"components/modules/pageNotFound\";\n\n\n/**\n *this component will show a projects page\n */\nconst ProjectPage = (props) => {\n\n    //project object of page\n    const [project, setProject] = useState({data: {name: \"loading...\"}});\n\n    //collaborators\n    const [collaborators, setCollaborators] = useState([]);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //notFound state for hiding the navbar\n    const [notFound, setNotFound] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //flag for unauthorized user\n    const [unauthorized, setUnauthorized] = useState(false);\n\n    const project_id = props.match.params.id;\n\n    //set the project title\n    useEffect(() => {\n        if(project.data.name === \"loading...\"){\n            appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">{project.data.name}</h2> </div>);//I set the page title\n        }else{\n            appConsumer.setTitle(<ProjectName name={project.data.name} update={updateProject}/>);\n            appConsumer.setProjectName(project.data.name);\n        }\n    \n    }, [project]);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let mounted = true;\n\n        setDisplay(false);\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            console.log(\"fetch project page\");\n\n            //call the dao for main project data\n            let res = await projectsDao.getProject(project_id);\n\n            //error checking\n            //if unauthorized user\n            if(mounted && res.payload && (res.payload.statusCode === 401 || res.payload.message === \"the token does not match any user!\" || res.payload.message === \"empty token id in header, the user must first login!\")){\n                setUnauthorized(true);\n                setDisplay(true);\n                setProject({data: {name: \"UNAUTHORIZED OR INEXISTENT PROJECTS\"}});\n            }\n            //if the component is still mounted and there is some other errors\n            else if (mounted && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and res isn't null\n            else if (mounted && res ) {\n                setUnauthorized(false);\n                //update state\n                setProject(res);\n                //show the page\n                setDisplay(true);\n            }\n\n\n        };\n        fetchData();\n        //when the component will unmount\n        return () => {\n\n            //set flag as unmounted\n            mounted = false;\n        };\n    }, [project_id, appConsumer.user]); //re-execute when these variables change\n    \n\n    //function for updating the description and name\n    async function updateProject(){\n\n        let new_name = document.getElementById(\"edit-project-name-input\").value;\n        let new_desc = document.getElementById(\"edit-project-description-input\").value;\n\n\n        //if the new name o description are difference from the old name o description\n        if(new_name !== project.data.name || new_desc !== project.data.description){\n\n            //call the dao\n            let res = await projectsDao.putProject(project_id, {name: new_name, description : new_desc});\n\n            //error checking\n            //if is other error\n            if (res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res && res !== null) {\n                console.log(\"UPDATED SUCCESSFULLY!\");\n                window.location.reload();\n            }\n\n\n        }\n    }\n\n\n    let output;\n\n    //if the page is loading\n    if (display === false) {\n        //print svg image\n        output = <LoadIcon/>;\n    }\n    else if(unauthorized){\n        output = (\n            <div className=\"forbidden-wrapper\">\n                <Forbidden/>\n                <p>This project does not exist or maybe you are not allowed to see it</p>\n            </div>\n        )\n    }\n    else {\n        output = (\n            <div className=\"project-wrapper\">\n                <ProjectPageHead match={props.match} notFound={notFound}/>\n\n                {/*route the papers list*/}\n                <Switch>\n                    <Route exact  path={props.match.url} render={function(props){\n                        setNotFound(false);\n                        return (\n                            <>\n                                <ProjectDescription project_id={project_id} description={project.data.description} update={updateProject} date_last_modified={project.date_last_modified} date_created={project.date_created} collaborators={collaborators} setCollaborators={setCollaborators}/>\n                                <PapersList project_id={project_id} location={props.location} match={props.match} history={props.history}/>\n                                <Link to={join(props.match.url,\"/addpaper\")}>\n                                    <button className=\"bottom-left-btn add-custompaper-btn\">\n                                        <div className=\"btn-title\">Add Custom Paper</div><div className=\"btn-icon\"> </div>\n                                    </button>\n                                </Link>\n\n                            </>\n                        );\n                    }}/>\n\n                    {/*route the form of search*/}\n                    <Route exact path={props.match.url + \"/search\"} render={function(props){\n                        setNotFound(false);\n                        return (<SearchForm project_id={project_id} {...props} />);\n                    }}/>\n\n                    <Route exact path={props.match.url + \"/searchsimilar\"} render={function(props){\n                        setNotFound(false);\n                        return (<SearchSimilarForm project_id={project_id} {...props} />);\n                    }}/>\n\n                    <Route path = {props.match.url + \"/addpaper\"} render={() =>\n                        <>\n                            <Link className=\"back\" to={props.match.url}>  </Link>\n                            <CustomPaperPage projectId={project.id} url={props.match.url} history={props.history}/>\n                        </>\n                    } />\n                    <Route render={(props) => {setNotFound(true); return <PageNotFound/>}}/>\n                </Switch>\n\n            </div>\n        );\n    }\n\n    return output;\n};\n\n/**\n * this is the local component to print head of project page\n */\nconst ProjectPageHead = function ({match, notFound}) {\n    const lc = window.location.hash.substr(window.location.hash.length - 9);\n    const slider = (((\"#\" + match.url) === window.location.hash.split(\"?\")[0]) || (lc === \"/addpaper\" || lc === \"addpaper/\"));\n    let output = (\n        <>\n            <div className=\"project-nav-link-wrapper\" style={{display: (notFound || (lc === \"/addpaper\" || lc === \"addpaper/\")) ? \"none\" : \"\"}}>\n                <div className=\"nav-link\">\n                    <Link to={match.url}>papers</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/search\")}>search</Link>\n                </div>\n                <div className=\"underline\" style={{left: slider ? \"25px\" : \"175px\"}}/>\n            </div>\n        </>\n    );\n    return output;\n\n};\n\n\nexport default ProjectPage;","import React, {useContext} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n\nimport {AppContext} from 'components/providers/appProvider';\n\nimport Home from 'components/home';\nimport ProjectsList from 'components/projects/projectsList';\nimport ProjectPage from 'components/projects/projectPage';\nimport LoadIcon from 'components/svg/loadIcon';\nimport PageNotFound from \"./modules/pageNotFound\";\n\n/**\n * compotent main of page\n */\nconst Main = function(props){\n\n    let output = \"\";\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //If I'm fecthing the user I dispay a loading icon\n    if(appConsumer.userFetch){\n        output = (<LoadIcon/>);\n    }\n    //I render routes only if the user is logged\n    else if(appConsumer.user){\n        output = (\n            <Switch>\n                <Route exact path=\"/\" render={() => <Home/> }/>\n                <Route exact path=\"/projects\" render={(props) => <ProjectsList {...props} />}/>\n                <Route path=\"/projects/:id\" render={(props) => <ProjectPage {...props} />}/>\n                <Route render={(props) => <PageNotFound/>}/>\n            </Switch>\n        );\n    }\n    else{\n        output = (\n            <Switch>\n                <Route path=\"/projects/:id\" render={(props) => <ProjectPage {...props} />}/>\n                <Route render={() => <Home/>}/>\n            </Switch>\n        );\n    }\n\n    return (\n        <div className=\"main-wrapper\">\n            {output}\n        </div>\n    );\n};\n\nexport default Main;","import React, {useContext} from \"react\";\n\nimport {AppContext} from \"components/providers/appProvider\";\n\n/**\n * this is the head component of page\n * @param props\n * @param \"menu_elements\" contains the list of menu-items\n */\n\n\nconst NavBar = function(props){\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    \n    return (\n        <div className=\"navigation-wrapper\">\n\n            {/*background of the menu-bar*/}\n            <nav className={appConsumer.user ? \"main-nav\" : \"main-nav nav-title-to-left\"}>\n                {appConsumer.title}\n            </nav>\n            {props.children}\n\n        </div>\n    );\n}\n\nexport default NavBar;","import React, {useContext} from \"react\";\nimport { AppContext } from 'components/providers/appProvider'\n\n/*\n* this is the component that visualize user information box\n* */\nconst UserInfo = function(props){\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n\n    //not logged in as default\n    let output = (\n        <div className=\"user\">\n            <h3>you're not logged in</h3>\n        </div>\n    );\n\n    //if user is logged in I load his data\n    if(appConsumer.user){\n        output = (\n            <div className=\"user\" >\n                <img className=\"face\" alt=\"profile\" src={appConsumer.user.image}/>\n                <div className=\"user-info\">\n                    {appConsumer.user.name}\n                    <br/>\n                    {appConsumer.user.surname}\n                </div>\n            </div>\n        );\n    }\n\n    return output;\n\n};\n\nexport  default  UserInfo;","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst MenuButton = function (props) {\n\n    return (\n\n        <svg id=\"menu-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n             x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M214,482.1\"/>\n            <line className=\"st-t\" x1=\"172\" y1=\"482.1\" x2=\"172\" y2=\"482.1\"/>\n            <line className=\"st-m\" x1=\"500\" y1=\"482.1\" x2=\"500\" y2=\"482.1\"/>\n            <line className=\"st-b\" x1=\"828\" y1=\"482.1\" x2=\"828\" y2=\"482.1\"/>\n        </svg>\n    );\n};\n\nexport default MenuButton;\n","import React, {useState, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\n\nimport { AppContext } from 'components/providers/appProvider';\n\nimport UserInfo from 'components/navigation/userInfo';\nimport config from 'config/index';\nimport MenuButton from 'components/svg/menuButton';\nimport Cover from 'components/modules/cover';\n\n/**\n *this is the side menu component\n */\nconst SideMenu = function (props) {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //bool to control the visualization of menu\n    const [shown, setShown] = useState(false);\n    const [firstTime, setFirstTime] = useState(true);\n\n\n    //function to open/close the menu\n    function handleToggleMenuButton() {\n        setShown(!shown);\n        setFirstTime(false);\n    }\n\n    //function to close the menu\n    function handleMenuBlur(e) {\n        setShown(false);\n    }\n\n    /**\n     * logout handler function\n     */\n    async function logout (e){\n        console.log(\"logging out\");\n\n        //this way we won't trigger the menu animation again if the user logs in again \n        setFirstTime(true);\n        //remove token from storage\n        localStorage.removeItem(\"userToken\");\n        //remove user info from context\n        appConsumer.setUser(null);\n\n    }\n\n    //change the class of element by menu state\n    var clsidemenu = \"modal side-menu up\";\n    var clsbutton = \"button-wrapper close\";\n\n    if (firstTime) {\n        clsidemenu = \"modal side-menu\"\n    }\n    if (shown) {\n        clsbutton = \"button-wrapper open\"\n        clsidemenu = \"modal side-menu down\"\n    }\n\n    if(appConsumer.user){\n        return (\n            <div className=\"menu\">\n                <Cover cls={(shown) ? \"full-screen-transparent\" : \"\"} handler={handleMenuBlur}/>\n                <div className={clsbutton} onClick={handleToggleMenuButton}>\n                    <MenuButton/>\n                </div>\n\n                <div className={clsidemenu} tabIndex={-1}>\n\n                    {/*user info box*/}\n                    <UserInfo/>\n                    <PrintMenu handleMenuBlur={handleMenuBlur}/>\n                    <div className=\"entry-holder\">\n                        <button type=\"button\" className=\"menu-option\" onClick={logout} onMouseUp={handleMenuBlur}>Log out</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }else{\n        return (\n            <div className=\"menu\">\n            </div>\n        );\n    }\n};\n\n/**\n *internal component that is used only for print menu items\n */\nconst PrintMenu = function (props) {\n\n    let output = (\n        config.menu_list.map((element, index) => (\n                <div key={index} className=\"entry-holder\">\n                    <Link to={element.link} className=\"menu-option\"\n                          onMouseUp={props.handleMenuBlur}>{element.content}</Link>\n                </div>\n            )\n        )\n    );\n    return output;\n\n\n}\n\n\nexport default SideMenu;","import React, {useContext} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport {AppContext} from 'components/providers/appProvider';\n\n\nconst BreadCrumbs = function(props) {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n    \n    let bcPath = <></>;\n\n    function createBreadCrumbs(){\n\n        //I extract the location from the router\n        const { location } = props;\n\n        //I split the pathname by '/' and remove empty strings\n        let path = location.pathname.split('/').filter(x => x);\n\n        //will contain the partial url\n        let href= \"/\";\n        //will contain the link element\n        let link;\n        //array of JSX elements containing the links\n        let bc = [];\n\n        //I don't print ' > ' at the end if there's only one link\n        if(path.length === 0){\n            link = (<div key={0}></div>);\n        }else{\n            link = (<Link key={0} to={href}>Home<span> > </span></Link>);\n        }\n\n        //I push the initial breadcrumb (</> if we are in the home)\n        bc.push(link);\n\n        //I iterate over the paths taking care of links\n        for(let i = 0; i < path.length; i++){\n\n            //avoids the path '/' and the trailing slash\n            if(href === \"/\"){\n                href += path[i];//I update the partial url\n            }else{\n                href += (\"/\" + path[i]);//I update the partial url\n            }\n            \n            //I check whether is the ID of a project \n            if(path[i-1] && path[i-1] === \"projects\"){\n                //I retrieve the project title from the context\n                link = (<Link key={i+1} to={href}>{appConsumer.projectName}</Link>);\n            }else{\n                switch (path[i]) {\n                    case \"projects\":\n                        link = (<Link key={i+1} to={href}>My Projects</Link>);\n                        break;\n                    case \"searchsimilar\":\n                        link = (<Link key={i+1} to={href}>Search for similar papers</Link>);\n                        break;\n                    case \"search\":\n                        link = (<Link key={i+1} to={href}>Search</Link>);\n                        break;\n                    default:\n                        link = (<Link key={i+1} to={href}>{path[i]}</Link>);\n                        break;\n                }\n            }\n\n            //I push the link into the list of breadcrumbs\n            bc.push(link);\n\n            //I put ' > ' at the end\n            if(i < (path.length - 1)){\n                bc.push(<span key={i+9999}>{\" > \"}</span>);\n            }\n            \n        }\n        return bc;\n\n    }\n\n    if(appConsumer.user){\n        bcPath = createBreadCrumbs();\n    }\n    \n\n    return (\n        <div className=\"relative-header\">\n            <div className=\"breadcrumbs\">{bcPath}</div>\n        </div>\n    );\n\n}\n\nexport default withRouter(BreadCrumbs);\n","import React, {useContext} from \"react\";\n\nimport { AppContext } from 'components/providers/appProvider'\nimport CloseButton from 'components/svg/closeButton';\n\n/**\n * component for notification\n */\nconst Notification = function (props) {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    let output = <></>;\n\n    //if there's a notification I sent it in input\n    if(appConsumer.notificationMessage){\n\n        //I automatically remove it after 5 seconds\n        setTimeout(() => {\n            appConsumer.setNotificationMessage(undefined);\n        }, 5000);\n\n        output = (\n            <div className=\"top-right-notification\">\n                <div className=\"message-content\">\n                    {appConsumer.notificationMessage}\n                </div>\n                <button type=\"button\" className=\"close-notification-btn\" onClick={(e) => {appConsumer.setNotificationMessage(undefined)}}>\n                    <CloseButton/>\n                </button>\n            </div>\n        );\n    }\n    return output;\n};\n\nexport default Notification;","import React, {useContext} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {GoogleLogin} from 'react-google-login';\n\nimport config from 'config/index'\n\nimport {AppContext} from 'components/providers/appProvider';\n\n\n/**\n * this component handles the google login and logout from the platform\n */\nconst UsersLogin = function (props) {\n\n    //output var\n    let output = <></>;\n\n    //get the localStorage object\n    const storage = window.localStorage;\n\n    //get history element from router\n    const { history } = props;\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    /**\n     * google response handler function\n     */\n    async function responseGoogle(response){\n        //if the google login is succeeded\n        if (response.tokenId) {\n            console.log(response.profileObj);\n            let user = {\"email\": response.profileObj.email, \n                        \"name\": response.profileObj.givenName, \n                        \"surname\": response.profileObj.familyName, \n                        \"image\": response.profileObj.imageUrl};\n\n            // set the user data in context provider\n            appConsumer.setUser(user);\n            //and save the token as string in localStorage\n            storage.setItem(\"userToken\", response.tokenId);\n\n            \n        }\n    }\n\n    //part of visualization-----------------------------\n\n    //if there's no token or I'm not fetching an user\n    if (!appConsumer.userFetch && !appConsumer.user) {\n        output = (\n            <div className=\"login-holder\">\n                <GoogleLogin\n                    clientId={config.google_login_client_id}\n                    buttonText=\"Login\"\n                    onSuccess={responseGoogle}\n                    onFailure={responseGoogle}\n                    cookiePolicy={'single_host_origin'}\n                />\n            </div>\n        );\n    }\n    return output;\n\n}\n\nexport default withRouter(UsersLogin); //I export passing router components\n","import React from 'react';\nimport {HashRouter as Router} from \"react-router-dom\";\n\n\n\nimport Main from 'components/main';\n\nimport NavBar from 'components/navigation/navBar';\nimport SideMenu from 'components/navigation/sideMenu';\nimport BreadCrumbs from 'components/modules/breadCrumbs';\n\nimport Notification from 'components/modules/notification';\n\nimport UsersLogin from 'components/modules/usersLogin';\n\n\nimport  {AppProvider} from 'components/providers/appProvider';\n\n\n/**\n *this is the start point of application\n */\n\nconst App = function(props) {\n\n\n        return (\n            <Router>\n                <div className=\"app\">\n\n                    {/*mount a root context object*/}\n                    <AppProvider>\n\n                        <NavBar>\n                            {/*component menu*/}\n                            <SideMenu/>\n                        </NavBar>\n\n                        <BreadCrumbs/>\n\n                        <Notification/>\n\n                        <Main/>\n\n                        <UsersLogin/>\n\n                    </AppProvider>\n                </div>\n            </Router>\n        );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport * as serviceWorker from 'serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}