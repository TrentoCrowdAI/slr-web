{"version":3,"sources":["utils/conn.js","components/main.js","components/svg/editButton.js","components/navigation/navBar.js","components/modules/error.js","components/providers/appProvider.js","components/home.js","components/navigation/userInfo.js","config/index.js","components/svg/menuButton.js","components/modules/cover.js","components/navigation/sideMenu.js","dao/projects.dao.js","components/svg/loadIcon.js","components/svg/closeButton.js","components/forms/projectForm.js","components/modules/pagination.js","utils/index.js","components/svg/optionsButton.js","components/modules/sideOptions.js","components/projects/projectsList.js","dao/paper.dao.js","dao/projectPapers.dao.js","components/svg/selectTick.js","components/forms/checkbox.js","components/svg/radioTick.js","components/forms/radiobox.js","components/svg/searchButton.js","components/papers/printPapersList.js","components/svg/selectArrow.js","components/forms/select.js","components/svg/orderArrow.js","components/svg/removeButton.js","components/forms/searchform.js","components/papers/papersList.js","components/forms/selectformik.js","components/forms/custompaper.js","components/projects/projectDescription.js","components/projects/projectName.js","components/projects/projectPage.js","App.js","serviceWorker.js","index.js"],"names":["abortController","abortRequestType","Main","props","react_default","a","createElement","className","children","EditButton","_ref","confirm","Fragment","version","id","xmlns","xmlnsXlink","x","y","viewBox","points","d","NavBar","appConsumer","useContext","AppContext","title","Error","output","useEffect","setError","error","payload","statusCode","message","name","style","textAlign","type","onClick","window","history","back","React","createContext","AppProvider","user","image","alt","src","surname","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","contextObject","setTitle","Provider","value","modules_error","Home","fontSize","fontWeight","UserInfo","config","home","search","scopus_search","projects","papers","menu_list","content","link","max_total_number_for_results","MenuButton","x1","y1","x2","y2","Cover","cls","handler","e","PrintMenu","map","element","index","key","react_router_dom","to","onMouseUp","handleMenuBlur","SideMenu","shown","setShown","firstTime","setFirstTime","clsidemenu","clsbutton","cover","menuButton","tabIndex","userInfo","sideMenu_PrintMenu","timeOutTime","request","_callee","url","options","signal","requestOptions","timer","response","data","timeOutError","_args","arguments","regenerator_default","wrap","_context","prev","next","length","undefined","AbortController","assign","credentials","mode","setTimeout","abort","fetch","sent","clearTimeout","parseResponseData","checkResponseStatus","abrupt","t0","stop","_callee2","queryData","query","_args2","_context2","encodeURIComponent","slice","_callee3","_context3","method","_callee4","bodyData","jsonHeaders","body","_args4","_context4","Headers","append","JSON","stringify","headers","_callee5","_args5","_context5","status","statusText","_callee6","contentType","_context6","get","indexOf","text","formData","blob","json","http","post","delete","put","abortRequest","res","project_id","projectsDao","getProjectsList","getProject","postProject","putProject","deleteProject","LoadIcon","class","CloseButton","ProjectForm","yup","require","projectValidationSchema","object","shape","string","required","description","formik_esm","initialValues","validationSchema","onSubmit","_ref2","asyncToGenerator","mark","values","setSubmitting","push","_x","_x2","apply","this","validateOnBlur","_ref3","errors","touched","isSubmitting","validateField","setErrors","handleChange","visibility","setVisibility","closeButton","borderBottom","placeholder","onChange","component","disabled","Pagination","start","count","totalResults","path","queryString","location","href","split","newQueryString","arryQuery","i","parameterName","setStartAndCountInUrl","firstPage","lastPage","listPage","paged","Math","floor","totalPage","ceil","paginationLength","display","margin","join","base","charAt","createQueryStringFromObject","keys","getIndexOfObjectArrayByKeyAndValue","array","DeleteButton","SideOptions","target","focused","setFocused","onBlur","onMouseDown","optionsButton","padding","border","PrintList","maps","projectsList","handleDelete","sideOptions","modules_sideOptions","ProjectsList","setProjectsList","setTotalResults","_useState5","_useState6","setDisplay","_useState7","_useState8","toggleform","setToggleForm","params","parse","createQueryData","_handleDelete","newProjectsList","console","log","filter","project","alert","even_projs","odd_projs","objectSpread","orderBy","results","concat","fetchData","loadIcon","projectsList_PrintList","match","pagination","projectForm","paperDao","paper_id","projectPapersDao","getPapersList","getPaper","postPaperIntoProject","putPaper","deletePaper","SelectTick","attributeName","dur","repeatCount","fill","from","CheckBox","val","label","isChecked","tick","selectTick","checked","RadioTick","cx","cy","r","RadioBox","radioTick","SearchButton","PrintScoupusSearchList","papersList","handlePaperSelection","selectedEidList","forms_checkbox","eid","includes","authors","date","lib_default","abstract","lines","ellipsis","moreText","lessText","PrintPapersList","localPaperList","setLocalPaperList","handleSideOptions","_handleSideOptions","newPapersList","paper","SelectArrow","attributeType","begin","Select","selected","handleFocus","document","getElementById","beginElement","onFocus","selectArrow","borderLeft","borderRight","borderTop","data-value","OrderArrow","up","transform","RemoveButton","_","orderByOptions","searchByOptions","yearOptions","toConsumableArray","range","String","SelectedPapersListBox","selectedPapersList","opacity","pointerEvents","removeButton","height","SearchForm","setPapersList","queryUrl","scopus","searchBy","sort","googleScholar","arXiv","year","setSelectedPapersList","_useState9","_useState10","keywords","setKeyWords","_useState11","_useState12","source","setSource","_useState13","_useState14","setSearchBy","_useState15","_useState16","setYear","handleSelection","parseInt","getAttribute","handelOrder","event","newList","_handleAddPapers","arrayEid","preventDefault","_handleSendSearch","_queryString","handleOnInputChange","newSource","formPart","position","searchButton","radiobox","singleYear","resultPart","forms_select","orderArrow","searchform_SelectedPapersListBox","printPapersList_PrintScoupusSearchList","PapersList","setUp","printPapersList_PrintPapersList","form","setSelected","setFieldValue","paperType","PaperForm","paperValidationSchema","document_type","paperData","substr","source_title","abstract_structured","filter_oa_include","filter_study_include","notes","projectId","render","_ref4","field","selectformik","ProjectDescription","update","editing","setEditing","defaultValue","width","focus","editButton","ProjectName","ProjectPageHead","notFound","lc","hash","slider","es","flipKey","flipId","ProjectPage","setProject","setNotFound","updateProject","_updateProject","new_name","new_desc","reload","projectName","projectPage_ProjectPageHead","react_router","exact","projectDescription","papers_papersList","searchform","custompaper","App","appProvider_AppProvider","navBar","sideMenu","main","projects_projectsList","projectPage","Boolean","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.210b2073.chunk.js","sourcesContent":["/*this is the file to communicate with backend by fetch request*/\n\n//signal to abort the request\nvar abortController;\n//int to know abort error type\nvar abortRequestType;\n//10seconds for timeout\nvar timeOutTime = 10 * 1000;\n\n//object to export\nconst http = {\n    \"get\": get,\n    \"post\": post,\n    \"delete\": deletes,\n    \"put\": put,\n    \"abortRequest\": abortRequest,\n\n}\n\n\n/**\n * abort all request in progeress by user\n */\nfunction abortRequest() {\n    abortController.abort();\n    abortRequestType = 1;\n}\n\n/**\n * abort all request if timeout\n */\nfunction timeOut() {\n\n    abortController.abort();\n    abortRequestType = 2;\n}\n\n/**\n * create a basic fetch request\n * @param url\n * @param options request config\n * @return {object} response data\n */\nasync function request(url, options = {}) {\n    try {\n\n        //create a new abortController for this request\n        abortController = new AbortController();\n        let signal = abortController.signal;\n        //initialize as 0 for every request\n        abortRequestType = 0;\n\n        let requestOptions = Object.assign(\n            {\n                //enable the  sending of cookie\n                credentials: 'include',\n                \"mode\": 'cors',\n                \"signal\": signal\n            },\n            options\n        );\n\n        //set timeout clock\n        let timer = setTimeout(() => timeOut(), timeOutTime);\n\n        let response = await fetch(url, requestOptions);\n\n        //clear timeoyt clock\n        clearTimeout(timer);\n\n\n        //parse response data\n        let data = await parseResponseData(response);\n        //response error check\n        checkResponseStatus(response,data);\n        return  data;\n\n    }\n    catch (error) {\n\n        //if abort error is caused by timeout\n        if (abortRequestType === 2) {\n            //create a custom error for timeout\n            let timeOutError = new Error(\"Error: Time out to get response from backend\");\n            timeOutError.name = \"timeout\";\n            return  timeOutError;\n        }\n        //if is a abort error  caused by user\n        else if (abortRequestType === 1) {\n            return null;\n        }\n\n        return error;\n\n\n    }\n}\n\n/**\n * get method\n * @param url\n * @param queryData quey string\n * @return {object} response data\n */\nasync function get(url, queryData = \"\") {\n    let query = \"\";\n    if (queryData !== \"\") {\n        query = \"?\";\n        for (let key in queryData) {\n            query += key + \"=\" + encodeURIComponent(queryData[key]) + \"&\";\n        }\n        //delete the last &\n        query = query.slice(0, query.length - 1);\n    }\n    return await request(url + query);\n}\n\n/**\n * deletes method\n * @param url\n */\nasync function deletes(url) {\n    let options = {\n        \"method\": 'DELETE'\n    };\n\n    return await request(url, options);\n}\n\n/**\n * post method\n * @param url\n * @param bodyData\n * @return {object } response data\n */\nasync function post(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'POST',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options);\n}\n\n\n/**\n * put method\n * @param url\n * @param bodyData\n */\nasync function put(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'PUT',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options);\n}\n\n\n/**\n *  * check resposonse status\n * @param response to check\n * @param data data received\n * @throws {Error} if  status code < 200 or status code >= 300\n */\nfunction checkResponseStatus(response, data) {\n\n    if (response.status < 200 || response.status >= 300) {\n        const error = new Error(response.statusText);\n        error.data = response;\n        if(data.payload){\n            error.payload = data.payload;\n        }\n        throw error;\n    }\n\n}\n\n/**\n * parse the response of  http request\n * @param response response object\n * @return {object} data parsed\n */\nasync function parseResponseData(response) {\n    //get response data type\n    const contentType = response.headers.get('Content-Type');\n    let data = null;\n    //parse the data by its type\n    if (contentType != null) {\n        if (contentType.indexOf('text') > -1) {\n            data = await response.text()\n        }\n        if (contentType.indexOf('form') > -1) {\n            data = await response.formData();\n        }\n        if (contentType.indexOf('video') > -1) {\n            data = await response.blob();\n        }\n        if (contentType.indexOf('json') > -1) {\n            data = await response.json();\n        }\n    }\n    else if (response != null) {\n        data = await response.text();\n    }\n    return data;\n}\n\n\nexport default http;","import React from \"react\";\n\n/**\n * compotent main of page\n */\nconst Main = function(props){\n\n        return (\n            <div className=\"main-wrapper\">\n                {props.children}\n            </div>\n        );\n};\n\nexport default Main;","import React from \"react\";\n\n/**\n * component svg edit button\n * based on the 'confirm' flag the icon will change\n */\nconst EditButton = function ({confirm}) {\n    var output = <></>;\n    if(!confirm){//if the user is not editing\n        output = (<svg version=\"1.1\" id=\"edit-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <path className=\"st-pencil\" d=\"M224,632.3l-81.6,225.3L367.7,776l0,0L833,310.7c39.4-39.4,39.9-103.3,0.7-142.9c-0.5-0.5-1-1-1.4-1.4\n            c-39.6-39.2-103.6-38.7-142.9,0.7L224,632.3L224,632.3z\"/>\n            <path className=\"st-pencil-border\" d=\"M367.7,776c-24-71.7-71.9-119.6-143.7-143.7\"/>\n            <path className=\"st-pencil\" d=\"M805.7,338c-24-71.7-71.9-119.6-143.7-143.7\"/>\n        </svg>);\n    }else{//if the user is editing\n        output = (\n            <svg version=\"1.1\" id=\"confirm-edit-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t            viewBox=\"0 0 1000 1000\">\n                <polyline className=\"st-confirm\" points=\"918,192.3 389.3,807.7 82,450 \"/>\n            </svg>\n        );\n    }\n    return output;\n};\n\nexport default EditButton;\n","import React, {useContext} from \"react\";\n\nimport {AppContext} from \"components/providers/appProvider\";\nimport EditButton from \"components/svg/editButton\";\n\n/**\n * this is the head component of page\n * @param props\n * @param \"menu_elements\" contains the list of menu-items\n */\n\n\nconst NavBar = function(props){\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    \n    return (\n        <div className=\"navigation-wrapper\">\n\n            {/*background of the menu-bar*/}\n            <nav className=\"main-nav\">\n                {appConsumer.title}\n            </nav>\n            {props.children}\n\n        </div>\n    );\n}\n\nexport default NavBar;","import React, {useContext, useEffect} from 'react';\nimport {AppContext} from \"components/providers/appProvider\";\n\n\nconst Error = function () {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {//not used yet\n\n        return () => {\n            //delete the error, so app can resume its work\n            appConsumer.setError(null);\n        }\n\n    });\n\n    //function to delete the error object in context\n    function handleOnRefresh(){\n        appConsumer.setError(null);\n    }\n    //function to return to previous page\n    function handleOnGoBack(){\n        window.history.back();\n        appConsumer.setError(null);\n    }\n\n\n    //console.dir(appConsumer.error);\n    let output;\n    //is a error from backend\n    if (appConsumer.error.payload) {\n        output = (\n            <>\n                <p>Error code:</p>\n                <p>{appConsumer.error.payload.statusCode}</p>\n                <p>Error name:</p>\n                <p>{appConsumer.error.payload.error}</p>\n                <p>Error message</p>\n                <p>{appConsumer.error.payload.message}</p>\n            </>\n        );\n    }\n\n    //is a error of other type\n    else {\n        output = (\n            <>\n                <p>Error name:</p>\n                <p>{appConsumer.error.name}</p>\n                <p>Error message</p>\n                <p>{appConsumer.error.message}</p>\n            </>\n        );\n    }\n\n    output = (\n        <div className=\"error-wrapper\" style={{textAlign: \"center\"}}>\n            {output}\n            <br/>\n            <button type=\"button\" onClick={handleOnGoBack}><u>return to previous page</u></button>\n            <br/>\n            <p>or</p>\n            <br/>\n            <button type=\"button\" onClick={handleOnRefresh}><u>refresh</u></button>\n\n        </div>\n    );\n\n    return output;\n\n}\n\n\nexport default Error;","import React, {useState, useRef} from 'react';\n\nimport NavBar from 'components/navigation/navBar';\nimport Main from 'components/main';\nimport Error from 'components/modules/error';\n\n//create a context object\nconst AppContext = React.createContext();\n\n/**\n * this is the component that include a context object that it can be access by all its children component\n */\nconst AppProvider = function (props) {\n\n    const user = {\n        image: <img className=\"face\" alt=\"profile\" src=\"https://placekitten.com/100/100\"/>,\n        name: \"Mario\",\n        surname: \"Rossi\"\n    };\n\n    //error\n    const [error, setError] = useState(null);\n\n    //title\n    const [title, setTitle] = useState(<div className=\"nav-elements\"> <h2 className=\"static-title\">HOME</h2> </div>);\n\n    //preparate an object to be insertd into context\n    const contextObject ={\n        user,\n        error,\n        setError,\n        title,\n        setTitle\n    };\n\n\n    //if there isn't error\n    if (!error) {\n\n        return (\n            //*set the values of contenxt*\n            <AppContext.Provider value={contextObject}>\n\n                {/*mount all components children*/}\n                {props.children}\n\n            </AppContext.Provider>\n        );\n    }\n    //if there is a error\n    else {\n        return (\n            //*set the values of contenxt*\n            <AppContext.Provider value={contextObject}>\n\n                    <Error/>\n\n            </AppContext.Provider>\n        )\n    }\n\n\n}\n\nexport {AppContext, AppProvider};","import React, {useContext, useEffect} from \"react\";\n\nimport {AppContext} from \"components/providers/appProvider\";\n\n/**\n * this is home component\n */\nconst Home = function (props) {\n\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set title when component mounts\n    useEffect(() => {\n        appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">HOME</h2> </div>);\n    },[])//run on component mount\n\n\n    return (\n        <>\n            <h1>\n                Systematic Literature Review manager\n            </h1>\n            <h2 style={{fontSize: 22, fontWeight: \"normal\"}}>the system right now allows you to</h2>\n            <ul style={{fontSize: 18, fontWeight: \"lighter\"}}>\n                <li>browse a list of prjects</li>\n                <li>add a new project</li>\n                <li>browse the list of papers on a project</li>\n                <li>search(from scopus) and add papers to a project</li>\n            </ul>\n            <h2 style={{fontSize: 22, fontWeight: \"normal\"}}>notes</h2>\n            <ul style={{fontSize: 18, fontWeight: \"lighter\"}}>\n                <li><i>the scopus search works partially(can't retrieve the description)</i>\n                    <ul><li style={{fontSize: 16}}><i>from Elsevier developer portal : \"The data available depends on your institutional subscriptions, and only when you're making calls from within your institutional network are you considered a subscriber\"</i></li></ul>\n                </li>\n                <li><i>the options don't affect the search, for now</i></li>\n            </ul>\n        </>\n    );\n\n\n\n\n};\n\nexport default Home;","import React, {useContext} from \"react\";\nimport { AppContext } from 'components/providers/appProvider'\n\n/*\n* this is the component that visualize user information box\n* */\nconst UserInfo = function(props){\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    return(\n            <div className=\"user\" >\n                {appConsumer.user.image}\n                <div className=\"user-info\">\n                    {appConsumer.user.name}\n                    <br/>\n                    {appConsumer.user.surname}\n                </div>\n            </div>\n    );\n};\n\nexport  default  UserInfo;","/**\n * this is the config file\n */\n\n\nconst config = {\n    \"home\": \"https://crowdai-slr-api-dev.herokuapp.com/\",\n    //\"home\": \"http://localhost:3000/\",\n    \"search\": \"search\",\n    \"scopus_search\": \"search-scopus\",\n    \"projects\": \"projects\",\n    \"papers\": \"papers\",\n    \"menu_list\": [\n        {id: 4, content: \"home\", link: \"/\"},\n        {id: 5, content: \"my projects\", link: \"/projects\"},\n        {id: 6, content: \"account\", link: \"#\"}\n    ],\n    \"max_total_number_for_results\": 5000\n\n\n\n\n};\n\nexport default config;\n","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst MenuButton = function (props) {\n\n    return (\n\n        <svg id=\"menu-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n             x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M214,482.1\"/>\n            <line className=\"st-t\" x1=\"172\" y1=\"482.1\" x2=\"172\" y2=\"482.1\"/>\n            <line className=\"st-m\" x1=\"500\" y1=\"482.1\" x2=\"500\" y2=\"482.1\"/>\n            <line className=\"st-b\" x1=\"828\" y1=\"482.1\" x2=\"828\" y2=\"482.1\"/>\n        </svg>\n    );\n};\n\nexport default MenuButton;\n","import React, {useContext} from \"react\";\n\n\n\n/**\n * component for covering the page\n */\nconst Cover = function ({cls, handler}) {\n    //get data from global context\n    return (\n        <div className={\"cover \" + cls} onClick={(e) => {handler(false)}}></div>\n    );\n};\n\nexport default Cover;","import React, {useState, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\n\nimport UserInfo from 'components/navigation/userInfo';\nimport config from 'config/index';\nimport MenuButton from 'components/svg/menuButton';\nimport Cover from 'components/modules/cover';\n\n/**\n *this is the side menu component\n */\nconst SideMenu = function (props) {\n\n    //bool to control the visualization of menu\n    const [shown, setShown] = useState(false);\n    const [firstTime, setFirstTime] = useState(true);\n\n\n    //function to open/close the menu\n    function handleToggleMenuButton() {\n        setShown(!shown);\n        setFirstTime(false);\n    }\n\n    //function to close the menu\n    function handleMenuBlur(e) {\n        setShown(false);\n    }\n\n    //change the class of element by menu state\n    var clsidemenu = \"modal side-menu up\";\n    var clsbutton = \"button-wrapper close\";\n\n    if (firstTime) {\n        clsidemenu = \"modal side-menu\"\n    }\n    if (shown) {\n        clsbutton = \"button-wrapper open\"\n        clsidemenu = \"modal side-menu down\"\n    }\n\n    return (\n        <div className=\"menu\">\n            <Cover cls={(shown) ? \"full-screen-transparent\" : \"\"} handler={handleMenuBlur}/>\n            <div className={clsbutton} onClick={handleToggleMenuButton}>\n                <MenuButton/>\n            </div>\n\n            <div className={clsidemenu} tabIndex={-1}>\n\n                {/*user info box*/}\n                <UserInfo/>\n                <PrintMenu handleMenuBlur={handleMenuBlur}/>\n\n            </div>\n        </div>\n    );\n\n};\n\n/**\n *internal component that is used only for print menu items\n */\nconst PrintMenu = function (props) {\n\n    let output = (\n        config.menu_list.map((element, index) => (\n                <div key={index}>\n                    <Link to={element.link} className=\"menu-option\"\n                          onMouseUp={props.handleMenuBlur}>{element.content}</Link>\n                </div>\n            )\n        )\n    );\n    return output;\n\n\n}\n\n\nexport default SideMenu;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to get a projects list\n * @param queryData\n * @return {array[objects]}\n */\nasync function getProjectsList(queryData = \"\") {\n    let url = config.home + config.projects\n    let res = await http.get(url, queryData);\n    return res;\n\n\n}\n\n/**\n * dao to get a project\n * @param project_id\n * @return {Object} project requested\n */\nasync function getProject(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    let res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to post a new project\n * @param bodyData\n * @return {Object} project created\n */\nasync function postProject(bodyData) {\n    let url = config.home + config.projects;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to put a old project\n * @param project_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putProject(project_id, bodyData) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    return await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a project\n * @param project_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function deleteProject(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    let res = await http.delete(url);\n    return res;\n}\n\n\nconst projectsDao = {\n    \"getProjectsList\": getProjectsList,\n    \"getProject\": getProject,\n    \"postProject\": postProject,\n    \"putProject\": putProject,\n    \"deleteProject\": deleteProject,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {projectsDao};","import React from \"react\";\n\n/**\n * component svg loading-icon\n */\nconst LoadIcon = function (props) {\n\n    return (\n\n        <svg id=\"loading-icon\" className={props.class} xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n             y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <g>\n                <path id=\"loading-circle1\" d=\"\n                  M 500, 500\n                  m -160, 0\n                  a 160,160 0 1,0 320,0\n                  a 160,160 0 1,0 -320,0\n          \"/>\n                <path id=\"loading-circle2\" d=\"\n                  M 500, 500\n                  m -305, 0\n                  a 305,305 0 1,0 610,0\n                  a 305,305 0 1,0 -610,0\n          \"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default LoadIcon;\n","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst CloseButton = function (props) {\n\n    return (\n        <svg id=\"close-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <line className=\"ln\" x1=\"134\" y1=\"866\" x2=\"866\" y2=\"134\"/>\n        <line className=\"ln\" x1=\"134\" y1=\"134\" x2=\"866\" y2=\"866\"/>\n        </svg>\n    );\n};\n\nexport default CloseButton;\n","import React, {useEffect, useState, useContext} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectsDao} from 'dao/projects.dao'\n\nimport CloseButton from 'components/svg/closeButton';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n/**\n * this is the form for create or edit the project\n * @param props.project  project object if we want to update a old project\n * @param null if we want to create a new project\n */\nfunction ProjectForm(props) {\n\n    let yup = require('yup');\n\n    const [touc, setTouc] = useState(false);\n\n    const projectValidationSchema = yup.object().shape({\n        name: yup.string().required('please enter a title'),\n        description: yup.string().required('please enter a description')\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    return (\n        <>\n        <Formik\n            initialValues={{ name: '', description:''}}\n            validationSchema={projectValidationSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                let bodyData = {name: values.name, description: values.description};\n                //call dao\n                let res = await projectsDao.postProject(bodyData);\n\n                //error checking\n                if(res.message){\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }else{\n                    props.history.push(\"/projects/\" + res.id);\n                }\n                setSubmitting(false);\n            }}\n            validateOnBlur={false}\n        >\n        {function ({ errors, touched, isSubmitting, setErrors, validateField, handleChange }) {\n            let output = \"\";\n            output = (<Form className=\"modal add-project\" style={{visibility: (!props.visibility) ? 'hidden' : '' }}>\n                <button type=\"button\" className=\"close-btn\" onClick={(e) => {\n                    props.setVisibility(!props.visibility);\n                }}><CloseButton/></button>\n                <br/>\n                <Field\n                    style={{borderBottom : (errors.name && touched.name) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"name\"\n                    type=\"text\" \n                    placeholder=\"Project Name\"\n                    onChange={(e) => {handleChange(e); validateField('name')}}/>\n                <br/>\n                <br/>\n                <Field\n                    style={{borderBottom : (errors.description && touched.description) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"description\"\n                    component=\"textarea\"\n                    placeholder=\"Project Description\"/>\n                <br/>\n                <button type=\"submit\" disabled={isSubmitting || \n                    ((errors.name && touched.name) ||\n                    (errors.description && touched.description))}>Add Project</button>\n            </Form>\n            );\n            return output;\n        }}\n        </Formik>\n\n       \n        </>\n    );\n\n\n}\n\n\nexport default ProjectForm;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport config from 'config/index';\n\n/**\n * this is the component for pagination\n * @param start offset of results\n * @param count number of element for page\n * @param totalResults the total number of results\n * @param path the path of current page\n * @return {*}\n * @constructor\n */\n\nconst Pagination = function({start, count, totalResults, path}) {\n\n    //set limit max of start\n    if(totalResults >config.max_total_number_for_results){\n        totalResults= config.max_total_number_for_results;\n    }\n    //prepare the correct link path for pagination\n    path = setStartAndCountInUrl(path);\n\n    let prev = \"\", next = \"\", firstPage = \"\", lastPage = \"\";\n    let listPage = [] ;\n    let separator = \"...\";\n    //number*2 of element in pagination\n    let paginationLength = 4;\n    //the page count start by 1.\n    let paged = Math.floor(start / count) + 1;\n    //get total page number\n    let totalPage = Math.ceil(totalResults / count);\n\n\n    //we need the pagination only the totalPage is major than 1\n    if (totalPage > 1) {\n\n        //if it isn't the first page, print the prev-page link\n        if (paged > 1) {\n            prev = (\n                <li>\n                    <Link className=\"prev-page\"\n                          to={path + \"start=\" + (((paged - 1) * count) > 0 ? ((paged - 2) * count) : 0) + \"&count=\" + count}>\n                        {\"<\"}\n                    </Link>\n                </li>\n            );\n        }\n        //if it isn't the last page, print the next-page link\n        if (paged < totalPage) {\n            next = (\n                <li>\n                    <Link className=\"next-page\" to={path + \"start=\" + (paged * count) + \"&count=\" + count}>\n                        {\">\"}\n                    </Link>\n                </li>\n            );\n        }\n\n        //if the first page  isn't include by regular listPage, print the first-page link\n        if (paged > paginationLength + 2) {\n            firstPage = (\n                <>\n                    <li>\n                        <Link className=\"first-page\" to={path + \"start=0&count=\" + count}>\n                            {\"1\"}\n                        </Link>\n                    </li>\n                    <li>\n                        <span>{separator}</span>\n                    </li>\n                </>\n            );\n        }\n\n        //if the last page  isn't include by regular listPage, print the last-page link\n        if (paged < totalPage - (paginationLength + 1)) {\n            lastPage = (\n                <>\n                    <li>\n                        <span>{separator}</span>\n                    </li>\n                    <li>\n                        <Link style={{display: \"inline-block\"}} className=\"last-page\"\n                              to={path + \"start=\" + ((totalPage - 1) * count) + \"&count=\" + count}>\n                            {totalPage}\n                        </Link>\n                    </li>\n                </>\n            );\n        }\n\n        //print the range of page link, the center is current paged\n        for (let i = paged - paginationLength; i <= paged + paginationLength; i++) {\n\n            //print only the i has a valid value\n            if (i > 0 && i <= totalPage) {\n\n                //if i isn't current page, print link\n                if (i !== paged) {\n\n                    listPage.push((\n                            <Link className=\"normal-page\" to={path + \"start=\" + ((i-1) * count) + \"&count=\" + count}>\n                                {i}\n                            </Link>\n                    ));\n                }\n                //if i is current page, print only text\n                else {\n                    listPage.push((\n                            <span className=\"current-page\">{paged}</span>\n                    ));\n                }\n\n            }\n        }\n\n\n    }\n\n    let output = (\n        <ul className=\"pagination\">\n            {prev}\n            {firstPage}\n            {listPage.map((element,index)=><li style={{display: \"inline-block\", margin: 10}} key={index}>{element}</li>)}\n            {lastPage}\n            {next}\n        </ul>\n    );\n    return output;\n};\n\n\n/**\n * internal function to prepare the path link for pagination\n * @param path\n * @return {*}\n */\n\nfunction setStartAndCountInUrl(path){\n\n    let url = window.location.href;\n    //get the queryString from url\n    let queryString = url.split(\"?\")[1];\n    //if it exists\n    if(queryString) {\n        //remove the part after # if it exists\n        queryString = queryString.split(\"#\")[0];\n\n        let newQueryString = \"\";\n        //split queryString in array of string\n        let arryQuery = queryString.split(\"&\");\n        for (let i = 0; i < arryQuery.length; i++) {\n            //check each queryElement\n            let parameterName = arryQuery[i].split(\"=\")[0];\n            //if it isn't start and count\n            if (parameterName !== \"start\" && parameterName !== \"count\") {\n                //add to the new queryString\n                newQueryString += arryQuery[i]+\"&\";\n            }\n        }\n        //create a new path whiteout start and count\n        path = path+\"?\"+newQueryString;\n    }\n    //if path doesn't contain any queryString\n    else {\n        path = path+\"?\";\n    }\n\n\n    return path;\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default Pagination;","//need to parse query string of url\nimport queryString from 'query-string';\n\n//here are the common support function\n\n\n/**\n * converts the checkboxes object of the search form into parameters for the url\n */\nfunction searchCheckboxesToParams(checkboxes){\n    var params = \"\";\n    Object.keys(checkboxes).forEach(key => {//I iterate over each field of the object\n        if(key !== \"years\"){//if it's not an year\n            if(checkboxes[key]){//if it's a true flag\n                console.log(key)\n                params += \"&\" + key + \"=\" + checkboxes[key];\n            }\n        }else{//if it's a year\n            if(checkboxes.years.length !== 0){//if there are some years selected\n                params += \"&\" + queryString.stringify({\"years\" : checkboxes.years} , {arrayFormat: 'comma'});\n            }\n        }\n      });\n      return params;\n}\n\n/**\n * this is  function to manipolate 2 url string\n * if first string ends with \"/\", removes \"/\".\n * then concate wite second string and return new string\n */\nfunction join(base, path){\n    let newPath;\n    //if the last element is \"/\"\n    if(base.charAt(base.length-1) === '/'){\n        newPath = base.slice(0,-1) + path;\n    }\n    else{\n        newPath =base + path;\n    }\n\n    return newPath;\n\n  }\n\n/**\n *\n *\n * function to create string of query by queryObject\n * @param queryData query object\n * @return {string} query string\n */\nfunction createQueryStringFromObject(queryData){\n\n    let queryString =\"?\";\n    //create a array of keys\n    let keys = Object.keys(queryData);\n    //concatenate the object.property\n    for(let i =0; i< keys.length; i++){\n        //I don't need to sort for the recently added sorting\n        if(queryData[\"orderBy\"] !== \"date_created\" || keys[i] !== \"sort\"){\n            queryString += keys[i]+\"=\"+encodeURIComponent(queryData[keys[i]]);\n            //if it isn't the last element, add symbol \"&\"\n            if(i !== (keys.length-1)){\n                queryString += \"&\";\n            }\n        }\n    }\n    return queryString;\n\n}\n\n\n/**\n * get element index of a object array by [key, value]\n * @param array to find\n * @param key to find\n * @param value to find\n * @return {number} index of element, -1 if didn't find\n */\nfunction getIndexOfObjectArrayByKeyAndValue(array ,key, value){\n    let index=-1;\n    for(let i=0; i<array.length; i++){\n        if(array[i][key] === value){\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n\n\n\nexport  {\n    searchCheckboxesToParams,\n    join,\n    createQueryStringFromObject,\n    getIndexOfObjectArrayByKeyAndValue,\n\n};","import React from \"react\";\n\n/**\n * component svg options menu button\n */\nconst DeleteButton = function (props) {\n\n    return (\n\n        <svg version=\"1.1\" id=\"options-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t        viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M214,482.1\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"250\" x2=\"500\" y2=\"250\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"500\" x2=\"500\" y2=\"500\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"750\" x2=\"500\" y2=\"750\"/>\n        </svg>\n\n    );\n};\n\nexport default DeleteButton;","import React,{useState} from \"react\";\n\nimport OptionsButton from 'components/svg/optionsButton';\n\n/**\n * component side options\n * it needs a class for the styling,\n * an array of options,\n * the function that will handle the click on the option\n * and, if necessary, a target for the handler function\n */\nconst SideOptions = function ({cls, options, handler, target}) {\n\n    //this is used to display or hide the options of the menu\n    const [focused, setFocused] = useState(false)\n\n\n    return (\n        <div className={cls}>\n            <button type=\"button\" \n                    onBlur={(e) => \n                        //if the element is blurred then I hide it\n                        {if(focused){setFocused(false)}}} \n                    onMouseDown={(e) => //onMouseDown fires before onBlur\n                        //immediately after the button is clicked I toggle the menu\n                        {setFocused(!focused)}}>\n                <OptionsButton/>\n            </button>\n            <div style={{fontSize: (focused) ? \"12px\" : \"0px\", padding: (focused) ? \"2px\" : \"0px\", border: (focused) ? \"solid 1px #e8e8e8\" : \"solid 0px #e8e8e8\"}} className=\"options-list\">\n                \n                {options.map((element, index) => \n                    <div key={index} onMouseDown={(e) => handler(target, element)} className=\"option\">{element}</div>\n                )}\n                \n            </div>\n        </div>\n    );\n}\n\nexport default SideOptions;","import React, {useState, useEffect, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\nimport queryString from 'query-string';\n\n\nimport {projectsDao} from 'dao/projects.dao';\nimport LoadIcon from 'components/svg/loadIcon';\nimport ProjectForm from 'components/forms/projectForm';\nimport Pagination from 'components/modules/pagination';\nimport {join} from 'utils/index';\nimport Cover from 'components/modules/cover';\nimport SideOptions from 'components/modules/sideOptions';\n\nimport {AppContext} from \"components/providers/appProvider\";\n\n/**\n *this component will show a projects list page\n */\n\nconst ProjectsList = function (props) {\n\n\n    //fetch data\n    const [projectsList, setProjectsList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //bool to control the visualization of input form\n    const [toggleform, setToggleForm] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(props.location.search);\n\n\n    //set title when component mounts\n    useEffect(() => {\n        appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">PROJECTS</h2> </div>);\n    },[]); //run on component mount\n\n    useEffect(() => {\n\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setDisplay(false);\n\n            //call the dao\n            const res = await projectsDao.getProjectsList({orderBy: \"date_last_modified\", ...queryData});\n\n            //error checking\n            //if is 404 error\n            if (res && res.message === \"Not Found\") {\n                setProjectsList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if is other error\n            else if (res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res !== null) {\n                //update state\n\n                //I put even first and then odd ones so I can display 2 columns with left-right flow \n                var even_projs = [];\n                even_projs = res.results.filter(function(element, index){ if( index % 2 ) return element;});\n                var odd_projs = [];\n                odd_projs = res.results.filter(function(element, index){ if( !(index % 2) ) return element;});\n\n                setProjectsList(odd_projs.concat(even_projs));\n                setTotalResults(res.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n        };\n\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //stop all ongoing request\n            projectsDao.abortRequest();\n        };\n    }, [queryData.start, queryData.count]); //re-execute when these variables change\n\n\n    //handle to delete project\n    async function handleDelete(id){\n\n        console.log(\"deleting \" + id);\n        //call the dao\n        let res = await projectsDao.deleteProject(id);\n        //error checking\n        //if is other error\n        if (res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);\n        }\n        //if res isn't null\n        else if (res !== null) {\n            //create a new array without the project deleted\n            let newProjectsList = projectsList.filter((project)=>project.id !== id);\n            //update project list state\n            setProjectsList(newProjectsList);\n\n            alert(\"DELETED SUCCESSFULLY!\");\n        }\n    }\n\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print svg image\n        output = <LoadIcon/>;\n    }\n\n    else {\n\n        output = (\n            <div>\n                <Cover cls={toggleform ? \"full-screen\" : \"\"} handler={setToggleForm}/>\n                {/*print list of projects*/}\n                <PrintList projectsList={projectsList} path={props.match.url} handleDelete={handleDelete}/>\n                {/*set listId and continues value*/}\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={props.match.url}/>\n\n                {/*print the input form to create/update the projects*/}\n                <ProjectForm visibility={toggleform} setVisibility={setToggleForm} history={props.history}/>\n                {/*button to show input form*/}\n                <button className=\"bottom-left-btn add-project-btn\" type=\"button\" value=\"toggle-insert-form\" \n                onClick={(e) => {\n                    setToggleForm(!toggleform);\n                }}>\n                    <div className=\"btn-title\">Add Project</div><div className=\"btn-icon\"> </div>\n                </button>\n            </div>\n        );\n\n    }\n\n    return output;\n\n\n};\n\n\n/**\n *  internal component only to print the list\n * @param projectsList projects list data\n * @param path current page url\n * @param handleDelete function to delete the project\n * */\nconst PrintList = function ({projectsList, path, handleDelete}) {\n\n    let sideOptions= [\"delete\"];\n\n    let maps;\n    //if list is empty, print a notice message\n    if (projectsList.length === 0) {\n        maps = (\n            <div>there aren't projects</div>\n        );\n    }\n    //if list isn't empty, print list of projects\n    else {\n        maps = (projectsList.map((element, index) =>\n                <div key={element.id} className=\"light-modal project-card\">\n                    <SideOptions options={sideOptions} handler={handleDelete} target={element.id} cls=\"card-options project-card-options\"/>\n                    <Link to={join(path, \"/\" + element.id)}>\n                        <h3>{element.data.name}</h3>\n                        <p>{element.data.description}</p>\n                    </Link>\n                </div>\n        ));\n    }\n\n    let output =  (\n        <div className=\"project-cards-holder\">\n            {maps}\n        </div>\n    );\n\n    return output;\n\n};\n\n/**\n * internal function to prepare a object of queryData\n * @param query\n * @return object of queryData for the fetch\n */\nfunction createQueryData(query){\n\n    //set query params from queryString of url\n    let params = queryString.parse( query);\n    let count = params.count || 10;\n    let start = params.start || 0;\n\n    //if \"before\" is defined by query then insert it in object, else insert \"after\" in object\n    let queryData = {start, count};\n    return queryData;\n\n}\n\n\n\n\n\nexport default ProjectsList;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to search local papers\n * @param queryData\n * @return {array[objects]}\n */\nasync function search(queryData){\n    let url = config.home+config.search;\n\n        const res = await http.get(url, queryData);\n        return res;\n\n}\n\n\n\n\nconst paperDao = {\n    search,\n    \"abortRequest\" : http.abortRequest\n}\n\n\n\nexport {paperDao};","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to get a list of paper associated with a project\n * @param queryData\n * @return {array[objects]}\n */\nasync function getPapersList(queryData) {\n    let url = config.home + config.papers\n    const res = await http.get(url, queryData);\n    return res;\n\n}\n\n/**\n * dao to get a paper\n * @param paper_id\n * @return {Object} paper requested\n */\nasync function getPaper(paper_id) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.get(url);\n}\n\n/**\n * dao to post a new paper\n * @param bodyData\n * @return {Object} project created\n */\nasync function postPaperIntoProject(bodyData) {\n    let url = config.home + config.papers;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to put a old paper\n * @param paper_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putPaper(paper_id, bodyData) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a paper\n * @param paper_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function deletePaper(paper_id) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.delete(url);\n}\n\n\nconst projectPapersDao = {\n    \"getPapersList\": getPapersList,\n    \"getPaper\": getPaper,\n    \"postPaperIntoProject\": postPaperIntoProject,\n    \"putPaper\": putPaper,\n    \"deletePaper\": deletePaper,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {projectPapersDao};","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst SelectTick = function (props) {\n\n    return (\n        <svg id=\"select-tick\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st-tick\" points=\"918,192.3 389.3,807.7 82,450 \">\n                <animate attributeName=\"points\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\"\n                    from=\"500,600 400,700 200,750\"\n                    to=\"918,192.3 389.3,807.7 82,450 \"\n                />\n            </polyline>\n        </svg>\n    );\n};\n\nexport default SelectTick;\n","import React from \"react\";\n\nimport SelectTick from 'components/svg/selectTick';\n\nconst CheckBox = function ({ val, name, label, isChecked, handler }) {\n\n    let output = \"\";\n    let tick = \"\";\n    if(isChecked){\n        tick = <SelectTick/>;\n    }\n    \n    output = (\n        <label className=\"checkbox-container\">\n            <input type=\"checkbox\" value={val} name={name} checked={isChecked} onChange={handler} />\n            <span className=\"checkmark\">{tick}</span>\n            <span>{label}</span>\n        </label>\n    );\n    return output;\n}\n\nexport default CheckBox;","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst RadioTick = function (props) {\n\n    return (\n        <svg id=\"radio-tick\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t        viewBox=\"0 0 1000 1000\">\n            <circle className=\"st-circle\" cx=\"500\" cy=\"500\" r=\"375\">\n                <animate attributeName=\"r\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\"\n                                from=\"0\"\n                                to=\"375\"\n                />\n            </circle>\n        </svg>\n    );\n};\n\nexport default RadioTick;\n","import React from \"react\";\n\nimport RadioTick from 'components/svg/radioTick';\n\nconst RadioBox = function ({ label, name, val, isChecked , handler}) {\n\n    let output = \"\";\n    let tick = \"\";\n    if(isChecked){\n        tick = <RadioTick/>;\n    }\n\n    output= (\n        <label className=\"radiobox-container\">\n        <input type=\"radio\" value={val} name={name} checked={isChecked} onChange={handler}/>\n        <span className=\"radiomark\">{tick}</span>\n        <span>{label}</span>\n        </label>\n    );\n    return output;\n}\n\nexport default RadioBox;","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst SearchButton = function (props) {\n\n    return (\n        <svg id=\"search-icon\" xmlns=\"http://www.w3.org/2000/svg\"\n             xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M626.9,644.3c-73.5,0-142.6-28.6-194.6-80.6s-80.6-121.1-80.6-194.6s28.6-142.6,80.6-194.6\n                c52-52,121.1-80.6,194.6-80.6c73.5,0,142.6,28.6,194.6,80.6c52,52,80.6,121.1,80.6,194.6s-28.6,142.6-80.6,194.6\n                S700.4,644.3,626.9,644.3z\"/>\n            <line className=\"st1\" x1=\"145.2\" y1=\"850.8\" x2=\"431.7\" y2=\"564.3\"/>\n        </svg>\n    );\n};\n\nexport default SearchButton;\n","import React, {useContext, useState} from \"react\";\nimport ClampLines from 'react-clamp-lines';\nimport {Link} from 'react-router-dom';\n\nimport CheckBox from \"components/forms/checkbox\";\nimport SideOptions from 'components/modules/sideOptions';\nimport {projectPapersDao} from 'dao/projectPapers.dao';\nimport {AppContext} from 'components/providers/appProvider'\n/**\n * prints the papers list of a local search on the fake database\n */\n/*\nconst PrintLocalSearchList = function ({papersList, handlePaperSelection}) {\n\n    let output = papersList.map((element, index) =>\n        <div key={element.id} className=\"paper-card\">\n            <CheckBox name={\"\"} label={\"\"} val={element.eid}  handler={handlePaperSelection}/>\n            <Link to={\"#\"}><h3>{element.data && element.data.title}</h3></Link>\n            <ClampLines\n                text={element.data && element.data.abstract}\n                lines={4}\n                ellipsis=\"...\"\n                moreText=\"Expand\"\n                lessText=\"Collapse\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    );\n    return output;\n\n};\n*/\n\n/**\n * prints the results of a search on scopus\n */\nconst PrintScoupusSearchList = function ({papersList, handlePaperSelection, selectedEidList}) {\n\n\n\n    let output = papersList.map((element, index) =>\n        <div key={index} className=\"paper-card\">\n            <CheckBox name={element.title} label={\"\"} val={element.eid}  isChecked ={selectedEidList.includes(element.eid)} handler={handlePaperSelection}/>\n            <Link to={\"#\"}><h3>{element.title}</h3></Link>\n            <div className=\"extra-info\">\n                <p className=\"authors\">{element.authors}</p>\n                <p className=\"eid\">{element.eid}</p>\n                <p className=\"date\">{element.date}</p>\n            </div>\n            <ClampLines\n                text={element.abstract}\n                lines={4}\n                ellipsis=\"...\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    );\n    return output;\n\n};\n\n/**\n * prints a list of papers and handles their removal from the project\n */\n\nconst PrintPapersList = function ({papersList, location, history}) {\n\n    const [localPaperList, setLocalPaperList] = useState(papersList);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //side options\n    let sideOptions= [\"delete\"];\n\n    //handle for the side options\n    async function handleSideOptions(id, name){\n        if(name === \"delete\"){\n            console.log(\"deleting \" + id);\n            //call the dao\n            let res = await projectPapersDao.deletePaper(id);\n            //error checking\n            //if is other error\n            if (res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res !== null) {\n\n                alert(\"DELETED SUCCESSFULLY!\");\n                let newPapersList = localPaperList.filter((paper)=>paper.id !== id);\n                setLocalPaperList(newPapersList);\n            }\n        }\n    }\n\n    let output;\n    //if list is empty, print a notice message\n    if (localPaperList.length === 0) {\n        output = (\n            <div>there are no papers here, you can add new ones by searching</div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else {\n        output = (\n            localPaperList.map((element) =>\n                <div key={element.id} className=\"paper-card\">\n                    <SideOptions options={sideOptions} handler={handleSideOptions} target={element.id} cls=\"card-options paper-card-options\"/>\n                    <Link to={\"#\"}>\n                        <h3>{element.data.title}</h3>\n                    </Link>\n                    <div className=\"extra-info\">\n                        <p className=\"authors\">{element.data.authors}</p>\n                        <p className=\"eid\">{element.data.eid}</p>\n                        <p className=\"date\">{element.data.date}</p>\n                    </div>\n                    <ClampLines\n                        text={element.data.abstract}\n                        lines={4}\n                        ellipsis=\"...\"\n                        className=\"paragraph\"\n                        moreText=\"more\"\n                        lessText=\"less\"\n                    />\n                </div>\n            )\n        );\n    }\n    return output;\n\n\n};\n\nexport  {PrintPapersList, PrintScoupusSearchList};","import React from \"react\";\n\n/**\n * component svg select arrow\n * 'focused' is a flag used for displaying a different shape\n */\nconst SelectArrow= function ({focused}) {\n    var from=\"\";\n    var to=\"\";\n    //I check if the upper component is focused and then I animate\n    if(focused){\n        from=\"90,295.5 500,704.5 910,295.5 \";\n        to=\"90,704.5 500,295.5 910,704.5 \";;\n    }else{\n        from=\"90,704.5 500,295.5 910,704.5 \";;\n        to=\"90,295.5 500,704.5 910,295.5 \";\n    }\n    return (\n    <svg version=\"1.1\" id=\"arrow-select\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n        viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st-arrow-select\" points={from}>\n            <animate attributeType=\"XML\" id=\"ani-select-arrow\" attributeName=\"points\" from={from} to={to} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n            </polyline>\n        </svg>\n    );\n};\n\nexport default SelectArrow;\n\n","import React, {useState} from \"react\";\nimport SelectArrow from 'components/svg/selectArrow';\n\n\n/**\n * this component acts as an html <select>\n * it needs an array of options, the index of the selected one and the hadler to change the status of the upper component calling this one\n */\nconst Select = ({ options, selected, handler }) => {\n    \n    //this is useful for the animation\n    const [focused, setFocused] = useState(false);\n\n\n\n    function handleFocus(e){\n        //handle arrow animation and focus of menu\n        document.getElementById(\"ani-select-arrow\").beginElement();//trigger svg animation\n        setFocused(!focused);\n    }\n\n    var output = (\n        <div className=\"custom-select\">\n            <div className=\"selected\" tabIndex={-2} onBlur={handleFocus} onFocus={handleFocus}>{options[selected].label} <div className=\"arrow\"><SelectArrow focused={focused}/></div></div>\n            <div className=\"options-holder\" style={{fontSize: (!focused) ? '0px' : '15px', borderBottom: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderLeft: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderRight: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderTop:\"none\"}}>\n                {options.map((element, index) => (\n                <div key={index} data-value={index} className=\"option\" style={{padding: (!focused) ? '0px' : '2px' }} onMouseDown={handler}>\n                    {element.label}\n                </div>))}\n            </div>\n        </div>\n    );\n    return output;\n}\n\nexport default Select;","import React, {useState, useEffect} from \"react\";\n\n/**\n * component svg order arrow button\n@param {string} up [ASC or DESC]\n */\nconst OrderArrow= function ({display, up}) {\n\n    console.log(\"UP => \" + up)\n    let output = \"\";\n\n    let from=\"\";\n    let to=\"\";\n\n    //I check where the arrow should point to(up or down) checking the 'up' flag passed by the parent component\n    if(up ===\"ASC\"){\n        from=\"371.7,293 500,165 628.3,293 \";\n        to=\"371.7,491.9 500,619.9 628.3,491.9 \";\n    }else{\n        from=\"371.7,491.9 500,619.9 628.3,491.9 \";\n        to=\"371.7,293 500,165 628.3,293 \";\n    }\n\n    if(display){\n        output = (\n            <svg version=\"1.1\" id=\"order-arrow\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\" >\n                <polyline className=\"st-order-arrow-head\" points={to} transform=\"matrix(1.5303008,0,0,1.5303008,-279.47582,-105.57059)\">\n                    <animate attributeType=\"XML\" id=\"ani-order-arrow\" attributeName=\"points\" from={from} to={to} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n                </polyline>\n                <line className=\"st-order-arrow\" x1=\"485.67453\" y1=\"145.09268\" x2=\"485.67453\" y2=\"827.75989\"/>\n            </svg>\n        );\n    }\n    \n    return output;\n};\n\nexport default OrderArrow;","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst RemoveButton = function (props) {\n\n    return (\n        <svg id=\"remove-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <line className=\"rb\" x1=\"134\" y1=\"866\" x2=\"866\" y2=\"134\"/>\n        <line className=\"rb\" x1=\"134\" y1=\"134\" x2=\"866\" y2=\"866\"/>\n        </svg>\n    );\n};\n\nexport default RemoveButton;\n","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Link} from 'react-router-dom'\nimport ClampLines from 'react-clamp-lines';\nimport queryString from \"query-string\";\n\n\nimport {paperDao} from 'dao/paper.dao';\nimport {projectPapersDao} from 'dao/projectPapers.dao'\n\nimport CheckBox from \"components/forms/checkbox\";\nimport RadioBox from \"components/forms/radiobox\";\nimport LoadIcon from 'components/svg/loadIcon';\nimport SearchButton from 'components/svg/searchButton';\nimport {PrintScoupusSearchList} from 'components/papers/printPapersList';\nimport Select from 'components/forms/select';\nimport OrderArrow from 'components/svg/orderArrow';\nimport Pagination from \"components/modules/pagination\";\nimport CloseButton from 'components/svg/closeButton';\nimport RemoveButton from 'components/svg/removeButton';\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue} from 'utils/index';\n\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//order options\nconst orderByOptions = [\n    {label: 'Title', value: 'title'},\n    {label: 'Date', value: 'date'}\n];\n\n//search by  options\nconst searchByOptions = [\n    {label: 'all', value: 'all'},\n    {label: 'author', value: 'author'},\n    {label: 'content', value: 'content'},\n    {label: 'adv. query', value: 'advanced'}\n];\n\n//year options\nconst startYear = 2017;\nconst endYear = 2020;\n//create a int array from startYear to endYear, then convert it to string array, after this concatenate with \"all\"\nconst yearOptions = [\"all\", ...(_.range(startYear, endYear).map(String))];\n\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst SearchForm = function ({project_id, location, match, history}) {\n\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(true);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n\n    //set query params from url\n    let queryData = createQueryData(location.search);\n    //console.log(queryData);\n\n    // list of selected papers\n    const [selectedPapersList, setSelectedPapersList] = useState([]);\n\n    //state for search form\n    const [keywords, setKeyWords] = useState(\"_\");\n    const [source, setSource] = useState({\"scopus\": true, \"googleScholar\": false, \"arXiv\": false});\n    const [searchBy, setSearchBy] = useState(\"all\");\n    const [year, setYear] = useState(\"all\");\n\n\n    useEffect(() => {\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //update the values of state from url\n            setKeyWords(queryData.query);\n            setSource({\"scopus\": queryData.scopus, \"googleScholar\": queryData.googleScholar, \"arXiv\": queryData.arXiv});\n            setSearchBy(queryData.searchBy);\n            setYear(queryData.year);\n\n            //if there is queryString from URL\n            if (queryData.query !== \"\") {\n\n                setDisplay(false);\n                \n                //always call the dao to search on scopus\n                let res = await paperDao.search(queryData);\n\n                //error checking\n                //if is 404 error\n                if (res && res.message === \"Not Found\") {\n                    setPapersList([]);\n                    setTotalResults(0);\n                    //show the page\n                    setDisplay(true);\n                }\n                //if is other error\n                else if (res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }\n                //if res isn't null\n                else if (res !== null) {\n                    //update state\n                    setPapersList(res.results);\n                    setTotalResults(res.totalResults);\n                    //show the page\n                    setDisplay(true);\n                }\n            }\n        };\n\n        fetchData();\n\n    }, [project_id, queryData.query, queryData.orderBy, queryData.searchBy, queryData.sort, queryData.year, queryData.start, queryData.count, queryData.scopus, queryData.googleScholar, queryData.arXiv]);  //re-execute when these variables change\n\n\n\n\n\n    //handler for sort selection\n    function handleSelection(e) {\n        //get index\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.orderBy = orderByOptions[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e) {\n        //trigger svg animation\n        document.getElementById(\"ani-order-arrow\").beginElement();\n\n        if (queryData.sort === \"ASC\") {\n            queryData.sort = \"DESC\";\n        }\n        else {\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n    /*function to insert and remove the paper id from selected list*/\n    function handlePaperSelection(event) {\n        let newList;\n        //get eid\n        let eid = event.target.value;\n        //get ttitle\n        let title = event.target.name;\n        //if id is not included in the list yet\n        if (getIndexOfObjectArrayByKeyAndValue(selectedPapersList, \"eid\", eid) === -1) {\n           //create a copy of array\n            newList = [...selectedPapersList];\n            //insert into array\n            newList.push({\"eid\": eid, \"title\": title});\n\n        }\n        //if id already exists in the list\n        else {\n            //remove the  target paper from array\n            newList = selectedPapersList.filter(function (element) {\n                return element.eid !== eid;\n            });\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n    }\n\n    /*function to add the post in the project*/\n    async function handleAddPapers(event) {\n\n        event.preventDefault();\n        //console.log(selectedPapersList);\n\n       //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n        //call dao\n        let res = await projectPapersDao.postPaperIntoProject({\n            \"arrayEid\": arrayEid, \"project_id\": project_id\n        });\n        //if there is the error\n        if (res && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);\n            return null;\n        }\n\n        //empties the state\n        setSelectedPapersList([]);\n        alert(\"insert completed\");\n\n    }\n\n\n    /*function to send the query*/\n    async function handleSendSearch(event) {\n\n        event.preventDefault();\n\n        //if query input is empty\n        if (keywords === \"\") {\n            alert(\"search string is empty\")\n        }\n        else {\n            //synchronize the query data from react state hooks\n            queryData.query = keywords;\n            queryData.scopus = source.scopus;\n            queryData.googleScholar = source.googleScholar;\n            queryData.arXiv = source.arXiv;\n            queryData.searchBy = searchBy;\n            queryData.year = year;\n\n            //send query url\n            let queryString = createQueryStringFromObject(queryData);\n            //launch to search\n            history.push(queryString);\n\n        }\n\n    }\n\n    /**\n     *handle to update hook state by input change\n     */\n    function handleOnInputChange(event) {\n\n        let newSource;\n\n        switch (event.target.name) {\n            case \"query\":\n                setKeyWords(event.target.value);\n                break;\n            case \"scopus\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.scopus = !source.scopus;\n                setSource(newSource);\n                break;\n\n            case \"googleScholar\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.googleScholar = !source.googleScholar;\n                setSource(newSource);\n                break;\n            case \"arXiv\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.arXiv = !source.arXiv;\n                setSource(newSource);\n                break;\n            case \"searchBy\":\n                setSearchBy(event.target.value);\n                break;\n            case \"year\":\n                setYear(event.target.value);\n                break;\n            default:\n                break;\n        }\n\n\n    }\n\n    /*\n     #######################################\n     need to  create a new child component for the part of <form>, when we have more information on search options\n     ######################################\n     */\n    let formPart = (\n        <>{}\n            <form className={(queryData.query === \"\") ? 'search-form' : 'search-form small'}\n                  onSubmit={handleSendSearch}>\n                {/*search form*/}\n                <div style={{position: 'relative'}}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"search\"\n                        name=\"query\"\n                        value={keywords}\n                        onChange={handleOnInputChange}\n                    />\n                    <button type=\"submit\" value=\"Submit\">\n                        <SearchButton/>\n                    </button>\n                </div>\n\n                <div className=\"option-holder\">\n                    <label>Source:</label><br/>\n\n                    <div className=\"checkboxes-holder\">\n                        <CheckBox label=\"Scopus\" name=\"scopus\" val=\"\" isChecked={source.scopus}\n                                  handler={handleOnInputChange}/>\n                        <CheckBox label=\"Google Scholar\" name=\"googleScholar\" val=\"\" isChecked={source.googleScholar}\n                                  handler={handleOnInputChange}/>\n                        <CheckBox label=\"arXiv\" name=\"arXiv\" val=\"\" isChecked={source.arXiv}\n                                  handler={handleOnInputChange}/>\n                    </div>\n\n                    <label>Search by:</label><br/>\n\n                    <div className=\"checkboxes-holder\" >\n                        <RadioBox label={searchByOptions[0].label} name=\"searchBy\" val={searchByOptions[0].value}\n                                  isChecked={searchBy === searchByOptions[0].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[1].label} name=\"searchBy\" val={searchByOptions[1].value}\n                                  isChecked={searchBy === searchByOptions[1].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[2].label} name=\"searchBy\" val={searchByOptions[2].value}\n                                  isChecked={searchBy === searchByOptions[2].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[3].label} name=\"searchBy\" val={searchByOptions[3].value}\n                                  isChecked={searchBy === searchByOptions[3].value} handler={handleOnInputChange}/>\n                    </div>\n\n                    <label>Year:</label><br/>\n                    <div className=\"checkboxes-holder\" >\n                        {\n                            yearOptions.map((singleYear, index) =>\n                                <RadioBox key={index} label={singleYear} name=\"year\" val={singleYear}\n                                          isChecked={year === singleYear} handler={handleOnInputChange}/>\n                            )\n                        }\n                    </div>\n                </div>\n\n            </form>\n        </>);\n\n\n    let resultPart = \"\";\n\n    //if is loading\n    if (display === false) {\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"order\"\n                     style={{pointerEvents: \"none\"}}>{/* this way the user cannot sort while loading the results */}\n                    <label>sort by:</label>\n                    <Select options={orderByOptions}\n                            selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                            handler={handleSelection}/>\n                    <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/></button>\n                </div>\n                <SelectedPapersListBox selectedPapersList={selectedPapersList}/>\n                <div className=\"search-loading-holder\">\n                    <LoadIcon class={\"small\"}/>\n                </div>\n            </div>);\n    }\n\n    //if the search results list is empty\n    else if (papersList.length === 0 && queryData.query !== \"\") {\n        //the class is used only to workaround a small bug that display not found just as the search start before the loading icon\n        resultPart = (\n            <div className=\"not-found\"> not found :( </div>\n        );\n    }\n    else if (papersList.length > 0 && queryData.query !== \"\") {\n\n        //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"order\">\n                    <label>sort by:</label>\n                    <Select options={orderByOptions}\n                            selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                            handler={handleSelection}/>\n                    <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/></button>\n                </div>\n                <SelectedPapersListBox selectedPapersList={selectedPapersList} handlePaperSelection={handlePaperSelection}/>\n\n                <PrintScoupusSearchList papersList={papersList} handlePaperSelection={handlePaperSelection} selectedEidList={arrayEid}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </div>\n        );\n    }\n\n\n    let output = (\n        <>\n            {formPart}\n            <form className=\"search-results\" onSubmit={handleAddPapers}>\n                {resultPart}\n            </form>\n        </>\n    );\n\n    return output;\n};\n\n\n/**\n * internal component to print the box of list of selected paper\n */\nconst SelectedPapersListBox = function ({selectedPapersList, handlePaperSelection}){\n\n    let output = \"\";\n    output = (\n        <div className=\"selected-papers-list\" style={{opacity: (selectedPapersList.length>0) ? \"1.0\" : \"0.0\", pointerEvents: (selectedPapersList.length>0) ? \"auto\" : \"none\"}}>\n            <h3>\n                {\"SELECTED PAPERS\"} <br/><span>(total : {selectedPapersList.length})</span>\n            </h3>\n            <div className=\"submission-wrapper\">\n                <div className=\"papers-wrapper\" style={{border: (selectedPapersList.length>0) ? \"\" : \"0px\"}}>\n                    <div className=\"papers-flex\" style={{padding: (selectedPapersList.length>0) ? \"\" : \"0px\"}}>\n                        {selectedPapersList.map((element, index) =>\n                            <p key={index}>\n                                <span>{element.title}</span> \n                                <button type=\"button\" className=\"remove-btn\" name={element.title} value={element.eid} //name and value don't work on the button event for some reasons\n                                    onClick={(e) => {handlePaperSelection({target: {name: element.title, value:element.eid}})}}>\n                                    <RemoveButton/>\n                                </button>\n                            </p>\n                        )}\n                    </div>\n                </div>\n                <button style={{border: (selectedPapersList.length>0) ? \"\" : \"0px\", margin: (selectedPapersList.length>0) ? \"\" : \"0px\", height: (selectedPapersList.length>0) ? \"\" : \"0px\", pointerEvents: (selectedPapersList.length>0) ? \"auto\" : \"none\"}} className=\"ti-btn add-resultpaper-btn\" type=\"submit\" value=\"Submit\">\n                    <div className=\"btn-title\">Add Selected Paper</div><div className=\"btn-icon\"> </div>\n                </button>\n            </div>\n        </div>\n    );\n\n    return output;\n\n};\n\n\n/**\n * internal function to prepare a object of queryData\n * @param queryUrl\n * @return object of queryData for the fetch\n */\nfunction createQueryData(queryUrl) {\n\n\n    //set query params from queryString of url\n    let params = queryString.parse(queryUrl);\n    let query = params.query || \"\";\n\n    let searchBy = params.searchBy || \"all\";\n    let orderBy = params.orderBy || \"title\";\n    let sort = params.sort || \"ASC\";\n    let start = params.start || 0;\n    let count = params.count || 10;\n\n\n    let scopus;\n    if (params.scopus === undefined) {\n        scopus = true;\n    }\n    else {\n        scopus = (params.scopus === \"true\");\n    }\n\n    let googleScholar = (params.googleScholar === \"true\");\n    let arXiv = (params.arXiv === \"true\");\n\n    let year = params.year || \"all\";\n\n    let queryData = {query, searchBy, orderBy, sort, scopus, googleScholar, arXiv, year, start, count};\n\n    return queryData;\n\n}\n\n\nexport default SearchForm;","import React, {useState, useEffect, useContext} from \"react\";\nimport queryString from \"query-string\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport {PrintPapersList} from 'components/papers/printPapersList';\nimport Select from 'components/forms/select';\nimport OrderArrow from 'components/svg/orderArrow';\nimport Pagination from \"components/modules/pagination\";\nimport {createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue} from 'utils/index';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n\n\n//order options\nconst orderByOptions = [\n    { value: 'date_created', label: 'most recent' },\n    { value: 'title', label: 'Title' },\n    { value: 'authors', label: 'Authors' }\n  ];\n\n/**\n * the local component that shows the papers list of a project\n */\nconst PapersList = ({project_id, location, match, history}) => {\n\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(location.search);\n\n    const [up, setUp] = useState(queryData.sort);\n\n    useEffect(() => {\n\n        if(queryData.orderBy !== \"date_created\" && up !== queryData.sort){\n            setUp(queryData.sort);\n            document.getElementById(\"ani-order-arrow\").beginElement();\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setDisplay(false);\n\n            //call the dao\n            let res = await projectPapersDao.getPapersList({project_id, ...queryData});\n\n            //error checking\n            //if is 404 error\n            if (res && res.message === \"Not Found\") {\n                setPapersList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if is other error\n            else if (res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res !== null) {\n\n                //update state\n                setPapersList(res.results);\n                setTotalResults(res.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n\n        };\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //stop all ongoing request\n            projectPapersDao.abortRequest();\n        };\n    }, [queryData.start, queryData.count, queryData.sort, queryData.orderBy]); //re-execute when these variables change\n\n\n    //handler for sort selection\n    function handleSelection(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n\n        //if I previously ordered by 'most recent' then I sort the next order by ASC\n        if(queryData.orderBy === \"date_created\"){\n            queryData.sort = \"ASC\";\n        }\n        queryData.orderBy=orderByOptions[index].value;\n\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e){\n        //trigger svg animation\n        if(queryData.sort === \"ASC\"){\n            queryData.sort = \"DESC\";\n        }\n        else{\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print loading image\n        output = (\n            <div className=\"paper-card-holder\">\n                <div className=\"order\" style={{pointerEvents: \"none\"}}>{/* this way the user cannot sort while loading the results */}\n                    <label>sort by:</label>\n                    <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\",queryData.orderBy)} handler={handleSelection}/>\n                    <button type=\"button\" onClick={handelOrder}><OrderArrow display={queryData.orderBy !== \"date_created\"} up={up}/></button>\n                </div>\n                <LoadIcon class={\"small\"}/>\n            </div> );\n    }\n    else {\n\n        output = (\n            <div className=\"paper-card-holder\">\n                <div className=\"order\">\n                    <label>sort by:</label>\n                    <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)} handler={handleSelection}/>\n                    <button type=\"button\" onClick={handelOrder}><OrderArrow display={queryData.orderBy !== \"date_created\"} up={up}/></button>\n                </div>\n                <PrintPapersList papersList={papersList} location={location} history={history}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </div>\n        );\n    }\n\n    output = (\n        <div className=\"papers-list\">\n            {output}\n        </div>\n    );\n\n    return output;\n\n};\n\n\n\n\n/**\n * internal function to prepare a object of queryData\n * @param query\n * @return object of queryData for the fetch\n */\nfunction createQueryData(query){\n\n    //set query params from queryString of url\n    let params = queryString.parse( query);\n    let count = params.count || 10;\n    let start = params.start || 0;\n    let orderBy = params.orderBy || \"date_created\";\n    let sort = params.sort || \"ASC\";\n\n    if(orderBy === \"date_created\"){\n        sort = \"DESC\";\n    }\n\n    //if \"before\" is defined by query then insert it in object, else insert \"after\" in object\n    let queryData = {orderBy, sort, start, count };\n    return queryData;\n\n}\n\n\n\nexport default PapersList;","import React, {useState, useEffect} from \"react\";\nimport SelectArrow from 'components/svg/selectArrow';\n\n\n/**\n * this component acts as an html <select>\n * it needs an array of options, the index of the selected one and the hadler to change the status of the upper component calling this one\n */\nconst Select = ({ options, form, name }) => {\n    \n\n    //this is useful for the animation\n    const [focused, setFocused] = useState(false);\n\n    //this keeps the selected option\n    const [selected, setSelected] = useState(0)\n\n    //this handle the selection setting the index of the selected option\n    function handler(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n        setSelected(index);\n    }\n\n    //this updates the field value for formik\n    useEffect(() => {\n        form.setFieldValue(name, options[selected].value);\n    }, [selected])\n\n    function handleFocus(e){\n        //handle arrow animation and focus of menu\n        document.getElementById(\"ani-select-arrow\").beginElement();//trigger svg animation\n        setFocused(!focused);\n    }\n\n    var output = (\n        <div className=\"custom-select\">\n            <div className=\"selected\" tabIndex={-2} onBlur={handleFocus} onFocus={handleFocus}>{options[selected].label} <div className=\"arrow\"><SelectArrow focused={focused}/></div></div>\n            <div className=\"options-holder\" style={{fontSize: (!focused) ? '0px' : '15px', borderBottom: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderLeft: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderRight: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderTop:\"none\"}}>\n                {options.map((element, index) => (\n                <div key={index} data-value={index} className=\"option\" style={{padding: (!focused) ? '0px' : '2px' }} onMouseDown={handler}>\n                    {element.label}\n                </div>))}\n            </div>\n        </div>\n    );\n    return output;\n}\n\nexport default Select;","import React, {useEffect, useState, useContext} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao'\n\nimport Select from 'components/forms/selectformik';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n//order options\nconst paperType = [\n    { value: 'article', label: 'Article' },\n    { value: 'book_chapter', label: 'Book Chapter' },\n    { value: 'conf_publication', label: 'Conf. Publication' }\n  ];\n\n/**\n * this is the form for create or edit the project\n * @param props.project  project object if we want to update a old project\n * @param null if we want to create a new project\n */\nfunction PaperForm(props) {\n\n    let yup = require('yup');\n\n    const paperValidationSchema = yup.object().shape({\n        title: yup.string().required('please enter a title'),\n        authors: yup.string().required('please enter an author'),\n        eid: yup.string().required('please enter the paper eid'),\n        date: yup.string().required('please enter a date'),\n        //document_type: yup.string().required('please enter a paper type'),\n        abstract: yup.string().required('please enter the abstract')\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    return (\n        <>\n        <Formik\n            initialValues={{ title: '', eid:'', authors: '', document_type: '', date: '', abstract: ''}}\n            validationSchema={paperValidationSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                const paperData = {...values, \n                    year: values.date.substr(0, 4), \n                    source_title: values.title, \n                    link: \"custom_paper\", \n                    source: \"slr_custom_papers\", \n                    abstract_structured: \"0\",\n                    filter_oa_include: \"0\",\n                    filter_study_include: \"0\",\n                    notes: \"\"}\n                console.log(paperData);\n                \n                let res = await projectPapersDao.postPaperIntoProject({\n                    paper: paperData, project_id: props.projectId\n                });\n                //error checking\n                if (res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }else{\n                    props.history.push(props.url);\n                }\n                setSubmitting(false);\n            }}\n            validateOnBlur={false}\n        >\n        {({ errors, touched, isSubmitting }) => (\n            <Form className=\"new-paper-form\">\n                <Field\n                    style={{borderBottom: (errors.title && touched.title) ? \"1px solid #d81e1e\" : \"\"}}\n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\" \n                    placeholder=\"Paper Title\"/>\n                <div className=\"new-paper-form-ad\">\n                    <div>\n                        <Field\n                            style={{borderBottom: (errors.authors && touched.authors) ? \"1px solid #d81e1e\" : \"\"}}\n                            name=\"authors\"\n                            type=\"text\" \n                            placeholder=\"paper author\"/>\n                        <Field\n                            style={{borderBottom: (errors.eid && touched.eid) ? \"1px solid #d81e1e\" : \"\"}}\n                            name=\"eid\"\n                            type=\"text\" \n                            placeholder=\"Paper EID\"/>\n                    </div>\n                    <div>\n                        <Field \n                            style={{borderBottom: (errors.date && touched.date) ? \"1px solid #d81e1e\" : \"\"}}\n                            name=\"date\"\n                            type=\"date\"/>\n                        <Field\n                            name=\"document_type\"\n                            render={({ field, form }) => (\n                                    <Select options={paperType} {...field} form={form}/>\n                            )}\n                        />\n                    </div>\n                </div>\n                <Field\n                    style={{borderBottom: (errors.abstract && touched.abstract) ? \"1px solid #d81e1e\" : \"\"}}\n                    name=\"abstract\"\n                    placeholder=\"Paper Abstract\"\n                    component=\"textarea\"/>\n                <button type=\"submit\" disabled={isSubmitting ||\n                    (errors.title && touched.title) ||\n                    (errors.authors && touched.authors) ||\n                    (errors.eid && touched.eid) ||\n                    (errors.date && touched.date) ||\n                    (errors.abstract && touched.abstract)\n                }>Add paper</button>\n            </Form>\n        )}\n        </Formik>\n        </>\n    );\n\n\n}\n\n\nexport default PaperForm;","import React, {useState} from \"react\";\n\nimport {AppContext} from \"components/providers/appProvider\";\nimport EditButton from \"components/svg/editButton\";\n\n/**\n * this is the description component for the project page\n */\n\n\nconst ProjectDescription = function({description, update}){\n\n\n    //this is used as a toggle for checking if the user is trying to edit the name of the project\n    const [editing, setEditing] = useState(false);\n\n    //handles the click on the edit/confirm button\n    function handleEditRequest(e){\n        console.log(\"CLICK\");\n        if(!editing){//if the user was not editing I allow him to edit\n            setTimeout(//I wait for the button event to fire before blurring out the textarea\n                function(){\n                    document.getElementById(\"edit-project-description-input\").focus();\n                },100);\n            \n            setEditing(true);\n            console.log(editing)\n        }else{//if the user was editing I submit its changes\n            update();\n        }\n    }\n\n\n    return (\n        <div className={(!editing) ? \"project-description hidden-form-description\" : \"project-description\"}>\n            <h2>description:</h2>\n            <p style={{fontSize: (editing) ? \"0px\" : \"15px\"}}> {description}</p>\n            <form className=\"edit-project-description\">\n                    <textarea id=\"edit-project-description-input\"  defaultValue={description} style={{width: (editing) ? \"100%\" : \"0%\", padding: (editing) ? \"\" : \"0px\", height:(editing) ? \"\" : \"0px\"}}\n                    onBlur={(e) => {\n                                    console.log(\"blurring\");\n                                    setEditing(false);\n                                }}\n                    />\n                    <button className=\"edit-button\" onMouseDown={handleEditRequest} type=\"button\">\n                        <EditButton confirm={editing}/>\n                    </button>\n            </form>\n        </div>\n    );\n}\n\nexport default ProjectDescription;","import React, {useContext,useState,useEffect} from \"react\";\n\nimport EditButton from \"components/svg/editButton\";\n\n/**\n * this is the head component of page\n * @param \"menu_elements\" contains the list of menu-items\n */\n\n\nconst ProjectName = function({name, update}){\n\n    //this is used as a toggle for checking if the user is trying to edit the name of the project\n    const [editing, setEditing] = useState(false);\n\n    //checks if there's an edit request\n    function handleEditRequest(e){\n        if(!editing){//if the user is not editing the name yet(the check is useful because handleEditRequest and handleConfirm fire at the same time)\n            document.getElementById(\"edit-project-name-input\").focus();\n            setEditing(!editing);\n        }\n    }\n\n    //checks if the user wants to confirm the change\n    function handleConfirm(e){\n        if(editing){//if the user was editing I confirm its request and call the api(the check is useful because handleEditRequest and handleConfirm fire at the same time)\n            update();\n            setEditing(!editing);\n        }\n    }\n\n    return(\n        <div className={(editing) ? \"nav-elements\" : \"nav-elements hidden-form\"}> <h2 style={{fontSize: (editing) ? \"0px\" : \"21px\"}}>{name}</h2> \n            {/*clicking on the div containing the title will allow the user to access the form for editing the project name*/}\n            <form className=\"edit-project-name\"  onClick={handleEditRequest} onSubmit={(e) => {e.preventDefault()}}>\n                <input type=\"text\" id=\"edit-project-name-input\" defaultValue={name} style={{width: (editing) ? \"\" : \"0px\", padding: (editing) ? \"\" : \"0px\"}}\n                    onBlur={(e) => {setEditing(false)}}\n                />\n                <button className=\"edit-button\" onMouseDown={handleConfirm} type=\"button\"><EditButton confirm={editing}/></button>\n                {/*clicking on the button will confirm the new name*/}\n            </form>\n        </div>\n    );\n}\n\nexport default ProjectName;","import React, {useState, useEffect, useContext} from \"react\";\nimport {Route, Link, Switch} from 'react-router-dom';\nimport {Flipper, Flipped} from 'react-flip-toolkit';\n\nimport SearchForm from 'components/forms/searchform';\nimport PapersList from 'components/papers/papersList';\nimport PaperForm from 'components/forms/custompaper';\nimport {projectsDao} from 'dao/projects.dao';\nimport LoadIcon from 'components/svg/loadIcon';\nimport ProjectDescription from 'components/projects/projectDescription';\nimport ProjectName from 'components/projects/projectName';\nimport {join} from 'utils/index';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n/**\n *this component will show a projects page\n */\nconst ProjectPage = (props) => {\n\n    //project object of page\n    const [project, setProject] = useState({data: {name: \"loading...\"}});\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //notFound state for hiding the navbar\n    const [notFound, setNotFound] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    const project_id = props.match.params.id;\n\n    //set the project title\n    useEffect(() => {\n        if(project.data.name === \"loading...\"){\n            appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">{project.data.name}</h2> </div>);//I set the page title\n        }else{\n            appConsumer.setTitle(<ProjectName name={project.data.name} update={updateProject}/>);\n        }\n    \n    }, [project]);\n\n    useEffect(() => {\n\n        setDisplay(false);\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //call the dao\n            let res = await projectsDao.getProject(project_id);\n\n            //error checking\n            //if is other error\n            if (res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res !== null) {\n                //update state\n                setProject(res);\n                //show the page\n                setDisplay(true);\n            }\n        };\n        fetchData();\n        //when the component will unmount\n        return () => {\n            //stop all ongoing request\n            projectsDao.abortRequest();\n        };\n    }, [project_id]); //re-execute when these variables change\n    \n\n    //function for updating the description and name\n    async function updateProject(){\n\n        let new_name = document.getElementById(\"edit-project-name-input\").value;\n        let new_desc = document.getElementById(\"edit-project-description-input\").value;\n\n\n        //if the new name o description are difference from the old name o description\n        if(new_name !== project.data.name || new_desc !== project.data.description){\n\n            //call the dao\n            let res = await projectsDao.putProject(project_id, {name: new_name, description : new_desc});\n\n            //error checking\n            //if is other error\n            if (res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res !== null) {\n                console.log(\"UPDATED SUCCESSFULLY!\");\n                window.location.reload();\n            }\n\n\n        }\n    }\n\n\n    let output;\n\n    //if the page is loading\n    if (display === false) {\n        //print svg image\n        output = <LoadIcon/>;\n    }\n    else {\n        output = (\n            <div className=\"project-wrapper\">\n                <ProjectPageHead match={props.match} notFound={notFound}/>\n\n                {/*route the papers list*/}\n                <Switch>\n                    <Route exact  path={props.match.url} render={function(props){\n                        setNotFound(false);\n                        return (\n                            <>\n                                <ProjectDescription description={project.data.description} update={updateProject}/>\n                                <PapersList project_id={project_id} location={props.location} match={props.match} history={props.history}/>\n                                <Link to={join(props.match.url,\"/addpaper\")}>\n                                    <button className=\"bottom-left-btn add-custompaper-btn\">\n                                        <div className=\"btn-title\">Add Custom Paper</div><div className=\"btn-icon\"> </div>\n                                    </button>\n                                </Link>\n\n                            </>\n                        );\n                    }}/>\n\n                    {/*route the form of search*/}\n                    <Route exact path={props.match.url + \"/search\"} render={function(props){\n                        setNotFound(false);\n                        return (<SearchForm project_id={project_id} {...props} />);\n                    }}/>\n\n                    <Route path = {props.match.url + \"/addpaper\"} render={() =>\n                        <>\n                            <Link className=\"back\" to={props.match.url}>  </Link>\n                            <PaperForm projectId={project.id} url={props.match.url} history={props.history}/>\n                        </>\n                    } />\n                    <Route render={function(props){setNotFound(true); return <div>404</div>;}}/>\n                </Switch>\n\n            </div>\n        );\n    }\n\n    return output;\n};\n\n/**\n * this is the local component to print head of project page\n */\nconst ProjectPageHead = function ({match, notFound}) {\n    const lc = window.location.hash.substr(window.location.hash.length - 9);\n    const slider = (((\"#\" + match.url) === window.location.hash.split(\"?\")[0]) || (lc === \"/addpaper\" || lc === \"addpaper/\"));\n    let output = (\n        <>\n            <div className=\"project-nav-link-wrapper\" style={{display: (notFound || (lc === \"/addpaper\" || lc === \"addpaper/\")) ? \"none\" : \"\"}}>\n                <div className=\"nav-link\">\n                    <Link to={match.url}>papers</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/search\")}>search</Link>\n                </div>\n                <Flipper flipKey={slider}>\n                    <Flipped flipId=\"underline\">\n                        <div className={slider ? \"underline underline-to-left\" : \"underline underline-to-right\"}/>\n                    </Flipped>\n                </Flipper>\n            </div>\n        </>\n    );\n    return output;\n\n};\n\n\nexport default ProjectPage;","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\n\n\n\nimport Main from 'components/main';\nimport Home from 'components/home';\n\nimport NavBar from 'components/navigation/navBar';\nimport SideMenu from 'components/navigation/sideMenu';\n\nimport ProjectsList from 'components/projects/projectsList';\nimport ProjectPage from 'components/projects/projectPage';\n\n\nimport  {AppProvider} from 'components/providers/appProvider';\n\n\n/**\n *this is the start point of application\n */\n\nconst App = function(props) {\n\n\n        return (\n            <Router>\n                <div className=\"app\">\n\n                    {/*mount a root context object*/}\n                    <AppProvider>\n\n                        <NavBar>\n                            {/*component menu*/}\n                            <SideMenu/>\n                        </NavBar>\n                        <Main>\n                            <Switch>\n                                <Route exact path=\"/\" render={() => <Home/> }/>\n                                <Route exact path=\"/projects\" render={(props) => <ProjectsList {...props} />}/>\n                                <Route path=\"/projects/:id\" render={(props) => <ProjectPage {...props} />}/>\n                                <Route render={(props) => <div>404</div>}/>\n                            </Switch>\n\n                        </Main>\n\n                    </AppProvider>\n                </div>\n            </Router>\n        );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport * as serviceWorker from 'serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}