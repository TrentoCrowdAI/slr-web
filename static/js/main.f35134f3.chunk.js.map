{"version":3,"sources":["utils/conn.js","components/main.js","components/svg/editButton.js","components/navigation/navBar.js","components/modules/error.js","components/providers/appProvider.js","components/home.js","components/navigation/userInfo.js","config/index.js","components/svg/menuButton.js","components/modules/cover.js","components/navigation/sideMenu.js","dao/projects.dao.js","components/svg/loadIcon.js","components/svg/closeButton.js","components/forms/projectForm.js","components/modules/pagination.js","utils/index.js","components/svg/optionsButton.js","components/modules/sideOptions.js","components/projects/projectsList.js","dao/paper.dao.js","dao/projectPapers.dao.js","components/svg/selectTick.js","components/forms/checkbox.js","components/svg/radioTick.js","components/forms/radiobox.js","components/svg/searchButton.js","components/svg/searchSimilarButton.js","components/papers/printPapersList.js","components/svg/selectArrow.js","components/forms/select.js","components/svg/orderArrow.js","components/svg/removeButton.js","components/forms/searchform.js","dao/updateFile.dao.js","components/svg/goButton.js","components/forms/searchSimilarPapers.js","components/forms/searchSimilarForm.js","components/papers/papersList.js","components/forms/selectformik.js","components/forms/custompaper.js","components/papers/customPaperPage.js","components/projects/projectDescription.js","components/projects/projectName.js","components/projects/projectPage.js","App.js","serviceWorker.js","index.js"],"names":["abortController","abortRequestType","Main","props","react_default","a","createElement","className","children","EditButton","_ref","confirm","Fragment","version","id","xmlns","xmlnsXlink","x","y","viewBox","points","d","NavBar","appConsumer","useContext","AppContext","title","Error","output","useEffect","setError","error","payload","statusCode","message","name","style","textAlign","type","onClick","window","history","back","React","createContext","AppProvider","user","image","alt","src","surname","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","contextObject","setTitle","Provider","value","modules_error","Home","fontSize","fontWeight","UserInfo","config","home","search","scopus_search","projects","papers","menu_list","content","link","max_total_number_for_results","pdf_parse_server","MenuButton","x1","y1","x2","y2","Cover","cls","handler","e","PrintMenu","map","element","index","key","react_router_dom","to","onMouseUp","handleMenuBlur","SideMenu","shown","setShown","firstTime","setFirstTime","clsidemenu","clsbutton","cover","menuButton","tabIndex","userInfo","sideMenu_PrintMenu","timeOutTime","request","_callee","url","options","signal","requestOptions","timer","response","data","timeOutError","regenerator_default","wrap","_context","prev","next","AbortController","assign","credentials","mode","setTimeout","abort","fetch","sent","clearTimeout","parseResponseData","checkResponseStatus","abrupt","t0","stop","_callee2","queryData","query","jsonHeaders","_args2","arguments","_context2","length","undefined","encodeURIComponent","slice","Headers","append","method","headers","_callee3","_context3","_callee4","bodyData","body","_args4","_context4","JSON","stringify","_callee5","_args5","_context5","_callee6","_args6","_context6","status","statusText","_callee7","contentType","_context7","get","indexOf","text","formData","blob","json","http","post","delete","put","postFile","abortRequest","res","_args","project_id","projectsDao","getProjectsList","getProject","postProject","putProject","deleteProject","LoadIcon","class","CloseButton","ProjectForm","yup","require","projectValidationSchema","object","shape","string","required","description","formik_esm","initialValues","validationSchema","onSubmit","_ref2","asyncToGenerator","mark","values","setSubmitting","push","_x","_x2","apply","this","validateOnBlur","_ref3","errors","touched","isSubmitting","validateField","setErrors","handleChange","visibility","setVisibility","closeButton","borderBottom","placeholder","onChange","component","disabled","Pagination","start","count","totalResults","path","queryString","location","href","split","newQueryString","arryQuery","i","parameterName","setStartAndCountInUrl","firstPage","lastPage","listPage","paged","Math","floor","totalPage","ceil","paginationLength","display","margin","arrayOfObjectsContains","b","some","join","base","charAt","createQueryStringFromObject","keys","getIndexOfObjectArrayByKeyAndValue","array","DeleteButton","SideOptions","target","focused","setFocused","onBlur","onMouseDown","optionsButton","padding","border","PrintList","maps","projectsList","handleDelete","sideOptions","modules_sideOptions","date_last_modified","date_created","ProjectsList","setProjectsList","setTotalResults","_useState5","_useState6","setDisplay","_useState7","_useState8","toggleform","setToggleForm","params","parse","createQueryData","_handleDelete","newProjectsList","console","log","filter","project","alert","even_projs","odd_projs","objectSpread","orderBy","results","concat","fetchData","loadIcon","projectsList_PrintList","match","pagination","projectForm","paperDao","selectById","paper_id","projectPapersDao","getPapersList","getPaper","postPaperIntoProject","putPaper","deletePaper","SelectTick","attributeName","dur","repeatCount","fill","from","CheckBox","val","label","isChecked","tick","setTick","selectTick","checked","RadioTick","cx","cy","r","RadioBox","radioTick","SearchButton","SearchSimilarButton","PrintScoupusSearchList","papersList","handlePaperSelection","selectedEidList","handleSideOptions","_handleSideOptions","forms_checkbox","eid","includes","authors","year","lib_default","abstract","lines","ellipsis","moreText","lessText","PrintPapersList","localPaperList","setLocalPaperList","_x3","_x4","_handleSideOptions2","newPapersList","paper","doi","SelectArrow","attributeType","begin","Select","selected","handleFocus","document","getElementById","beginElement","onFocus","selectArrow","borderLeft","borderRight","borderTop","data-value","OrderArrow","up","destination","setDestination","transform","RemoveButton","_","orderByOptions","searchByOptions","yearOptions","toConsumableArray","range","String","SelectedPapersListBox","selectedPapersList","opacity","pointerEvents","removeButton","height","SearchForm","setPapersList","queryUrl","scopus","searchBy","sort","googleScholar","arXiv","setSelectedPapersList","_useState9","_useState10","keywords","setKeyWords","_useState11","_useState12","source","setSource","_useState13","_useState14","setSearchBy","_useState15","_useState16","setYear","_useState17","_useState18","setUp","handleSelection","parseInt","getAttribute","handelOrder","event","newList","selectAllPapers","allPapersInPage","tmpList","uniqBy","_handleAddPapers","arrayEid","preventDefault","_handleSendSearch","_queryString","handleOnInputChange","newSource","formPart","position","searchButton","searchSimilarButton","radiobox","singleYear","resultPart","forms_select","orderArrow","searchform_SelectedPapersListBox","printPapersList_PrintScoupusSearchList","updateFileDao","updatePdf","GoButton","SearchSimilarPapers","close","input","paperInfo","fetching","setPaperInfo","setPaperFile","topRightButton","inputElement","useRef","_handleSubmission","current","files","goButton","ref","click","SearchSimilarForm","similarPaperData","setSimilarPaperData","similarPaperFile","setSimilarPaperFile","_useState19","_useState20","_useState21","_useState22","similarFormVisibility","setSimilarFormVisibility","_useState23","_useState24","similarPaperFetch","setSimilarPaperFetch","paperData","_res","test","FormData","fetchDataSimilarity","marginTop","searchSimilarPapers","boxShadow","searchSimilarForm_SelectedPapersListBox","PapersList","printPapersList_PrintPapersList","form","setSelected","setFieldValue","paperType","PaperForm","uuid","paperValidationSchema","number","min","max","integer","customPaper","document_type","toString","source_title","abstract_structured","filter_oa_include","filter_study_include","notes","manual","v4","projectId","render","_ref4","field","selectformik","CustomPaperPage","paperDataFetch","setPaperDataFetch","setPaperData","displayForm","setDisplayForm","file","custompaper","ProjectDescription","update","editing","setEditing","formatDate","date","defaultValue","width","focus","editButton","ProjectName","ProjectPageHead","notFound","lc","hash","substr","slider","es","flipKey","flipId","ProjectPage","setProject","setNotFound","updateProject","_updateProject","new_name","new_desc","reload","projectName","projectPage_ProjectPageHead","react_router","exact","projectDescription","papers_papersList","searchform","searchSimilarForm","customPaperPage","App","appProvider_AppProvider","navBar","sideMenu","main","projects_projectsList","projectPage","Boolean","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f35134f3.chunk.js","sourcesContent":["/*this is the file to communicate with backend by fetch request*/\n\n//signal to abort the request\nlet abortController;\n//int to know abort error type\nlet abortRequestType;\n//10seconds for timeout\nlet timeOutTime = 10 * 1000;\n\n\n/**\n * abort all request in progeress by user\n */\nfunction abortRequest() {\n    abortController.abort();\n    abortRequestType = 1;\n}\n\n/**\n * abort all request if timeout\n */\nfunction timeOut() {\n\n    abortController.abort();\n    abortRequestType = 2;\n}\n\n/**\n * create a basic fetch request\n * @param url\n * @param options request config\n * @param {int} timeOutTime\n * @return {object} response data\n\n */\nasync function request(url, options, timeOutTime) {\n    try {\n\n        //create a new abortController for this request\n        abortController = new AbortController();\n        let signal = abortController.signal;\n        //initialize as 0 for every request\n        abortRequestType = 0;\n\n        let requestOptions = Object.assign(\n            {\n                //enable the  sending of cookie\n                credentials: 'include',\n                \"mode\": 'cors',\n                \"signal\": signal\n            },\n            options\n        );\n\n        //set timeout clock\n        let timer = setTimeout(() => timeOut(), timeOutTime);\n\n        let response = await fetch(url, requestOptions);\n\n        //clear timeout clock\n        clearTimeout(timer);\n\n\n        //parse response data\n        let data = await parseResponseData(response);\n        //response error check\n        checkResponseStatus(response,data);\n        return  data;\n\n    }\n    catch (error) {\n\n        //console.dir(error);\n\n        //if abort error is caused by timeout\n        if (abortRequestType === 2) {\n            //create a custom error for timeout\n            let timeOutError = new Error(\"Error: Time out to get response from backend\");\n            timeOutError.name = \"timeout\";\n            return  timeOutError;\n        }\n        //if is a abort error  caused by user\n        else if (abortRequestType === 1) {\n            return null;\n        }\n\n        return error;\n\n\n    }\n}\n\n/**\n * get method\n * @param url\n * @param queryData quey string\n * @return {object} response data\n */\nasync function get(url, queryData = \"\") {\n    let query = \"\";\n    if (queryData !== \"\") {\n        query = \"?\";\n        for (let key in queryData) {\n            query += key + \"=\" + encodeURIComponent(queryData[key]) + \"&\";\n        }\n        //delete the last &\n        query = query.slice(0, query.length - 1);\n    }\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n\n    let options = {\n        \"method\": 'GET',\n        \"headers\": jsonHeaders,\n    };\n\n    return await request(url + query, options, timeOutTime);\n}\n\n/**\n * delete method\n * @param url\n */\nasync function deletes(url) {\n    let options = {\n        \"method\": 'DELETE'\n    };\n\n    return await request(url, options, timeOutTime);\n}\n\n/**\n * post method\n * @param url\n * @param bodyData\n * @return {object } response data\n */\nasync function post(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'POST',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options, timeOutTime);\n}\n\n/**\n * post file method\n * @param url\n * @param bodyData\n * @return {object} response data\n */\nasync function postFile(url, bodyData = \"\") {\n\n    //custom timeout for request\n    let customTimeOutTime= 10 * 1000;\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n   // jsonHeaders.append('Content-Type', 'multipart/form-data');\n    let options = {\n        \"method\": 'POST',\n        \"headers\": jsonHeaders,\n        \"body\": bodyData\n    };\n\n    return await request(url, options, customTimeOutTime);\n}\n\n\n/**\n * put method\n * @param url\n * @param bodyData\n */\nasync function put(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'PUT',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options,timeOutTime);\n}\n\n\n/**\n *  * check resposonse status\n * @param response to check\n * @param data data received\n * @throws {Error} if  status code < 200 or status code >= 300\n */\nfunction checkResponseStatus(response, data) {\n\n    if (response.status < 200 || response.status >= 300) {\n        const error = new Error(response.statusText);\n        error.data = response;\n        if(data.payload){\n            error.payload = data.payload;\n        }\n        throw error;\n    }\n\n}\n\n/**\n * parse the response of  http request\n * @param response response object\n * @return {object} data parsed\n */\nasync function parseResponseData(response) {\n    //get response data type\n    const contentType = response.headers.get('Content-Type');\n    let data = null;\n    //parse the data by its type\n    if (contentType != null) {\n        if (contentType.indexOf('text') > -1) {\n            data = await response.text()\n        }\n        if (contentType.indexOf('form') > -1) {\n            data = await response.formData();\n        }\n        if (contentType.indexOf('video') > -1) {\n            data = await response.blob();\n        }\n        if (contentType.indexOf('json') > -1) {\n            data = await response.json();\n        }\n    }\n    else if (response != null) {\n        data = await response.text();\n    }\n    return data;\n}\n\n\n\n//object to export\nconst http = {\n    get,\n    post,\n    \"delete\" : deletes,\n    put,\n    postFile,\n    abortRequest,\n};\n\nexport default http;","import React from \"react\";\n\n/**\n * compotent main of page\n */\nconst Main = function(props){\n\n        return (\n            <div className=\"main-wrapper\">\n                {props.children}\n            </div>\n        );\n};\n\nexport default Main;","import React from \"react\";\n\n/**\n * component svg edit button\n * based on the 'confirm' flag the icon will change\n */\nconst EditButton = function ({confirm}) {\n    var output = <></>;\n    if(!confirm){//if the user is not editing\n        output = (<svg version=\"1.1\" id=\"edit-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <path className=\"st-pencil\" d=\"M224,632.3l-81.6,225.3L367.7,776l0,0L833,310.7c39.4-39.4,39.9-103.3,0.7-142.9c-0.5-0.5-1-1-1.4-1.4\n            c-39.6-39.2-103.6-38.7-142.9,0.7L224,632.3L224,632.3z\"/>\n            <path className=\"st-pencil-border\" d=\"M367.7,776c-24-71.7-71.9-119.6-143.7-143.7\"/>\n            <path className=\"st-pencil\" d=\"M805.7,338c-24-71.7-71.9-119.6-143.7-143.7\"/>\n        </svg>);\n    }else{//if the user is editing\n        output = (\n            <svg version=\"1.1\" id=\"confirm-edit-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t            viewBox=\"0 0 1000 1000\">\n                <polyline className=\"st-confirm\" points=\"918,192.3 389.3,807.7 82,450 \"/>\n            </svg>\n        );\n    }\n    return output;\n};\n\nexport default EditButton;\n","import React, {useContext} from \"react\";\n\nimport {AppContext} from \"components/providers/appProvider\";\nimport EditButton from \"components/svg/editButton\";\n\n/**\n * this is the head component of page\n * @param props\n * @param \"menu_elements\" contains the list of menu-items\n */\n\n\nconst NavBar = function(props){\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    \n    return (\n        <div className=\"navigation-wrapper\">\n\n            {/*background of the menu-bar*/}\n            <nav className=\"main-nav\">\n                {appConsumer.title}\n            </nav>\n            {props.children}\n\n        </div>\n    );\n}\n\nexport default NavBar;","import React, {useContext, useEffect} from 'react';\nimport {AppContext} from \"components/providers/appProvider\";\n\n\nconst Error = function () {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {//not used yet\n\n        return () => {\n            //delete the error, so app can resume its work\n            appConsumer.setError(null);\n        }\n\n    });\n\n    //function to delete the error object in context\n    function handleOnRefresh(){\n        appConsumer.setError(null);\n    }\n    //function to return to previous page\n    function handleOnGoBack(){\n        window.history.back();\n        appConsumer.setError(null);\n    }\n\n\n    //console.dir(appConsumer.error);\n    let output;\n    //is a error from backend\n    if (appConsumer.error.payload) {\n        output = (\n            <>\n                <p>Error code:</p>\n                <p>{appConsumer.error.payload.statusCode}</p>\n                <p>Error name:</p>\n                <p>{appConsumer.error.payload.error}</p>\n                <p>Error message</p>\n                <p>{appConsumer.error.payload.message}</p>\n            </>\n        );\n    }\n\n    //is a error of other type\n    else {\n        output = (\n            <>\n                <p>Error name:</p>\n                <p>{appConsumer.error.name}</p>\n                <p>Error message</p>\n                <p>{appConsumer.error.message}</p>\n            </>\n        );\n    }\n\n    output = (\n        <div className=\"error-wrapper\" style={{textAlign: \"center\"}}>\n            {output}\n            <br/>\n            <button type=\"button\" onClick={handleOnGoBack}><u>return to previous page</u></button>\n            <br/>\n            <p>or</p>\n            <br/>\n            <button type=\"button\" onClick={handleOnRefresh}><u>refresh</u></button>\n\n        </div>\n    );\n\n    return output;\n\n}\n\n\nexport default Error;","import React, {useState, useRef} from 'react';\n\nimport NavBar from 'components/navigation/navBar';\nimport Main from 'components/main';\nimport Error from 'components/modules/error';\n\n//create a context object\nconst AppContext = React.createContext();\n\n/**\n * this is the component that include a context object that it can be access by all its children component\n */\nconst AppProvider = function (props) {\n\n    const user = {\n        image: <img className=\"face\" alt=\"profile\" src=\"https://placekitten.com/100/100\"/>,\n        name: \"Mario\",\n        surname: \"Rossi\"\n    };\n\n    //error\n    const [error, setError] = useState(null);\n\n    //title\n    const [title, setTitle] = useState(<div className=\"nav-elements\"> <h2 className=\"static-title\">HOME</h2> </div>);\n\n    //preparate an object to be insertd into context\n    const contextObject ={\n        user,\n        error,\n        setError,\n        title,\n        setTitle\n    };\n\n\n    //if there isn't error\n    if (!error) {\n\n        return (\n            //*set the values of contenxt*\n            <AppContext.Provider value={contextObject}>\n\n                {/*mount all components children*/}\n                {props.children}\n\n            </AppContext.Provider>\n        );\n    }\n    //if there is a error\n    else {\n        return (\n            //*set the values of contenxt*\n            <AppContext.Provider value={contextObject}>\n\n                    <Error/>\n\n            </AppContext.Provider>\n        )\n    }\n\n\n}\n\nexport {AppContext, AppProvider};","import React, {useContext, useEffect} from \"react\";\n\nimport {AppContext} from \"components/providers/appProvider\";\n\n/**\n * this is home component\n */\nconst Home = function (props) {\n\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set title when component mounts\n    useEffect(() => {\n        appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">HOME</h2> </div>);\n    },[])//run on component mount\n\n\n    return (\n        <>\n            <h1>\n                Systematic Literature Review manager\n            </h1>\n            <h2 style={{fontSize: 22, fontWeight: \"normal\"}}>the system right now allows you to</h2>\n            <ul style={{fontSize: 18, fontWeight: \"lighter\"}}>\n                <li>browse a list of prjects</li>\n                <li>add a new project</li>\n                <li>browse the list of papers on a project</li>\n                <li>search(from scopus) and add papers to a project</li>\n            </ul>\n            <h2 style={{fontSize: 22, fontWeight: \"normal\"}}>notes</h2>\n            <ul style={{fontSize: 18, fontWeight: \"lighter\"}}>\n                <li><i>the scopus search works partially(can't retrieve the description)</i>\n                    <ul><li style={{fontSize: 16}}><i>from Elsevier developer portal : \"The data available depends on your institutional subscriptions, and only when you're making calls from within your institutional network are you considered a subscriber\"</i></li></ul>\n                </li>\n                <li><i>the options don't affect the search, for now</i></li>\n            </ul>\n        </>\n    );\n\n\n\n\n};\n\nexport default Home;","import React, {useContext} from \"react\";\nimport { AppContext } from 'components/providers/appProvider'\n\n/*\n* this is the component that visualize user information box\n* */\nconst UserInfo = function(props){\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    return(\n            <div className=\"user\" >\n                {appConsumer.user.image}\n                <div className=\"user-info\">\n                    {appConsumer.user.name}\n                    <br/>\n                    {appConsumer.user.surname}\n                </div>\n            </div>\n    );\n};\n\nexport  default  UserInfo;","/**\n * this is the config file\n */\n\n\nconst config = {\n    \"home\": \"https://crowdai-slr-api-dev.herokuapp.com/\",\n    //\"home\": \"http://localhost:3000/\",\n    \"search\": \"search\",\n    \"scopus_search\": \"search-scopus\",\n    \"projects\": \"projects\",\n    \"papers\": \"papers\",\n    \"menu_list\": [\n        {id: 4, content: \"home\", link: \"/\"},\n        {id: 5, content: \"my projects\", link: \"/projects\"},\n        {id: 6, content: \"account\", link: \"#\"}\n    ],\n    \"max_total_number_for_results\": 5000,\n    \"pdf_parse_server\": \"pdf\"\n\n\n\n\n};\n\nexport default config;\n","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst MenuButton = function (props) {\n\n    return (\n\n        <svg id=\"menu-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n             x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M214,482.1\"/>\n            <line className=\"st-t\" x1=\"172\" y1=\"482.1\" x2=\"172\" y2=\"482.1\"/>\n            <line className=\"st-m\" x1=\"500\" y1=\"482.1\" x2=\"500\" y2=\"482.1\"/>\n            <line className=\"st-b\" x1=\"828\" y1=\"482.1\" x2=\"828\" y2=\"482.1\"/>\n        </svg>\n    );\n};\n\nexport default MenuButton;\n","import React, {useContext} from \"react\";\n\n\n\n/**\n * component for covering the page\n */\nconst Cover = function ({cls, handler}) {\n    //get data from global context\n    return (\n        <div className={\"cover \" + cls} onClick={(e) => {handler(false)}}></div>\n    );\n};\n\nexport default Cover;","import React, {useState, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\n\nimport UserInfo from 'components/navigation/userInfo';\nimport config from 'config/index';\nimport MenuButton from 'components/svg/menuButton';\nimport Cover from 'components/modules/cover';\n\n/**\n *this is the side menu component\n */\nconst SideMenu = function (props) {\n\n    //bool to control the visualization of menu\n    const [shown, setShown] = useState(false);\n    const [firstTime, setFirstTime] = useState(true);\n\n\n    //function to open/close the menu\n    function handleToggleMenuButton() {\n        setShown(!shown);\n        setFirstTime(false);\n    }\n\n    //function to close the menu\n    function handleMenuBlur(e) {\n        setShown(false);\n    }\n\n    //change the class of element by menu state\n    var clsidemenu = \"modal side-menu up\";\n    var clsbutton = \"button-wrapper close\";\n\n    if (firstTime) {\n        clsidemenu = \"modal side-menu\"\n    }\n    if (shown) {\n        clsbutton = \"button-wrapper open\"\n        clsidemenu = \"modal side-menu down\"\n    }\n\n    return (\n        <div className=\"menu\">\n            <Cover cls={(shown) ? \"full-screen-transparent\" : \"\"} handler={handleMenuBlur}/>\n            <div className={clsbutton} onClick={handleToggleMenuButton}>\n                <MenuButton/>\n            </div>\n\n            <div className={clsidemenu} tabIndex={-1}>\n\n                {/*user info box*/}\n                <UserInfo/>\n                <PrintMenu handleMenuBlur={handleMenuBlur}/>\n\n            </div>\n        </div>\n    );\n\n};\n\n/**\n *internal component that is used only for print menu items\n */\nconst PrintMenu = function (props) {\n\n    let output = (\n        config.menu_list.map((element, index) => (\n                <div key={index}>\n                    <Link to={element.link} className=\"menu-option\"\n                          onMouseUp={props.handleMenuBlur}>{element.content}</Link>\n                </div>\n            )\n        )\n    );\n    return output;\n\n\n}\n\n\nexport default SideMenu;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to get a projects list\n * @param queryData\n * @return {array[objects]}\n */\nasync function getProjectsList(queryData = \"\") {\n    let url = config.home + config.projects\n    let res = await http.get(url, queryData);\n    return res;\n\n\n}\n\n/**\n * dao to get a project\n * @param project_id\n * @return {Object} project requested\n */\nasync function getProject(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    let res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to post a new project\n * @param bodyData\n * @return {Object} project created\n */\nasync function postProject(bodyData) {\n    let url = config.home + config.projects;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to put a old project\n * @param project_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putProject(project_id, bodyData) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    return await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a project\n * @param project_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function deleteProject(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    let res = await http.delete(url);\n    return res;\n}\n\n\nconst projectsDao = {\n    getProjectsList,\n    getProject,\n    postProject,\n    putProject,\n    deleteProject,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {projectsDao};","import React from \"react\";\n\n/**\n * component svg loading-icon\n */\nconst LoadIcon = function (props) {\n\n    return (\n\n        <svg id=\"loading-icon\" className={props.class} xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n             y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <g>\n                <path id=\"loading-circle1\" d=\"\n                  M 500, 500\n                  m -160, 0\n                  a 160,160 0 1,0 320,0\n                  a 160,160 0 1,0 -320,0\n          \"/>\n                <path id=\"loading-circle2\" d=\"\n                  M 500, 500\n                  m -305, 0\n                  a 305,305 0 1,0 610,0\n                  a 305,305 0 1,0 -610,0\n          \"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default LoadIcon;\n","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst CloseButton = function (props) {\n\n    return (\n        <svg id=\"close-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <line className=\"ln\" x1=\"134\" y1=\"866\" x2=\"866\" y2=\"134\"/>\n        <line className=\"ln\" x1=\"134\" y1=\"134\" x2=\"866\" y2=\"866\"/>\n        </svg>\n    );\n};\n\nexport default CloseButton;\n","import React, {useEffect, useState, useContext} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectsDao} from 'dao/projects.dao'\n\nimport CloseButton from 'components/svg/closeButton';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n/**\n * this is the form for create or edit the project\n * @param props.project  project object if we want to update a old project\n * @param null if we want to create a new project\n */\nfunction ProjectForm(props) {\n\n    let yup = require('yup');\n\n    const [touc, setTouc] = useState(false);\n\n    const projectValidationSchema = yup.object().shape({\n        name: yup.string().required('please enter a title'),\n        description: yup.string().required('please enter a description')\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    return (\n        <>\n        <Formik\n            initialValues={{ name: '', description:''}}\n            validationSchema={projectValidationSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                let bodyData = {name: values.name, description: values.description};\n                //call dao\n                let res = await projectsDao.postProject(bodyData);\n\n                //error checking\n                if(res.message){\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }else{\n                    props.history.push(\"/projects/\" + res.id);\n                }\n                setSubmitting(false);\n            }}\n            validateOnBlur={false}\n        >\n        {function ({ errors, touched, isSubmitting, setErrors, validateField, handleChange }) {\n            let output = \"\";\n            output = (<Form className=\"modal add-project\" style={{visibility: (!props.visibility) ? 'hidden' : '' }}>\n                <button type=\"button\" className=\"close-btn\" onClick={(e) => {\n                    props.setVisibility(!props.visibility);\n                }}><CloseButton/></button>\n                <br/>\n                <Field\n                    style={{borderBottom : (errors.name && touched.name) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"name\"\n                    type=\"text\" \n                    placeholder=\"Project Name\"\n                    onChange={(e) => {handleChange(e); validateField('name')}}/>\n                <br/>\n                <br/>\n                <Field\n                    style={{borderBottom : (errors.description && touched.description) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"description\"\n                    component=\"textarea\"\n                    placeholder=\"Project Description\"/>\n                <br/>\n                <button type=\"submit\" disabled={isSubmitting || \n                    ((errors.name && touched.name) ||\n                    (errors.description && touched.description))}>Add Project</button>\n            </Form>\n            );\n            return output;\n        }}\n        </Formik>\n\n       \n        </>\n    );\n\n\n}\n\n\nexport default ProjectForm;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport config from 'config/index';\n\n/**\n * this is the component for pagination\n * @param start offset of results\n * @param count number of element for page\n * @param totalResults the total number of results\n * @param path the path of current page\n * @return {*}\n * @constructor\n */\n\nconst Pagination = function({start, count, totalResults, path}) {\n\n    //set limit max of start\n    if(totalResults >config.max_total_number_for_results){\n        totalResults= config.max_total_number_for_results;\n    }\n    //prepare the correct link path for pagination\n    path = setStartAndCountInUrl(path);\n\n    let prev = \"\", next = \"\", firstPage = \"\", lastPage = \"\";\n    let listPage = [] ;\n    let separator = \"...\";\n    //number*2 of element in pagination\n    let paginationLength = 4;\n    //the page count start by 1.\n    let paged = Math.floor(start / count) + 1;\n    //get total page number\n    let totalPage = Math.ceil(totalResults / count);\n\n\n    //we need the pagination only the totalPage is major than 1\n    if (totalPage > 1) {\n\n        //if it isn't the first page, print the prev-page link\n        if (paged > 1) {\n            prev = (\n                <li>\n                    <Link className=\"prev-page\"\n                          to={path + \"start=\" + (((paged - 1) * count) > 0 ? ((paged - 2) * count) : 0) + \"&count=\" + count}>\n                        {\"<\"}\n                    </Link>\n                </li>\n            );\n        }\n        //if it isn't the last page, print the next-page link\n        if (paged < totalPage) {\n            next = (\n                <li>\n                    <Link className=\"next-page\" to={path + \"start=\" + (paged * count) + \"&count=\" + count}>\n                        {\">\"}\n                    </Link>\n                </li>\n            );\n        }\n\n        //if the first page  isn't include by regular listPage, print the first-page link\n        if (paged > paginationLength + 2) {\n            firstPage = (\n                <>\n                    <li>\n                        <Link className=\"first-page\" to={path + \"start=0&count=\" + count}>\n                            {\"1\"}\n                        </Link>\n                    </li>\n                    <li>\n                        <span>{separator}</span>\n                    </li>\n                </>\n            );\n        }\n\n        //if the last page  isn't include by regular listPage, print the last-page link\n        if (paged < totalPage - (paginationLength + 1)) {\n            lastPage = (\n                <>\n                    <li>\n                        <span>{separator}</span>\n                    </li>\n                    <li>\n                        <Link style={{display: \"inline-block\"}} className=\"last-page\"\n                              to={path + \"start=\" + ((totalPage - 1) * count) + \"&count=\" + count}>\n                            {totalPage}\n                        </Link>\n                    </li>\n                </>\n            );\n        }\n\n        //print the range of page link, the center is current paged\n        for (let i = paged - paginationLength; i <= paged + paginationLength; i++) {\n\n            //print only the i has a valid value\n            if (i > 0 && i <= totalPage) {\n\n                //if i isn't current page, print link\n                if (i !== paged) {\n\n                    listPage.push((\n                            <Link className=\"normal-page\" to={path + \"start=\" + ((i-1) * count) + \"&count=\" + count}>\n                                {i}\n                            </Link>\n                    ));\n                }\n                //if i is current page, print only text\n                else {\n                    listPage.push((\n                            <span className=\"current-page\">{paged}</span>\n                    ));\n                }\n\n            }\n        }\n\n\n    }\n\n    let output = (\n        <ul className=\"pagination\">\n            {prev}\n            {firstPage}\n            {listPage.map((element,index)=><li style={{display: \"inline-block\", margin: 10}} key={index}>{element}</li>)}\n            {lastPage}\n            {next}\n        </ul>\n    );\n    return output;\n};\n\n\n/**\n * internal function to prepare the path link for pagination\n * @param path\n * @return {*}\n */\n\nfunction setStartAndCountInUrl(path){\n\n    let url = window.location.href;\n    //get the queryString from url\n    let queryString = url.split(\"?\")[1];\n    //if it exists\n    if(queryString) {\n        //remove the part after # if it exists\n        queryString = queryString.split(\"#\")[0];\n\n        let newQueryString = \"\";\n        //split queryString in array of string\n        let arryQuery = queryString.split(\"&\");\n        for (let i = 0; i < arryQuery.length; i++) {\n            //check each queryElement\n            let parameterName = arryQuery[i].split(\"=\")[0];\n            //if it isn't start and count\n            if (parameterName !== \"start\" && parameterName !== \"count\") {\n                //add to the new queryString\n                newQueryString += arryQuery[i]+\"&\";\n            }\n        }\n        //create a new path whiteout start and count\n        path = path+\"?\"+newQueryString;\n    }\n    //if path doesn't contain any queryString\n    else {\n        path = path+\"?\";\n    }\n\n\n    return path;\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default Pagination;","//need to parse query string of url\nimport queryString from 'query-string';\n\n//here are the common support function\n\n/**\n * compares two arrays of objects\n */\nfunction arrayOfObjectsEquals(a,b){\n\n    if (a == null || b == null) return false;\n    if (a.length != b.length) return false;\n\n    a.sort(); b.sort();\n\n\n    for (var i = 0; i < a.length; ++i) {\n        if (JSON.stringify(a[i]) !== JSON.stringify(b[i]) ) return false;\n    }\n    \n    return true;\n}\n\n/**\n * checks if B is contained in A, using a key to check the inclusion\n * @param {array} a \n * @param {array} b \n * @param {string} key (object field)\n */\nfunction arrayOfObjectsContains(a,b, key){\n\n    if(a == null || b == null) return false;\n    if(a.length == 0 || b.length ==  0) return false;\n\n    //iterate over all elements of B and check if A contains it \n    //by checking wether and element in A has the same key as the selected B element(b[i])\n    for (var i = 0; i < b.length; ++i) {\n        //if doesn't contain the given element then it meand that the vector A doesn't include the vector B\n        if (!a.some(e => e[key] === b[i][key])) return false; \n    }\n    \n    return true;\n}\n\n/**\n * converts the checkboxes object of the search form into parameters for the url\n */\nfunction searchCheckboxesToParams(checkboxes){\n    var params = \"\";\n    Object.keys(checkboxes).forEach(key => {//I iterate over each field of the object\n        if(key !== \"years\"){//if it's not an year\n            if(checkboxes[key]){//if it's a true flag\n                console.log(key)\n                params += \"&\" + key + \"=\" + checkboxes[key];\n            }\n        }else{//if it's a year\n            if(checkboxes.years.length !== 0){//if there are some years selected\n                params += \"&\" + queryString.stringify({\"years\" : checkboxes.years} , {arrayFormat: 'comma'});\n            }\n        }\n      });\n      return params;\n}\n\n/**\n * this is  function to manipolate 2 url string\n * if first string ends with \"/\", removes \"/\".\n * then concate wite second string and return new string\n */\nfunction join(base, path){\n    let newPath;\n    //if the last element is \"/\"\n    if(base.charAt(base.length-1) === '/'){\n        newPath = base.slice(0,-1) + path;\n    }\n    else{\n        newPath =base + path;\n    }\n\n    return newPath;\n\n  }\n\n/**\n *\n *\n * function to create string of query by queryObject\n * @param queryData query object\n * @return {string} query string\n */\nfunction createQueryStringFromObject(queryData){\n\n    let queryString =\"?\";\n    //create a array of keys\n    let keys = Object.keys(queryData);\n    //concatenate the object.property\n    for(let i =0; i< keys.length; i++){\n        //I don't need to sort for the recently added sorting\n        if(queryData[\"orderBy\"] !== \"date_created\" || keys[i] !== \"sort\"){\n            queryString += keys[i]+\"=\"+encodeURIComponent(queryData[keys[i]]);\n            //if it isn't the last element, add symbol \"&\"\n            if(i !== (keys.length-1)){\n                queryString += \"&\";\n            }\n        }\n    }\n    return queryString;\n\n}\n\n\n/**\n * get element index of a object array by [key, value]\n * @param array to find\n * @param key to find\n * @param value to find\n * @return {number} index of element, -1 if didn't find\n */\nfunction getIndexOfObjectArrayByKeyAndValue(array ,key, value){\n    let index=-1;\n    for(let i=0; i<array.length; i++){\n        if(array[i][key] === value){\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n\n\n\nexport  {\n    arrayOfObjectsEquals,\n    arrayOfObjectsContains,\n    searchCheckboxesToParams,\n    join,\n    createQueryStringFromObject,\n    getIndexOfObjectArrayByKeyAndValue,\n\n};","import React from \"react\";\n\n/**\n * component svg options menu button\n */\nconst DeleteButton = function (props) {\n\n    return (\n\n        <svg version=\"1.1\" id=\"options-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t        viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M214,482.1\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"250\" x2=\"500\" y2=\"250\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"500\" x2=\"500\" y2=\"500\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"750\" x2=\"500\" y2=\"750\"/>\n        </svg>\n\n    );\n};\n\nexport default DeleteButton;","import React,{useState} from \"react\";\n\nimport OptionsButton from 'components/svg/optionsButton';\n\n/**\n * component side options\n * it needs a class for the styling,\n * an array of options,\n * the function that will handle the click on the option\n * and, if necessary, a target for the handler function\n */\nconst SideOptions = function ({cls, options, handler, target}) {\n\n    //this is used to display or hide the options of the menu\n    const [focused, setFocused] = useState(false)\n\n\n    return (\n        <div className={cls}>\n            <button type=\"button\" \n                    onBlur={(e) => \n                        //if the element is blurred then I hide it\n                        {if(focused){setFocused(false)}}} \n                    onMouseDown={(e) => //onMouseDown fires before onBlur\n                        //immediately after the button is clicked I toggle the menu\n                        {setFocused(!focused)}}>\n                <OptionsButton/>\n            </button>\n            <div style={{fontSize: (focused) ? \"12px\" : \"0px\", padding: (focused) ? \"2px\" : \"0px\", border: (focused) ? \"solid 1px #e8e8e8\" : \"solid 0px #e8e8e8\"}} className=\"options-list\">\n                \n                {options.map((element, index) => \n                    <div key={index} onMouseDown={(e) => handler(target, element)} className=\"option\">{element}</div>\n                )}\n                \n            </div>\n        </div>\n    );\n}\n\nexport default SideOptions;","import React, {useState, useEffect, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\nimport queryString from 'query-string';\n\n\nimport {projectsDao} from 'dao/projects.dao';\nimport LoadIcon from 'components/svg/loadIcon';\nimport ProjectForm from 'components/forms/projectForm';\nimport Pagination from 'components/modules/pagination';\nimport {join} from 'utils/index';\nimport Cover from 'components/modules/cover';\nimport SideOptions from 'components/modules/sideOptions';\n\nimport {AppContext} from \"components/providers/appProvider\";\n\n/**\n *this component will show a projects list page\n */\n\nconst ProjectsList = function (props) {\n\n\n    //fetch data\n    const [projectsList, setProjectsList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //bool to control the visualization of input form\n    const [toggleform, setToggleForm] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(props.location.search);\n\n\n    //set title when component mounts\n    useEffect(() => {\n        appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">PROJECTS</h2> </div>);\n    },[]); //run on component mount\n\n    useEffect(() => {\n\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setDisplay(false);\n\n            //call the dao\n            const res = await projectsDao.getProjectsList({orderBy: \"date_last_modified\", ...queryData});\n\n            //error checking\n            //if is 404 error\n            if (res && res.message === \"Not Found\") {\n                setProjectsList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if is other error\n            else if (res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res !== null) {\n                //update state\n\n                //I put even first and then odd ones so I can display 2 columns with left-right flow \n                var even_projs = [];\n                even_projs = res.results.filter(function(element, index){ if( index % 2 ) return element;});\n                var odd_projs = [];\n                odd_projs = res.results.filter(function(element, index){ if( !(index % 2) ) return element;});\n\n                setProjectsList(odd_projs.concat(even_projs));\n                setTotalResults(res.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n        };\n\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //stop all ongoing request\n            projectsDao.abortRequest();\n        };\n    }, [queryData.start, queryData.count]); //re-execute when these variables change\n\n\n    //handle to delete project\n    async function handleDelete(id){\n\n        console.log(\"deleting \" + id);\n        //call the dao\n        let res = await projectsDao.deleteProject(id);\n        //error checking\n        //if is other error\n        if (res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);  \n        }\n        //if res isn't null\n        else if (res !== null) {\n            //create a new array without the project deleted\n            let newProjectsList = projectsList.filter((project)=>project.id !== id);\n            //update project list state\n            setProjectsList(newProjectsList);\n\n            alert(\"DELETED SUCCESSFULLY!\");\n        }\n    }\n\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print svg image\n        output = <LoadIcon/>;\n    }\n\n    else {\n\n        output = (\n            <div>\n                <Cover cls={toggleform ? \"full-screen\" : \"\"} handler={setToggleForm}/>\n                {/*print list of projects*/}\n                <PrintList projectsList={projectsList} path={props.match.url} handleDelete={handleDelete}/>\n                {/*set listId and continues value*/}\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={props.match.url}/>\n\n                {/*print the input form to create/update the projects*/}\n                <ProjectForm visibility={toggleform} setVisibility={setToggleForm} history={props.history}/>\n                {/*button to show input form*/}\n                <button className=\"bottom-left-btn add-project-btn\" type=\"button\" value=\"toggle-insert-form\" \n                onClick={(e) => {\n                    setToggleForm(!toggleform);\n                }}>\n                    <div className=\"btn-title\">Add Project</div><div className=\"btn-icon\"> </div>\n                </button>\n            </div>\n        );\n\n    }\n\n    return output;\n\n\n};\n\n\n/**\n *  internal component only to print the list\n * @param projectsList projects list data\n * @param path current page url\n * @param handleDelete function to delete the project\n * */\nconst PrintList = function ({projectsList, path, handleDelete}) {\n\n    let sideOptions= [\"delete\"];\n\n    let maps;\n    //if list is empty, print a notice message\n    if (projectsList.length === 0) {\n        maps = (\n            <div>there aren't projects</div>\n        );\n    }\n    //if list isn't empty, print list of projects\n    else {\n        maps = (projectsList.map((element, index) =>\n                <div key={element.id} className=\"light-modal project-card\">\n                    <SideOptions options={sideOptions} handler={handleDelete} target={element.id} cls=\"card-options project-card-options\"/>\n                    <Link to={join(path, \"/\" + element.id)}>\n                        <h3>{element.data.name}</h3>\n                        <p className=\"description\">{element.data.description}</p>\n                        <div className=\"project-dates\">\n                            <p>{/*created on <i>{element.date_created.slice(0, 10)}</i>*/}</p>\n                            <p>last modified on <i>{(element.date_last_modified === element.date_created) ? \"never\" : element.date_last_modified.slice(0, 10)}</i></p> \n                        </div>\n                    </Link>\n                </div>\n        ));\n    }\n\n    let output =  (\n        <div className=\"project-cards-holder\">\n            {maps}\n        </div>\n    );\n\n    return output;\n\n};\n\n/**\n * internal function to prepare a object of queryData\n * @param query\n * @return object of queryData for the fetch\n */\nfunction createQueryData(query){\n\n    //set query params from queryString of url\n    let params = queryString.parse( query);\n    let count = params.count || 10;\n    let start = params.start || 0;\n\n    //if \"before\" is defined by query then insert it in object, else insert \"after\" in object\n    let queryData = {start, count};\n    return queryData;\n\n}\n\n\n\n\n\nexport default ProjectsList;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to search local papers\n * @param queryData\n * @return {array[objects]}\n */\nasync function search(queryData){\n    let url = config.home+config.search;\n\n        const res = await http.get(url, queryData);\n        return res;\n\n}\n\n/**\n * get a specific paper\n */\nasync function selectById(id){\n    let url = config.home + config.papers + \"/\" + id;\n\n    const res = await http.get(url);\n    return res;\n}\n\n\n\nconst paperDao = {\n    search,\n    selectById,\n    \"abortRequest\" : http.abortRequest\n}\n\n\n\nexport {paperDao};","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to get a list of paper associated with a project\n * @param queryData\n * @return {array[objects]}\n */\nasync function getPapersList(queryData) {\n    let url = config.home + config.papers\n    const res = await http.get(url, queryData);\n    return res;\n\n}\n\n/**\n * dao to get a paper\n * @param paper_id\n * @return {Object} paper requested\n */\nasync function getPaper(paper_id) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.get(url);\n}\n\n/**\n * dao to post a new paper\n * @param bodyData\n * @return {Object} project created\n */\nasync function postPaperIntoProject(bodyData) {\n    let url = config.home + config.papers;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to put a old paper\n * @param paper_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putPaper(paper_id, bodyData) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a paper\n * @param paper_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function deletePaper(paper_id) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.delete(url);\n}\n\n\nconst projectPapersDao = {\n    getPapersList,\n    getPaper,\n    postPaperIntoProject,\n    putPaper,\n    deletePaper,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {projectPapersDao};","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst SelectTick = function (props) {\n\n    return (\n        <svg id=\"select-tick\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st-tick\" points=\"918,192.3 389.3,807.7 82,450 \">\n                <animate attributeName=\"points\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\"\n                    from=\"500,600 400,700 200,750\"\n                    to=\"918,192.3 389.3,807.7 82,450 \"\n                />\n            </polyline>\n        </svg>\n    );\n};\n\nexport default SelectTick;\n","import React, {useState, useEffect} from \"react\";\n\nimport SelectTick from 'components/svg/selectTick';\n\nconst CheckBox = function ({ val, name, label, isChecked, handler }) {\n\n    let output = \"\";\n    const [tick, setTick] = useState(<></>);\n    useEffect(() => {\n        if(isChecked){\n            setTick(<SelectTick/>);\n        }else{\n            setTick(<></>)\n        }\n    }, [isChecked])\n\n    \n    output = (\n        <label className=\"checkbox-container\">\n            <input type=\"checkbox\" value={val} name={name} checked={isChecked} onChange={(e) => {console.log(\"clickekdkdkdkd\"); handler(e)}} />\n            <span className=\"checkmark\">{tick}</span>\n            <span className=\"name\">{label}</span>\n        </label>\n    );\n    return output;\n}\n\nexport default CheckBox;","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst RadioTick = function (props) {\n\n    return (\n        <svg id=\"radio-tick\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t        viewBox=\"0 0 1000 1000\">\n            <circle className=\"st-circle\" cx=\"500\" cy=\"500\" r=\"375\">\n                <animate attributeName=\"r\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\"\n                                from=\"0\"\n                                to=\"375\"\n                />\n            </circle>\n        </svg>\n    );\n};\n\nexport default RadioTick;\n","import React, {useState, useEffect} from \"react\";\n\nimport RadioTick from 'components/svg/radioTick';\n\nconst RadioBox = function ({ label, name, val, isChecked , handler}) {\n\n    let output = \"\";\n    const [tick, setTick] = useState(<></>);\n    useEffect(() => {\n        if(isChecked){\n            setTick(<RadioTick/>);\n        }else{\n            setTick(<></>)\n        }\n    }, [isChecked])\n\n    output= (\n        <label className=\"radiobox-container\">\n        <input type=\"radio\" value={val} name={name} checked={isChecked} onChange={handler}/>\n        <span className=\"radiomark\">{tick}</span>\n        <span>{label}</span>\n        </label>\n    );\n    return output;\n}\n\nexport default RadioBox;","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst SearchButton = function (props) {\n\n    return (\n        <svg id=\"search-icon\" xmlns=\"http://www.w3.org/2000/svg\"\n             xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M626.9,644.3c-73.5,0-142.6-28.6-194.6-80.6s-80.6-121.1-80.6-194.6s28.6-142.6,80.6-194.6\n                c52-52,121.1-80.6,194.6-80.6c73.5,0,142.6,28.6,194.6,80.6c52,52,80.6,121.1,80.6,194.6s-28.6,142.6-80.6,194.6\n                S700.4,644.3,626.9,644.3z\"/>\n            <line className=\"st1\" x1=\"145.2\" y1=\"850.8\" x2=\"431.7\" y2=\"564.3\"/>\n        </svg>\n    );\n};\n\nexport default SearchButton;\n","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst SearchSimilarButton = function (props) {\n\n    return (\n        <svg id=\"similar-paper-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" \n            xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st0-sps\" points=\"795.8,214 734.8,214 736.8,146 \t\t\"/>\n            <polyline className=\"st0-sps\" points=\"842.8,214 842.8,875.8 262.8,875.8 262.8,106 734.8,106 \t\t\"/>\n            <line className=\"st0-sps\" x1=\"842.8\" y1=\"214\" x2=\"734.8\" y2=\"106\"/>\n            <line className=\"st1-sps\" x1=\"350.8\" y1=\"198.9\" x2=\"644.8\" y2=\"198.9\"/>\n            <line className=\"st2-sps\" x1=\"346.8\" y1=\"385.4\" x2=\"752.8\" y2=\"385.4\"/>\n            <line className=\"st2-sps\" x1=\"544\" y1=\"485.9\" x2=\"752.8\" y2=\"485.9\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"485.9\" x2=\"544\" y2=\"485.9\"/>\n            <line className=\"st2-sps\" x1=\"575.9\" y1=\"586.4\" x2=\"752.8\" y2=\"586.4\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"586.4\" x2=\"575.9\" y2=\"586.4\"/>\n            <line className=\"st2-sps\" x1=\"555.5\" y1=\"686.9\" x2=\"752.8\" y2=\"686.9\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"686.9\" x2=\"555.5\" y2=\"686.9\"/>\n            <circle className=\"st4-sps\" cx=\"410.8\" cy=\"594.3\" r=\"171.7\"/>\n            <line className=\"st4-sps\" x1=\"111.2\" y1=\"894\" x2=\"289.4\" y2=\"715.7\"/>\n        </svg>\n        \n    );\n};\n\nexport default SearchSimilarButton;\n","import React, {useContext, useState} from \"react\";\nimport ClampLines from 'react-clamp-lines';\nimport {Link} from 'react-router-dom';\n\nimport CheckBox from \"components/forms/checkbox\";\nimport SideOptions from 'components/modules/sideOptions';\nimport {projectPapersDao} from 'dao/projectPapers.dao';\nimport {AppContext} from 'components/providers/appProvider'\n/**\n * prints the papers list of a local search on the fake database\n */\n/*\nconst PrintLocalSearchList = function ({papersList, handlePaperSelection}) {\n\n    let output = papersList.map((element, index) =>\n        <div key={element.id} className=\"paper-card\">\n            <CheckBox name={\"\"} label={\"\"} val={element.eid}  handler={handlePaperSelection}/>\n            <Link to={\"#\"}><h3>{element.data && element.data.title}</h3></Link>\n            <ClampLines\n                text={element.data && element.data.abstract}\n                lines={4}\n                ellipsis=\"...\"\n                moreText=\"Expand\"\n                lessText=\"Collapse\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    );\n    return output;\n\n};\n*/\n\n/**\n * prints the results of a search on scopus\n */\nconst PrintScoupusSearchList = function ({papersList, handlePaperSelection, selectedEidList}) {\n\n    //side options\n    let sideOptions= [\"search similar\"];\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //handle for the side options\n    async function handleSideOptions(id, name){\n        if(name === \"delete\"){\n            console.log(\"deleting \" + id);\n            //call the dao\n            let res = await projectPapersDao.deletePaper(id);\n            //error checking\n            //if is other error\n            if (res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res !== null) {\n\n                alert(\"DELETED SUCCESSFULLY!\");\n\n            }\n        }\n    }\n\n    let output = papersList.map((element, index) =>\n        <div key={index} className=\"paper-card\">\n            <CheckBox name={element.title} label={\"\"} val={element.eid}  isChecked ={selectedEidList.includes(element.eid)} handler={handlePaperSelection}/>\n            <SideOptions options={sideOptions} handler={handleSideOptions} target={element.id} cls=\"card-options paper-card-options\"/>\n            <Link to={\"#\"}><h3>{element.title}</h3></Link>\n            <div className=\"extra-info\">\n                <p className=\"authors\">{element.authors}</p>\n                <p className=\"eid\">{element.eid}</p>\n                <p className=\"date\">{element.year}</p>\n            </div>\n            <ClampLines\n                text={element.abstract}\n                lines={4}\n                ellipsis=\"...\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    );\n    return output;\n\n};\n\n/**\n * prints a list of papers and handles their removal from the project\n */\n\nconst PrintPapersList = function ({papersList, location, history}) {\n\n    const [localPaperList, setLocalPaperList] = useState(papersList);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //side options\n    let sideOptions= [\"delete\", \"search similar\"];\n\n    //handle for the side options\n    async function handleSideOptions(id, name){\n        if(name === \"delete\"){\n            console.log(\"deleting \" + id);\n            //call the dao\n            let res = await projectPapersDao.deletePaper(id);\n            //error checking\n            //if is other error\n            if (res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res !== null) {\n\n                alert(\"DELETED SUCCESSFULLY!\");\n                let newPapersList = localPaperList.filter((paper)=>paper.id !== id);\n                setLocalPaperList(newPapersList);\n            }\n        }\n    }\n\n    let output;\n    //if list is empty, print a notice message\n    if (localPaperList.length === 0) {\n        output = (\n            <div>there are no papers here, you can add new ones by searching</div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else {\n        output = (\n            localPaperList.map((element) =>\n                <div key={element.id} className=\"paper-card\">\n                    <SideOptions options={sideOptions} handler={handleSideOptions} target={element.id} cls=\"card-options paper-card-options\"/>\n                    <Link to={\"#\"}>\n                        <h3>{element.data.title}</h3>\n                    </Link>\n                    <div className=\"extra-info\">\n                        <p className=\"authors\">{element.data.authors}</p>\n                        <p className=\"eid\">{element.data.eid || element.data.doi}</p>\n                        <p className=\"date\">{element.data.year}</p>\n                    </div>\n                    <ClampLines\n                        text={element.data.abstract}\n                        lines={4}\n                        ellipsis=\"...\"\n                        className=\"paragraph\"\n                        moreText=\"more\"\n                        lessText=\"less\"\n                    />\n                </div>\n            )\n        );\n    }\n    return output;\n\n\n};\n\nexport  {PrintPapersList, PrintScoupusSearchList};","import React from \"react\";\n\n/**\n * component svg select arrow\n * 'focused' is a flag used for displaying a different shape\n */\nconst SelectArrow= function ({focused}) {\n    var from=\"\";\n    var to=\"\";\n    //I check if the upper component is focused and then I animate\n    if(focused){\n        from=\"90,295.5 500,704.5 910,295.5 \";\n        to=\"90,704.5 500,295.5 910,704.5 \";;\n    }else{\n        from=\"90,704.5 500,295.5 910,704.5 \";;\n        to=\"90,295.5 500,704.5 910,295.5 \";\n    }\n    return (\n    <svg version=\"1.1\" id=\"arrow-select\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n        viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st-arrow-select\" points={from}>\n            <animate attributeType=\"XML\" id=\"ani-select-arrow\" attributeName=\"points\" from={from} to={to} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n            </polyline>\n        </svg>\n    );\n};\n\nexport default SelectArrow;\n\n","import React, {useState} from \"react\";\nimport SelectArrow from 'components/svg/selectArrow';\n\n\n/**\n * this component acts as an html <select>\n * it needs an array of options, the index of the selected one and the hadler to change the status of the upper component calling this one\n */\nconst Select = ({ options, selected, handler }) => {\n    \n    //this is useful for the animation\n    const [focused, setFocused] = useState(false);\n\n\n\n    function handleFocus(e){\n        //handle arrow animation and focus of menu\n        document.getElementById(\"ani-select-arrow\").beginElement();//trigger svg animation\n        setFocused(!focused);\n    }\n\n    var output = (\n        <div className=\"custom-select\">\n            <div className=\"selected\" tabIndex={-2} onBlur={handleFocus} onFocus={handleFocus}>{options[selected].label} <div className=\"arrow\"><SelectArrow focused={focused}/></div></div>\n            <div className=\"options-holder\" style={{fontSize: (!focused) ? '0px' : '15px', borderBottom: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderLeft: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderRight: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderTop:\"none\"}}>\n                {options.map((element, index) => (\n                <div key={index} data-value={index} className=\"option\" style={{padding: (!focused) ? '0px' : '2px' }} onMouseDown={handler}>\n                    {element.label}\n                </div>))}\n            </div>\n        </div>\n    );\n    return output;\n}\n\nexport default Select;","import React, {useState, useEffect} from \"react\";\n\n/**\n * component svg order arrow button\n@param {string} up [ASC or DESC]\n */\nconst OrderArrow= function ({display, up}) {\n\n    let output = \"\";\n\n    let from=\"\";\n    let to=\"\";\n\n    //I check where the arrow should point to(up or down) checking the 'up' flag passed by the parent component\n    if(up ===\"ASC\"){\n        from=\"371.7,293 500,165 628.3,293 \";\n        to=\"371.7,491.9 500,619.9 628.3,491.9 \";\n    }else{\n        from=\"371.7,491.9 500,619.9 628.3,491.9 \";\n        to=\"371.7,293 500,165 628.3,293 \";\n    }\n\n    const [destination, setDestination] = useState(to);\n\n    useEffect(() => {\n      setDestination(to);\n    }, [to])\n\n    if(display){\n        output = (\n            <svg version=\"1.1\" id=\"order-arrow\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\" >\n                <polyline className=\"st-order-arrow-head\" points=\"371.7,293 500,165 628.3,293 \" transform=\"matrix(1.5303008,0,0,1.5303008,-279.47582,-105.57059)\">\n                    <animate attributeType=\"XML\" id=\"ani-order-arrow\" attributeName=\"points\" from={from} to={destination} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n                </polyline>\n                <line className=\"st-order-arrow\" x1=\"485.67453\" y1=\"145.09268\" x2=\"485.67453\" y2=\"827.75989\"/>\n            </svg>\n        );\n    }\n    \n    return output;\n};\n\nexport default OrderArrow;","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst RemoveButton = function (props) {\n\n    return (\n        <svg id=\"remove-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <line className=\"rb\" x1=\"134\" y1=\"866\" x2=\"866\" y2=\"134\"/>\n        <line className=\"rb\" x1=\"134\" y1=\"134\" x2=\"866\" y2=\"866\"/>\n        </svg>\n    );\n};\n\nexport default RemoveButton;\n","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Link} from 'react-router-dom'\nimport ClampLines from 'react-clamp-lines';\nimport queryString from \"query-string\";\n\n\nimport {paperDao} from 'dao/paper.dao';\nimport {projectPapersDao} from 'dao/projectPapers.dao'\n\nimport CheckBox from \"components/forms/checkbox\";\nimport RadioBox from \"components/forms/radiobox\";\nimport LoadIcon from 'components/svg/loadIcon';\nimport SearchButton from 'components/svg/searchButton';\nimport SearchSimilarButton from 'components/svg/searchSimilarButton';\nimport {PrintScoupusSearchList} from 'components/papers/printPapersList';\nimport Select from 'components/forms/select';\nimport OrderArrow from 'components/svg/orderArrow';\nimport Pagination from \"components/modules/pagination\";\nimport CloseButton from 'components/svg/closeButton';\nimport RemoveButton from 'components/svg/removeButton';\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue, arrayOfObjectsContains, join} from 'utils/index';\n\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//order options\nconst orderByOptions = [\n    {label: 'Title', value: 'title'},\n    {label: 'Date', value: 'date'}\n];\n\n//search by  options\nconst searchByOptions = [\n    {label: 'all', value: 'all'},\n    {label: 'author', value: 'author'},\n    {label: 'content', value: 'content'},\n    {label: 'adv. query', value: 'advanced'}\n];\n\n//year options\nconst startYear = 2017;\nconst endYear = 2020;\n//create a int array from startYear to endYear, then convert it to string array, after this concatenate with \"all\"\nconst yearOptions = [\"all\", ...(_.range(startYear, endYear).map(String))];\n\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst SearchForm = function ({project_id, location, match, history}) {\n\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(true);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n\n    //set query params from url\n    let queryData = createQueryData(location.search);\n    //console.log(queryData);\n\n    // list of selected papers\n    const [selectedPapersList, setSelectedPapersList] = useState([]);\n\n    //state for search form\n    const [keywords, setKeyWords] = useState(\"_\");\n    const [source, setSource] = useState({\"scopus\": true, \"googleScholar\": false, \"arXiv\": false});\n    const [searchBy, setSearchBy] = useState(\"all\");\n    const [year, setYear] = useState(\"all\");\n\n    //state for sorting arrow animation\n    const [up, setUp] = useState(queryData.sort);\n\n    useEffect(() => {\n\n        //if the sorting parameter changes I update the status and trigger the SVG animation\n        if(up !== queryData.sort){\n            setUp(queryData.sort);\n            document.getElementById(\"ani-order-arrow\").beginElement();\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //update the values of state from url\n            setKeyWords(queryData.query);\n            setSource({\"scopus\": queryData.scopus, \"googleScholar\": queryData.googleScholar, \"arXiv\": queryData.arXiv});\n            setSearchBy(queryData.searchBy);\n            setYear(queryData.year);\n\n            //if there is queryString from URL\n            if (queryData.query !== \"\") {\n\n                setDisplay(false);\n                \n                //always call the dao to search on scopus\n                let res = await paperDao.search(queryData);\n\n                //error checking\n                //if is 404 error\n                if (res && res.message === \"Not Found\") {\n                    setPapersList([]);\n                    setTotalResults(0);\n                    //show the page\n                    setDisplay(true);\n                }\n                //if is other error\n                else if (res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }\n                //if res isn't null\n                else if (res !== null) {\n                    //update state\n                    setPapersList(res.results);\n                    setTotalResults(res.totalResults);\n                    //show the page\n                    setDisplay(true);\n                }\n            }\n        };\n\n        fetchData();\n        \n        //when the component will unmount\n        return () => {\n            //stop all ongoing request\n            paperDao.abortRequest();\n        };\n\n    }, [project_id, queryData.query, queryData.orderBy, queryData.searchBy, queryData.sort, queryData.year, queryData.start, queryData.count, queryData.scopus, queryData.googleScholar, queryData.arXiv]);  //re-execute when these variables change\n\n\n\n\n\n    /*\n        START OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //handler for sort selection\n    function handleSelection(e) {\n        //get index\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.orderBy = orderByOptions[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e) {\n\n        if (queryData.sort === \"ASC\") {\n            queryData.sort = \"DESC\";\n        }\n        else {\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n    /*function to insert and remove the paper id from selected list*/\n    function handlePaperSelection(event) {\n        let newList;\n        //get eid\n        let eid = event.target.value;\n        //get ttitle\n        let title = event.target.name;\n        //if id is not included in the list yet\n        if (getIndexOfObjectArrayByKeyAndValue(selectedPapersList, \"eid\", eid) === -1) {\n           //create a copy of array\n            newList = [...selectedPapersList];\n            //insert into array\n            newList.push({\"eid\": eid, \"title\": title});\n\n        }\n        //if id already exists in the list\n        else {\n            //remove the  target paper from array\n            newList = selectedPapersList.filter(function (element) {\n                return element.eid !== eid;\n            });\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n    }\n\n    /*function to select all papers*/\n    function selectAllPapers(event) {\n        \n        let newList = undefined;\n        \n        //if not all papers are selected yet\n        if(!arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")){\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //and merge them with the previously selected ones\n            let tmpList = [...allPapersInPage, ...selectedPapersList];\n            newList = _.uniqBy(tmpList, 'eid');\n        }else{//otherwise\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //I filter the selectedPapersList by removing the papers that are in the current page\n            newList = selectedPapersList.filter(x => !allPapersInPage.some(paper => paper.eid === x.eid));\n        }\n        \n        setSelectedPapersList(newList);\n    }\n\n    /*function to add the post in the project*/\n    async function handleAddPapers(event) {\n\n        event.preventDefault();\n        //console.log(selectedPapersList);\n\n       //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n        //call dao\n        let res = await projectPapersDao.postPaperIntoProject({\n            \"arrayEid\": arrayEid, \"project_id\": project_id\n        });\n        //if there is the error\n        if (res && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);\n            return null;\n        }\n\n        //empties the state\n        setSelectedPapersList([]);\n        alert(\"insert completed\");\n\n    }\n\n    /*\n        END OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n\n\n    /*function to send the query*/\n    async function handleSendSearch(event) {\n\n        event.preventDefault();\n\n        //if query input is empty\n        if (keywords === \"\") {\n            alert(\"search string is empty\")\n        }\n        else {\n            //synchronize the query data from react state hooks\n            queryData.query = keywords;\n            queryData.scopus = source.scopus;\n            queryData.googleScholar = source.googleScholar;\n            queryData.arXiv = source.arXiv;\n            queryData.searchBy = searchBy;\n            queryData.year = year;\n\n            //send query url\n            let queryString = createQueryStringFromObject(queryData);\n            //launch to search\n            history.push(queryString);\n\n        }\n\n    }\n\n    /**\n     *handle to update hook state by input change\n     */\n    function handleOnInputChange(event) {\n\n        let newSource;\n\n        switch (event.target.name) {\n            case \"query\":\n                setKeyWords(event.target.value);\n                break;\n            case \"scopus\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.scopus = !source.scopus;\n                setSource(newSource);\n                break;\n\n            case \"googleScholar\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.googleScholar = !source.googleScholar;\n                setSource(newSource);\n                break;\n            case \"arXiv\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.arXiv = !source.arXiv;\n                setSource(newSource);\n                break;\n            case \"searchBy\":\n                setSearchBy(event.target.value);\n                break;\n            case \"year\":\n                setYear(event.target.value);\n                break;\n            default:\n                break;\n        }\n\n\n    }\n\n    /*\n     #######################################\n     need to  create a new child component for the part of <form>, when we have more information on search options\n     ######################################\n     */\n    let formPart = (\n        <>{}\n            <form className={(queryData.query === \"\") ? 'search-form' : 'search-form small'}\n                  onSubmit={handleSendSearch}>\n                {/*search form*/}\n                <div style={{position: 'relative'}}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"search\"\n                        name=\"query\"\n                        value={keywords}\n                        onChange={handleOnInputChange}\n                    />\n                   <button className=\"go-search\" type=\"submit\" value=\"Submit\">\n                        <SearchButton/>\n                    </button>\n                    <Link to={\"/projects/\"+ project_id + \"/searchsimilar\"}><button className=\"go-similar\" type=\"button\">\n                        <SearchSimilarButton/>\n                    </button></Link>\n                </div>\n\n                <div className=\"option-holder\">\n                    <label>Source:</label><br/>\n\n                    <div className=\"checkboxes-holder\">\n                        <CheckBox label=\"Scopus\" name=\"scopus\" val=\"\" isChecked={source.scopus}\n                                  handler={handleOnInputChange}/>\n                        <CheckBox label=\"Google Scholar\" name=\"googleScholar\" val=\"\" isChecked={source.googleScholar}\n                                  handler={handleOnInputChange}/>\n                        <CheckBox label=\"arXiv\" name=\"arXiv\" val=\"\" isChecked={source.arXiv}\n                                  handler={handleOnInputChange}/>\n                    </div>\n\n                    <label>Search by:</label><br/>\n\n                    <div className=\"checkboxes-holder\" >\n                        <RadioBox label={searchByOptions[0].label} name=\"searchBy\" val={searchByOptions[0].value}\n                                  isChecked={searchBy === searchByOptions[0].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[1].label} name=\"searchBy\" val={searchByOptions[1].value}\n                                  isChecked={searchBy === searchByOptions[1].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[2].label} name=\"searchBy\" val={searchByOptions[2].value}\n                                  isChecked={searchBy === searchByOptions[2].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[3].label} name=\"searchBy\" val={searchByOptions[3].value}\n                                  isChecked={searchBy === searchByOptions[3].value} handler={handleOnInputChange}/>\n                    </div>\n\n                    <label>Year:</label><br/>\n                    <div className=\"checkboxes-holder\" >\n                        {\n                            yearOptions.map((singleYear, index) =>\n                                <RadioBox key={index} label={singleYear} name=\"year\" val={singleYear}\n                                          isChecked={year === singleYear} handler={handleOnInputChange}/>\n                            )\n                        }\n                    </div>\n                </div>\n\n            </form>\n        </>);\n\n\n    let resultPart = \"\";\n\n    //if is loading\n    if (display === false) {\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\" style={{pointerEvents: \"none\"}}>{/* this way the user cannot sort while loading the results */}\n                    <div className=\"select-all\">\n                    <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={false} handler={selectAllPapers}/>\n                    </div>\n                    <div className=\"order\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions}\n                                selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/></button>\n                    </div>\n                </div>\n                <SelectedPapersListBox selectedPapersList={selectedPapersList}/>\n                <div className=\"search-loading-holder\">\n                    <LoadIcon class={\"small\"}/>\n                </div>\n            </div>);\n    }\n\n    //if the search results list is empty\n    else if (papersList.length === 0 && queryData.query !== \"\") {\n        //the class is used only to workaround a small bug that display not found just as the search start before the loading icon\n        resultPart = (\n            <div className=\"not-found\"> not found :( </div>\n        );\n    }\n    else if (papersList.length > 0 && queryData.query !== \"\") {\n\n        //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\">\n                    <div className=\"select-all\">\n                    <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")} handler={selectAllPapers}/>\n                    </div>\n                    <div className=\"order\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions}\n                                selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/></button>\n                    </div>\n                </div>\n                <SelectedPapersListBox selectedPapersList={selectedPapersList} handlePaperSelection={handlePaperSelection}/>\n\n                <PrintScoupusSearchList papersList={papersList} handlePaperSelection={handlePaperSelection} selectedEidList={arrayEid}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </div>\n        );\n    }\n\n\n    let output = (\n        <>\n            {formPart}\n            <form className=\"search-results\" onSubmit={handleAddPapers}>\n                {resultPart}\n            </form>\n        </>\n    );\n\n    return output;\n};\n\n\n/**\n * internal component to print the box of list of selected paper\n */\nconst SelectedPapersListBox = function ({selectedPapersList, handlePaperSelection}){\n\n    let output = \"\";\n    output = (\n        <div className=\"selected-papers-list\" style={{opacity: (selectedPapersList.length>0) ? \"1.0\" : \"0.0\", pointerEvents: (selectedPapersList.length>0) ? \"auto\" : \"none\"}}>\n            <h3>\n                {\"SELECTED PAPERS\"} <br/><span>(total : {selectedPapersList.length})</span>\n            </h3>\n            <div className=\"submission-wrapper\">\n                <div className=\"papers-wrapper\" style={{border: (selectedPapersList.length>0) ? \"\" : \"0px\"}}>\n                    <div className=\"papers-flex\" style={{padding: (selectedPapersList.length>0) ? \"\" : \"0px\"}}>\n                        {selectedPapersList.map((element, index) =>\n                            <p key={index}>\n                                <span>{element.title}</span> \n                                <button type=\"button\" className=\"remove-btn\" name={element.title} value={element.eid} //name and value don't work on the button event for some reasons\n                                    onClick={(e) => {handlePaperSelection({target: {name: element.title, value:element.eid}})}}>\n                                    <RemoveButton/>\n                                </button>\n                            </p>\n                        )}\n                    </div>\n                </div>\n                <button style={{border: (selectedPapersList.length>0) ? \"\" : \"0px\", margin: (selectedPapersList.length>0) ? \"\" : \"0px\", height: (selectedPapersList.length>0) ? \"\" : \"0px\", pointerEvents: (selectedPapersList.length>0) ? \"auto\" : \"none\"}} className=\"ti-btn add-resultpaper-btn\" type=\"submit\" value=\"Submit\">\n                    <div className=\"btn-title\">Add Selected Paper</div><div className=\"btn-icon\"> </div>\n                </button>\n            </div>\n        </div>\n    );\n\n    return output;\n\n};\n\n\n/**\n * internal function to prepare a object of queryData\n * @param queryUrl\n * @return object of queryData for the fetch\n */\nfunction createQueryData(queryUrl) {\n\n\n    //set query params from queryString of url\n    let params = queryString.parse(queryUrl);\n    let query = params.query || \"\";\n\n    let searchBy = params.searchBy || \"all\";\n    let orderBy = params.orderBy || \"title\";\n    let sort = params.sort || \"ASC\";\n    let start = params.start || 0;\n    let count = params.count || 10;\n\n\n    let scopus;\n    if (params.scopus === undefined) {\n        scopus = true;\n    }\n    else {\n        scopus = (params.scopus === \"true\");\n    }\n\n    let googleScholar = (params.googleScholar === \"true\");\n    let arXiv = (params.arXiv === \"true\");\n\n    let year = params.year || \"all\";\n\n    let queryData = {query, searchBy, orderBy, sort, scopus, googleScholar, arXiv, year, start, count};\n\n    return queryData;\n\n}\n\n\nexport default SearchForm;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to post the file pdf to backend\n * @param data the file data\n * @return {objects}\n */\nasync function updatePdf(data) {\n    let url = config.home +config.pdf_parse_server;\n\n    let res = await http.postFile(url, data);\n    return res;\n\n}\n\n\nconst updateFileDao = {\n    updatePdf,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {updateFileDao};","import React from \"react\";\n\n/**\n * component svg go-btn\n */\nconst GoButton = function (props) {\n\n    return (\n        <svg id=\"go-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 1000 1000\">\n\n            <polyline\n            className=\"st1-go\"\n            points=\"371.7,481.9 500,609.9 628.3,481.9 \"\n            transform=\"matrix(0,-1.4834458,1.4856134,0,-92.453824,1228.1491)\"/>\n            <line\n            className=\"st0-go\"\n            x1=\"810.69312\"\n            y1=\"486.42624\"\n            x2=\"206.34099\"\n            y2=\"486.42624\"/>\n\n        </svg>\n    );\n};\n\nexport default GoButton;\n","import React, {useRef, useState} from \"react\";\nimport ClampLines from 'react-clamp-lines';\nimport {Link} from 'react-router-dom';\n\nimport CloseButton from 'components/svg/closeButton';\nimport GoButton from \"components/svg/goButton\";\nimport LoadIcon from \"components/svg/loadIcon\";\n\n/**\n * the search form component used for inserting the data relative to the paper we are searching for similar ones\n */\nconst SearchSimilarPapers = ({close, //the setter for closing the form when it's visible(sets the visibility to false)\n                                style, //style of the component\n                                project_id,\n                                input, //the string input\n                                handler, //handler for the string input\n                                paperInfo, //the data of the retrieved paper(should match the paper we are searching similarities for)\n                                fetching, //flag to control when the component is fetching the data related to the paper we are searching similarities for\n                                setPaperInfo, //sets the info of the paper we are searching similarites for\n                                setPaperFile //handles the input of a file(when we upload a file instead os specifying the paper by a string)\n                            }) => {\n    \n    let output = \"\";\n    let content = \"\";\n    let topRightButton = \"\";\n\n    //reference for the input file field\n    const inputElement = useRef(null);\n\n\n    //clicking the button will trigger the input file\n    const onButtonClick = () => {\n        inputElement.current.click();\n    };\n\n    async function handleSubmission(){\n        //if the user submits a paper I set the paperFile variable to its content so the main form can work with it\n        if(inputElement.current.files[0]){\n            setPaperFile(inputElement.current.files[0]);\n        }\n    }\n\n    //output\n    if(fetching){\n        content = (<div className=\"load-icon-similar-paper\"><LoadIcon/></div>);\n    }else if(paperInfo && paperInfo.title){\n        content = (\n            <>\n            <h3 className=\"similar-paper-title\">{paperInfo.title}</h3>\n            <ClampLines\n                text={paperInfo.abstract}\n                lines={4}\n                ellipsis=\"...\"\n                className=\"similar-paper-paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n            </>\n        );\n    }else{\n        content = (\n            <>\n                <p className=\"similar-description\">you can search for similar papers by a given DOI or a paper pdf</p>\n                <div className=\"DOI-holder\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"type DOI, EID, or paper title\"\n                        value={input}\n                        onChange={handler}\n                        name=\"query\"\n                    />\n                    <button className=\"go-search DOI-btn\" type=\"submit\" value=\"Submit\">\n                        <GoButton/>\n                    </button>\n                </div>\n                <p className=\"or\">or</p>\n                <div className=\"file-input-container\">\n                    <input type=\"file\" id=\"real-input\" ref={inputElement} onChange={handleSubmission}/>\n                    <button type=\"button\" className=\"browse-btn\" onClick={onButtonClick}>\n                        Upload a Paper\n                    </button>\n                </div>\n            </>\n        );\n    }\n    if(paperInfo){\n        topRightButton = (\n            <button type=\"button\" className={\"close-btn red-x\"} onClick={(e) => {\n                setPaperInfo(undefined);//I delete the similar paper info\n                setPaperFile(undefined);//I delete its file\n            }}><CloseButton/></button>\n        );\n    }else{\n        topRightButton = (\n            <Link to={\"/projects/\"+ project_id + \"/search\"} ><button type=\"button\" className={\"close-btn\"}><CloseButton/></button></Link>\n        );\n    }\n    output = (\n        <div style={{...style}} className=\"light-modal similar-search-paper-upload\">\n            {topRightButton}\n            {content}\n        </div>\n    );\n    return output;\n}\n\nexport default SearchSimilarPapers;","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Link} from 'react-router-dom'\nimport ClampLines from 'react-clamp-lines';\nimport queryString from \"query-string\";\n\n\nimport {paperDao} from 'dao/paper.dao';\nimport {projectPapersDao} from 'dao/projectPapers.dao';\nimport {updateFileDao} from \"dao/updateFile.dao\";\n\nimport CheckBox from \"components/forms/checkbox\";\nimport RadioBox from \"components/forms/radiobox\";\nimport {PrintScoupusSearchList} from 'components/papers/printPapersList';\nimport Select from 'components/forms/select';\nimport Pagination from \"components/modules/pagination\";\nimport SearchSimilarPapers from \"components/forms/searchSimilarPapers\";\n\nimport OrderArrow from 'components/svg/orderArrow';\nimport LoadIcon from 'components/svg/loadIcon';\nimport SearchButton from 'components/svg/searchButton';\nimport RemoveButton from 'components/svg/removeButton';\nimport SearchSimilarButton from 'components/svg/searchSimilarButton';\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue, arrayOfObjectsContains} from 'utils/index';\n\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//order options\nconst orderByOptions = [\n    {label: 'Title', value: 'title'},\n    {label: 'Date', value: 'date'}\n];\n\n\n//year options\nconst startYear = 2017;\nconst endYear = 2020;\n//create a int array from startYear to endYear, then convert it to string array, after this concatenate with \"all\"\nconst yearOptions = [\"all\", ...(_.range(startYear, endYear).map(String))];\n\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst SearchSimilarForm = function ({project_id, location, match, history}) {\n\n\n    //list of result papers data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to control the visualization of the results when fetching results data\n    const [display, setDisplay] = useState(true);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n\n    //set query params from url\n    let queryData = createQueryData(location.search);\n    //console.log(queryData);\n\n    // list of selected papers\n    const [selectedPapersList, setSelectedPapersList] = useState([]);\n\n    //state for search form\n    const [keywords, setKeyWords] = useState(\"\");\n    const [source, setSource] = useState({\"scopus\": true, \"googleScholar\": false, \"arXiv\": false});\n    const [year, setYear] = useState(\"all\");\n    const [similarPaperData, setSimilarPaperData] = useState(undefined); //the data of the paper to search similarities for\n    const [similarPaperFile, setSimilarPaperFile] = useState(undefined); //the file of the paper to search similarities for\n\n    //state for sorting arrow animation\n    const [up, setUp] = useState(queryData.sort);\n\n    //state for 'similar papers search' form\n    const [similarFormVisibility, setSimilarFormVisibility] = useState(false);\n\n    //bool for target similar paper fetching\n    const [similarPaperFetch, setSimilarPaperFetch] = useState(false);\n\n\n    /*\n        START OF USEEFFECT FOR HANDLING QUERY PARAMETERS ###################################################\n    */\n\n    //effect for query parameters input\n    useEffect(() => {\n\n        console.log(queryData);\n        //if the sorting parameter changes I update the status and trigger the SVG animation\n        if(up !== queryData.sort){\n            setUp(queryData.sort);\n            document.getElementById(\"ani-order-arrow\").beginElement();\n        }\n\n\n        //fetches data when searching for similarities\n        const fetchDataSimilarity = async () => {\n\n            //standard options parameters\n            setKeyWords(queryData.query);\n            setSource({\"scopus\": queryData.scopus, \"googleScholar\": queryData.googleScholar, \"arXiv\": queryData.arXiv});\n            setYear(queryData.year);\n\n            //if there is similarPaperString from URL(I temporarely do a random search)\n\n            if(similarPaperFile){//it there's a file I can do an api call to search for papers similar to the file\n                \n                console.log(\"FILE NAME : \" + similarPaperFile.name)\n\n                let res = undefined;\n\n                if(similarPaperData){\n                    //open flag of loading\n                    setDisplay(false);\n                    //I call the dao for searching for similar papers based on similarPaperString\n                    res = await paperDao.search({\"query\": \"Trento\"});\n                    setPapersList(res.results);\n                    //close flag of loading\n                    setDisplay(true);\n                }else{\n                    //check file extension and its mine type\n                    if(!/\\.(pdf|PDF)$/.test(similarPaperFile.name) || similarPaperFile.type.indexOf(\"application/pdf\") === -1){\n                        alert(\"the file must be a pdf\");\n                    }\n                    else{\n                        //open flag of loading\n                        setDisplay(false);\n                        setSimilarPaperFetch(true);\n                        console.log(\"FETCHING PARSE PDF\")\n                        //prepare the form data for post\n                        let formData = new FormData();\n                        formData.append('file', similarPaperFile);\n\n                        //call the dao\n                        console.log(\"CALLING THE PAPER PARSER SERVICE\")\n                        res = await updateFileDao.updatePdf(formData);\n        \n                        //if there is a error\n                        if (res && res.message) {\n                            //pass error object to global context\n                            alert(\"Error during parsing file\");\n                            setDisplay(true);\n                            setSimilarPaperFetch(false);\n                        }\n                        else{\n                            console.log(res);\n                            //set paperdata\n                            setSimilarPaperData(res);\n                            //display the paper data\n                            setSimilarPaperFetch(false);\n                        }\n        \n                        //I call the dao for searching for similar papers based on similarPaperString\n                        res = await paperDao.search({\"query\": \"Trento\"});\n                        setPapersList(res.results);\n                        //close flag of loading\n                        setDisplay(true);\n                        \n        \n                    }\n                }\n            }else if (queryData.query !== \"\") {\n\n                console.log(\"SIMILAR PAPER STRING : \" + queryData.query);\n\n                setDisplay(false);\n                \n                setSimilarPaperFetch(true);\n                //this will be the call to the service identifying a specific paper\n                let paperData = await paperDao.selectById(16);\n                setSimilarPaperData(paperData.data);\n                setSimilarPaperFetch(false);\n\n\n                //I call the dao for searching for similar papers based on similarPaperString\n                let res = await paperDao.search(queryData);\n\n                //error checking\n                //if is 404 error\n                if (res && res.message === \"Not Found\") {\n                    setPapersList([]);\n                    setTotalResults(0);\n                    //show the page\n                    setDisplay(true);\n                }\n                //if is other error\n                else if (res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }\n                //if res isn't null\n                else if (res !== null) {\n                    //update state\n                    setPapersList(res.results);\n                    setTotalResults(res.totalResults);\n                    //show the page\n                    setDisplay(true);\n                }\n            }else{\n                console.log(\"no file (& no similarPaperString)\");\n            }\n\n        };\n\n\n        fetchDataSimilarity();\n\n        //when the component will unmount\n        return () => {\n            //stop all ongoing request\n            paperDao.abortRequest();\n        };\n\n    }, [project_id, similarPaperFile, queryData.query, queryData.orderBy, queryData.sort, queryData.year, queryData.start, queryData.count, queryData.scopus, queryData.googleScholar, queryData.arXiv]);  //re-execute when these variables change\n\n\n    /*\n        END OF USEEFFECT FOR HANDLING QUERY PARAMETERS #######################################################\n    */\n\n\n\n    /*handles the submission of a search */\n    function handleSendSearch(event) {\n\n        if(event){\n            event.preventDefault();\n        }\n\n        console.log(\"similarity search was called\");\n        //if query input is empty\n        if (keywords === \"\" && !similarPaperFile) {\n            alert(\"similar paper string is empty\")\n        }\n        else {\n            //synchronize the query data from react state hooks\n            //if there isn't any file I search with the string\n            if(!similarPaperFile){\n                console.log(\"there isn't a file\")\n                queryData.query = keywords;\n            }else{\n                console.log(\"there's a file\")\n                queryData.query = \"\";\n            }\n            queryData.scopus = source.scopus;\n            queryData.googleScholar = source.googleScholar;\n            queryData.arXiv = source.arXiv;\n            queryData.year = year;\n\n            //send query url\n            let queryString = createQueryStringFromObject(queryData);\n            //launch to search\n            history.push(queryString);//this allows pushing the same data and refreshing the page with the hash router\n\n        }\n\n\n    }\n\n    /**\n     *handle to update hook state by input change on the form fields\n     */\n    function handleOnInputChange(event) {\n\n        let newSource;\n\n        switch (event.target.name) {\n            case \"query\":\n                setKeyWords(event.target.value);\n                break;\n            case \"scopus\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.scopus = !source.scopus;\n                setSource(newSource);\n                break;\n\n            case \"googleScholar\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.googleScholar = !source.googleScholar;\n                setSource(newSource);\n                break;\n            case \"arXiv\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.arXiv = !source.arXiv;\n                setSource(newSource);\n                break;\n            case \"year\":\n                setYear(event.target.value);\n                break;\n            default:\n                break;\n        }\n\n\n    }\n\n    /*\n     #######################################\n     need to  create a new child component for the part of <form>, when we have more information on search options\n     ######################################\n     */\n    let formPart = (\n        <>\n            <form className={(queryData.query === \"\" && !similarPaperFile) ? 'search-form' : 'search-form small'}\n                    style={{marginTop: (similarFormVisibility) ? \"30px\" : \"60px\"}}\n                    onSubmit={handleSendSearch}>\n                {/*search form*/}\n                \n                <SearchSimilarPapers style={{boxShadow: \"0px 0px 3px -1px rgba(0, 0, 0, 0.25)\"}}\n                    project_id={project_id}\n                    close={setSimilarFormVisibility} handler={handleOnInputChange} \n                    input={keywords} paperInfo={similarPaperData}\n                    fetching={similarPaperFetch} setPaperInfo={setSimilarPaperData}\n                    setPaperFile={setSimilarPaperFile}/>\n                \n                <div className=\"option-holder\">\n                    <label>Source:</label><br/>\n\n                    <div className=\"checkboxes-holder\">\n                        <CheckBox label=\"Scopus\" name=\"scopus\" val=\"\" isChecked={source.scopus}\n                                  handler={handleOnInputChange}/>\n                        <CheckBox label=\"Google Scholar\" name=\"googleScholar\" val=\"\" isChecked={source.googleScholar}\n                                  handler={handleOnInputChange}/>\n                        <CheckBox label=\"arXiv\" name=\"arXiv\" val=\"\" isChecked={source.arXiv}\n                                  handler={handleOnInputChange}/>\n                    </div>\n\n                    <label>Year:</label><br/>\n                    <div className=\"checkboxes-holder\" >\n                        {\n                            yearOptions.map((singleYear, index) =>\n                                <RadioBox key={index} label={singleYear} name=\"year\" val={singleYear}\n                                          isChecked={year === singleYear} handler={handleOnInputChange}/>\n                            )\n                        }\n                    </div>\n                </div>\n            </form>\n        </>);\n\n\n    let resultPart = \"\";\n\n     /*\n        START OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //handler for sort selection\n    function handleSelection(e) {\n        //get index\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.orderBy = orderByOptions[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e) {\n\n        if (queryData.sort === \"ASC\") {\n            queryData.sort = \"DESC\";\n        }\n        else {\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n    /*function to insert and remove the paper id from selected list*/\n    function handlePaperSelection(event) {\n        let newList;\n        //get eid\n        let eid = event.target.value;\n        //get ttitle\n        let title = event.target.name;\n        //if id is not included in the list yet\n        if (getIndexOfObjectArrayByKeyAndValue(selectedPapersList, \"eid\", eid) === -1) {\n           //create a copy of array\n            newList = [...selectedPapersList];\n            //insert into array\n            newList.push({\"eid\": eid, \"title\": title});\n\n        }\n        //if id already exists in the list\n        else {\n            //remove the  target paper from array\n            newList = selectedPapersList.filter(function (element) {\n                return element.eid !== eid;\n            });\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n    }\n\n    /*function to select all papers*/\n    function selectAllPapers(event) {\n        \n        let newList = undefined;\n        \n        //if not all papers are selected yet\n        if(!arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")){\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //and merge them with the previously selected ones\n            let tmpList = [...allPapersInPage, ...selectedPapersList];\n            newList = _.uniqBy(tmpList, 'eid');\n        }else{//otherwise\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //I filter the selectedPapersList by removing the papers that are in the current page\n            newList = selectedPapersList.filter(x => !allPapersInPage.some(paper => paper.eid === x.eid));\n        }\n        \n        setSelectedPapersList(newList);\n    }\n\n    /*function to add the post in the project*/\n    async function handleAddPapers(event) {\n\n        event.preventDefault();\n        //console.log(selectedPapersList);\n\n       //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n        //call dao\n        let res = await projectPapersDao.postPaperIntoProject({\n            \"arrayEid\": arrayEid, \"project_id\": project_id\n        });\n        //if there is the error\n        if (res && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);\n            return null;\n        }\n\n        //empties the state\n        setSelectedPapersList([]);\n        alert(\"insert completed\");\n\n    }\n\n    /*\n        END OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //if is loading\n    if (display === false) {\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\" style={{pointerEvents: \"none\"}}>{/* this way the user cannot sort while loading the results */}\n                    <div className=\"select-all\">\n                    <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={false} handler={selectAllPapers}/>\n                    </div>\n                    <div className=\"order\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions}\n                                selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/></button>\n                    </div>\n                </div>\n                <SelectedPapersListBox selectedPapersList={selectedPapersList}/>\n                <div className=\"search-loading-holder\">\n                    <LoadIcon class={\"small\"}/>\n                </div>\n            </div>);\n    }\n\n    //if the search results list is empty\n    else if (papersList.length === 0 && (queryData.query !== \"\" || similarPaperFile)) {\n        //the class is used only to workaround a small bug that display not found just as the search start before the loading icon\n        resultPart = (\n            <div className=\"not-found\"> not found :( </div>\n        );\n    }\n    else if (papersList.length > 0 && (queryData.query !== \"\" || similarPaperFile)) {\n\n        //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\">\n                    <div className=\"select-all\">\n                    <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")} handler={selectAllPapers}/>\n                    </div>\n                    <div className=\"order\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions}\n                                selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/></button>\n                    </div>\n                </div>\n                <SelectedPapersListBox selectedPapersList={selectedPapersList} handlePaperSelection={handlePaperSelection}/>\n\n                <PrintScoupusSearchList papersList={papersList} handlePaperSelection={handlePaperSelection} selectedEidList={arrayEid}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </div>\n        );\n    }\n\n\n    let output = (\n        <>\n            {formPart}\n            <form className=\"search-results\" onSubmit={handleAddPapers}>\n                {resultPart}\n            </form>\n        </>\n    );\n\n    return output;\n};\n\n\n/**\n * internal component to print the box of list of selected paper\n */\nconst SelectedPapersListBox = function ({selectedPapersList, handlePaperSelection}){\n\n    let output = \"\";\n    output = (\n        <div className=\"selected-papers-list\" style={{opacity: (selectedPapersList.length>0) ? \"1.0\" : \"0.0\", pointerEvents: (selectedPapersList.length>0) ? \"auto\" : \"none\"}}>\n            <h3>\n                {\"SELECTED PAPERS\"} <br/><span>(total : {selectedPapersList.length})</span>\n            </h3>\n            <div className=\"submission-wrapper\">\n                <div className=\"papers-wrapper\" style={{border: (selectedPapersList.length>0) ? \"\" : \"0px\"}}>\n                    <div className=\"papers-flex\" style={{padding: (selectedPapersList.length>0) ? \"\" : \"0px\"}}>\n                        {selectedPapersList.map((element, index) =>\n                            <p key={index}>\n                                <span>{element.title}</span> \n                                <button type=\"button\" className=\"remove-btn\" name={element.title} value={element.eid} //name and value don't work on the button event for some reasons\n                                    onClick={(e) => {handlePaperSelection({target: {name: element.title, value:element.eid}})}}>\n                                    <RemoveButton/>\n                                </button>\n                            </p>\n                        )}\n                    </div>\n                </div>\n                <button style={{border: (selectedPapersList.length>0) ? \"\" : \"0px\", margin: (selectedPapersList.length>0) ? \"\" : \"0px\", height: (selectedPapersList.length>0) ? \"\" : \"0px\", pointerEvents: (selectedPapersList.length>0) ? \"auto\" : \"none\"}} className=\"ti-btn add-resultpaper-btn\" type=\"submit\" value=\"Submit\">\n                    <div className=\"btn-title\">Add Selected Paper</div><div className=\"btn-icon\"> </div>\n                </button>\n            </div>\n        </div>\n    );\n\n    return output;\n\n};\n\n\n/**\n * internal function to prepare a object of queryData\n * @param queryUrl\n * @return object of queryData for the fetch\n */\nfunction createQueryData(queryUrl) {\n\n\n    //set query params from queryString of url\n    let params = queryString.parse(queryUrl);\n    let query = params.query || \"\";\n\n    let orderBy = params.orderBy || \"title\";\n    let sort = params.sort || \"ASC\";\n    let start = params.start || 0;\n    let count = params.count || 10;\n\n\n    let scopus;\n    if (params.scopus === undefined) {\n        scopus = true;\n    }\n    else {\n        scopus = (params.scopus === \"true\");\n    }\n\n    let googleScholar = (params.googleScholar === \"true\");\n    let arXiv = (params.arXiv === \"true\");\n\n    let year = params.year || \"all\";\n\n    let queryData = {query, orderBy, sort, scopus, googleScholar, arXiv, year, start, count};\n\n    return queryData;\n\n}\n\n\nexport default SearchSimilarForm;","import React, {useState, useEffect, useContext} from \"react\";\nimport queryString from \"query-string\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport {PrintPapersList} from 'components/papers/printPapersList';\nimport Select from 'components/forms/select';\nimport OrderArrow from 'components/svg/orderArrow';\nimport Pagination from \"components/modules/pagination\";\nimport {createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue} from 'utils/index';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n\n\n//order options\nconst orderByOptions = [\n    { value: 'date_created', label: 'Recently Added' },\n    { value: 'title', label: 'Title' },\n    { value: 'authors', label: 'Authors' }\n  ];\n\n/**\n * the local component that shows the papers list of a project\n */\nconst PapersList = ({project_id, location, match, history}) => {\n\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(location.search);\n\n    const [up, setUp] = useState(queryData.sort);\n\n    useEffect(() => {\n\n        if(queryData.orderBy !== \"date_created\" && up !== queryData.sort){\n            setUp(queryData.sort);\n            document.getElementById(\"ani-order-arrow\").beginElement();\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setDisplay(false);\n\n            //call the dao\n            let res = await projectPapersDao.getPapersList({project_id, ...queryData});\n\n            //error checking\n            //if is 404 error\n            if (res && res.message === \"Not Found\") {\n                setPapersList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if is other error\n            else if (res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res !== null) {\n\n                //update state\n                setPapersList(res.results);\n                setTotalResults(res.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n\n        };\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //stop all ongoing request\n            projectPapersDao.abortRequest();\n        };\n    }, [queryData.start, queryData.count, queryData.sort, queryData.orderBy]); //re-execute when these variables change\n\n\n    //handler for sort selection\n    function handleSelection(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n\n        //if I previously ordered by 'most recent' then I sort the next order by ASC\n        if(queryData.orderBy === \"date_created\"){\n            queryData.sort = \"ASC\";\n        }\n        queryData.orderBy=orderByOptions[index].value;\n\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e){\n        //trigger svg animation\n        if(queryData.sort === \"ASC\"){\n            queryData.sort = \"DESC\";\n        }\n        else{\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print loading image\n        output = (\n            <div className=\"paper-card-holder\">\n                <div className=\"order\" style={{pointerEvents: \"none\"}}>{/* this way the user cannot sort while loading the results */}\n                    <label>sort by:</label>\n                    <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\",queryData.orderBy)} handler={handleSelection}/>\n                    <button type=\"button\" onClick={handelOrder}><OrderArrow display={queryData.orderBy !== \"date_created\"} up={up}/></button>\n                </div>\n                <LoadIcon class={\"small\"}/>\n            </div> );\n    }\n    else {\n\n        output = (\n            <div className=\"paper-card-holder\">\n                <div className=\"order\">\n                    <label>sort by:</label>\n                    <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)} handler={handleSelection}/>\n                    <button type=\"button\" onClick={handelOrder}><OrderArrow display={queryData.orderBy !== \"date_created\"} up={up}/></button>\n                </div>\n                <PrintPapersList papersList={papersList} location={location} history={history}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </div>\n        );\n    }\n\n    output = (\n        <div className=\"papers-list\">\n            {output}\n        </div>\n    );\n\n    return output;\n\n};\n\n\n\n\n/**\n * internal function to prepare a object of queryData\n * @param query\n * @return object of queryData for the fetch\n */\nfunction createQueryData(query){\n\n    //set query params from queryString of url\n    let params = queryString.parse( query);\n    let count = params.count || 10;\n    let start = params.start || 0;\n    let orderBy = params.orderBy || \"date_created\";\n    let sort = params.sort || \"ASC\";\n\n    if(orderBy === \"date_created\"){\n        sort = \"DESC\";\n    }\n\n    //if \"before\" is defined by query then insert it in object, else insert \"after\" in object\n    let queryData = {orderBy, sort, start, count };\n    return queryData;\n\n}\n\n\n\nexport default PapersList;","import React, {useState, useEffect} from \"react\";\nimport SelectArrow from 'components/svg/selectArrow';\n\n\n/**\n * this component acts as an html <select>\n * it needs an array of options, the index of the selected one and the hadler to change the status of the upper component calling this one\n */\nconst Select = ({ options, form, name }) => {\n    \n\n    //this is useful for the animation\n    const [focused, setFocused] = useState(false);\n\n    //this keeps the selected option\n    const [selected, setSelected] = useState(0)\n\n    //this handle the selection setting the index of the selected option\n    function handler(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n        setSelected(index);\n    }\n\n    //this updates the field value for formik\n    useEffect(() => {\n        form.setFieldValue(name, options[selected].value);\n    }, [selected])\n\n    function handleFocus(e){\n        //handle arrow animation and focus of menu\n        document.getElementById(\"ani-select-arrow\").beginElement();//trigger svg animation\n        setFocused(!focused);\n    }\n\n    var output = (\n        <div className=\"custom-select\">\n            <div className=\"selected\" tabIndex={-2} onBlur={handleFocus} onFocus={handleFocus}>{options[selected].label} <div className=\"arrow\"><SelectArrow focused={focused}/></div></div>\n            <div className=\"options-holder\" style={{fontSize: (!focused) ? '0px' : '15px', borderBottom: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderLeft: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderRight: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderTop:\"none\"}}>\n                {options.map((element, index) => (\n                <div key={index} data-value={index} className=\"option\" style={{padding: (!focused) ? '0px' : '2px' }} onMouseDown={handler}>\n                    {element.label}\n                </div>))}\n            </div>\n        </div>\n    );\n    return output;\n}\n\nexport default Select;","import React, {useEffect, useState, useContext} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao'\n\nimport Select from 'components/forms/selectformik';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n//order options\nconst paperType = [\n    { value: 'article', label: 'Article' },\n    { value: 'book_chapter', label: 'Book Chapter' },\n    { value: 'conf_publication', label: 'Conf. Publication' }\n  ];\n\n/**\n * this is the form for create or edit the paper\n * @param props.projectId  relative project where we will insert the paper\n */\nfunction PaperForm(props) {\n\n    let yup = require('yup');\n    const uuid = require(\"uuid\");\n\n    //validation schema for form\n    const paperValidationSchema = yup.object().shape({\n        title: yup.string().required('please enter a title'),\n        authors: yup.string().required('please enter an author'),\n        year: yup.number().required('please enter a year').min(1000).max(2020).integer(),\n        //document_type: yup.string().required('please enter a paper type'),\n        abstract: yup.string().required('please enter the abstract')\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    return (\n        <>\n        <Formik\n            initialValues={{\n                title: (props.customPaper && props.customPaper.title) || '',\n                authors: (props.customPaper && props.customPaper.authors) || '',\n                year: (props.customPaper && props.customPaper.year) || '',\n                abstract: (props.customPaper && props.customPaper.abstract) || '',\n                //it is not present in pdf parse service\n                document_type: (props.customPaper && props.customPaper.document_type) || ''\n            }}\n            validationSchema={paperValidationSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                const paperData = {...values, \n                    year: values.year.toString(), \n                    source_title: values.title, \n                    link: \"custom_paper\", \n                    source: \"slr_custom_papers\", \n                    abstract_structured: \"0\",\n                    filter_oa_include: \"0\",\n                    filter_study_include: \"0\",\n                    notes: \"\",\n                    //data necessary for identifying custom papers\n                    manual: \"true\",\n                    doi: uuid.v4()}\n                console.log(paperData);\n                \n                let res = await projectPapersDao.postPaperIntoProject({\n                    paper: paperData, project_id: props.projectId\n                });\n                //error checking\n                if (res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }else{\n                    props.history.push(props.url);\n                }\n                setSubmitting(false);\n            }}\n            validateOnBlur={false}\n        >\n        {({ errors, touched, isSubmitting }) => (\n            <Form className=\"new-paper-form\">\n                <Field\n                    style={{borderBottom: (errors.title && touched.title) ? \"1px solid #d81e1e\" : \"\"}}\n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\" \n                    placeholder=\"Paper Title\"/>\n                <div className=\"new-paper-form-ad\">\n                    <div className=\"author-year\">\n                        <Field\n                            style={{borderBottom: (errors.authors && touched.authors) ? \"1px solid #d81e1e\" : \"\"}}\n                            name=\"authors\"\n                            type=\"text\" \n                            placeholder=\"paper author\"/>\n                        <Field \n                            style={{borderBottom: (errors.year && touched.year) ? \"1px solid #d81e1e\" : \"\"}}\n                            name=\"year\"\n                            type=\"number\"\n                            placeholder=\"year\"/>\n                    </div>\n                    <div className=\"type\">\n                        <Field\n                            name=\"document_type\"\n                            render={({ field, form }) => (\n                                    <Select options={paperType} {...field} form={form}/>\n                            )}\n                        />\n                    </div>\n                </div>\n                <Field\n                    style={{borderBottom: (errors.abstract && touched.abstract) ? \"1px solid #d81e1e\" : \"\"}}\n                    name=\"abstract\"\n                    placeholder=\"Paper Abstract\"\n                    component=\"textarea\"/>\n                <button type=\"submit\" disabled={isSubmitting ||\n                    (errors.title && touched.title) ||\n                    (errors.authors && touched.authors) ||\n                    (errors.year && touched.year) ||\n                    (errors.abstract && touched.abstract)\n                }>Add paper</button>\n            </Form>\n        )}\n        </Formik>\n        </>\n    );\n\n\n}\n\n\nexport default PaperForm;","import React, {useEffect, useState, useRef} from \"react\";\nimport PaperForm from 'components/forms/custompaper';\nimport LoadIcon from \"components/svg/loadIcon\";\n\nimport {updateFileDao} from \"dao/updateFile.dao\";\n\nfunction CustomPaperPage({projectId, url, history}) {\n\n\n    const [paperDataFetch, setPaperDataFetch] = useState(false);\n    const [paperData, setPaperData] = useState(undefined);\n    const [displayForm, setDisplayForm] = useState(false);\n\n    //reference for the input file field\n    const inputElement = useRef(null);\n\n    async function handleSubmission(){\n\n        //get the file object\n        let file = inputElement.current.files[0];\n        //if this file exist\n        if(file){\n\n            //check file extension and its mine type\n            if(!/\\.(pdf|PDF)$/.test(file.name) || file.type.indexOf(\"application/pdf\") === -1){\n                alert(\"the file must be a pdf\");\n            }\n            else{\n                //open flag of loading\n                setPaperDataFetch(true);\n\n                //prepare the form data for post\n                let formData = new FormData();\n                formData.append('file', file);\n\n                //call the dao\n               let res = await updateFileDao.updatePdf(formData);\n\n               //if there is a error\n                if (res && res.message) {\n                    //pass error object to global context\n                    alert(\"Error during parsing file\");\n                   \n                }\n                else{\n                    //set paperdata\n                    setPaperData(res);\n                    //display the form\n                    setDisplayForm(true);\n                }\n\n                //close flag of loading\n                setPaperDataFetch(false);\n\n            }\n        }\n    }\n\n    let output = \"\";\n\n    if(!displayForm && !paperDataFetch){\n        output = (\n            <div className=\"new-paper-page-wrapper\">\n                <div className=\"file-input-container\">\n                    <input type=\"file\"name =\"file\" id=\"real-input\" ref={inputElement} onChange={handleSubmission}/>\n                    <button type=\"button\" className=\"browse-btn\" onClick={() => {inputElement.current.click();}}>\n                        Upload a Paper\n                    </button>\n                </div>\n                    or<br/>\n                <button type=\"button\"\n                    onClick={() => {setDisplayForm(true)}}\n                >insert data manually</button>\n            </div>\n        );\n    }else if(paperDataFetch){\n        output = (\n            <div className=\"new-paper-page-wrapper\">\n                <div className=\"file-input-container\">\n                    <input type=\"file\" id=\"real-input\"/>\n                    <button type=\"button\" className=\"browse-btn\">\n                        <LoadIcon/>\n                    </button>\n                </div>\n                    or<br/>\n                <button type=\"button\"\n                    onClick={() => {/* reset connection to api if necessary */ setPaperDataFetch(false); setDisplayForm(true);}}\n                >abort and insert data manually</button>\n            </div>\n        );\n    }else{\n        output = (\n            <PaperForm projectId={projectId} url={url} history={history} customPaper={paperData}/>\n        );\n    }\n\n    return output;\n\n}\n\n\nexport default CustomPaperPage;","import React, {useState} from \"react\";\n\nimport {AppContext} from \"components/providers/appProvider\";\nimport EditButton from \"components/svg/editButton\";\n\n/**\n * this is the description component for the project page\n */\n\n\nconst ProjectDescription = function({description, update, date_last_modified, date_created}){\n\n\n    //this is used as a toggle for checking if the user is trying to edit the name of the project\n    const [editing, setEditing] = useState(false);\n\n    //handles the click on the edit/confirm button\n    function handleEditRequest(e){\n        console.log(\"CLICK\");\n        if(!editing){//if the user was not editing I allow him to edit\n            setTimeout(//I wait for the button event to fire before blurring out the textarea\n                function(){\n                    document.getElementById(\"edit-project-description-input\").focus();\n                },100);\n            \n            setEditing(true);\n            console.log(editing)\n        }else{//if the user was editing I submit its changes\n            update();\n        }\n    }\n\n    //format the date string\n    function formatDate(date){\n        return <span className=\"date\">{date.slice(0,10)} at {date.slice(11,19)}</span>\n    }\n\n\n    return (\n        <div className={(!editing) ? \"project-description hidden-form-description\" : \"project-description\"}>\n            <h2>Description:</h2>\n            <p style={{fontSize: (editing) ? \"0px\" : \"15px\"}}> {description}</p>\n            <form className=\"edit-project-description\" style={{height:(editing) ? \"\" : \"0px\"}}>\n                    <textarea id=\"edit-project-description-input\"  defaultValue={description} style={{width: (editing) ? \"100%\" : \"0%\", padding: (editing) ? \"\" : \"0px\", height:(editing) ? \"\" : \"0px\"}}\n                    onBlur={(e) => {\n                                    console.log(\"blurring\");\n                                    setEditing(false);\n                                }}\n                    />\n                    <button className=\"edit-button\" onMouseDown={handleEditRequest} type=\"button\">\n                        <EditButton confirm={editing}/>\n                    </button>\n            </form>\n            <h2>Additional info:</h2>\n            <p className=\"project-date-info\"> <span>Created</span> {formatDate(date_created)} </p>\n            <p className=\"project-date-info\"> <span>Last edited</span> {formatDate(date_last_modified)} </p>\n        </div>\n    );\n}\n\nexport default ProjectDescription;","import React, {useContext,useState,useEffect} from \"react\";\n\nimport EditButton from \"components/svg/editButton\";\n\n/**\n * this is the head component of page\n * @param \"menu_elements\" contains the list of menu-items\n */\n\n\nconst ProjectName = function({name, update}){\n\n    //this is used as a toggle for checking if the user is trying to edit the name of the project\n    const [editing, setEditing] = useState(false);\n\n    //checks if there's an edit request\n    function handleEditRequest(e){\n        if(!editing){//if the user is not editing the name yet(the check is useful because handleEditRequest and handleConfirm fire at the same time)\n            document.getElementById(\"edit-project-name-input\").focus();\n            setEditing(!editing);\n        }\n    }\n\n    //checks if the user wants to confirm the change\n    function handleConfirm(e){\n        if(editing){//if the user was editing I confirm its request and call the api(the check is useful because handleEditRequest and handleConfirm fire at the same time)\n            update();\n            setEditing(!editing);\n        }\n    }\n\n    return(\n        <div className={(editing) ? \"nav-elements\" : \"nav-elements hidden-form\"}> <h2 style={{fontSize: (editing) ? \"0px\" : \"21px\"}}>{name}</h2> \n            {/*clicking on the div containing the title will allow the user to access the form for editing the project name*/}\n            <form className=\"edit-project-name\"  onClick={handleEditRequest} onSubmit={(e) => {e.preventDefault()}}>\n                <input type=\"text\" id=\"edit-project-name-input\" defaultValue={name} style={{width: (editing) ? \"\" : \"0px\", padding: (editing) ? \"\" : \"0px\"}}\n                    onBlur={(e) => {setEditing(false)}}\n                />\n                <button className=\"edit-button\" onMouseDown={handleConfirm} type=\"button\"><EditButton confirm={editing}/></button>\n                {/*clicking on the button will confirm the new name*/}\n            </form>\n        </div>\n    );\n}\n\nexport default ProjectName;","import React, {useState, useEffect, useContext} from \"react\";\nimport {Route, Link, Switch} from 'react-router-dom';\nimport {Flipper, Flipped} from 'react-flip-toolkit';\n\nimport SearchForm from 'components/forms/searchform';\nimport SearchSimilarForm from 'components/forms/searchSimilarForm';\nimport PapersList from 'components/papers/papersList';\nimport CustomPaperPage from 'components/papers/customPaperPage';\nimport {projectsDao} from 'dao/projects.dao';\nimport LoadIcon from 'components/svg/loadIcon';\nimport ProjectDescription from 'components/projects/projectDescription';\nimport ProjectName from 'components/projects/projectName';\nimport {join} from 'utils/index';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n/**\n *this component will show a projects page\n */\nconst ProjectPage = (props) => {\n\n    //project object of page\n    const [project, setProject] = useState({data: {name: \"loading...\"}});\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //notFound state for hiding the navbar\n    const [notFound, setNotFound] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    const project_id = props.match.params.id;\n\n    //set the project title\n    useEffect(() => {\n        if(project.data.name === \"loading...\"){\n            appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">{project.data.name}</h2> </div>);//I set the page title\n        }else{\n            appConsumer.setTitle(<ProjectName name={project.data.name} update={updateProject}/>);\n        }\n    \n    }, [project]);\n\n    useEffect(() => {\n\n        setDisplay(false);\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //call the dao\n            let res = await projectsDao.getProject(project_id);\n\n            //error checking\n            //if is other error\n            if (res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res !== null) {\n                //update state\n                setProject(res);\n                //show the page\n                setDisplay(true);\n            }\n        };\n        fetchData();\n        //when the component will unmount\n        return () => {\n            //stop all ongoing request\n            projectsDao.abortRequest();\n        };\n    }, [project_id]); //re-execute when these variables change\n    \n\n    //function for updating the description and name\n    async function updateProject(){\n\n        let new_name = document.getElementById(\"edit-project-name-input\").value;\n        let new_desc = document.getElementById(\"edit-project-description-input\").value;\n\n\n        //if the new name o description are difference from the old name o description\n        if(new_name !== project.data.name || new_desc !== project.data.description){\n\n            //call the dao\n            let res = await projectsDao.putProject(project_id, {name: new_name, description : new_desc});\n\n            //error checking\n            //if is other error\n            if (res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res !== null) {\n                console.log(\"UPDATED SUCCESSFULLY!\");\n                window.location.reload();\n            }\n\n\n        }\n    }\n\n\n    let output;\n\n    //if the page is loading\n    if (display === false) {\n        //print svg image\n        output = <LoadIcon/>;\n    }\n    else {\n        output = (\n            <div className=\"project-wrapper\">\n                <ProjectPageHead match={props.match} notFound={notFound}/>\n\n                {/*route the papers list*/}\n                <Switch>\n                    <Route exact  path={props.match.url} render={function(props){\n                        setNotFound(false);\n                        return (\n                            <>\n                                <ProjectDescription description={project.data.description} update={updateProject} date_last_modified={project.date_last_modified} date_created={project.date_created}/>\n                                <PapersList project_id={project_id} location={props.location} match={props.match} history={props.history}/>\n                                <Link to={join(props.match.url,\"/addpaper\")}>\n                                    <button className=\"bottom-left-btn add-custompaper-btn\">\n                                        <div className=\"btn-title\">Add Custom Paper</div><div className=\"btn-icon\"> </div>\n                                    </button>\n                                </Link>\n\n                            </>\n                        );\n                    }}/>\n\n                    {/*route the form of search*/}\n                    <Route exact path={props.match.url + \"/search\"} render={function(props){\n                        setNotFound(false);\n                        return (<SearchForm project_id={project_id} {...props} />);\n                    }}/>\n\n                    <Route exact path={props.match.url + \"/searchsimilar\"} render={function(props){\n                        setNotFound(false);\n                        return (<SearchSimilarForm project_id={project_id} {...props} />);\n                    }}/>\n\n                    <Route path = {props.match.url + \"/addpaper\"} render={() =>\n                        <>\n                            <Link className=\"back\" to={props.match.url}>  </Link>\n                            <CustomPaperPage projectId={project.id} url={props.match.url} history={props.history}/>\n                        </>\n                    } />\n                </Switch>\n\n            </div>\n        );\n    }\n\n    return output;\n};\n\n/**\n * this is the local component to print head of project page\n */\nconst ProjectPageHead = function ({match, notFound}) {\n    const lc = window.location.hash.substr(window.location.hash.length - 9);\n    const slider = (((\"#\" + match.url) === window.location.hash.split(\"?\")[0]) || (lc === \"/addpaper\" || lc === \"addpaper/\"));\n    let output = (\n        <>\n            <div className=\"project-nav-link-wrapper\" style={{display: (notFound || (lc === \"/addpaper\" || lc === \"addpaper/\")) ? \"none\" : \"\"}}>\n                <div className=\"nav-link\">\n                    <Link to={match.url}>papers</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/search\")}>search</Link>\n                </div>\n                <Flipper flipKey={slider}>\n                    <Flipped flipId=\"underline\">\n                        <div className={slider ? \"underline underline-to-left\" : \"underline underline-to-right\"}/>\n                    </Flipped>\n                </Flipper>\n            </div>\n        </>\n    );\n    return output;\n\n};\n\n\nexport default ProjectPage;","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\n\n\n\nimport Main from 'components/main';\nimport Home from 'components/home';\n\nimport NavBar from 'components/navigation/navBar';\nimport SideMenu from 'components/navigation/sideMenu';\n\nimport ProjectsList from 'components/projects/projectsList';\nimport ProjectPage from 'components/projects/projectPage';\n\n\nimport  {AppProvider} from 'components/providers/appProvider';\n\n\n/**\n *this is the start point of application\n */\n\nconst App = function(props) {\n\n\n        return (\n            <Router>\n                <div className=\"app\">\n\n                    {/*mount a root context object*/}\n                    <AppProvider>\n\n                        <NavBar>\n                            {/*component menu*/}\n                            <SideMenu/>\n                        </NavBar>\n                        <Main>\n                            <Switch>\n                                <Route exact path=\"/\" render={() => <Home/> }/>\n                                <Route exact path=\"/projects\" render={(props) => <ProjectsList {...props} />}/>\n                                <Route path=\"/projects/:id\" render={(props) => <ProjectPage {...props} />}/>\n                                <Route render={(props) => <div>404</div>}/>\n                            </Switch>\n\n                        </Main>\n\n                    </AppProvider>\n                </div>\n            </Router>\n        );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport * as serviceWorker from 'serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}