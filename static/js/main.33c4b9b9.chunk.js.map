{"version":3,"sources":["utils/conn.js","config/index.js","dao/users.dao.js","components/modules/error.js","components/providers/appProvider.js","components/home.js","dao/projects.dao.js","components/svg/loadIcon.js","components/svg/closeButton.js","components/projects_page/projectForm.js","components/modules/pagination.js","utils/index.js","components/modules/cover.js","components/svg/optionsButton.js","components/modules/sideOptions.js","components/svg/emptyFolder.js","components/projects_page/projectsList.js","dao/paper.dao.js","components/svg/selectTick.js","components/forms_elements/checkbox.js","dao/projectPapers.dao.js","components/svg/noPapers.js","components/svg/infoIcon.js","components/projects_page/search_tab/search_automated/paperConfidence.js","components/modules/printPapersList.js","components/svg/selectArrow.js","components/forms_elements/select.js","components/svg/removeButton.js","components/projects_page/search_tab/selectedPapersListBox.js","components/svg/orderArrow.js","components/svg/noSearchResults.js","components/svg/radioTick.js","components/forms_elements/radiobox.js","components/svg/searchButton.js","components/svg/searchSimilarButton.js","components/projects_page/search_tab/search_standard/searchStandardForm.js","components/svg/robot.js","components/projects_page/search_tab/search_standard/searchStandardManager.js","dao/updateFile.dao.js","components/svg/goButton.js","components/projects_page/search_tab/search_similar/targetPaper.js","components/projects_page/search_tab/search_similar/searchSimilarForm.js","components/projects_page/search_tab/search_similar/searchSimilarManager.js","components/forms_elements/selectformik.js","components/projects_page/papers_tab/forms/customPaperForm.js","components/projects_page/papers_tab/customPaperPage.js","components/svg/editButton.js","components/projects_page/projectName.js","components/svg/forbidden.js","components/svg/ghost.js","components/modules/pageNotFound.js","components/projects_page/papers_tab/papersList.js","components/projects_page/papers_tab/projectDescription.js","components/projects_page/papers_tab/forms/papersCsvForm.js","components/projects_page/papers_tab/papersTab.js","dao/projectFilters.dao.js","components/projects_page/filters_tab/forms/insertFilterForm.js","components/projects_page/filters_tab/forms/updateFilterForm.js","components/projects_page/filters_tab/filterCard.js","components/svg/noFilters.js","components/projects_page/filters_tab/printFiltersList.js","components/projects_page/filters_tab/filtersTab.js","components/projects_page/search_tab/search_automated/searchAutomatedDescription.js","components/projects_page/search_tab/search_automated/searchAutomatedForm.js","components/projects_page/search_tab/search_automated/searchAutomatedManager.js","components/projects_page/projectPage.js","components/main.js","components/navigation/navBar.js","components/svg/noImage.js","components/navigation/userInfo.js","components/svg/menuButton.js","components/navigation/sideMenu.js","components/navigation/breadCrumbs.js","components/modules/notification.js","components/modules/usersLogin.js","App.js","serviceWorker.js","index.js"],"names":["abortController","abortRequestType","config","home","search","scopus_search","search_similar","search_automated","projects","papers","customPapers","filters","userLogin","userInfo","userLogout","menu_list","id","content","link","max_total_number_for_results","pdf_parse_server","csv_parse_server","google_login_client_id","timeOutTime","localStorage","window","request","_callee","url","options","signal","requestOptions","timer","response","data","timeOutError","regenerator_default","a","wrap","_context","prev","next","AbortController","Object","assign","mode","setTimeout","abort","fetch","sent","clearTimeout","parseResponseData","checkResponseStatus","abrupt","t0","Error","name","stop","_callee2","queryData","query","key","jsonHeaders","_args2","arguments","_context2","length","undefined","encodeURIComponent","slice","Headers","append","getItem","method","headers","_callee3","_context3","_callee4","bodyData","body","_args4","_context4","JSON","stringify","_callee5","_args5","_context5","_callee6","_args6","_context6","status","error","statusText","payload","_callee7","contentType","_context7","get","indexOf","text","formData","blob","json","http","post","delete","put","postFile","abortRequest","console","log","id_token","usersDao","postTokenId","getUserByTokenId","logoutUser","withRouter","props","_useState","useState","_useState2","slicedToArray","firstTime","setFirstTime","appConsumer","useContext","AppContext","history","location","useEffect","setError","pathname","statusCode","message","storage","getUserData","_ref","asyncToGenerator","mark","res","removeItem","setUser","apply","this","goBack","e","output","react_default","createElement","Fragment","className","style","textAlign","type","onClick","React","createContext","AppProvider","user","_useState3","_useState4","userFetch","setUserFetch","_useState5","_useState6","_useState7","_useState8","title","setTitle","_useState9","_useState10","notificationMessage","setNotificationMessage","_useState11","_useState12","projectName","setProjectName","contextObject","_user","email","given_name","surname","family_name","image","picture","Provider","value","modules_error","children","push","fontSize","fontWeight","_args","project_id","_callee8","collaborator_id","_context8","projectsDao","getProjectsList","getProject","postProject","putProject","deleteProject","getProjectCollaborators","removeProjectCollaborator","addProjectCollaborator","LoadIcon","class","xmlns","xmlnsXlink","x","y","viewBox","d","CloseButton","x1","y1","x2","y2","ProjectForm","mountRef","useRef","yup","require","projectValidationSchema","object","shape","string","required","description","current","formik_esm","initialValues","validationSchema","onSubmit","_ref2","values","setSubmitting","_x","_x2","validateOnBlur","_ref3","errors","touched","isSubmitting","validateField","setErrors","handleChange","visibility","setVisibility","closeButton","borderBottom","placeholder","onChange","component","disabled","Pagination","start","count","totalResults","path","queryString","href","split","newQueryString","arryQuery","i","parameterName","setStartAndCountInUrl","firstPage","lastPage","listPage","paged","Math","floor","totalPage","ceil","react_router_dom","to","paginationLength","display","map","element","index","margin","arrayOfObjectsContains","b","_loop","some","v","_ret","join","base","charAt","createQueryStringFromObject","keys","getIndexOfObjectArrayByKeyAndValue","array","Cover","cls","handler","DeleteButton","version","SideOptions","target","focused","setFocused","onBlur","onMouseDown","optionsButton","padding","border","EmptyFolder","PrintList","maps","projectsList","handleDelete","sideOptions","emptyFolder","modules_sideOptions","date_last_modified","ProjectsList","setProjectsList","setTotalResults","setDisplay","toggleform","setToggleForm","params","parse","createQueryData","_handleDelete","newProjectsList","filter","project","mnt","even_projs","odd_projs","objectSpread","orderBy","results","concat","fetchData","loadIcon","cover","projectsList_PrintList","match","pagination","projectForm","paperDao","selectById","searchSimilar","searchAutomated","SelectTick","points","attributeName","dur","repeatCount","fill","from","CheckBox","val","label","isChecked","tick","setTick","selectTick","checked","paper_id","projectPapersDao","getPapersList","getPaper","postPaperIntoProject","postCustomPaperIntoProject","putPaper","deletePaper","NoPapers","InfoIcon","cx","cy","r","PaperConfidence","confidence","displayDetails","setDisplayDetails","infoIcon","details","detail","percentage","PrintPapersList","papersList","localPaperList","setLocalPaperList","handleSideOptions","_x4","_x5","_x6","_handleSideOptions2","newPapersList","paper","setItem","noPapers","authors","eid","year","lib_default","abstract","lines","ellipsis","moreText","lessText","PrintScoupusSearchList","handlePaperSelection","selectedEidList","setTargetPaperData","_x3","_handleSideOptions","goSimilar","substring","forms_elements_checkbox","includes","PrintSearchAutomatedList","paperConfidence","SelectArrow","attributeType","begin","Select","selected","handleFocus","document","getElementById","beginElement","tabIndex","onFocus","selectArrow","borderLeft","borderRight","borderTop","data-value","RemoveButton","SelectedPapersListBox","selectedPapersList","setSelectedPapersList","mounted","_handleAddPapers","event","papersToAdd","arrayEid","opacity","pointerEvents","removeButton","height","OrderArrow","up","destination","setDestination","transform","NoSearchResults","RadioTick","RadioBox","radioTick","SearchButton","SearchSimilarButton","_","searchByOptions","endYear","Date","getFullYear","yearOptions","toConsumableArray","range","String","SearchStandardForm","keywords","setKeyWords","scopus","googleScholar","arXiv","source","setSource","searchBy","setSearchBy","setYear","sort","handleOnInputChange","newSource","_handleSendSearch","preventDefault","position","searchSimilarButton","searchButton","radiobox","singleYear","Robot","rx","ry","orderByOptions","SearchStandardManager","selectedPapersListFromStorage","setPapersList","queryUrl","createQueryDataForStandardSearch","setUp","handleSelection","parseInt","getAttribute","handelOrder","newList","selectAllPapers","allPapersInPage","tmpList","uniqBy","resultPart","forms_elements_select","orderArrow","noSearchResults","selectedPapersListBox","searchStandardForm","robot","updateFileDao","updatePdf","uploadCsv","GoButton","TargetPaper","close","input","paperInfo","fetching","setPaperInfo","setPaperFile","topRightButton","inputElement","_handleSubmission","files","goButton","ref","click","SearchSimilarForm","targetPaperData","similarFormVisibility","setSimilarFormVisibility","similarPaperFetch","setSimilarPaperFetch","similarPaperFile","setSimilarPaperFile","fetchMainPaper","resx","test","FormData","marginTop","targetPaper","boxShadow","SearchSimilarManager","onbeforeunload","similarPaperDataFromStorage","createQueryDataForSimilarSearch","paperData","fetchSimilarPapers","searchSimilarForm","form","setSelected","setFieldValue","paperType","CustomPaperForm","paperValidationSchema","number","min","max","integer","customPaper","document_type","doi","toString","source_title","abstract_structured","filter_oa_include","filter_study_include","notes","manual","projectId","render","_ref4","field","selectformik","CustomPaperPage","paperDataFetch","setPaperDataFetch","setPaperData","displayForm","setDisplayForm","file","customPaperForm","EditButton","confirm","ProjectName","setProject","editing","setEditing","setName","_updateProject","newProject","focus","width","updateProject","editButton","Forbidden","Ghost","PageNotFound","ghost","PapersList","forcePapersFetch","ProjectDescription","collaborators","setCollaborators","setDescription","setInput","loadIconDisplay","setLoadIconDisplay","formatDate","date","_removeCollaborator","collaborator","newCollabs","callApi","_addCollaborator","date_created","removeCollaborator","PapersCsvForm","setAbstract","setAuthors","setId","csvUpload","setCsvUpload","setForcePapersFetch","PapersTab","displayCsvForm","setDisplayCsvForm","papersCsvForm","projectDescription","papers_tab_papersList","filter_id","projectFiltersDao","getFiltersList","postFilterIntoProject","deleteFilter","putFilter","InsertFilterForm","predicateValidationSchema","predicate","inclusion_description","exclusion_description","resetForm","setFiltersList","filtersList","UpdateFilterForm","setFilter","FilterCard","callDelete","localFilter","setLocalFilter","setDisabled","updateFilterForm","NoFilters","PrintFiltersList","_deleteFilter","newFiltersList","noFilters","filterCard","FiltersTab","filtersFetch","setFiltersFetch","createQueryDataForFiltersTab","insertFilterForm","printFiltersList","SearchAutomatedDescription","SearchAutomatedForm","react_textarea_autosize_esm_browser","useCacheForDOMMeasurements","maxRows","SearchAutomatedManager","createQueryDataForAutomatedSearch","fetchPapers","searchAutomatedDescription","searchAutomatedForm","ProjectPageHead","notFound","lc","hash","slider","left","ProjectPage","setNotFound","unauthorized","setUnauthorized","projects_page_projectName","forbidden","projectPage_ProjectPageHead","react_router","exact","papersTab","searchStandardManager","filtersTab","searchAutomatedManager","searchSimilarManager","substr","customPaperPage","pageNotFound","Main","projects_page_projectsList","projectPage","NavBar","NoImage","UserInfo","fetchError","setFetchError","img","alt","noImage","src","onError","MenuButton","PrintMenu","onMouseUp","handleMenuBlur","SideMenu","shown","setShown","_logout","clsidemenu","clsbutton","menuButton","sideMenu_PrintMenu","bcPath","bc","createBreadCrumbs","Notification","mountKeyRef","random","responseGoogle","_responseGoogle","tokenId","profileObj","givenName","familyName","imageUrl","google_login","clientId","buttonText","onSuccess","onFailure","cookiePolicy","App","appProvider_AppProvider","navBar","sideMenu","breadCrumbs","notification","main","usersLogin","Boolean","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33c4b9b9.chunk.js","sourcesContent":["/*this is the file to communicate with backend by fetch request*/\nimport config from 'config/index';\n\n//signal to abort the request\nlet abortController;\n//int to know abort error type\nlet abortRequestType;\n//10seconds for timeout\nlet timeOutTime = 10 * 1000;\n\n//get the localStorage object\nconst localStorage = window.localStorage;\n\n/**\n * abort all request in progeress by user\n */\nfunction abortRequest() {\n    abortController.abort();\n    abortRequestType = 1;\n    console.log(\"abort\")\n\n}\n\n/**\n * abort all request if timeout\n */\nfunction timeOut() {\n\n    abortController.abort();\n    abortRequestType = 2;\n}\n\n/**\n * create a basic fetch request\n * @param url\n * @param options request config\n * @param {int} timeOutTime\n * @return {object} response data\n\n */\nasync function request(url, options, timeOutTime) {\n    try {\n\n        //create a new abortController for this request\n        abortController = new AbortController();\n        let signal = abortController.signal;\n        //initialize as 0 for every request\n        abortRequestType = 0;\n\n        let requestOptions = Object.assign(\n            {\n                //enable the  sending of cookie\n                //credentials: (url.includes(config.userInfo)) ? 'omit' : 'include', //if it's a google user api request I don't need credentials\n                \"mode\": 'cors',\n                \"signal\": signal\n            },\n            options\n        );\n\n        //set timeout clock\n        let timer = setTimeout(() => timeOut(), timeOutTime);\n\n        let response = await fetch(url, requestOptions);\n\n        //clear timeout clock\n        clearTimeout(timer);\n\n\n        //parse response data\n        let data = await parseResponseData(response);\n        //response error check\n        checkResponseStatus(response,data);\n        return  data;\n\n    }\n    catch (error) {\n\n        //console.dir(error);\n\n        //if abort error is caused by timeout\n        if (abortRequestType === 2) {\n            //create a custom error for timeout\n            let timeOutError = new Error(\"Error: Time out to get response from backend\");\n            timeOutError.name = \"timeout\";\n            return  timeOutError;\n        }\n        //if is a abort error  caused by user\n        else if (abortRequestType === 1) {\n            return null;\n        }\n\n        return error;\n\n\n    }\n}\n\n/**\n * get method\n * @param url\n * @param queryData quey string\n * @return {object} response data\n */\nasync function get(url, queryData = \"\") {\n    let query = \"\";\n    if (queryData !== \"\") {\n        query = \"?\";\n        for (let key in queryData) {\n            query += key + \"=\" + encodeURIComponent(queryData[key]) + \"&\";\n        }\n        //delete the last &\n        query = query.slice(0, query.length - 1);\n    }\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let options = {\n        \"method\": 'GET',\n        \"headers\": jsonHeaders,\n    };\n\n    return await request(url + query, options, timeOutTime);\n}\n\n/**\n * delete method\n * @param url\n */\nasync function deletes(url) {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let options = {\n        \"method\": 'DELETE',\n        \"headers\": jsonHeaders,\n    };\n\n    return await request(url, options, timeOutTime);\n}\n\n/**\n * post method\n * @param url\n * @param bodyData\n * @return {object } response data\n */\nasync function post(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'POST',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options, timeOutTime);\n}\n\n/**\n * post file method\n * @param url\n * @param bodyData\n * @return {object} response data\n */\nasync function postFile(url, bodyData = \"\") {\n\n    //custom timeout for request\n    let customTimeOutTime= 10 * 1000;\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n   // jsonHeaders.append('Content-Type', 'multipart/form-data');\n    let options = {\n        \"method\": 'POST',\n        \"headers\": jsonHeaders,\n        \"body\": bodyData\n    };\n\n    return await request(url, options, customTimeOutTime);\n}\n\n\n/**\n * put method\n * @param url\n * @param bodyData\n */\nasync function put(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'PUT',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options,timeOutTime);\n}\n\n\n/**\n *  * check resposonse status\n * @param response to check\n * @param data data received\n * @throws {Error} if  status code < 200 or status code >= 300\n */\nfunction checkResponseStatus(response, data) {\n\n    if (response.status < 200 || response.status >= 300) {\n        const error = new Error(response.statusText);\n        error.data = response;\n        if(data.payload){\n            error.payload = data.payload;\n        }\n        throw error;\n    }\n\n}\n\n/**\n * parse the response of  http request\n * @param response response object\n * @return {object} data parsed\n */\nasync function parseResponseData(response) {\n    //get response data type\n    const contentType = response.headers.get('Content-Type');\n    let data = null;\n    //parse the data by its type\n    if (contentType != null) {\n        if (contentType.indexOf('text') > -1) {\n            data = await response.text()\n        }\n        if (contentType.indexOf('form') > -1) {\n            data = await response.formData();\n        }\n        if (contentType.indexOf('video') > -1) {\n            data = await response.blob();\n        }\n        if (contentType.indexOf('json') > -1) {\n            data = await response.json();\n        }\n    }\n    else if (response != null) {\n        data = await response.text();\n    }\n    return data;\n}\n\n\n\n//object to export\nconst http = {\n    get,\n    post,\n    \"delete\" : deletes,\n    put,\n    postFile,\n    abortRequest,\n};\n\nexport default http;","/**\n * this is the config file\n */\n\n\nconst config = {\n    \"home\": \"https://crowdai-slr-api-dev.herokuapp.com/\",\n    //\"home\": \"http://localhost:3001/\",\n    \"search\": \"search\",\n    \"scopus_search\": \"search-scopus\",\n    \"search_similar\": \"search/similar\",\n    \"search_automated\": \"search/automated\",\n    \"projects\": \"projects\",\n    \"papers\": \"papers\",\n    \"customPapers\": \"customPapers\",\n    \"filters\": \"filters\",\n    \"userLogin\": \"auth/login\",\n    \"userInfo\": \"https://www.googleapis.com/oauth2/v3/tokeninfo\",\n    \"userLogout\": \"auth/logout\",\n    \"menu_list\": [\n        {id: 4, content: \"Home\", link: \"/\"},\n        {id: 5, content: \"My projects\", link: \"/projects\"},\n        {id: 6, content: \"Account\", link: \"#\"}\n    ],\n    \"max_total_number_for_results\": 5000,\n    \"pdf_parse_server\": \"upload/pdf\",\n    \"csv_parse_server\": \"upload/csv\",\n    \"google_login_client_id\": \"282160526683-84sdnoqh3bc1obojfpepcbonnfg3uks4.apps.googleusercontent.com\",\n\n\n\n\n\n};\n\nexport default config;\n","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to post validation token\n * @param bodyData\n * @return {Object} Google user data\n */\nasync function postTokenId(bodyData) {\n    let url = config.home + config.userLogin;\n    return await http.post(url, bodyData);\n}\n\n/**\n * get user by token\n * @return {Object} user data\n */\nasync function getUserByTokenId(id_token) {\n    let url = config.userInfo;\n    return await http.get(url, {id_token});\n}\n\n/**\n * logout user\n * @return {Object} user data\n */\nasync function logoutUser() {\n    let url = config.home + config.userLogout;\n    return await http.get(url);\n}\n\nconst usersDao = {\n    postTokenId,\n    getUserByTokenId,\n    logoutUser\n}\n\n\nexport {usersDao};","import React, {useContext, useState, useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nimport {AppContext} from \"components/providers/appProvider\";\nimport {usersDao} from \"dao/users.dao\";\n\nconst Error = function (props) {\n\n    //this avoids setting the error to null on mount\n    const [firstTime, setFirstTime] = useState(true);\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //useful router stuff\n    const { history, location } = props;\n\n    //if the pathname changes(and it's not the first time) I remove the error\n    //because it means the user manually changed the path\n    useEffect(() => {\n        \n        if(firstTime){\n            console.log(\"error mountes\")\n            setFirstTime(false);\n        }else{\n            appConsumer.setError(null);\n        }\n\n    }, [location.pathname])\n\n    useEffect(() => {\n        try{\n            console.log(appConsumer.error.payload.statusCode);\n\n            //once the component is mounted I go immediately back if error is 401\n            if(appConsumer.error.payload.statusCode === 401 || appConsumer.error.payload.message === \"the token does not match any user!\"){\n                console.log(\"unauth call\")\n                //once I get unauthorized error I check whether the user token is expired\n                const storage = window.localStorage;\n                if (storage.getItem(\"userToken\")) {\n                    async function getUserData(){\n                        let res = await usersDao.getUserByTokenId(storage.getItem(\"userToken\"));\n                        //If the token is expired I remove it and I logout the user\n                        if(res && res.message){\n                            console.log(\"INVALID TOKEN\");\n                            storage.removeItem(\"userToken\");\n                            appConsumer.setUser(null);\n                        }else{\n                            console.log(\"VALID TOKEN\");\n                        }\n                        \n                    }\n                    console.log(\"checking token\")\n                    getUserData();\n                }\n                //then I go back\n                console.log(\"pushing back\")\n                history.goBack();\n            }\n        }catch (e){\n            console.log(\"YOU MAY NEED TO CHANGE THE HOME URL PARAMETER FROM 'config/index.js'\");\n        }\n        return () => {\n            //delete the error, so app can resume its work\n            appConsumer.setError(null);\n        }\n\n    }, []);\n    \n\n    //function to delete the error object in context\n    function handleOnRefresh(){\n        appConsumer.setError(null);\n    }\n    //function to return to previous page\n    function handleOnGoBack(){\n        history.goBack();\n        appConsumer.setError(null);\n    }\n\n    //console.dir(appConsumer.error);\n    let output = <></>;\n\n    //is a error from backend\n    if (appConsumer.error.payload) {\n        output = (\n            <>\n                <p>Error code:</p>\n                <p>{appConsumer.error.payload.statusCode}</p>\n                <p>Error name:</p>\n                <p>{appConsumer.error.payload.error}</p>\n                <p>Error message</p>\n                <p>{appConsumer.error.payload.message}</p>\n            </>\n        );\n    }\n\n    //is a error of other type\n    else {\n        output = (\n            <>\n                <p>Error name:</p>\n                <p>{appConsumer.error.name}</p>\n                <p>Error message</p>\n                <p>{appConsumer.error.message}</p>\n            </>\n        );\n    }\n\n    output = (\n        <div className=\"error-wrapper\" style={{textAlign: \"center\"}}>\n            {output}\n            <br/>\n            <button type=\"button\" onClick={handleOnGoBack}><u>return to previous page</u></button>\n            <br/>\n            <p>or</p>\n            <br/>\n            <button type=\"button\" onClick={handleOnRefresh}><u>refresh</u></button>\n\n        </div>\n    );\n\n    return output;\n\n}\n\n\nexport default withRouter(Error);","import React, {useState, useEffect} from 'react';\n\nimport Error from 'components/modules/error';\n\nimport {usersDao} from 'dao/users.dao';\n\n//create a context object\nconst AppContext = React.createContext();\n\n/**\n * this is the component that include a context object that it can be access by all its children component\n */\nconst AppProvider = function (props) {\n\n    //user data\n    const [user, setUser] = useState(null);\n\n    //user data fetch flag\n    const [userFetch, setUserFetch] = useState(true);\n\n    //error\n    const [error, setError] = useState(null);\n\n    //title\n    const [title, setTitle] = useState(<div className=\"nav-elements\"> <h2 className=\"static-title\">HOME</h2> </div>);\n\n    //notification message\n    const [notificationMessage, setNotificationMessage] = useState(undefined);\n\n    const [projectName, setProjectName] = useState(\"\");\n\n    //preparate an object to be insertd into context\n    const contextObject ={\n        user,\n        setUser,\n        userFetch,\n        setUserFetch,\n        error,\n        setError,\n        title,\n        setTitle,\n        notificationMessage,\n        setNotificationMessage,\n        projectName,\n        setProjectName\n    };\n\n\n    //effect on context mount to fetch user data if he's logged\n    useEffect(() => {\n        //get the localStorage object\n        const storage = window.localStorage;\n\n        if (storage.getItem(\"userToken\")) {\n            async function getUserData(){\n                let res = await usersDao.getUserByTokenId(storage.getItem(\"userToken\"));\n\n                //if I receive an error I remove the deprecated token\n                if((res && res.message) || !res.email){\n                    storage.removeItem(\"userToken\");\n                }else{\n                    let user = {\"email\": res.email, \n                                \"name\": res.given_name, \n                                \"surname\": res.family_name, \n                                \"image\": res.picture};\n                    setUser(user);\n                }\n\n                setUserFetch(false);\n            }\n            getUserData();\n        }else{\n            setUserFetch(false);\n        }\n\n        \n    }, [])\n\n    //if there isn't error\n    if (!error) {\n\n        return (\n            //*set the values of contenxt*\n            <AppContext.Provider value={contextObject}>\n\n                {/*mount all components children*/}\n                {props.children}\n\n            </AppContext.Provider>\n        );\n    }\n    //if there is a error\n    else {\n        return (\n            //*set the values of contenxt*\n            <AppContext.Provider value={contextObject}>\n\n                    <Error/>\n\n            </AppContext.Provider>\n        )\n    }\n\n\n}\n\nexport {AppContext, AppProvider};","import React, {useContext, useEffect} from \"react\";\n\nimport {withRouter} from 'react-router-dom';\n\nimport {AppContext} from \"components/providers/appProvider\";\n\n/**\n * this is home component\n */\nconst Home = function (props) {\n\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set title when component mounts\n    useEffect(() => {\n        appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">HOME</h2> </div>);\n    },[])//run on component mount\n\n    const { history, location } = props;\n\n    useEffect(() => {\n        //if user is not logged it I redirect to homepage\n        if(!appConsumer.user){\n            history.push(\"/\");\n        }\n    }, [location.pathname]) //every time location changes\n\n    return (\n        <>\n            <h1>\n                Systematic Literature Review manager\n            </h1>\n            <h2 style={{fontSize: 22, fontWeight: \"normal\"}}>the system right now allows you to</h2>\n            <ul style={{fontSize: 18, fontWeight: \"lighter\"}}>\n                <li>browse a list of prjects</li>\n                <li>add a new project</li>\n                <li>browse the list of papers on a project</li>\n                <li>search(from scopus) and add papers to a project</li>\n                <li>add custom papers based on a file or form data</li>\n                <li>'fake search' similar papers</li>\n            </ul>\n            <h2 style={{fontSize: 22, fontWeight: \"normal\"}}>notes</h2>\n            <ul style={{fontSize: 18, fontWeight: \"lighter\"}}>\n                <li><i>the scopus search works partially(can't retrieve the description)</i>\n                    <ul><li style={{fontSize: 16}}><i>from Elsevier developer portal : \"The data available depends on your institutional subscriptions, and only when you're making calls from within your institutional network are you considered a subscriber\"</i></li></ul>\n                </li>\n                <li><i>the options don't affect the search, for now</i></li>\n            </ul>\n        </>\n    );\n\n\n\n\n};\n\n\nexport default withRouter(Home); //I export passing router componets to the Home so it can access history and location","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to get a projects list\n * @param queryData\n * @return {array[objects]}\n */\nasync function getProjectsList(queryData = \"\") {\n    let url = config.home + config.projects\n    let res = await http.get(url, queryData);\n    return res;\n\n\n}\n\n/**\n * dao to get a project\n * @param project_id\n * @return {Object} project requested\n */\nasync function getProject(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    let res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to get project collaborators\n * @param project_id\n * @return {array[objects]} array of collaborators\n */\nasync function getProjectCollaborators(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id + \"/collaborators\";\n    let res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to post a new project\n * @param bodyData\n * @return {Object} project created\n */\nasync function postProject(bodyData) {\n    let url = config.home + config.projects;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to post a new collaborator\n * @param project_id\n * @param bodyData email of collaborator\n * @return {String} empty string\n */\nasync function addProjectCollaborator(project_id, bodyData) {\n    let url = config.home + config.projects + \"/\" + project_id + \"/collaborators\";\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to put a old project\n * @param project_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putProject(project_id, bodyData) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    return await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a project\n * @param project_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function deleteProject(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    let res = await http.delete(url);\n    return res;\n}\n\n/**\n * dao to remove collaborator\n * @param project_id\n * @param collaborator_id the mail of the collaborator\n * @return {String} empty string\n */\nasync function removeProjectCollaborator(project_id, collaborator_id) {\n    let url = config.home + config.projects + \"/\" + project_id + \"/collaborators/\" + collaborator_id;\n    let res = await http.delete(url);\n    return res;\n}\n\n\nconst projectsDao = {\n    getProjectsList,\n    getProject,\n    postProject,\n    putProject,\n    deleteProject,\n    \"abortRequest\": http.abortRequest,\n    getProjectCollaborators,\n    removeProjectCollaborator,\n    addProjectCollaborator\n}\n\n\nexport {projectsDao};","import React from \"react\";\n\n/**\n * component svg loading-icon\n */\nconst LoadIcon = function (props) {\n\n    return (\n\n        <svg id=\"loading-icon\" className={props.class} xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n             y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <g>\n                <path id=\"loading-circle1\" d=\"\n                  M 500, 500\n                  m -160, 0\n                  a 160,160 0 1,0 320,0\n                  a 160,160 0 1,0 -320,0\n          \"/>\n                <path id=\"loading-circle2\" d=\"\n                  M 500, 500\n                  m -305, 0\n                  a 305,305 0 1,0 610,0\n                  a 305,305 0 1,0 -610,0\n          \"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default LoadIcon;\n","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst CloseButton = function (props) {\n\n    return (\n        <svg id=\"close-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <line className=\"ln\" x1=\"134\" y1=\"866\" x2=\"866\" y2=\"134\"/>\n        <line className=\"ln\" x1=\"134\" y1=\"134\" x2=\"866\" y2=\"866\"/>\n        </svg>\n    );\n};\n\nexport default CloseButton;\n","import React, {useEffect, useContext, useRef} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectsDao} from 'dao/projects.dao'\n\nimport CloseButton from 'components/svg/closeButton';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n/**\n * this is the form for create or edit the project\n * @param props.project  project object if we want to update a old project\n * @param null if we want to create a new project\n */\nfunction ProjectForm(props) {\n\n    const mountRef = useRef(false);\n    \n    let yup = require('yup');\n\n    const projectValidationSchema = yup.object().shape({\n        name: yup.string().required('please enter a title'),\n        description: yup.string().required('please enter a description')\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    return (\n        <>\n        <Formik\n            initialValues={{ name: '', description:''}}\n            validationSchema={projectValidationSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                let bodyData = {name: values.name, description: values.description};\n                //call dao\n                let res = await projectsDao.postProject(bodyData);\n\n                //error checking\n                if(mountRef.current && res.message){\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }else if(mountRef.current){\n                    props.history.push(\"/projects/\" + res.id);\n                }\n                if(mountRef.current){\n                    setSubmitting(false);\n                }\n            }}\n            validateOnBlur={false}\n        >\n        {function ({ errors, touched, isSubmitting, setErrors, validateField, handleChange }) {\n            let output = \"\";\n            output = (<Form className=\"modal floating-form add-project\" style={{visibility: (!props.visibility) ? 'hidden' : '' }}>\n                <button type=\"button\" className=\"close-btn\" onClick={(e) => {\n                    props.setVisibility(!props.visibility);\n                }}><CloseButton/></button>\n                <br/>\n                <Field\n                    style={{borderBottom : (errors.name && touched.name) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"name\"\n                    type=\"text\" \n                    placeholder=\"Please enter a project title\"\n                    onChange={(e) => {handleChange(e); validateField('name')}}/>\n                <br/>\n                <br/>\n                <Field\n                    style={{borderBottom : (errors.description && touched.description) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"description\"\n                    component=\"textarea\"\n                    placeholder=\"Please describe the topic and focus of this new project\"/>\n                <br/>\n                <button type=\"submit\" disabled={isSubmitting || \n                    ((errors.name && touched.name) ||\n                    (errors.description && touched.description))}>Add Project</button>\n            </Form>\n            );\n            return output;\n        }}\n        </Formik>\n\n       \n        </>\n    );\n\n\n}\n\n\nexport default ProjectForm;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport config from 'config/index';\n\n/**\n * this is the component for pagination\n * @param start offset of results\n * @param count number of element for page\n * @param totalResults the total number of results\n * @param path the path of current page\n * @return {*}\n * @constructor\n */\n\nconst Pagination = function({start, count, totalResults, path}) {\n\n    //set limit max of start\n    if(totalResults >config.max_total_number_for_results){\n        totalResults= config.max_total_number_for_results;\n    }\n    //prepare the correct link path for pagination\n    path = setStartAndCountInUrl(path);\n\n    let prev = \"\", next = \"\", firstPage = \"\", lastPage = \"\";\n    let listPage = [] ;\n    let separator = \"...\";\n    //number*2 of element in pagination\n    let paginationLength = 4;\n    //the page count start by 1.\n    let paged = Math.floor(start / count) + 1;\n    //get total page number\n    let totalPage = Math.ceil(totalResults / count);\n\n\n    //we need the pagination only the totalPage is major than 1\n    if (totalPage > 1) {\n\n        //if it isn't the first page, print the prev-page link\n        if (paged > 1) {\n            prev = (\n                <li>\n                    <Link className=\"prev-page\"\n                          to={path + \"start=\" + (((paged - 1) * count) > 0 ? ((paged - 2) * count) : 0) + \"&count=\" + count}>\n                        {\"<\"}\n                    </Link>\n                </li>\n            );\n        }\n        //if it isn't the last page, print the next-page link\n        if (paged < totalPage) {\n            next = (\n                <li>\n                    <Link className=\"next-page\" to={path + \"start=\" + (paged * count) + \"&count=\" + count}>\n                        {\">\"}\n                    </Link>\n                </li>\n            );\n        }\n\n        //if the first page  isn't include by regular listPage, print the first-page link\n        if (paged > paginationLength + 2) {\n            firstPage = (\n                <>\n                    <li>\n                        <Link className=\"first-page\" to={path + \"start=0&count=\" + count}>\n                            {\"1\"}\n                        </Link>\n                    </li>\n                    <li>\n                        <span>{separator}</span>\n                    </li>\n                </>\n            );\n        }\n\n        //if the last page  isn't include by regular listPage, print the last-page link\n        if (paged < totalPage - (paginationLength + 1)) {\n            lastPage = (\n                <>\n                    <li>\n                        <span>{separator}</span>\n                    </li>\n                    <li>\n                        <Link style={{display: \"inline-block\"}} className=\"last-page\"\n                              to={path + \"start=\" + ((totalPage - 1) * count) + \"&count=\" + count}>\n                            {totalPage}\n                        </Link>\n                    </li>\n                </>\n            );\n        }\n\n        //print the range of page link, the center is current paged\n        for (let i = paged - paginationLength; i <= paged + paginationLength; i++) {\n\n            //print only the i has a valid value\n            if (i > 0 && i <= totalPage) {\n\n                //if i isn't current page, print link\n                if (i !== paged) {\n\n                    listPage.push((\n                            <Link className=\"normal-page\" to={path + \"start=\" + ((i-1) * count) + \"&count=\" + count}>\n                                {i}\n                            </Link>\n                    ));\n                }\n                //if i is current page, print only text\n                else {\n                    listPage.push((\n                            <span className=\"current-page\">{paged}</span>\n                    ));\n                }\n\n            }\n        }\n\n\n    }\n\n    let output = (\n        <ul className=\"pagination\">\n            {prev}\n            {firstPage}\n            {listPage.map((element,index)=><li style={{display: \"inline-block\", margin: 10}} key={index}>{element}</li>)}\n            {lastPage}\n            {next}\n        </ul>\n    );\n    return output;\n};\n\n\n/**\n * internal function to prepare the path link for pagination\n * @param path\n * @return {*}\n */\n\nfunction setStartAndCountInUrl(path){\n\n    let url = window.location.href;\n    //get the queryString from url\n    let queryString = url.split(\"?\")[1];\n    //if it exists\n    if(queryString) {\n        //remove the part after # if it exists\n        queryString = queryString.split(\"#\")[0];\n\n        let newQueryString = \"\";\n        //split queryString in array of string\n        let arryQuery = queryString.split(\"&\");\n        for (let i = 0; i < arryQuery.length; i++) {\n            //check each queryElement\n            let parameterName = arryQuery[i].split(\"=\")[0];\n            //if it isn't start and count\n            if (parameterName !== \"start\" && parameterName !== \"count\") {\n                //add to the new queryString\n                newQueryString += arryQuery[i]+\"&\";\n            }\n        }\n        //create a new path whiteout start and count\n        path = path+\"?\"+newQueryString;\n    }\n    //if path doesn't contain any queryString\n    else {\n        path = path+\"?\";\n    }\n\n\n    return path;\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default Pagination;","//need to parse query string of url\nimport queryString from 'query-string';\n\n//here are the common support function\n\n/**\n * compares two arrays of objects\n */\nfunction arrayOfObjectsEquals(a, b) {\n\n    if (a === null || b === null) {\n        return false;\n    }\n    if (a.length !== b.length) {\n        return false;\n    }\n\n    a.sort();\n    b.sort();\n\n\n    for (var i = 0; i < a.length; ++i) {\n        if (JSON.stringify(a[i]) !== JSON.stringify(b[i])) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * checks if B is contained in A, using a key to check the inclusion\n * @param {array} a\n * @param {array} b\n * @param {string} key (object field)\n */\nfunction arrayOfObjectsContains(a, b, key) {\n\n    if (a === null || b === null) {\n        return false;\n    }\n    if (a.length === 0 || b.length === 0) {\n        return false;\n    }\n\n    //iterate over all elements of B and check if A contains it \n    //by checking wether and element in A has the same key as the selected B element(b[i])\n    for (let i = 0; i < b.length; ++i) {\n        //if doesn't contain the given element then it meand that the vector A doesn't include the vector B\n        if (!a.some(e => e[key] === b[i][key])) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * converts the checkboxes object of the search form into parameters for the url\n */\nfunction searchCheckboxesToParams(checkboxes) {\n    var params = \"\";\n    Object.keys(checkboxes).forEach(key => {//I iterate over each field of the object\n        if (key !== \"years\") {//if it's not an year\n            if (checkboxes[key]) {//if it's a true flag\n                console.log(key)\n                params += \"&\" + key + \"=\" + checkboxes[key];\n            }\n        }\n        else {//if it's a year\n            if (checkboxes.years.length !== 0) {//if there are some years selected\n                params += \"&\" + queryString.stringify({\"years\": checkboxes.years}, {arrayFormat: 'comma'});\n            }\n        }\n    });\n    return params;\n}\n\n/**\n * this is  function to manipolate 2 url string\n * if first string ends with \"/\", removes \"/\".\n * then concate wite second string and return new string\n */\nfunction join(base, path) {\n    let newPath;\n    //if the last element is \"/\"\n    if (base.charAt(base.length - 1) === '/') {\n        newPath = base.slice(0, -1) + path;\n    }\n    else {\n        newPath = base + path;\n    }\n\n    return newPath;\n\n}\n\n/**\n *\n *\n * function to create string of query by queryObject\n * @param queryData query object\n * @return {string} query string\n */\nfunction createQueryStringFromObject(queryData) {\n\n    let queryString = \"?\";\n    //create a array of keys\n    let keys = Object.keys(queryData);\n    //concatenate the object.property\n    for (let i = 0; i < keys.length; i++) {\n        //I don't need to sort for the recently added sorting\n        if (queryData[\"orderBy\"] !== \"date_created\" || keys[i] !== \"sort\") {\n            queryString += keys[i] + \"=\" + encodeURIComponent(queryData[keys[i]]);\n            //if it isn't the last element, add symbol \"&\"\n            if (i !== (keys.length - 1)) {\n                queryString += \"&\";\n            }\n        }\n    }\n    return queryString;\n\n}\n\n\n/**\n * get element index of a object array by [key, value]\n * @param array to find\n * @param key to find\n * @param value to find\n * @return {number} index of element, -1 if didn't find\n */\nfunction getIndexOfObjectArrayByKeyAndValue(array, key, value) {\n    let index = -1;\n    for (let i = 0; i < array.length; i++) {\n        if (array[i][key] === value) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n\n/**\n * function to prepare a object of queryData\n * @param query\n * @return object of queryData for the fetch\n */\nfunction createQueryDataForFiltersTab(query){\n\n    //set query params from queryString of url\n    let params = queryString.parse(query);\n    let count = params.count || 10;\n    let start = params.start || 0;\n    let orderBy = params.orderBy || \"date_created\";\n    let sort = params.sort || \"ASC\";\n\n    if(orderBy === \"date_created\"){\n        sort = \"DESC\";\n    }\n\n    let queryData = {orderBy, sort, start, count};\n    return queryData;\n\n}\n\n/**\n * function to prepare a object of queryData\n * @param queryUrl\n * @return object of queryData for the fetch\n */\nfunction createQueryDataForAutomatedSearch(queryUrl) {\n\n\n    //set query params from queryString of url\n    let params = queryString.parse(queryUrl);\n    let query = params.query || undefined;\n\n    let start = params.start || 0;\n    let count = params.count || 10;\n\n    let queryData = {query, start, count};\n\n    return queryData;\n\n}\n\n\n/**\n * function to prepare a object of queryData\n * @param queryUrl\n * @return object of queryData for the fetch\n */\nfunction createQueryDataForStandardSearch(queryUrl) {\n\n\n    //set query params from queryString of url\n    let params = queryString.parse(queryUrl);\n    let query = params.query || \"\";\n\n    let searchBy = params.searchBy || \"all\";\n    let orderBy = params.orderBy || \"title\";\n    let sort = params.sort || \"ASC\";\n    let start = params.start || 0;\n    let count = params.count || 10;\n\n\n    let scopus;\n    if (params.scopus === undefined) {\n        scopus = true;\n    }\n    else {\n        scopus = (params.scopus === \"true\");\n    }\n\n    let googleScholar = (params.googleScholar === \"true\" && !scopus);\n    let arXiv = (params.arXiv === \"true\" && !scopus && !googleScholar);\n\n    if(!scopus && !googleScholar && !arXiv){\n        scopus = true;\n    }\n\n    let year = params.year || \"all\";\n\n    let queryData = {query, searchBy, orderBy, sort, scopus, googleScholar, arXiv, year, start, count};\n\n    return queryData;\n\n}\n\n/**\n * function to prepare a object of queryData\n * @param queryUrl\n * @return object of queryData for the fetch\n */\nfunction createQueryDataForSimilarSearch(queryUrl) {\n\n\n    //set query params from queryString of url\n    let params = queryString.parse(queryUrl);\n    let query = params.query || \"\";\n\n    let orderBy = params.orderBy || \"title\";\n    let sort = params.sort || \"ASC\";\n    let start = params.start || 0;\n    let count = params.count || 10;\n\n    let year = params.year || \"all\";\n\n    let queryData = {query, orderBy, sort, year, start, count};\n\n    return queryData;\n\n}\n\nexport {\n    arrayOfObjectsEquals,\n    arrayOfObjectsContains,\n    searchCheckboxesToParams,\n    join,\n    createQueryStringFromObject,\n    getIndexOfObjectArrayByKeyAndValue,\n    createQueryDataForFiltersTab,\n    createQueryDataForAutomatedSearch,\n    createQueryDataForStandardSearch,\n    createQueryDataForSimilarSearch\n\n};","import React from \"react\";\n\n\n\n/**\n * component for covering the page\n */\nconst Cover = function ({cls, handler}) {\n    //get data from global context\n    return (\n        <div className={\"cover \" + cls} onClick={(e) => {handler(false)}}></div>\n    );\n};\n\nexport default Cover;","import React from \"react\";\n\n/**\n * component svg options menu button\n */\nconst DeleteButton = function (props) {\n\n    return (\n\n        <svg version=\"1.1\" id=\"options-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t        viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M214,482.1\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"250\" x2=\"500\" y2=\"250\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"500\" x2=\"500\" y2=\"500\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"750\" x2=\"500\" y2=\"750\"/>\n        </svg>\n\n    );\n};\n\nexport default DeleteButton;","import React,{useState} from \"react\";\n\nimport OptionsButton from 'components/svg/optionsButton';\n\n/**\n * component side options\n * it needs a class for the styling,\n * an array of options,\n * the function that will handle the click on the option\n * and, if necessary, a target for the handler function\n */\nconst SideOptions = function ({cls, options, handler, target, data}) {\n\n    //this is used to display or hide the options of the menu\n    const [focused, setFocused] = useState(false)\n\n\n    return (\n        <div className={cls}>\n            <button type=\"button\" \n                    onBlur={(e) => \n                        //if the element is blurred then I hide it\n                        {if(focused){setFocused(false)}}} \n                    onMouseDown={(e) => //onMouseDown fires before onBlur\n                        //immediately after the button is clicked I toggle the menu\n                        {setFocused(!focused)}}>\n                <OptionsButton/>\n            </button>\n            <div style={{fontSize: (focused) ? \"12px\" : \"0px\", padding: (focused) ? \"2px\" : \"0px\", border: (focused) ? \"solid 1px #e8e8e8\" : \"solid 0px #e8e8e800\"}} className=\"options-list\">\n                \n                {options.map((element, index) => \n                    <div key={index} onMouseDown={(e) => handler(target, element, data)} className=\"option\">{element}</div>\n                )}\n                \n            </div>\n        </div>\n    );\n}\n\nexport default SideOptions;","import React from \"react\";\n\n/**\n * component svg \n */\nconst EmptyFolder = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"empty-folder\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <g>\n                <g>\n                    <path className=\"st0-empty-folder\" d=\"M967.9,448.6v260c0,15.1-12.2,27.3-27.3,27.3H59.4c-15.1,0-27.3-12.2-27.3-27.3v-260c0-0.3,0-0.7,0-1\n                        c0-0.2,0-0.4,0.1-0.6c0-0.2,0-0.4,0.1-0.7c0-0.2,0.1-0.4,0.1-0.6c0-0.3,0.1-0.6,0.2-1c0.6-2.4,1.7-4.7,3.5-6.8l141.3-168.3\n                        c2.9-3.4,7.1-5.4,11.6-5.4h89.1c8.5,0,15.9,5.4,18.5,13.5l11.4,35.1c6.3,19.3,24.3,32.4,44.7,32.4h294.4\n                        c20.3,0,38.4-13.1,44.7-32.4l11.4-35.1c2.6-8,10.1-13.5,18.5-13.5h89.1c4.5,0,8.8,2,11.6,5.4l141.3,168.3c1.8,2.1,2.9,4.4,3.5,6.8\n                        c0.1,0.3,0.2,0.6,0.2,1c0,0.2,0.1,0.4,0.1,0.6s0.1,0.5,0.1,0.7s0.1,0.4,0.1,0.6C967.8,447.9,967.9,448.2,967.9,448.6z\"/>\n                    <path d=\"M974.9,448.6c0.1,31-0.8,62-1.4,93c-0.2,7.8-0.3,15.5-0.4,23.3c-0.1,7.8-0.1,15.5-0.2,23.3v46.5v46.5v23.3v2.9\n                        c0,0.5,0,0.9,0,1.5l-0.1,1.7c0,1.1-0.2,2.3-0.4,3.4c-0.1,1.1-0.5,2.2-0.7,3.4c-1.2,4.4-3.4,8.6-6.4,12.1s-6.7,6.4-10.8,8.3\n                        c-4.1,2-8.7,3.1-13.3,3.1l-23.3,0.1l-46.5,0.1l-372.1,1.1L127,742.9L80.5,743H68.9h-5.8h-2.9h-0.7h-0.9l-1.8-0.1\n                        c-4.9-0.4-9.7-1.8-14-4.2s-8-5.7-11-9.6c-2.9-3.9-5-8.5-6.1-13.3c-0.3-1.2-0.4-2.4-0.6-3.6c-0.1-1.2-0.1-2.4-0.2-3.7v-5.8v-23.3\n                        L24.8,633v-93l0.2-46.5l0.1-23.3l0.1-11.6v-5.8v-2.9c0-0.5,0-0.9,0-1.5v-0.9c0,0,0-0.6,0.1-0.9c0-0.3,0.1-0.7,0.1-1l-0.1,1.4\n                        c0-0.5,0.1-1,0.1-1.5l0.1-0.6l0.1-0.6l-0.1,0.5l0.2-1c0.1-0.3,0.2-0.7,0.2-1c0.1-0.5,0.3-1.1,0.5-1.6c0.4-1.1,0.8-2.1,1.3-3.1\n                        s1.1-1.9,1.7-2.8c0.3-0.4,0.6-0.9,1-1.3l0.9-1l6.1-7.1l12.1-14.3L73.6,383l48.4-57l48.5-56.9l1.5-1.8l0.8-0.9l0.4-0.5l0.5-0.6\n                        c1.4-1.6,3.1-2.9,5-4c1.8-1.1,3.9-1.8,5.9-2.3c1-0.2,2.1-0.4,3.2-0.4c0.3,0,0.5,0,0.8,0h0.7h1.2l18.7,0.1l37.4,0.3l18.7,0.1\n                        l9.4,0.1h2.3h1.2l1.4,0.1c1.9,0.1,3.9,0.4,5.7,1c3.7,1.1,7.1,3.2,9.9,6c1.4,1.4,2.6,2.9,3.6,4.6s1.8,3.4,2.4,5.3l5.7,17.8\n                        l5.7,17.8c1.8,5.3,4.6,10.3,8.3,14.6c7.4,8.5,18.3,13.9,29.7,14.5l2.1,0.1h2.3h4.7h9.4l18.7,0.1l37.4,0.1l74.8,0.1l74.8-0.1\n                        l37.4-0.1l18.7-0.1h9.4h4.7h2.3l2.1-0.1c11.3-0.5,22.2-6,29.6-14.5c3.7-4.2,6.5-9.2,8.3-14.5l5.7-17.8l5.6-17.8\n                        c0.6-1.9,1.4-3.6,2.4-5.3c1-1.7,2.3-3.2,3.6-4.6c2.8-2.8,6.2-4.9,10-6c1.9-0.6,3.8-0.9,5.8-1.1l1.5-0.1h1.2h2.3l9.4-0.1l18.7-0.1\n                        l37.4-0.3l18.7-0.1h1.2h0.7c0.3,0,0.5,0,0.8,0c1.1,0.1,2.2,0.2,3.2,0.4c2.1,0.5,4.2,1.2,6,2.3c1.9,1.1,3.6,2.4,5.1,4l0.5,0.6\n                        l0.4,0.5l0.8,0.9l1.5,1.8l48.5,56.9l48.4,57.1l24.1,28.6l12.1,14.3l6,7.1l0.9,1.1c0.3,0.4,0.7,0.9,1,1.3c0.6,0.9,1.2,1.8,1.7,2.8\n                        s0.9,2,1.3,3.1c0.2,0.5,0.3,1.1,0.5,1.6c0.1,0.2,0.1,0.6,0.2,1l0.2,1l-0.1-0.5l0.1,0.6l0.1,0.6c0.1,0.5,0.1,1,0.1,1.5l-0.1-1.4\n                        c0.1,0.4,0.1,0.8,0.2,1.2v0.6v0.3L974.9,448.6z M960.8,448.6v-0.7v-0.2c0,0.1,0,0.1,0,0.2s0,0.2,0.1,0.4l-0.1-1.4\n                        c0,0.1,0,0.2,0,0.2l0,0V447l-0.1-0.5l0,0v-0.1c0,0,0,0,0-0.2c-0.1-0.3-0.1-0.4-0.2-0.6c-0.1-0.4-0.3-0.8-0.5-1.2\n                        c-0.2-0.4-0.4-0.8-0.7-1.2c-0.1-0.2-0.3-0.4-0.4-0.6l-0.6-0.7l-6-7.2l-12-14.4l-24-28.7l-47.8-57.5l-47.7-57.6l-2.8-3.4\n                        c-0.6-0.7-1.4-1.3-2.2-1.8s-1.7-0.8-2.6-1.1c-0.5-0.1-0.9-0.2-1.4-0.2c-0.1,0-0.2,0-0.4,0c-0.1,0-0.2,0-0.4,0h-1.2l-18.7-0.1\n                        l-37.4-0.3l-18.7-0.1l-9.4-0.1h-2.3h-1.2h-0.9c-1.1,0.1-2.3,0.2-3.4,0.6c-4.4,1.3-8.1,4.8-9.6,9.2l-5.9,17.8l-5.9,17.8\n                        c-2.3,6.5-5.7,12.5-10.3,17.6c-9.1,10.2-22.4,16.6-36,17.2L500,349.2l-149.8,0.2c-13.6-0.6-26.9-6.9-35.9-17.2\n                        c-4.6-5.1-8-11.1-10.3-17.6l-5.9-17.8l-5.9-17.8c-1.5-4.5-5.2-8.1-9.7-9.4c-1.1-0.4-2.3-0.5-3.4-0.6h-0.9H277h-2.3l-9.4,0.1\n                        l-18.7,0.1l-37.4,0.3l-18.7,0.1h-1.2c-0.2,0-0.3,0-0.5,0c-0.1,0-0.2,0-0.4,0c-0.5,0-1,0.1-1.5,0.2c-1,0.2-1.9,0.6-2.7,1.1\n                        c-0.9,0.5-1.6,1.1-2.3,1.9l-2.8,3.4l-47.7,57.6l-47.8,57.6l-23.9,28.8l-11.9,14.4l-6,7.2l-0.6,0.8c-0.1,0.2-0.3,0.4-0.4,0.6\n                        c-0.3,0.4-0.5,0.8-0.7,1.2c-0.2,0.4-0.4,0.8-0.5,1.2c-0.1,0.2-0.1,0.4-0.2,0.6c0,0.2,0,0.1,0,0.2v0.1v0.1l-0.1,0.5v0.1\n                        c0,0,0,0.1,0,0s0-0.2,0-0.2l-0.1,1.4c0-0.1,0.1-0.2,0.1-0.3c0-0.1,0-0.3,0-0.2v0.6c0,0.4,0,0.9,0,1.4v2.9v5.8l0.1,11.6l0.1,23.3\n                        l0.2,46.5v93l-0.1,46.5v23.3v5.8l0.1,2.1c0.1,0.7,0.2,1.4,0.3,2.1c0.6,2.8,1.8,5.4,3.5,7.7s3.9,4.2,6.4,5.6\n                        c2.5,1.4,5.3,2.2,8.1,2.4l1.1,0.1h0.5h0.7h2.9H69h11.6l46.5,0.1l372.1,0.8l372.1,1.1l46.5,0.1H941c6.3-0.1,12.5-3,16.6-7.9\n                        c2.1-2.4,3.5-5.3,4.4-8.3c0.2-0.8,0.4-1.5,0.5-2.3s0.3-1.6,0.3-2.4l0.1-1.2c0-0.4,0-0.9,0-1.4v-2.9V681v-46.5V588\n                        c0-7.8-0.1-15.5-0.2-23.3c-0.1-7.8-0.2-15.5-0.4-23.3C961.6,510.6,960.7,479.6,960.8,448.6z\"/>\n                </g>\n                <g>\n                    <path className=\"st1-empty-folder\" d=\"M952.8,686.4l-120.7-220l-9.8-17.9c-2.7-4.8-7.7-7.8-13.2-7.8H190.9c-5.5,0-10.6,3-13.2,7.8l-9.8,17.9\n                        L50,681.3\"/>\n                    <path className=\"st2-empty-folder\" d=\"M951.1,687.4L915,622.6l-36-64.9l-35.8-65l-17.9-32.5l-4.5-8.1l-1.1-2c-0.3-0.6-0.6-1.1-1-1.6\n                        c-0.8-1-1.7-1.8-2.7-2.6c-2-1.4-4.5-2.2-7-2.2h-9.3l-296.8,0.2l-296.8-0.2h-9.3h-4.6H191h-0.9c-0.6,0.1-1.2,0.1-1.8,0.3\n                        c-2.4,0.5-4.6,1.8-6.3,3.7c-0.4,0.5-0.8,1-1.1,1.5c-0.2,0.3-0.3,0.5-0.5,0.8l-0.6,1l-2.2,4.1l-17.9,32.5l-35.8,65l-36,64.9\n                        l-36.1,64.8l-3.5-1.9L83.5,615l35.4-65.2l35.6-65.1l17.8-32.6l2.2-4.1l0.6-1c0.2-0.4,0.5-0.8,0.7-1.2c0.5-0.8,1.1-1.5,1.7-2.2\n                        c2.5-2.8,5.8-4.7,9.5-5.6c0.9-0.2,1.8-0.3,2.8-0.4h1.4h1.2h4.6h9.3l296.8-0.2l296.8,0.2h9.3c3.7,0,7.4,1.2,10.5,3.3\n                        c1.5,1.1,2.9,2.4,4,3.8c0.6,0.7,1.1,1.5,1.5,2.3l1.1,2l4.5,8.1l17.8,32.6l35.6,65.1l35.4,65.2l35.3,65.3L951.1,687.4z\"/>\n                </g>\n                <path className=\"st3-empty-folder\" d=\"M967.9,448.6v260c0,15.1-12.2,27.3-27.3,27.3H59.4c-15.1,0-27.3-12.2-27.3-27.3v-260c0,8.7,6.8,16.9,16.8,16.9\n                    h111.4c12.9,0,24.4,8.3,28.3,20.6l17.4,53.8c9.6,29.6,37.2,49.7,68.4,49.7h451c31.2,0,58.8-20.1,68.4-49.7l17.4-53.8\n                    c4-12.3,15.4-20.6,28.3-20.6H951C961.1,465.5,967.9,457.3,967.9,448.6z\"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default EmptyFolder;","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Link} from 'react-router-dom';\nimport queryString from 'query-string';\n\n\nimport {projectsDao} from 'dao/projects.dao';\nimport LoadIcon from 'components/svg/loadIcon';\nimport ProjectForm from 'components/projects_page/projectForm';\nimport Pagination from 'components/modules/pagination';\nimport {join} from 'utils';\nimport Cover from 'components/modules/cover';\nimport SideOptions from 'components/modules/sideOptions';\n\nimport {AppContext} from \"components/providers/appProvider\";\nimport EmptyFolder from \"components/svg/emptyFolder\";\n\n/**\n *this component will show a projects list page\n */\n\nconst ProjectsList = function (props) {\n\n    const mountRef = useRef(false);\n\n    //fetch data\n    const [projectsList, setProjectsList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //bool to control the visualization of input form\n    const [toggleform, setToggleForm] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(props.location.search);\n\n\n    //set title when component mounts\n    useEffect(() => {\n        mountRef.current = true;\n\n        appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">PROJECTS</h2> </div>);\n        //I remove any old project name that was previously saved\n        appConsumer.setProjectName(\"\");\n\n        return () => {\n            mountRef.current = false;\n        };\n    },[]); //run on component mount\n\n    useEffect(() => {\n\n        let mnt = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //hide the page\n            setDisplay(false);\n\n            //call the dao\n            const res = await projectsDao.getProjectsList({orderBy: \"date_last_modified\", ...queryData});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setProjectsList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n                //update state\n\n                //I put even first and then odd ones so I can display 2 columns with left-right flow \n                var even_projs = [];\n                even_projs = res.results.filter(function(element, index){ if( index % 2 ) return element;});\n                var odd_projs = [];\n                odd_projs = res.results.filter(function(element, index){ if( !(index % 2) ) return element;});\n\n                setProjectsList(odd_projs.concat(even_projs));\n                setTotalResults(res.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n        };\n\n        fetchData();\n\n        //when the component will unmount or this useEffect will stop\n        return () => {\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count]); //re-execute when these variables change\n\n\n    //handle to delete project\n    async function handleDelete(id){\n\n        console.log(\"deleting \" + id);\n        //call the dao\n        let res = await projectsDao.deleteProject(id);\n\n        //empty string is the response from the dao layer in case of success(rember that empty string is a falsy value)\n        if(mountRef.current && res === \"\"){\n            //create a new array without the project deleted\n            let newProjectsList = projectsList.filter((project)=>project.id !== id);\n            //update project list state\n            setProjectsList(newProjectsList);\n\n            appConsumer.setNotificationMessage(\"Successfully deleted\");\n        }\n        //error checking\n        //if is other error\n        else if (mountRef.current && res && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);  \n        }\n    }\n\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print svg image\n        output = <LoadIcon/>;\n    }\n\n    else {\n\n        output = (\n            <div>\n                <Cover cls={toggleform ? \"full-screen\" : \"\"} handler={setToggleForm}/>\n                {/*print list of projects*/}\n                <PrintList projectsList={projectsList} path={props.match.url} handleDelete={handleDelete}/>\n                {/*set listId and continues value*/}\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={props.match.url}/>\n\n                {/*print the input form to create/update the projects*/}\n                <ProjectForm visibility={toggleform} setVisibility={setToggleForm} history={props.history}/>\n                {/*button to show input form*/}\n                <div className=\"bottom-right-button-holder\">\n                    <button className=\"bottom-right-btn add-project-btn\" type=\"button\" value=\"toggle-insert-form\" \n                    onClick={(e) => {\n                        setToggleForm(!toggleform);\n                    }}>\n                        <div className=\"btn-title\">Add Project</div><div className=\"btn-icon\"> </div>\n                    </button>\n                </div>\n            </div>\n        );\n\n    }\n\n    return output;\n\n\n};\n\n\n/**\n *  internal component only to print the list\n * @param projectsList projects list data\n * @param path current page url\n * @param handleDelete function to delete the project\n * */\nconst PrintList = function ({projectsList, path, handleDelete}) {\n\n    let sideOptions= [\"delete\"];\n\n    let maps;\n    //if list is empty, print a notice message\n    if (projectsList.length === 0) {\n        maps = (\n            <div className=\"empty-folder-wrapper\"> <EmptyFolder/> <p className=\"empty-folder-description\"> You don't have any projects yet </p></div>\n        );\n    }\n    //if list isn't empty, print list of projects\n    else {\n        maps = (projectsList.map((element, index) =>\n                <div key={element.id} className=\"light-modal project-card\">\n                    <SideOptions options={sideOptions} handler={handleDelete} target={element.id} cls=\"card-options project-card-options\"/>\n                    <Link to={join(path, \"/\" + element.id)}>\n                        <h3>{element.data.name}</h3>\n                        <p className=\"description\">{element.data.description}</p>\n                        <div className=\"project-dates\">\n                            <p>{/*created on <i>{element.date_created.slice(0, 10)}</i>*/}</p>\n                            <p>last modified on <i>{element.date_last_modified.slice(0, 10)}</i></p> \n                        </div>\n                    </Link>\n                </div>\n        ));\n    }\n\n    let output =  (\n        <div className={(projectsList.length === 0) ? \"project-cards-holder-empty\" : \"project-cards-holder\"}>\n            {maps}\n        </div>\n    );\n\n    return output;\n\n};\n\n/**\n * internal function to prepare a object of queryData\n * @param query\n * @return object of queryData for the fetch\n */\nfunction createQueryData(query){\n\n    //set query params from queryString of url\n    let params = queryString.parse( query);\n    let count = params.count || 10;\n    let start = params.start || 0;\n\n    //if \"before\" is defined by query then insert it in object, else insert \"after\" in object\n    let queryData = {start, count};\n    return queryData;\n\n}\n\n\n\n\n\nexport default ProjectsList;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to search local papers\n * @param queryData\n * @return {array[objects]}\n */\nasync function search(queryData){\n    let url = config.home+config.search;\n\n        const res = await http.get(url, queryData);\n        return res;\n\n}\n\n/**\n * get a specific paper\n */\nasync function selectById(id){\n    let url = config.home + config.papers + \"/\" + id;\n\n    const res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to search similar papers\n * @param bodyData\n * @return {array[objects]}\n */\nasync function searchSimilar(bodyData){\n    let url = config.home+config.search_similar;\n\n    const res = await http.post(url, bodyData);\n\n    \n    return res;\n\n}\n\n/**\n * dao to automated search\n * @param bodyData\n * @return {array[objects]}\n */\nasync function searchAutomated(bodyData){\n    let url = config.home+config.search_automated;\n\n    const res = await http.post(url, bodyData);\n\n    \n    return res;\n\n}\n\nconst paperDao = {\n    search,\n    selectById,\n    searchSimilar,\n    searchAutomated,\n    \"abortRequest\" : http.abortRequest\n}\n\n\n\nexport {paperDao};","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst SelectTick = function (props) {\n\n    return (\n        <svg id=\"select-tick\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st-tick\" points=\"918,192.3 389.3,807.7 82,450 \">\n                <animate attributeName=\"points\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\"\n                    from=\"500,600 400,700 200,750\"\n                    to=\"918,192.3 389.3,807.7 82,450 \"\n                />\n            </polyline>\n        </svg>\n    );\n};\n\nexport default SelectTick;\n","import React, {useState, useEffect} from \"react\";\n\nimport SelectTick from 'components/svg/selectTick';\n\nconst CheckBox = function ({ val, name, label, isChecked, handler }) {\n\n    let output = \"\";\n    const [tick, setTick] = useState(<></>);\n    useEffect(() => {\n        if(isChecked){\n            setTick(<SelectTick/>);\n        }else{\n            setTick(<></>)\n        }\n    }, [isChecked])\n\n    \n    output = (\n        <label className=\"checkbox-container\">\n            <input type=\"checkbox\" value={val} name={name} checked={isChecked} onChange={(e) => {handler(e)}} />\n            <span className=\"checkmark\">{tick}</span>\n            <span className=\"name\">{label}</span>\n        </label>\n    );\n    return output;\n}\n\nexport default CheckBox;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to get a list of paper associated with a project\n * @param queryData\n * @return {array[objects]}\n */\nasync function getPapersList(queryData) {\n    let url = config.home + config.papers\n    const res = await http.get(url, queryData);\n    return res;\n\n}\n\n/**\n * dao to get a paper\n * @param paper_id\n * @return {Object} paper requested\n */\nasync function getPaper(paper_id) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.get(url);\n}\n\n/**\n * dao to post a new paper\n * @param bodyData\n * @return {Object} project created\n */\nasync function postPaperIntoProject(bodyData) {\n    let url = config.home + config.papers;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to post a new custom paper\n * @param bodyData\n * @return {Object} project created\n */\nasync function postCustomPaperIntoProject(bodyData) {\n    let url = config.home + config.customPapers;\n    return await http.post(url, bodyData);\n}\n\n\n/**\n * dao to put a old paper\n * @param paper_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putPaper(paper_id, bodyData) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a paper\n * @param paper_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function deletePaper(paper_id) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.delete(url);\n}\n\n\nconst projectPapersDao = {\n    getPapersList,\n    getPaper,\n    postPaperIntoProject,\n    postCustomPaperIntoProject,\n    putPaper,\n    deletePaper,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {projectPapersDao};","import React from \"react\";\n\n/**\n * component svg \n */\nconst NoPapers = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"no-papers\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <line className=\"st0-no-papers\" x1=\"790\" y1=\"223.1\" x2=\"790\" y2=\"255.6\"/>\n            <line className=\"st1-no-papers\" x1=\"790\" y1=\"357.8\" x2=\"790\" y2=\"801.3\"/>\n            <polyline className=\"st0-no-papers\" points=\"790,852.4 790,884.9 757.5,884.9 \t\t\"/>\n            <line className=\"st2-no-papers\" x1=\"635.6\" y1=\"884.9\" x2=\"303.4\" y2=\"884.9\"/>\n            <polyline className=\"st0-no-papers\" points=\"242.5,884.9 210,884.9 210,852.4 \t\t\"/>\n            <line className=\"st3-no-papers\" x1=\"210\" y1=\"757.8\" x2=\"210\" y2=\"194.9\"/>\n            <polyline className=\"st0-no-papers\" points=\"210,147.6 210,115.1 242.5,115.1 \t\t\"/>\n            <polyline className=\"st4-no-papers\" points=\"338.4,115.1 682,115.1 733.1,166.2 \t\t\"/>\n            <polyline className=\"st0-no-papers\" points=\"767,200.1 790,223.1 757.5,223.1 \t\t\"/>\n            <polyline className=\"st0-no-papers\" points=\"714.5,223.1 682,223.1 682,190.6 \t\t\"/>\n            <line className=\"st0-no-papers\" x1=\"682\" y1=\"147.6\" x2=\"682\" y2=\"115.1\"/>\n        </svg>\n    );\n};\n\nexport default NoPapers;","import React from \"react\";\n\n/**\n * component svg\n */\nconst InfoIcon = function (props) {\n    return(\n        <svg version=\"1.1\" id=\"info\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <line className=\"st0-info\" x1=\"500\" y1=\"369\" x2=\"500\" y2=\"817\"/>\n            <circle className=\"st1-info\" cx=\"500\" cy=\"198\" r=\"48\"/>\n        </svg>\n    );\n}\n\nexport default InfoIcon;","import React, {useState} from \"react\";\nimport InfoIcon from \"components/svg/infoIcon\";\n\n\nconst PaperConfidence = function ({confidence}) {\n\n    const [displayDetails, setDisplayDetails] = useState(false)\n\n    return (\n        <div className=\"side-info-wrapper\">\n        <div className=\"side-info\">\n                <div className=\"confidence\">\n                    {confidence.value}\n                </div>\n                <div className=\"confidence-info\">\n                    <button type=\"button\" onClick={(e) => {setDisplayDetails(!displayDetails)}}><InfoIcon></InfoIcon></button>\n                    <div className=\"confidence-details\" style={{display: (displayDetails) ? \"block\" : \"none\"}}>\n                        {confidence.details.map((element, index) => \n                            <p key={index}>\n                                <span>{element.detail}</span> <span className=\"side-detail\">{element.percentage}</span>\n                            </p>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\nexport default PaperConfidence;","import React, {useContext, useState, useEffect, useRef} from \"react\";\nimport ClampLines from 'react-clamp-lines';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport CheckBox from \"components/forms_elements/checkbox\";\nimport SideOptions from 'components/modules/sideOptions';\nimport {projectPapersDao} from 'dao/projectPapers.dao';\nimport {AppContext} from 'components/providers/appProvider'\n\nimport NoPapers from \"components/svg/noPapers\";\n\nimport {join} from 'utils/index';\nimport PaperConfidence from \"components/projects_page/search_tab/search_automated/paperConfidence\";\n/**\n * prints the papers list of a local search on the fake database\n */\n/*\nconst PrintLocalSearchList = function ({papersList, handlePaperSelection}) {\n\n    let output = papersList.map((element, index) =>\n        <div key={element.id} className=\"paper-card\">\n            <CheckBox name={\"\"} label={\"\"} val={element.eid}  handler={handlePaperSelection}/>\n            <Link to={\"#\"}><h3>{element.data && element.data.title}</h3></Link>\n            <ClampLines\n                text={element.data && element.data.abstract}\n                lines={4}\n                ellipsis=\"...\"\n                moreText=\"Expand\"\n                lessText=\"Collapse\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    );\n    return output;\n\n};\n*/\n\n/**\n * prints the results of a search on scopus\n */\nconst PrintScoupusSearchList_w = function ({papersList, handlePaperSelection, selectedEidList, history, match, setTargetPaperData}) {\n\n    //side options\n    let sideOptions= [\"search similar\"];\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //handle for the side options\n    async function handleSideOptions(id, name, data){\n        if(name === \"search similar\"){\n            console.log(\"here you want to search for a similar paper\");\n            console.log(data);\n\n            //I extract the path to check if I'm on /search or /searchsimilar\n            let path = (match.path[match.path.length - 1] === \"/\") ? match.path.substring(0, match.path.length - 1) : match.path;\n            let goSimilar = path;\n            if(path[path.length - 1] === \"h\"){\n                goSimilar = path + \"similar\";\n                //I set the paper in the storage before switching page\n                const storage = window.localStorage;\n                storage.setItem(\"targetPaperData\", JSON.stringify(data));\n                history.push(goSimilar);\n            }else{\n                setTargetPaperData(data);\n            }\n\n        }\n    }\n\n    let output = papersList.map((element, index) =>\n        <div key={index} className=\"generic-card paper-card\">\n            <CheckBox name={element.title} label={\"\"} val={element.eid}  isChecked ={selectedEidList.includes(element.eid)} handler={handlePaperSelection}/>\n            <SideOptions options={sideOptions} handler={handleSideOptions} target={element.id} data={element} cls=\"card-options\"/>\n            <Link to={\"#\"}><h3>{(element.title) ? element.title : \"[MISSING TITLE]\"}</h3></Link>\n            <div className=\"extra-info\">\n                <p className=\"authors\">{(element.authors) ? element.authors : \"[MISSING AUTHORS]\"}</p>\n                <p className=\"eid\">{(element.eid) ? element.eid : \"[MISSING EID]\"}</p>\n                <p className=\"date\">{(element.year) ? element.year : \"[MISSING YEAR]\"}</p>\n            </div>\n            <ClampLines\n                text={(element.abstract) ? element.abstract : \"[MISSING ABSTRACT]\"}\n                lines={4}\n                ellipsis=\"...\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    );\n    return output;\n\n};\n\n/**\n * prints a list of papers and handles their removal from the project\n */\n\nconst PrintPapersList_w = function ({papersList, location, history}) {\n\n    const mountRef = useRef(false);\n\n    const [localPaperList, setLocalPaperList] = useState(papersList);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //side options\n    let sideOptions= [\"delete\", \"search similar\"];\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //handle for the side options\n    async function handleSideOptions(id, name, data){\n        if(name === \"delete\"){\n            console.log(\"deleting \" + id);\n            //call the dao\n            let res = await projectPapersDao.deletePaper(id);\n            //error checking\n            //if is other error\n            if (mountRef.current && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (mountRef.current && res !== null) {\n\n                appConsumer.setNotificationMessage(\"Successfully deleted\");\n                let newPapersList = localPaperList.filter((paper)=>paper.id !== id);\n                setLocalPaperList(newPapersList);\n            }\n        }else if(name === \"search similar\"){\n            console.log(\"here you want to search for a similar paper\");\n            console.log(location);\n\n            const storage = window.localStorage;\n            storage.setItem(\"targetPaperData\", JSON.stringify(data));\n            history.push(join(location.pathname, \"/searchsimilar\"));\n        }\n    }\n\n    let output;\n    //if list is empty, print a notice message\n    if (localPaperList.length === 0) {\n        output = (\n            <div className=\"empty-list-wrapper\"> <NoPapers/> <p className=\"empty-list-description\"> There are no papers here, you can add new ones by searching </p></div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else {\n        output = (\n            localPaperList.map((element) =>\n                <div key={element.id} className=\"generic-card paper-card\">\n                    <SideOptions options={sideOptions} handler={handleSideOptions} target={element.id} data={element.data} cls=\"card-options\"/>\n                    <Link to={\"#\"}><h3>{(element.data.title) ? element.data.title : \"[MISSING TITLE]\"}</h3></Link>\n                    <div className=\"extra-info\">\n                        <p className=\"authors\">{(element.data.authors) ? element.data.authors : \"[MISSING AUTHORS]\"}</p>\n                        <p className=\"eid\">{(element.data.eid) ? element.data.eid : \"[MISSING EID]\"}</p>\n                        <p className=\"date\">{(element.data.year) ? element.data.year : \"[MISSING YEAR]\"}</p>\n                    </div>\n                    <ClampLines\n                        text={(element.data.abstract) ? element.data.abstract : \"[MISSING ABSTRACT]\"}\n                        lines={4}\n                        ellipsis=\"...\"\n                        className=\"paragraph\"\n                        moreText=\"more\"\n                        lessText=\"less\"\n                    />\n                </div>\n            )\n        );\n    }\n    return output;\n\n\n};\n\nconst PrintSearchAutomatedList_w = function ({papersList, handlePaperSelection, selectedEidList}) {\n\n    let output = papersList.map((element, index) =>\n        <div key={index} className=\"generic-card paper-card\">\n            <CheckBox name={element.title} label={\"\"} val={element.eid}  isChecked ={selectedEidList.includes(element.eid)} handler={handlePaperSelection}/>\n            <PaperConfidence confidence={{value : element.confidence, details : [{detail: \"detail 1\", percentage : \"67%\"},{detail: \"detail 2\", percentage : \"64%\"},{detail: \"detail 3\", percentage : \"59%\"}]}}/>\n            <Link to={\"#\"}><h3 className=\"auto-paper-title\">{element.title}</h3></Link>\n            <div className=\"extra-info\">\n                <p className=\"authors\">{element.authors}</p>\n                <p className=\"eid\">{element.eid}</p>\n                <p className=\"date\">{element.year}</p>\n            </div>\n            <ClampLines\n                text={element.abstract}\n                lines={4}\n                ellipsis=\"...\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    );\n    return output;\n\n};\n\nexport const PrintPapersList = PrintPapersList_w;\nexport const PrintScoupusSearchList = withRouter(PrintScoupusSearchList_w);\nexport const PrintSearchAutomatedList = withRouter(PrintSearchAutomatedList_w);","import React from \"react\";\n\n/**\n * component svg select arrow\n * 'focused' is a flag used for displaying a different shape\n */\nconst SelectArrow= function ({focused}) {\n    var from=\"\";\n    var to=\"\";\n    //I check if the upper component is focused and then I animate\n    if(focused){\n        from=\"90,295.5 500,704.5 910,295.5 \";\n        to=\"90,704.5 500,295.5 910,704.5 \";;\n    }else{\n        from=\"90,704.5 500,295.5 910,704.5 \";;\n        to=\"90,295.5 500,704.5 910,295.5 \";\n    }\n    return (\n    <svg version=\"1.1\" id=\"arrow-select\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n        viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st-arrow-select\" points={from}>\n            <animate attributeType=\"XML\" id=\"ani-select-arrow\" attributeName=\"points\" from={from} to={to} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n            </polyline>\n        </svg>\n    );\n};\n\nexport default SelectArrow;\n\n","import React, {useState} from \"react\";\nimport SelectArrow from 'components/svg/selectArrow';\n\n\n/**\n * this component acts as an html <select>\n * it needs an array of options, the index of the selected one and the hadler to change the status of the upper component calling this one\n */\nconst Select = ({ options, selected, handler }) => {\n    \n    //this is useful for the animation\n    const [focused, setFocused] = useState(false);\n\n\n\n    function handleFocus(e){\n        //handle arrow animation and focus of menu\n        document.getElementById(\"ani-select-arrow\").beginElement();//trigger svg animation\n        setFocused(!focused);\n    }\n\n    var output = (\n        <div className=\"custom-select\">\n            <div className=\"selected\" tabIndex={-2} onBlur={handleFocus} onFocus={handleFocus}>{(options[selected]) ? options[selected].label : \"[invalid selection]\"} <div className=\"arrow\"><SelectArrow focused={focused}/></div></div>\n            <div className=\"options-holder\" style={{fontSize: (!focused) ? '0px' : '15px', borderBottom: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderLeft: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderRight: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderTop:\"none\"}}>\n                {options.map((element, index) => (\n                <div key={index} data-value={index} className=\"option\" style={{padding: (!focused) ? '0px' : '2px' }} onMouseDown={handler}>\n                    {element.label}\n                </div>))}\n            </div>\n        </div>\n    );\n    return output;\n}\n\nexport default Select;","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst RemoveButton = function (props) {\n\n    return (\n        <svg id=\"remove-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <line className=\"rb\" x1=\"134\" y1=\"866\" x2=\"866\" y2=\"134\"/>\n        <line className=\"rb\" x1=\"134\" y1=\"134\" x2=\"866\" y2=\"866\"/>\n        </svg>\n    );\n};\n\nexport default RemoveButton;\n","import React, {useEffect, useContext, useState} from \"react\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao';\n\nimport RemoveButton from 'components/svg/removeButton';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n\n/**\n * component to print the box of list of selected paper\n */\nconst SelectedPapersListBox = function ({project_id, selectedPapersList, setSelectedPapersList, handlePaperSelection, mounted}){\n\n    //get the localStorage object (used for saving selected papers)\n    const storage = window.localStorage;\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        //if exists already this attribute in the local storage\n        if (storage.getItem(\"selectedPapersList\")) {\n            setSelectedPapersList(JSON.parse(storage.getItem(\"selectedPapersList\")));\n        } \n\n    }, [])\n\n    /*function to post selected papers in the project*/\n    async function handleAddPapers(event) {\n\n        let papersToAdd = selectedPapersList;\n        //empties the state\n        setSelectedPapersList([]);\n        //update the storage\n        storage.removeItem(\"selectedPapersList\");\n\n        //create a eidList from the list of selected paper\n        let arrayEid = papersToAdd.map(element => element.eid);\n\n        console.log(\"ADDING\");\n        console.log(arrayEid);\n\n        //call dao\n        let res = await projectPapersDao.postPaperIntoProject({\n            \"arrayEid\": arrayEid, \"project_id\": project_id\n        });\n\n        //if there is the error\n        if (mounted.current && res && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);\n            return null;\n        }\n\n        if(mounted.current){\n            //empties the state\n            setSelectedPapersList([]);\n\n            //update the storage\n            storage.removeItem(\"selectedPapersList\");\n\n            appConsumer.setNotificationMessage(\"Insert completed\");\n        }\n\n    }\n\n    let output = \"\";\n    output = (\n        <div className=\"selected-papers-list\" style={{opacity: (selectedPapersList.length>0) ? \"1.0\" : \"0.0\", pointerEvents: (selectedPapersList.length>0) ? \"auto\" : \"none\"}}>\n            <h3>\n                {\"SELECTED PAPERS\"} <br/><span>(total : {selectedPapersList.length})</span>\n            </h3>\n            <div className=\"submission-wrapper\">\n                <div className=\"papers-wrapper\" style={{border: (selectedPapersList.length>0) ? \"\" : \"0px\"}}>\n                    <div className=\"papers-flex\" style={{padding: (selectedPapersList.length>0) ? \"\" : \"0px\"}}>\n                        {selectedPapersList.map((element, index) =>\n                            <p key={index}>\n                                <span>{element.title}</span> \n                                <button type=\"button\" className=\"remove-btn\" name={element.title} value={element.eid} //name and value don't work on the button event for some reasons\n                                    onClick={(e) => {handlePaperSelection({target: {name: element.title, value:element.eid}})}}>\n                                    <RemoveButton/>\n                                </button>\n                            </p>\n                        )}\n                    </div>\n                </div>\n                <button style={{border: (selectedPapersList.length>0) ? \"\" : \"0px\", margin: (selectedPapersList.length>0) ? \"\" : \"0px\", height: (selectedPapersList.length>0) ? \"\" : \"0px\", pointerEvents: (selectedPapersList.length>0) ? \"auto\" : \"none\"}} \n                    className=\"ti-btn add-resultpaper-btn\" type=\"button\" value=\"Submit\" onClick={handleAddPapers}>\n                    <div className=\"btn-title\">Add Selected Paper</div><div className=\"btn-icon\"> </div>\n                </button>\n            </div>\n        </div>\n    );\n\n    return output;\n\n};\n\n\nexport default SelectedPapersListBox;","import React, {useState, useEffect} from \"react\";\n\n/**\n * component svg order arrow button\n@param {string} up [ASC or DESC]\n */\nconst OrderArrow= function ({display, up}) {\n\n    let output = \"\";\n\n    let from=\"\";\n    let to=\"\";\n\n    //I check where the arrow should point to(up or down) checking the 'up' flag passed by the parent component\n    if(up ===\"ASC\"){\n        from=\"371.7,293 500,165 628.3,293 \";\n        to=\"371.7,491.9 500,619.9 628.3,491.9 \";\n    }else{\n        from=\"371.7,491.9 500,619.9 628.3,491.9 \";\n        to=\"371.7,293 500,165 628.3,293 \";\n    }\n\n    const [destination, setDestination] = useState(to);\n\n    useEffect(() => {\n      setDestination(to);\n    }, [to])\n\n    if(display){\n        output = (\n            <svg version=\"1.1\" id=\"order-arrow\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\" >\n                <polyline className=\"st-order-arrow-head\" points=\"371.7,293 500,165 628.3,293 \" transform=\"matrix(1.5303008,0,0,1.5303008,-279.47582,-105.57059)\">\n                    <animate attributeType=\"XML\" id=\"ani-order-arrow\" attributeName=\"points\" from={from} to={destination} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n                </polyline>\n                <line className=\"st-order-arrow\" x1=\"485.67453\" y1=\"145.09268\" x2=\"485.67453\" y2=\"827.75989\"/>\n            </svg>\n        );\n    }\n    \n    return output;\n};\n\nexport default OrderArrow;","import React from \"react\";\n\n/**\n * component svg \n */\nconst NoSearchResults = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"no-results\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <circle className=\"st0-no-results\" cx=\"585.3\" cy=\"419.7\" r=\"271.7\"/>\n            <line className=\"st3-no-results\" x1=\"111.2\" y1=\"894\" x2=\"393.2\" y2=\"611.8\"/>\n            <path className=\"st1-no-results\" d=\"M460.6,533c83.1-20,166.2-20,249.4,0\"/>\n            <line className=\"st2-no-results\" x1=\"683.8\" y1=\"329\" x2=\"683.8\" y2=\"337\"/>\n            <line className=\"st2-no-results\" x1=\"512.8\" y1=\"329\" x2=\"512.8\" y2=\"337\"/>\n        </svg>\n    );\n};\n\nexport default NoSearchResults;","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst RadioTick = function (props) {\n\n    return (\n        <svg id=\"radio-tick\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t        viewBox=\"0 0 1000 1000\">\n            <circle className=\"st-circle\" cx=\"500\" cy=\"500\" r=\"375\">\n                <animate attributeName=\"r\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\"\n                                from=\"0\"\n                                to=\"375\"\n                />\n            </circle>\n        </svg>\n    );\n};\n\nexport default RadioTick;\n","import React, {useState, useEffect} from \"react\";\n\nimport RadioTick from 'components/svg/radioTick';\n\nconst RadioBox = function ({ label, name, val, isChecked , handler}) {\n\n    let output = \"\";\n    const [tick, setTick] = useState(<></>);\n    useEffect(() => {\n        if(isChecked){\n            setTick(<RadioTick/>);\n        }else{\n            setTick(<></>)\n        }\n    }, [isChecked])\n\n    output= (\n        <label className=\"radiobox-container\">\n        <input type=\"radio\" value={val} name={name} checked={isChecked} onChange={handler}/>\n        <span className=\"radiomark\">{tick}</span>\n        <span>{label}</span>\n        </label>\n    );\n    return output;\n}\n\nexport default RadioBox;","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst SearchButton = function (props) {\n\n    return (\n        <svg id=\"search-icon\" xmlns=\"http://www.w3.org/2000/svg\"\n             xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M626.9,644.3c-73.5,0-142.6-28.6-194.6-80.6s-80.6-121.1-80.6-194.6s28.6-142.6,80.6-194.6\n                c52-52,121.1-80.6,194.6-80.6c73.5,0,142.6,28.6,194.6,80.6c52,52,80.6,121.1,80.6,194.6s-28.6,142.6-80.6,194.6\n                S700.4,644.3,626.9,644.3z\"/>\n            <line className=\"st1\" x1=\"145.2\" y1=\"850.8\" x2=\"431.7\" y2=\"564.3\"/>\n        </svg>\n    );\n};\n\nexport default SearchButton;\n","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst SearchSimilarButton = function (props) {\n\n    return (\n        <svg id=\"similar-paper-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" \n            xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st0-sps\" points=\"795.8,214 734.8,214 736.8,146 \t\t\"/>\n            <polyline className=\"st0-sps\" points=\"842.8,214 842.8,875.8 262.8,875.8 262.8,106 734.8,106 \t\t\"/>\n            <line className=\"st0-sps\" x1=\"842.8\" y1=\"214\" x2=\"734.8\" y2=\"106\"/>\n            <line className=\"st1-sps\" x1=\"350.8\" y1=\"198.9\" x2=\"644.8\" y2=\"198.9\"/>\n            <line className=\"st2-sps\" x1=\"346.8\" y1=\"385.4\" x2=\"752.8\" y2=\"385.4\"/>\n            <line className=\"st2-sps\" x1=\"544\" y1=\"485.9\" x2=\"752.8\" y2=\"485.9\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"485.9\" x2=\"544\" y2=\"485.9\"/>\n            <line className=\"st2-sps\" x1=\"575.9\" y1=\"586.4\" x2=\"752.8\" y2=\"586.4\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"586.4\" x2=\"575.9\" y2=\"586.4\"/>\n            <line className=\"st2-sps\" x1=\"555.5\" y1=\"686.9\" x2=\"752.8\" y2=\"686.9\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"686.9\" x2=\"555.5\" y2=\"686.9\"/>\n            <circle className=\"st4-sps\" cx=\"410.8\" cy=\"594.3\" r=\"171.7\"/>\n            <line className=\"st4-sps\" x1=\"111.2\" y1=\"894\" x2=\"289.4\" y2=\"715.7\"/>\n        </svg>\n        \n    );\n};\n\nexport default SearchSimilarButton;\n","import React, {useState, useEffect, useContext} from \"react\";\nimport {Link} from 'react-router-dom'\n\nimport RadioBox from \"components/forms_elements/radiobox\";\n\nimport SearchButton from 'components/svg/searchButton';\nimport SearchSimilarButton from 'components/svg/searchSimilarButton';\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject} from 'utils/index';\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//search by  options\nconst searchByOptions = [\n    {label: 'all', value: 'all'},\n    {label: 'author', value: 'author'},\n    {label: 'content', value: 'content'},\n    {label: 'adv. query', value: 'advanced'}\n];\n\n//year options\nconst startYear = 2017;\nconst endYear = new Date().getFullYear() + 2;\n//create a int array from startYear to endYear, then convert it to string array, after this concatenate with \"all\"\nconst yearOptions = [\"all\", ...(_.range(startYear, endYear).map(String))];\n\n/**\n * standard search form component\n */\nconst SearchStandardForm = function ({history, queryData, project_id}){\n\n    //state for search form\n    const [keywords, setKeyWords] = useState(queryData.query);\n    const [source, setSource] = useState({\"scopus\": queryData.scopus, \"googleScholar\": queryData.googleScholar, \"arXiv\": queryData.arXiv});\n    const [searchBy, setSearchBy] = useState(queryData.searchBy);\n    const [year, setYear] = useState(queryData.year);\n\n    //I update the state every time the query data changes\n    useEffect(() => {\n        setKeyWords(queryData.query);\n        setSource({\"scopus\": queryData.scopus, \"googleScholar\": queryData.googleScholar, \"arXiv\": queryData.arXiv});\n        setSearchBy(queryData.searchBy);\n        setYear(queryData.year);\n    }, [queryData.query, queryData.orderBy, queryData.searchBy, queryData.sort, queryData.year, queryData.start, queryData.count, queryData.scopus, queryData.googleScholar, queryData.arXiv])\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    /**\n     *handle to update hook state by input change\n     */\n    function handleOnInputChange(event) {\n\n        let newSource;\n\n        switch (event.target.name) {\n            case \"query\":\n                setKeyWords(event.target.value);\n                break;\n            case \"scopus\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.scopus = true;\n                newSource.googleScholar = false;\n                newSource.arXiv = false;\n                setSource(newSource);\n                break;\n\n            case \"googleScholar\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.scopus = false;\n                newSource.googleScholar = true;\n                newSource.arXiv = false;\n                setSource(newSource);\n                break;\n            case \"arXiv\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.scopus = false;\n                newSource.googleScholar = false;\n                newSource.arXiv = true;\n                setSource(newSource);\n                break;\n            case \"searchBy\":\n                setSearchBy(event.target.value);\n                break;\n            case \"year\":\n                setYear(event.target.value);\n                break;\n            default:\n                break;\n        }\n\n    }\n\n    /*function to send the query*/\n    async function handleSendSearch(event) {\n\n        event.preventDefault();\n\n        //if query input is empty\n        if (keywords === \"\") {\n            appConsumer.setNotificationMessage(\"Search string is empty\")\n        }\n        else {\n            //synchronize the query data from react state hooks\n            queryData.query = keywords;\n            queryData.scopus = source.scopus;\n            queryData.googleScholar = source.googleScholar;\n            queryData.arXiv = source.arXiv;\n            queryData.searchBy = searchBy;\n            queryData.year = year;\n\n            //send query url\n            let queryString = createQueryStringFromObject(queryData);\n            //launch to search\n            history.push(queryString);\n\n        }\n\n    }\n\n    return (\n        <>\n            <form className={(queryData.query === \"\") ? 'search-form' : 'search-form small'}\n                  onSubmit={handleSendSearch}>\n                {/*search form*/}\n                <div style={{position: 'relative'}}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"search\"\n                        name=\"query\"\n                        value={keywords}\n                        onChange={handleOnInputChange}\n                    />\n                    <Link to={\"/projects/\" + project_id + \"/searchsimilar\"}>\n                        <button className=\"go-similar\" type=\"button\">\n                            <SearchSimilarButton/>\n                        </button>\n                    </Link>\n                    <button className=\"go-search\" type=\"submit\" value=\"Submit\">\n                        <SearchButton/>\n                    </button>\n                </div>\n\n                <div className=\"option-holder\">\n                    <label>Source:</label><br/>\n\n                    <div className=\"checkboxes-holder\">\n                        <RadioBox label=\"Scopus\" name=\"scopus\" val=\"\" isChecked={source.scopus}\n                                  handler={handleOnInputChange}/>\n                        <RadioBox label=\"Google Scholar\" name=\"googleScholar\" val=\"\" isChecked={source.googleScholar}\n                                  handler={handleOnInputChange}/>\n                        <RadioBox label=\"arXiv\" name=\"arXiv\" val=\"\" isChecked={source.arXiv}\n                                  handler={handleOnInputChange}/>\n                    </div>\n\n                    <label>Search by:</label><br/>\n\n                    <div className=\"checkboxes-holder\">\n                        <RadioBox label={searchByOptions[0].label} name=\"searchBy\" val={searchByOptions[0].value}\n                                  isChecked={searchBy === searchByOptions[0].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[1].label} name=\"searchBy\" val={searchByOptions[1].value}\n                                  isChecked={searchBy === searchByOptions[1].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[2].label} name=\"searchBy\" val={searchByOptions[2].value}\n                                  isChecked={searchBy === searchByOptions[2].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[3].label} name=\"searchBy\" val={searchByOptions[3].value}\n                                  isChecked={searchBy === searchByOptions[3].value} handler={handleOnInputChange}/>\n                    </div>\n\n                    <label>Year:</label><br/>\n                    <div className=\"checkboxes-holder\">\n                        {\n                            yearOptions.map((singleYear, index) =>\n                                <RadioBox key={index} label={singleYear} name=\"year\" val={singleYear}\n                                          isChecked={year === singleYear} handler={handleOnInputChange}/>\n                            )\n                        }\n                    </div>\n                </div>\n\n            </form>\n        </>\n    );\n\n};\n\n\nexport default SearchStandardForm;","import React from \"react\";\n\n/**\n * component svg \n */\nconst Robot = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"robot\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <path className=\"st0-robot\" d=\"M406.3,576.3c-46.8,3.4-95,5.9-144.5,7.2c-69.2,1.9-127.2-52.1-130.5-121.3l-3.2-66.9\n                c-3.3-70.2,50.9-129.9,121.2-133.2l139.1-6.6c54.8-2.6,101.3,39.7,103.9,94.6l5.8,122.4C500.7,526.3,460,572.3,406.3,576.3z\"/>\n            <path className=\"st1-robot\" d=\"M407.4,528.8l-124.1,5.9c-9.8,0.5-18.1-7.1-18.6-16.9l-0.1-3.1c-0.2-4.1,3-7.6,7.1-7.8l144.7-6.8\n                c4.1-0.2,7.6,3,7.8,7.1l0.1,3.1C424.8,520,417.2,528.3,407.4,528.8z\"/>\n            <path className=\"st2-robot\" d=\"M263.1,415.9L263.1,415.9c-13.1-0.6-23.5-11.2-24.2-24.5l-1.9-39.8c-0.6-13,8.5-24.4,21.1-26.6h0\n                c14.9-2.5,28.7,8.8,29.4,24.2l1.9,39.8C290.2,404.2,278,416.6,263.1,415.9z\"/>\n            <path className=\"st2-robot\" d=\"M418.4,408.8L418.4,408.8c-14.2,2.2-27.2-9.1-27.9-24.4l-1.9-40.1c-0.7-15.5,11.5-28.2,26.1-26.9h0\n                c12.2,1.1,21.7,11.6,22.4,24.6l1.9,40.1C439.5,395.4,430.7,406.9,418.4,408.8z\"/>\n            <path className=\"st0-robot\" d=\"M133.6,610.9c126.4,12.4,246,15.2,357.6,6.4c47.7-3.8,87.3,39.8,84.4,92.5l-32.5,594.5\n                c-3.9,23.4-99,39-120.6,38.7l-229.1-3.5c-47.1-0.7-86.2-40-91.4-91.7L48.1,707.4C42.6,652.6,84,606.1,133.6,610.9z\"/>\n            {/*<polyline className=\"st3-robot\" points=\"598,721 765,627 765.5,459.7 \"/>\n            <ellipse className=\"st4-robot\" cx=\"765.6\" cy=\"404.8\" rx=\"167.2\" ry=\"25.7\"/>\n            <ellipse className=\"st5-robot\" cx=\"765.6\" cy=\"411.7\" rx=\"107.2\" ry=\"12.5\"/>\n            <path className=\"st6-robot\" d=\"M865,427.3c-69.6,13.7-141.5,13.3-212.7-3\"/>*/}\n            <ellipse transform=\"matrix(0.9989 -4.710610e-02 4.710610e-02 0.9989 -19.9378 7.7157)\" className=\"st5-robot\" cx=\"153.7\" cy=\"426.9\" rx=\"13.6\" ry=\"70\"/>\n            <path className=\"st7-robot\" d=\"M451.3,736.2c-0.4,30.4-52.1,65.7-114.8,64.8c-62.7-0.9-113.2-36.2-112.8-66.6s51.6-44.3,114.3-43.4\n                C400.8,691.9,451.8,705.8,451.3,736.2z\"/>\n            {/*<g>\n                <g>\n                    <polyline className=\"st8-robot\" points=\"841.2,211.2 841.2,359.7 711.1,359.7 711.1,187 817,187 \t\t\"/>\n                    <line className=\"st9-robot\" x1=\"730.8\" y1=\"207.8\" x2=\"796.8\" y2=\"207.8\"/>\n                    <line className=\"st10-robot\" x1=\"729.9\" y1=\"249.7\" x2=\"821\" y2=\"249.7\"/>\n                    <line className=\"st10-robot\" x1=\"729.9\" y1=\"272.2\" x2=\"821\" y2=\"272.2\"/>\n                    <line className=\"st10-robot\" x1=\"729.9\" y1=\"294.8\" x2=\"821\" y2=\"294.8\"/>\n                    <line className=\"st10-robot\" x1=\"729.9\" y1=\"317.3\" x2=\"821\" y2=\"317.3\"/>\n                    <polyline className=\"st2-robot\" points=\"841.2,211.2 817,211.2 817,187 \t\t\"/>\n                    <line className=\"st2-robot\" x1=\"841.2\" y1=\"211.2\" x2=\"817\" y2=\"187\"/>\n                </g>\n                <g>\n                    <polyline className=\"st8-robot\" points=\"829.1,223.4 829.1,371.8 699,371.8 699,199.1 804.9,199.1 \t\t\"/>\n                    <line className=\"st9-robot\" x1=\"718.7\" y1=\"220\" x2=\"784.7\" y2=\"220\"/>\n                    <line className=\"st10-robot\" x1=\"717.8\" y1=\"261.8\" x2=\"808.9\" y2=\"261.8\"/>\n                    <line className=\"st10-robot\" x1=\"717.8\" y1=\"284.4\" x2=\"808.9\" y2=\"284.4\"/>\n                    <line className=\"st10-robot\" x1=\"717.8\" y1=\"306.9\" x2=\"808.9\" y2=\"306.9\"/>\n                    <line className=\"st10-robot\" x1=\"717.8\" y1=\"329.5\" x2=\"808.9\" y2=\"329.5\"/>\n                    <polyline className=\"st2-robot\" points=\"829.1,223.4 804.9,223.4 804.9,199.1 \t\t\"/>\n                    <line className=\"st2-robot\" x1=\"829.1\" y1=\"223.4\" x2=\"804.9\" y2=\"199.1\"/>\n                </g>\n                <g>\n                    <polyline className=\"st8-robot\" points=\"817,235.5 817,384 686.9,384 686.9,211.2 792.8,211.2 \t\t\"/>\n                    <line className=\"st11-robot\" x1=\"706.6\" y1=\"232.1\" x2=\"772.6\" y2=\"232.1\"/>\n                    <line className=\"st12-robot\" x1=\"705.7\" y1=\"273.9\" x2=\"796.8\" y2=\"273.9\"/>\n                    <line className=\"st12-robot\" x1=\"705.7\" y1=\"296.5\" x2=\"796.8\" y2=\"296.5\"/>\n                    <line className=\"st12-robot\" x1=\"705.7\" y1=\"319\" x2=\"796.8\" y2=\"319\"/>\n                    <line className=\"st12-robot\" x1=\"705.7\" y1=\"341.6\" x2=\"796.8\" y2=\"341.6\"/>\n                    <polyline className=\"st2-robot\" points=\"817,235.5 792.8,235.5 792.8,211.2 \t\t\"/>\n                    <line className=\"st2-robot\" x1=\"817\" y1=\"235.5\" x2=\"792.8\" y2=\"211.2\"/>\n                </g>\n            </g>*/}\n            <g>\n                <path className=\"st13-robot\" d=\"M255,721c47.2,3.6,94.3,4,141.5,1.2\"/>\n                <path className=\"st13-robot\" d=\"M246,732c59,4,118,4,177,0\"/>\n                <path className=\"st13-robot\" d=\"M252,743c40.2,2.9,80.4,3.7,120.5,2.4\"/>\n                <path className=\"st13-robot\" d=\"M258,754c51,4,102,4,153,0\"/>\n                <path className=\"st13-robot\" d=\"M261,765c14.5,1.2,29,2,43.5,2.5\"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default Robot;","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Link} from 'react-router-dom'\n\nimport {paperDao} from 'dao/paper.dao';\n\nimport CheckBox from \"components/forms_elements/checkbox\";\nimport {PrintScoupusSearchList} from 'components/modules/printPapersList';\nimport Select from 'components/forms_elements/select';\nimport Pagination from \"components/modules/pagination\";\nimport SelectedPapersListBox from \"components/projects_page/search_tab/selectedPapersListBox\";\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport OrderArrow from 'components/svg/orderArrow';\nimport NoSearchResults from \"components/svg/noSearchResults\";\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject, createQueryDataForStandardSearch, getIndexOfObjectArrayByKeyAndValue, arrayOfObjectsContains} from 'utils/index';\nimport SearchStandardForm from \"./searchStandardForm\";\nimport Robot from \"components/svg/robot\";\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//order options\nconst orderByOptions = [\n    {label: 'Title', value: 'title'},\n    {label: 'Date', value: 'date'}\n];\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst SearchStandardManager = function ({project_id, location, match, history}) {\n\n    const mountRef = useRef(false);\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(true);\n\n    //total number of results (useful for pagination)\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    let queryData = createQueryDataForStandardSearch(location.search);\n\n    //get the localStorage object\n    const storage = window.localStorage;\n    let selectedPapersListFromStorage;\n    if (!window.localStorage) {\n        console.log(\"the browser must be support localStorage\");\n    }\n    //if exists already this attribute in the local storage\n    if (storage.getItem(\"selectedPapersList\")) {\n        selectedPapersListFromStorage = JSON.parse(storage.getItem(\"selectedPapersList\"));\n    }\n    //if not exists, we create a new array\n    else {\n        selectedPapersListFromStorage = [];\n    }\n\n    // list of selected papers\n    const [selectedPapersList, setSelectedPapersList] = useState(selectedPapersListFromStorage);\n\n    //state for sorting arrow animation\n    const [up, setUp] = useState(queryData.sort);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //this will run on mount and every time the url params change\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let mnt = true;\n\n        //if the sorting parameter changes I update the status and trigger the SVG animation\n        if (mnt && up !== queryData.sort) {\n            setUp(queryData.sort);\n            if(document.getElementById(\"ani-order-arrow\")){\n                document.getElementById(\"ani-order-arrow\").beginElement();\n            }\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n\n            //if there is queryString from URL\n            if (queryData.query !== \"\") {\n\n                setDisplay(false);\n\n                //always call the dao to search on scopus\n                let res = await paperDao.search(queryData);\n\n                //error checking\n                //if the component is still mounted and  is 404 error\n                if (mnt && res && res.message === \"Not Found\") {\n                    setPapersList([]);\n                    setTotalResults(0);\n                    //show the page\n                    setDisplay(true);\n                }\n                //if the component is still mounted and  there are some other errors\n                else if (mnt && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }\n                //if the component is still mounted and  res isn't null\n                else if (mnt && res) {\n                    //update state\n                    setPapersList(res.results);\n                    setTotalResults(res.totalResults);\n                    //show the page\n                    setDisplay(true);\n                }\n            }\n        };\n\n\n        fetchData();\n        \n\n        //when the component will unmount or the useEffect will finish\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n\n    }, [project_id, queryData.query, queryData.orderBy, queryData.searchBy, queryData.sort, queryData.year, queryData.start, queryData.count, queryData.scopus, queryData.googleScholar, queryData.arXiv]);  //re-execute when these variables change\n\n\n    /*\n     START OF 'RESULT PAPERS HANDLING' ########################################################\n     */\n\n    //handler for sort selection\n    function handleSelection(e) {\n        //get index\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.orderBy = orderByOptions[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e) {\n\n        if (queryData.sort === \"ASC\") {\n            queryData.sort = \"DESC\";\n        }\n        else {\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n    /*function to insert and remove the paper id from selected list*/\n    function handlePaperSelection(event) {\n\n        let newList;\n        //get eid\n        let eid = event.target.value;\n        //get ttitle\n        let title = event.target.name;\n        //if id is not included in the list yet\n        if (getIndexOfObjectArrayByKeyAndValue(selectedPapersList, \"eid\", eid) === -1) {\n            //create a copy of array\n            newList = [...selectedPapersList];\n            //insert into array\n            newList.push({\"eid\": eid, \"title\": title});\n\n        }\n        //if id already exists in the list\n        else {\n            //remove the  target paper from array\n            newList = selectedPapersList.filter(function (element) {\n                return element.eid !== eid;\n            });\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*function to select all papers*/\n    function selectAllPapers(event) {\n\n        let newList;\n\n        //if not all papers are selected yet\n        if (!arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")) {\n\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {\n                return {\"eid\": paper.eid, \"title\": paper.title}\n            });\n            //and merge them with the previously selected ones\n            let tmpList = [...allPapersInPage, ...selectedPapersList];\n            newList = _.uniqBy(tmpList, 'eid');\n\n        }\n        //if all papers are selected, we need to remove them\n        else {\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {\n                return {\"eid\": paper.eid, \"title\": paper.title}\n            });\n            //I filter the selectedPapersList by removing the papers that are in the current page\n            newList = selectedPapersList.filter(x => !allPapersInPage.some(paper => paper.eid === x.eid));\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*\n     END OF 'RESULT PAPERS HANDLING' ########################################################\n     */\n\n\n    let resultPart = \"\";\n\n    //if is loading\n    if (display === false) {\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\"\n                     style={{pointerEvents: \"none\"}}>{/* this way the user cannot sort while loading the results */}\n                    <div className=\"select-all\">\n                        <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={false}\n                                  handler={selectAllPapers}/>\n                    </div>\n                    <div className=\"order\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions}\n                                selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"search-loading-holder\">\n                    <LoadIcon class={\"small\"}/>\n                </div>\n            </div>);\n    }\n\n    //if the search results list is empty\n    else if (papersList.length === 0 && queryData.query !== \"\") {\n        //the class is used only to workaround a small bug that display not found just as the search start before the loading icon\n        resultPart = (\n            <div className=\"no-results\"> <NoSearchResults/> <p className=\"not-found-description\"> Nothing was found </p> </div>\n        );\n    }\n    else if (papersList.length > 0 && queryData.query !== \"\") {\n\n        //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\">\n                    <div className=\"select-all\">\n                        <CheckBox label=\"Select All\" name=\"select_all\" val=\"\"\n                                  isChecked={arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")}\n                                  handler={selectAllPapers}/>\n                    </div>\n                    <div className=\"order\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions}\n                                selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/>\n                        </button>\n                    </div>\n                </div>\n                <SelectedPapersListBox project_id={project_id} selectedPapersList={selectedPapersList} setSelectedPapersList={setSelectedPapersList} \n                    handlePaperSelection={handlePaperSelection} mounted={mountRef}/>\n\n\n                <PrintScoupusSearchList papersList={papersList} handlePaperSelection={handlePaperSelection}\n                                        selectedEidList={arrayEid}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults}\n                            path={match.url}/>\n            </div>\n        );\n    }\n\n\n    let output = (\n        <>\n            <SearchStandardForm\n                {...{history, queryData, project_id}}\n            />\n            <div className=\"search-automated-option\" style={{display: (queryData.query === \"\") ? \"block\" : \"none\"}}>\n                <p><i>or</i><br/>let an algorithm provide search results for you</p>\n                <Link to={\"/projects/\" + project_id + \"/searchautomated\"}>\n                    <Robot/>\n                </Link>\n            </div>\n            <div className=\"search-results\">\n                {resultPart}\n            </div>\n        </>\n    );\n\n    return output;\n};\n\n\nexport default SearchStandardManager;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to post the file pdf to backend\n * @param data the file data\n * @return {objects}\n */\nasync function updatePdf(data) {\n    let url = config.home +config.pdf_parse_server;\n\n    let res = await http.postFile(url, data);\n    return res;\n\n}\n\n/**\n * dao to post the file csv to backend\n * @param data the file data\n * @return {objects}\n */\nasync function uploadCsv(data) {\n    let url = config.home +config.csv_parse_server;\n\n    let res = await http.postFile(url, data);\n    return res;\n\n}\n\n\nconst updateFileDao = {\n    updatePdf,\n    uploadCsv,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {updateFileDao};","import React from \"react\";\n\n/**\n * component svg go-btn\n */\nconst GoButton = function (props) {\n\n    return (\n        <svg id=\"go-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 1000 1000\">\n\n            <polyline\n            className=\"st1-go\"\n            points=\"371.7,481.9 500,609.9 628.3,481.9 \"\n            transform=\"matrix(0,-1.4834458,1.4856134,0,-92.453824,1228.1491)\"/>\n            <line\n            className=\"st0-go\"\n            x1=\"810.69312\"\n            y1=\"486.42624\"\n            x2=\"206.34099\"\n            y2=\"486.42624\"/>\n\n        </svg>\n    );\n};\n\nexport default GoButton;\n","import React, {useRef} from \"react\";\nimport ClampLines from 'react-clamp-lines';\nimport {Link} from 'react-router-dom';\n\nimport CloseButton from 'components/svg/closeButton';\nimport GoButton from \"components/svg/goButton\";\nimport LoadIcon from \"components/svg/loadIcon\";\n\n/**\n * the search form component used for inserting the data relative to the paper we are searching for similar ones\n */\nconst TargetPaper = ({close, //the setter for closing the form when it's visible(sets the visibility to false)\n                                style, //style of the component\n                                project_id,\n                                input, //the string input\n                                handler, //handler for the string input\n                                paperInfo, //the data of the retrieved paper(should match the paper we are searching similarities for)\n                                fetching, //flag to control when the component is fetching the data related to the paper we are searching similarities for\n                                setPaperInfo, //sets the info of the paper we are searching similarites for\n                                setPaperFile, //handles the input of a file(when we upload a file instead os specifying the paper by a string)\n                                history\n                            }) => {\n    \n    let output = \"\";\n    let content = \"\";\n    let topRightButton = \"\";\n\n    //reference for the input file field\n    const inputElement = useRef(null);\n\n\n    //clicking the button will trigger the input file\n    const onButtonClick = () => {\n        inputElement.current.click();\n    };\n\n    async function handleSubmission(){\n        //if the user submits a paper I set the paperFile variable to its content so the main form can work with it\n        if(inputElement.current.files[0]){\n            setPaperFile(inputElement.current.files[0]);\n        }\n    }\n\n    //output\n    if(fetching){\n        content = (<div className=\"load-icon-similar-paper\"><LoadIcon/></div>);\n    }else if(paperInfo && paperInfo.title){\n        content = (\n            <>\n            <h3 className=\"similar-paper-title\">{paperInfo.title}</h3>\n            <ClampLines\n                text={paperInfo.abstract}\n                lines={4}\n                ellipsis=\"...\"\n                className=\"similar-paper-paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n            </>\n        );\n    }else{\n        content = (\n            <>\n                <p className=\"similar-description\">Search for Similar Papers</p>\n                <div className=\"DOI-holder\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"type DOI, EID, or paper title\"\n                        value={input}\n                        onChange={handler}\n                        name=\"query\"\n                    />\n                    <button className=\"go-search-similar DOI-btn\" type=\"submit\" value=\"Submit\">\n                        <GoButton/>\n                    </button>\n                </div>\n                <p className=\"or\">or</p>\n                <div className=\"file-input-container\">\n                    <input type=\"file\" id=\"real-input\" ref={inputElement} onChange={handleSubmission}/>\n                    <button type=\"button\" className=\"browse-btn\" onClick={onButtonClick}>\n                        Upload a Paper\n                    </button>\n                </div>\n            </>\n        );\n    }\n    if(paperInfo){\n        topRightButton = (\n            <button type=\"button\" className={\"close-btn red-x\"} onClick={(e) => {\n                setPaperInfo(undefined);//I delete the similar paper info\n                setPaperFile(undefined);//I delete its file\n                history.push({});\n            }}><CloseButton/></button>\n        );\n    }else{\n        topRightButton = (\n            <></>\n        );\n    }\n    output = (\n        <div style={{...style}} className=\"light-modal similar-search-paper-upload\">\n            {topRightButton}\n            {content}\n        </div>\n    );\n    return output;\n}\n\nexport default TargetPaper;","import React, {useState, useEffect, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\n\nimport {paperDao} from 'dao/paper.dao';\nimport {updateFileDao} from \"dao/updateFile.dao\";\n\nimport RadioBox from \"components/forms_elements/radiobox\";\nimport TargetPaper from \"components/projects_page/search_tab/search_similar/targetPaper\";\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject} from 'utils/index';\n\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//year options\nconst startYear = 2017;\nconst endYear = new Date().getFullYear() + 2;;\n//create a int array from startYear to endYear, then convert it to string array, after this concatenate with \"all\"\nconst yearOptions = [\"all\", ...(_.range(startYear, endYear).map(String))];\n\n/**\n * standard search form component\n */\nconst SearchSimilarForm = function ({history, queryData, project_id, targetPaperData, setTargetPaperData}){\n\n    //state for 'similar papers search' form\n    const [similarFormVisibility, setSimilarFormVisibility] = useState(false);\n\n    //bool for target similar paper fetching\n    const [similarPaperFetch, setSimilarPaperFetch] = useState(false);\n\n    //state for the form\n    const [keywords, setKeyWords] = useState(queryData.query);\n    const [year, setYear] = useState(queryData.year); //this is not used right now\n    const [similarPaperFile, setSimilarPaperFile] = useState(undefined); //the file of the paper to search similarities for\n\n\n    //get the localStorage object\n    const storage = window.localStorage;\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n\n        let mnt = true;\n\n        console.log(\"FETCHING TARGET PAPER\")\n\n        console.log(queryData);\n\n        //fetches data when searching for similarities\n        const fetchMainPaper = async () => {\n\n            if(mnt){\n\n                //standard options parameters\n                setKeyWords(queryData.query);\n                setYear(queryData.year);\n                setTargetPaperData(undefined);\n            }\n\n            \n            //if there's a file I can do an api call to parse it\n            if(similarPaperFile){\n                \n                console.log(\"FILE NAME : \" + similarPaperFile.name);\n\n                //check file extension and its mine type\n                if(!/\\.(pdf|PDF)$/.test(similarPaperFile.name) || similarPaperFile.type.indexOf(\"application/pdf\") === -1){\n                    appConsumer.setNotificationMessage(\"The file must be a pdf!\");\n                }\n                else{\n                    //open flag of loading\n                    setSimilarPaperFetch(true);\n                    console.log(\"FETCHING PARSE PDF\")\n                    //prepare the form data for post\n                    let formData = new FormData();\n                    formData.append('file', similarPaperFile);\n\n                    //call the dao\n                    console.log(\"CALLING THE PAPER PARSER SERVICE\")\n                    let res = await updateFileDao.updatePdf(formData);\n    \n                    //if there is a error\n                    if (mnt && res && res.message) {\n                        //pass error object to global context\n                        appConsumer.setNotificationMessage(\"Error during parsing file\");\n                        setSimilarPaperFetch(false);\n                    }\n                    else if(mnt){\n                        console.log(res);\n                        //set paperdata(which whill call the useEffect on the paperData)\n                        setTargetPaperData(res);\n                        //display the paper data\n                        setSimilarPaperFetch(false);\n                    }\n\n                }\n            }\n            //if there's a query I can retrieve similar papers based on the query\n            else if (queryData.query !== \"\") {\n                \n                setSimilarPaperFetch(true);\n                //this will be the call to the service identifying a specific paper\n                let resx = await paperDao.search({\"query\" : queryData.query, \"scopus\": true});\n\n                //if there is a error\n                if (mnt && resx && resx.message) {\n                    //pass error object to global context\n                    appConsumer.setError(resx);\n                }else if(mnt){\n                    //set paperdata(which whill call the useEffect on the paperData)\n                    console.log(\"setting target paper data\");\n                    setTargetPaperData(resx.results[0]);\n                    setSimilarPaperFetch(false);\n\n                }\n            }\n            else{\n                console.log(\"no file (& no similarPaperString)\");\n            }\n\n        };\n\n        if(!targetPaperData || queryData.query !== keywords){\n            fetchMainPaper();\n        }\n        \n        //execute on unmount and every time the useEffect ends\n        return () => {\n            mnt = false;\n        };\n\n    }, [project_id, similarPaperFile, queryData.query, queryData.year]);  //re-execute when these variables change\n\n    \n    /**\n     * effect to handle live update on year change\n     */\n    useEffect(() => {\n        queryData.year = year;\n\n        //send query url\n        let queryString = createQueryStringFromObject(queryData);\n        //launch to search\n        history.push(queryString);//this allows pushing the same data and refreshing the page with the hash router\n        \n    }, [year])\n\n    /**\n     *handle to update hook state by input change\n     */\n    function handleOnInputChange(event) {\n\n        switch (event.target.name) {\n            case \"query\":\n                setKeyWords(event.target.value);\n                break;\n            case \"year\":\n                setYear(event.target.value);\n                break;\n            default:\n                break;\n        }\n        \n\n    }\n\n    /*function to send the query*/\n    async function handleSendSearch(event) {\n\n        console.log(\"SUBMITTING SEARCH\");\n        if(event){\n            event.preventDefault();\n        }\n\n        console.log(\"similarity search was called\");\n        //if query input is empty\n        if (keywords === \"\" && !similarPaperFile) {\n            appConsumer.setNotificationMessage(\"Similar paper string is empty\")\n        }\n        else {\n            //synchronize the query data from react state hooks\n            //if there isn't any file I search with the string\n            if(!similarPaperFile){\n                console.log(\"there isn't a file\")\n                queryData.query = keywords;\n            }else{\n                console.log(\"there's a file\")\n                queryData.query = \"\";\n            }\n            queryData.year = year;\n\n            //send query url\n            let queryString = createQueryStringFromObject(queryData);\n            //launch to search\n            history.push(queryString);//this allows pushing the same data and refreshing the page with the hash router\n\n        }\n\n\n    }\n\n    return (\n        <>\n            <form className={(queryData.query === \"\" && !similarPaperFile && !targetPaperData) ? 'search-form' : 'search-form small'}\n                    style={{marginTop: (similarFormVisibility) ? \"30px\" : \"60px\"}}\n                    onSubmit={handleSendSearch}>\n                {/*search form*/}\n                \n                <TargetPaper style={{boxShadow: \"0px 0px 3px -1px rgba(0, 0, 0, 0.25)\"}}\n                    project_id={project_id}\n                    close={setSimilarFormVisibility} handler={handleOnInputChange} \n                    input={keywords} paperInfo={targetPaperData}\n                    fetching={similarPaperFetch} setPaperInfo={setTargetPaperData}\n                    setPaperFile={setSimilarPaperFile}\n                    history={history}/>\n                \n                {/*<div className=\"option-holder\">\n\n                    <label>Year:</label><br/>\n                    <div className=\"checkboxes-holder\" >\n                        {\n                            yearOptions.map((singleYear, index) =>\n                                <RadioBox key={index} label={singleYear} name=\"year\" val={singleYear}\n                                          isChecked={year === singleYear} handler={handleOnInputChange}/>\n                            )\n                        }\n                    </div>\n                </div>*/}\n            </form>\n            <div className={(similarPaperFetch || targetPaperData) ? \"top-right-side-wrapper search-similar-description-wrapper\" : \"center-side-wrapper search-similar-description-wrapper\"}>\n                <div className=\"search-similar-description\">\n                    <p>This searching mode leverages AI to find relevant papers based on the topic and focus of the given paper.</p>\n                    <Link to={\"/projects/\"+project_id+\"/search\"}>(Go back to a normal search)</Link>\n                </div>\n            </div>\n        </>\n    );\n\n};\n\n\n\n\nexport default SearchSimilarForm;","import React, {useState, useEffect, useContext, useRef} from \"react\";\n\n\nimport {paperDao} from 'dao/paper.dao';\n\nimport CheckBox from \"components/forms_elements/checkbox\";\nimport {PrintScoupusSearchList} from 'components/modules/printPapersList';\nimport Select from 'components/forms_elements/select';\nimport Pagination from \"components/modules/pagination\";\n\nimport OrderArrow from 'components/svg/orderArrow';\nimport LoadIcon from 'components/svg/loadIcon';\nimport NoSearchResults from \"components/svg/noSearchResults\";\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue, arrayOfObjectsContains, createQueryDataForSimilarSearch} from 'utils/index';\nimport SelectedPapersListBox from \"components/projects_page/search_tab/selectedPapersListBox\";\nimport SearchSimilarForm from \"./searchSimilarForm\";\n\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//order options\nconst orderByOptions = [\n    {label: 'Title', value: 'title'},\n    {label: 'Date', value: 'date'}\n];\n\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst SearchSimilarManager = function ({project_id, location, match, history}) {\n\n    const mountRef = useRef(false);\n\n    //remove similar paper data once the page is\n    window.onbeforeunload = function(e){\n        window.localStorage.removeItem(\"targetPaperData\");\n    }\n\n    //list of result papers data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to control the visualization of the results when fetching results data\n    const [display, setDisplay] = useState(true);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n\n    //set query params from url\n    let queryData = createQueryDataForSimilarSearch(location.search);\n    //console.log(queryData);\n\n    //get the localStorage object\n    const storage = window.localStorage;\n    let selectedPapersListFromStorage;\n    let similarPaperDataFromStorage;\n    if (!window.localStorage) {\n        console.log(\"the browser must be support localStorage\");\n    }\n    \n    //if exists already this attribute in the local storage\n    if (storage.getItem(\"selectedPapersList\")) {\n        selectedPapersListFromStorage = JSON.parse(storage.getItem(\"selectedPapersList\"));\n    }\n    //if not exists, we create a new array\n    else {\n        selectedPapersListFromStorage = [];\n    }\n\n    //if exists already this attribute in the local storage\n    if (storage.getItem(\"targetPaperData\")) {\n        similarPaperDataFromStorage = JSON.parse(storage.getItem(\"targetPaperData\"));\n    }\n    //if not exists, we create a new array\n    else {\n        similarPaperDataFromStorage = null;\n    }\n\n    // list of selected papers\n    const [selectedPapersList, setSelectedPapersList] = useState(selectedPapersListFromStorage);\n\n    const [targetPaperData, setTargetPaperData] = useState(similarPaperDataFromStorage); //the data of the paper to search similarities for\n\n    //state for sorting arrow animation\n    const [up, setUp] = useState(queryData.sort);\n\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //update local storage every time the similar paper data changes\n    useEffect(() => {\n\n        let mnt = true;\n\n        console.log(\"FETCHING RESULTS\");\n\n        //if the sorting parameter changes I update the status and trigger the SVG animation\n        if (up !== queryData.sort) {\n            setUp(queryData.sort);\n            if(document.getElementById(\"ani-order-arrow\")){\n                document.getElementById(\"ani-order-arrow\").beginElement();\n            }\n        }\n\n        if(targetPaperData){\n            //fetches for similar papers\n            const fetchSimilarPapers= async () => {\n                \n                setDisplay(false);\n                storage.setItem(\"targetPaperData\", JSON.stringify(targetPaperData));\n\n                //I call the dao for searching for similar papers based on similarPaperString\n                //this will be the call for the similarity search\n                let resx = await paperDao.searchSimilar({\"paperData\" : targetPaperData, \"start\" : queryData.start, \"count\" : queryData.count, \"scopus\": true});\n\n                //error checking\n                //if is 404 error\n                if (mnt && resx && resx.message === \"Not Found\") {\n                    setPapersList([]);\n                    setTotalResults(0);\n                    //show the page\n                    setDisplay(true);\n                }\n                //if is other error\n                else if (mnt && resx && resx.message) {\n                    //pass error object to global context\n                    appConsumer.setError(resx);\n                }\n                //if res isn't null\n                else if (mnt && (resx !== null)) {\n                    console.log(\"SETTING RESULTS\");\n                    //update state\n                    setPapersList(resx.results);\n                    setTotalResults(resx.totalResults);\n                    //show the page\n                    setDisplay(true);\n                }else{\n                    console.log(\"can't set enything\")\n                }\n            }\n\n            fetchSimilarPapers();\n        }else{\n            storage.removeItem(\"targetPaperData\");\n        }\n\n        //execute on unmount and every time the useEffect ends\n        return () => {\n            mnt = false;\n        };\n\n    }, [targetPaperData, queryData.orderBy, queryData.year, queryData.sort, queryData.start, queryData.count])\n\n\n    let resultPart = \"\";\n\n     /*\n        START OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //handler for sort selection\n    function handleSelection(e) {\n        //get index\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.orderBy = orderByOptions[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e) {\n\n        if (queryData.sort === \"ASC\") {\n            queryData.sort = \"DESC\";\n        }\n        else {\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n    /*function to insert and remove the paper id from selected list*/\n    function handlePaperSelection(event) {\n        let newList;\n        //get eid\n        let eid = event.target.value;\n        //get ttitle\n        let title = event.target.name;\n        //if id is not included in the list yet\n        if (getIndexOfObjectArrayByKeyAndValue(selectedPapersList, \"eid\", eid) === -1) {\n           //create a copy of array\n            newList = [...selectedPapersList];\n            //insert into array\n            newList.push({\"eid\": eid, \"title\": title});\n\n        }\n        //if id already exists in the list\n        else {\n            //remove the  target paper from array\n            newList = selectedPapersList.filter(function (element) {\n                return element.eid !== eid;\n            });\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*function to select all papers*/\n    function selectAllPapers(event) {\n        \n        let newList;\n        \n        //if not all papers are selected yet\n        if(!arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")){\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //and merge them with the previously selected ones\n            let tmpList = [...allPapersInPage, ...selectedPapersList];\n            newList = _.uniqBy(tmpList, 'eid');\n        }else{//otherwise\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //I filter the selectedPapersList by removing the papers that are in the current page\n            newList = selectedPapersList.filter(x => !allPapersInPage.some(paper => paper.eid === x.eid));\n        }\n        \n        setSelectedPapersList(newList);\n\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n\n    /*\n        END OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //if is loading\n    if (display === false || (!targetPaperData && queryData.query !== \"\")) {\n\n        resultPart = (\n            <div className=\"paper-card-holder similar-holder\">\n                <div className=\"paper-card-holder-head\" style={{pointerEvents: \"none\"}}>{/* this way the user cannot sort while loading the results */}\n                    <div className=\"select-all\">\n                    <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={false} handler={selectAllPapers}/>\n                    </div>\n                    <div className=\"order\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions}\n                                selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/></button>\n                    </div>\n                </div>\n                <div className=\"search-loading-holder\">\n                    <LoadIcon class={\"small\"}/>\n                </div>\n            </div>);\n    }\n\n    //if the search results list is empty\n    else if (papersList.length === 0 && targetPaperData) {\n        //the class is used only to workaround a small bug that display not found just as the search start before the loading icon\n        resultPart = (\n            <div className=\"no-results\"> <NoSearchResults/> <p className=\"not-found-description\"> Nothing was found </p> </div>\n        );\n    }\n    else if (papersList.length > 0 && targetPaperData) {\n\n        //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\">\n                    <div className=\"select-all\">\n                    <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")} handler={selectAllPapers}/>\n                    </div>\n                    <div className=\"order\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions}\n                                selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/></button>\n                    </div>\n                </div>\n                <SelectedPapersListBox project_id={project_id} selectedPapersList={selectedPapersList} \n                    setSelectedPapersList={setSelectedPapersList} handlePaperSelection={handlePaperSelection}\n                    mounted={mountRef}    \n                />\n\n                <PrintScoupusSearchList papersList={papersList} handlePaperSelection={handlePaperSelection} selectedEidList={arrayEid} setTargetPaperData={setTargetPaperData}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </div>\n        );\n    }\n\n\n    let output = (\n        <>\n            <SearchSimilarForm {...{history, queryData, project_id, targetPaperData, setTargetPaperData}}/>\n            <div className=\"search-results\">\n                {resultPart}\n            </div>\n        </>\n    );\n\n    return output;\n};\n\n\nexport default SearchSimilarManager;","import React, {useState, useEffect} from \"react\";\nimport SelectArrow from 'components/svg/selectArrow';\n\n\n/**\n * this component acts as an html <select>\n * it needs an array of options, the index of the selected one and the hadler to change the status of the upper component calling this one\n */\nconst Select = ({ options, form, name }) => {\n    \n\n    //this is useful for the animation\n    const [focused, setFocused] = useState(false);\n\n    //this keeps the selected option\n    const [selected, setSelected] = useState(0)\n\n    //this handle the selection setting the index of the selected option\n    function handler(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n        setSelected(index);\n    }\n\n    //this updates the field value for formik\n    useEffect(() => {\n        form.setFieldValue(name, options[selected].value);\n    }, [selected])\n\n    function handleFocus(e){\n        //handle arrow animation and focus of menu\n        document.getElementById(\"ani-select-arrow\").beginElement();//trigger svg animation\n        setFocused(!focused);\n    }\n\n    var output = (\n        <div className=\"custom-select\">\n            <div className=\"selected\" tabIndex={-2} onBlur={handleFocus} onFocus={handleFocus}>{options[selected].label} <div className=\"arrow\"><SelectArrow focused={focused}/></div></div>\n            <div className=\"options-holder\" style={{fontSize: (!focused) ? '0px' : '15px', borderBottom: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderLeft: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderRight: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderTop:\"none\"}}>\n                {options.map((element, index) => (\n                <div key={index} data-value={index} className=\"option\" style={{padding: (!focused) ? '0px' : '2px' }} onMouseDown={handler}>\n                    {element.label}\n                </div>))}\n            </div>\n        </div>\n    );\n    return output;\n}\n\nexport default Select;","import React, {useContext, useEffect, useRef} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao'\n\nimport Select from 'components/forms_elements/selectformik';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n//order options\nconst paperType = [\n    { value: 'article', label: 'Article' },\n    { value: 'book_chapter', label: 'Book Chapter' },\n    { value: 'conf_publication', label: 'Conf. Publication' }\n  ];\n\n/**\n * this is the form for create or edit the paper\n * @param props.projectId  relative project where we will insert the paper\n */\nfunction CustomPaperForm(props) {\n\n    const mountRef = useRef(false);\n\n    let yup = require('yup');\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //validation schema for form\n    const paperValidationSchema = yup.object().shape({\n        title: yup.string().required('please enter a title'),\n        authors: yup.string().required('please enter an author'),\n        year: yup.number().required('please enter a year').min(1000).max(new Date().getFullYear() + 1).integer(),\n        //document_type: yup.string().required('please enter a paper type'),\n        abstract: yup.string().required('please enter the abstract')\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    return (\n        <>\n        <Formik\n            initialValues={{\n                title: (props.customPaper && props.customPaper.title) || '',\n                authors: (props.customPaper && props.customPaper.authors) || '',\n                year: (props.customPaper && props.customPaper.year) || '',\n                abstract: (props.customPaper && props.customPaper.abstract) || '',\n                //it is not present in pdf parse service\n                document_type: (props.customPaper && props.customPaper.document_type) || '',\n                doi: (props.customPaper && props.customPaper.doi) || \"\"\n            }}\n            validationSchema={paperValidationSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                //if doi is not specified I set it as empty string\n                if(values.doi === undefined){\n                    values.doi = \"\";\n                }\n                const paperData = {...values, \n                    year: values.year.toString(), \n                    source_title: values.title, \n                    link: \"custom_paper\", \n                    source: \"slr_custom_papers\", \n                    abstract_structured: \"0\",\n                    filter_oa_include: \"0\",\n                    filter_study_include: \"0\",\n                    notes: \"\",\n                    //data necessary for identifying custom papers\n                    manual: \"true\"}\n                console.log(paperData);\n                \n                let res = await projectPapersDao.postCustomPaperIntoProject({\n                    paper: paperData, project_id: props.projectId\n                });\n                //error checking\n                if (mountRef.current && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }else if(mountRef.current){\n                    props.history.push(props.url);\n                }\n                if(mountRef.current){\n                    setSubmitting(false);\n                }\n            }}\n            validateOnBlur={false}\n        >\n        {({ errors, touched, isSubmitting }) => (\n            <Form className=\"new-paper-form\">\n                <Field\n                    style={{borderBottom: (errors.title && touched.title) ? \"1px solid #d81e1e\" : \"\"}}\n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\" \n                    placeholder=\"Paper Title\"/>\n                <div className=\"new-paper-form-ad\">\n                    <div className=\"author-year\">\n                        <Field\n                            style={{borderBottom: (errors.authors && touched.authors) ? \"1px solid #d81e1e\" : \"\"}}\n                            name=\"authors\"\n                            type=\"text\" \n                            placeholder=\"paper author\"/>\n                        <Field \n                            style={{borderBottom: (errors.year && touched.year) ? \"1px solid #d81e1e\" : \"\"}}\n                            name=\"year\"\n                            type=\"number\"\n                            placeholder=\"year\"/>\n                    </div>\n                    <div className=\"type-doi\">\n                        <Field\n                            name=\"document_type\"\n                            render={({ field, form }) => (\n                                    <Select options={paperType} {...field} form={form}/>\n                            )}\n                        />\n                        <Field \n                            name=\"doi\"\n                            type=\"text\"\n                            placeholder=\"DOI(optional)\"/>\n                    </div>\n                </div>\n                <Field\n                    style={{borderBottom: (errors.abstract && touched.abstract) ? \"1px solid #d81e1e\" : \"\"}}\n                    name=\"abstract\"\n                    placeholder=\"Paper Abstract\"\n                    component=\"textarea\"/>\n                <button type=\"submit\" disabled={isSubmitting ||\n                    (errors.title && touched.title) ||\n                    (errors.authors && touched.authors) ||\n                    (errors.year && touched.year) ||\n                    (errors.abstract && touched.abstract)\n                }>Add paper</button>\n            </Form>\n        )}\n        </Formik>\n        </>\n    );\n\n\n}\n\n\nexport default CustomPaperForm;","import React, {useEffect, useState, useRef, useContext} from \"react\";\nimport CustomPaperForm from 'components/projects_page/papers_tab/forms/customPaperForm';\nimport LoadIcon from \"components/svg/loadIcon\";\n\nimport {updateFileDao} from \"dao/updateFile.dao\";\n\nimport {AppContext} from 'components/providers/appProvider';\n\nfunction CustomPaperPage({projectId, url, history}) {\n\n    const mountRef = useRef(false);\n\n    const [paperDataFetch, setPaperDataFetch] = useState(false);\n    const [paperData, setPaperData] = useState(undefined);\n    const [displayForm, setDisplayForm] = useState(false);\n\n    //reference for the input file field\n    const inputElement = useRef(null);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    async function handleSubmission(){\n\n        //get the file object\n        let file = inputElement.current.files[0];\n        //if this file exist\n        if(file){\n\n            //check file extension and its mine type\n            if(!/\\.(pdf|PDF)$/.test(file.name) || file.type.indexOf(\"application/pdf\") === -1){\n                appConsumer.setNotificationMessage(\"The file must be a pdf!\");\n            }\n            else{\n                //open flag of loading\n                setPaperDataFetch(true);\n\n                //prepare the form data for post\n                let formData = new FormData();\n                formData.append('file', file);\n\n                //call the dao\n               let res = await updateFileDao.updatePdf(formData);\n\n               //if there is a error\n                if (mountRef.current && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setNotificationMessage(\"Error during parsing file\");\n                   \n                }\n                else if(mountRef.current){\n                    //set paperdata\n                    setPaperData(res);\n                    //display the form\n                    setDisplayForm(true);\n                }\n                if(mountRef.current){\n                    //close flag of loading\n                    setPaperDataFetch(false);\n                }\n\n            }\n        }\n    }\n\n    let output = \"\";\n\n    if(!displayForm && !paperDataFetch){\n        output = (\n            <div className=\"new-paper-page-wrapper\">\n                <div>\n                    <div className=\"file-input-container\">\n                        <input type=\"file\"name =\"file\" id=\"real-input\" ref={inputElement} onChange={handleSubmission}/>\n                        <button type=\"button\" className=\"browse-btn\" onClick={() => {inputElement.current.click();}}>\n                            Upload a Paper\n                        </button>\n                    </div>\n                        or<br/>\n                    <button type=\"button\"\n                        onClick={() => {setDisplayForm(true)}}\n                    >insert data manually</button>\n                </div>\n            </div>\n        );\n    }else if(paperDataFetch){\n        output = (\n            <div className=\"new-paper-page-wrapper\">\n                <div className=\"file-input-container\">\n                    <input type=\"file\" id=\"real-input\"/>\n                    <button type=\"button\" className=\"browse-btn\">\n                        <LoadIcon/>\n                    </button>\n                </div>\n                    or<br/>\n                <button type=\"button\"\n                    onClick={() => {/* reset connection to api if necessary */ setPaperDataFetch(false); setDisplayForm(true);}}\n                >abort and insert data manually</button>\n            </div>\n        );\n    }else{\n        output = (\n            <CustomPaperForm projectId={projectId} url={url} history={history} customPaper={paperData}/>\n        );\n    }\n\n    return output;\n\n}\n\n\nexport default CustomPaperPage;","import React from \"react\";\n\n/**\n * component svg edit button\n * based on the 'confirm' flag the icon will change\n */\nconst EditButton = function ({confirm}) {\n    var output = <></>;\n    if(!confirm){//if the user is not editing\n        output = (<svg version=\"1.1\" id=\"edit-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <path className=\"st-pencil\" d=\"M224,632.3l-81.6,225.3L367.7,776l0,0L833,310.7c39.4-39.4,39.9-103.3,0.7-142.9c-0.5-0.5-1-1-1.4-1.4\n            c-39.6-39.2-103.6-38.7-142.9,0.7L224,632.3L224,632.3z\"/>\n            <path className=\"st-pencil-border\" d=\"M367.7,776c-24-71.7-71.9-119.6-143.7-143.7\"/>\n            <path className=\"st-pencil\" d=\"M805.7,338c-24-71.7-71.9-119.6-143.7-143.7\"/>\n        </svg>);\n    }else{//if the user is editing\n        output = (\n            <svg version=\"1.1\" id=\"confirm-edit-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t            viewBox=\"0 0 1000 1000\">\n                <polyline className=\"st-confirm\" points=\"918,192.3 389.3,807.7 82,450 \"/>\n            </svg>\n        );\n    }\n    return output;\n};\n\nexport default EditButton;\n","import React, {useState,useContext,useEffect, useRef} from \"react\";\n\nimport {projectsDao} from 'dao/projects.dao';\nimport {AppContext} from 'components/providers/appProvider';\n\nimport EditButton from \"components/svg/editButton\";\n\n/**\n * this is the head component of page\n * @param \"menu_elements\" contains the list of menu-items\n */\n\n\nconst ProjectName = function({project, setProject}){\n\n    const mountRef = useRef(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //this is used as a toggle for checking if the user is trying to edit the name of the project\n    const [editing, setEditing] = useState(false);\n\n    //this is used as field value for the project name\n    const [name, setName] = useState(project.data.name);\n\n\n    //checks if there's an edit request\n    function handleEditRequest(e){\n        if(!editing){//if the user is not editing the name yet(the check is useful because handleEditRequest and handleConfirm fire at the same time)\n            document.getElementById(\"edit-project-name-input\").focus();\n            setEditing(!editing);\n        }\n    }\n\n    //function for updating the description and name\n    async function updateProject(){\n\n        //if the new name o description are difference from the old name o description\n        if(name !== project.data.name){\n\n            let res = await projectsDao.putProject(project.id, {name: name, description : project.data.description});\n\n            \n            //empty string is the response from the dao layer in case of success(rember that empty string is a falsy value)\n            if (mountRef.current && res === \"\") {\n                console.log(\"we got a success\");\n                let newProject = project;\n                newProject.data.name = name;\n                setProject({...newProject});\n            }\n            //error checking\n            //if is other error\n            else if (mountRef.current && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n\n        }\n    }\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n\n    //checks if the user wants to confirm the change\n    function handleConfirm(e){\n        if(editing){//if the user was editing I confirm its request and call the api(the check is useful because handleEditRequest and handleConfirm fire at the same time)\n            updateProject();\n            setEditing(!editing);\n        }\n    }\n\n    return(\n        <div className={(editing) ? \"nav-elements\" : \"nav-elements hidden-form\"}> \n            <h2 style={{fontSize: (editing) ? \"0px\" : \"21px\"}}>{project.data.name}</h2> \n            {/*clicking on the div containing the title will allow the user to access the form for editing the project name*/}\n            <form className=\"edit-project-name\"  onClick={handleEditRequest} onSubmit={(e) => {e.preventDefault()}}>\n                <input type=\"text\" id=\"edit-project-name-input\" value={name} style={{width: (editing) ? \"\" : \"0px\", padding: (editing) ? \"\" : \"0px\"}}\n                    onChange={(e) => setName(e.target.value)}\n                    onBlur={(e) => {setEditing(false)}}\n                />\n                <button className=\"edit-button\" onMouseDown={handleConfirm} type=\"button\"><EditButton confirm={editing}/></button>\n                {/*clicking on the button will confirm the new name*/}\n            </form>\n        </div>\n    );\n}\n\nexport default ProjectName;","import React from \"react\";\n\n/**\n * component svg\n */\nconst Forbidden = function (props) {\n    return(\n        <svg version=\"1.1\" id=\"forbidden\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <circle className=\"st0-forbidden\" cx=\"500\" cy=\"500\" r=\"397\"/>\n        <g>\n            <line className=\"st1-forbidden\" x1=\"780.2\" y1=\"780.2\" x2=\"218.8\" y2=\"218.8\"/>\n        </g>\n        </svg>\n    );\n}\n\nexport default Forbidden;","import React from \"react\";\n\n/**\n * component svg \n */\nconst Ghost = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"ghost\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <path class=\"st0-ghost\" d=\"M949.5,759c-34.3-97-89.7-188.9-98.5-293.2c0-0.3,0-0.6,0-0.9s-0.8-0.1-0.1-1c-5.7-99-58.2-209-174.7-205.1\n                C550.8,263,499.5,395.2,512,505.6c16.2,110.9,19.6,217.5,6.4,329\"/>\n            <ellipse transform=\"matrix(1.122617e-02 -0.9999 0.9999 1.122617e-02 200.0576 961.9827)\" cx=\"586.5\" cy=\"379.8\" rx=\"21.8\" ry=\"27.4\"/>\n            <ellipse transform=\"matrix(1.122617e-02 -0.9999 0.9999 1.122617e-02 329.3011 1095.6136)\" cx=\"718.6\" cy=\"381.3\" rx=\"21.8\" ry=\"29.1\"/>\n            <path d=\"M678.8,453.7c2.3,22-9.1,49.7-35.9,45.1c-26.8-4.6-21.4-27.8-21.6-47.3c-0.2-19.5-3-38.9,20.7-41.1S676.5,431.7,678.8,453.7\n                z\"/>\n            <path class=\"st1-ghost\" d=\"M407.8,331.6c31.9-17.6,51.3-40.8,51.3-66.3c0-55.2-91.5-100-204.3-100s-204.3,44.8-204.3,100\n                s91.5,100,204.3,100c33.7,0,65.5-4,93.6-11.1c21.9,31.4,51.9,40.2,98.4,39.6C417.6,378.1,408.1,355.2,407.8,331.6z\"/>\n            <text transform=\"matrix(1 0 0 1 159.4091 299.821)\" class=\"st2-ghost\">404</text>\n            <path class=\"st0-ghost\" d=\"M518.4,834.6l18.3-11.6c25.3-16.1,57.5-16.4,83.2-0.9l0,0c25.3,15.3,56.9,15.2,82.1-0.2l33.1-20.3\n                c34.3-21,76.8-23.7,113.5-7.1l0,0c37.7,17,82.1,1.4,100.8-35.5l0,0\"/>\n        </svg>\n    );\n};\n\nexport default Ghost;","import React from \"react\";\nimport Ghost from \"components/svg/ghost\";\n\n\n\n/**\n * 404 page\n */\nconst PageNotFound = function (props) {\n    //get data from global context\n    return (\n        <div className=\"page-not-found-wrapper\">\n            <Ghost/>\n        </div>\n    );\n};\n\nexport default PageNotFound;","import React, {useState, useEffect, useContext} from \"react\";\nimport queryString from \"query-string\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport {PrintPapersList} from 'components/modules/printPapersList';\nimport Select from 'components/forms_elements/select';\nimport OrderArrow from 'components/svg/orderArrow';\nimport Pagination from \"components/modules/pagination\";\nimport {createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue} from 'utils/index';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n\n\n//order options\nconst orderByOptions = [\n    { value: 'date_created', label: 'Recently Added' },\n    { value: 'title', label: 'Title' },\n    { value: 'authors', label: 'Authors' }\n  ];\n\n/**\n * the local component that shows the papers list of a project\n */\nconst PapersList = ({project_id, location, match, history, forcePapersFetch}) => {\n\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(location.search);\n\n    const [up, setUp] = useState(queryData.sort);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let  mnt = true;\n\n        if(queryData.orderBy !== \"date_created\" && up !== queryData.sort){\n            setUp(queryData.sort);\n            document.getElementById(\"ani-order-arrow\").beginElement();\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setDisplay(false);\n\n            //call the dao\n            let res = await projectPapersDao.getPapersList({project_id, ...queryData});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setPapersList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n\n                //update state\n                setPapersList(res.results);\n                setTotalResults(res.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n\n        };\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count, queryData.sort, queryData.orderBy, forcePapersFetch]); //re-execute when these variables change\n\n\n    //handler for sort selection\n    function handleSelection(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n\n        //if I previously ordered by 'most recent' then I sort the next order by ASC\n        if(queryData.orderBy === \"date_created\"){\n            queryData.sort = \"ASC\";\n        }\n        queryData.orderBy=orderByOptions[index].value;\n\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e){\n        //trigger svg animation\n        if(queryData.sort === \"ASC\"){\n            queryData.sort = \"DESC\";\n        }\n        else{\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print loading image\n        output = (\n            <div className=\"paper-card-holder\">\n                <div className=\"order\" style={{pointerEvents: \"none\"}}>{/* this way the user cannot sort while loading the results */}\n                    <label>sort by:</label>\n                    <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\",queryData.orderBy)} handler={handleSelection}/>\n                    <button type=\"button\" onClick={handelOrder}><OrderArrow display={queryData.orderBy !== \"date_created\"} up={up}/></button>\n                </div>\n                <LoadIcon class={\"small\"}/>\n            </div> );\n    }\n    else {\n\n        output = (\n            <div className=\"paper-card-holder\">\n                <div className=\"order\">\n                    <label>sort by:</label>\n                    <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)} handler={handleSelection}/>\n                    <button type=\"button\" onClick={handelOrder}><OrderArrow display={queryData.orderBy !== \"date_created\"} up={up}/></button>\n                </div>\n                <PrintPapersList papersList={papersList} location={location} history={history}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </div>\n        );\n    }\n\n    output = (\n        <div className=\"left-side-wrapper\">\n            {output}\n        </div>\n    );\n\n    return output;\n\n};\n\n\n\n\n/**\n * internal function to prepare a object of queryData\n * @param query\n * @return object of queryData for the fetch\n */\nfunction createQueryData(query){\n\n    //set query params from queryString of url\n    let params = queryString.parse( query);\n    let count = params.count || 10;\n    let start = params.start || 0;\n    let orderBy = params.orderBy || \"date_created\";\n    let sort = params.sort || \"ASC\";\n\n    if(orderBy === \"date_created\"){\n        sort = \"DESC\";\n    }\n\n    let queryData = {orderBy, sort, start, count };\n    return queryData;\n\n}\n\n\n\nexport default PapersList;","import React, {useState, useContext, useEffect, useRef} from \"react\";\n\nimport {projectsDao} from 'dao/projects.dao';\nimport {AppContext} from 'components/providers/appProvider'\n\nimport EditButton from \"components/svg/editButton\";\nimport RemoveButton from \"components/svg/removeButton\";\nimport LoadIcon from 'components/svg/loadIcon';\n\n/**\n * this is the description component for the project page\n */\n\n\nconst ProjectDescription = function({project, setProject, collaborators, setCollaborators}){\n\n    const mountRef = useRef(false); //in the future we should get ref from parent component because we also get to set its properties\n\n    //this is used as a toggle for checking if the user is trying to edit the name of the project\n    const [editing, setEditing] = useState(false);\n\n    //state form project description\n    const [description, setDescription] = useState(project.data.description);\n\n    //state form input collaborator\n    const [input, setInput] = useState(\"\");\n\n    //flag for collaborators loading\n    const [loadIconDisplay, setLoadIconDisplay] = useState(true);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    let output = <></>;\n\n    useEffect(() => {\n        mountRef.current = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //call the dao for getting collaborators\n            let res = await projectsDao.getProjectCollaborators(project.id);\n\n            //error checking\n            //if the component is still mounted and there is some other errors\n            if (mountRef.current && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and res isn't null\n            else if ( res ) {\n                setCollaborators(res);\n                //show the page\n                setLoadIconDisplay(false);\n            }\n        }\n\n        fetchData();\n\n        return () => {\n            mountRef.current = false;\n        };\n    }, [])\n\n    //function for updating the description and name\n    async function updateProject(){\n\n        //if the new name o description are difference from the old name o description\n        if(description !== project.data.description){\n\n            //call the dao\n            let res = await projectsDao.putProject(project.id, {name: project.data.name, description : description});\n            console.log(res);\n\n            //empty string is the response from the dao layer in case of success(rember that empty string is a falsy value)\n            if (res === \"\") {\n                console.log(\"scccc\");\n                let newProject = project;\n                newProject.data.description = description;\n                setProject({...newProject});\n                console.log(project);\n            }\n            //error checking\n            //if is other error\n            else if (res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n\n\n        }\n    }\n\n    //handles the click on the edit/confirm button\n    function handleEditRequest(e){\n        console.log(\"CLICK\");\n        if(!editing){//if the user was not editing I allow him to edit\n            setTimeout(//I wait for the button event to fire before blurring out the textarea\n                function(){\n                    document.getElementById(\"edit-project-description-input\").focus();\n                },100);\n            \n            setEditing(true);\n            console.log(editing)\n        }else{//if the user was editing I submit its changes\n            updateProject();\n        }\n    }\n\n    //format the date string\n    function formatDate(date){\n        return <span className=\"date\">{date.slice(0,10)} at {date.slice(11,19)}</span>\n    }\n\n    //function for removing collaborators\n    async function removeCollaborator(collaborator){\n        console.log(\"removing \" + collaborator + \" from \" + project.id);\n\n        const callApi = async () => {\n\n            //call the dao for getting collaborators\n            let res = await projectsDao.removeProjectCollaborator(project.id, collaborator);\n            //error checking\n            //there is some other errors\n            if (mountRef.current && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //didn't get an error\n            else{\n                let newCollabs = collaborators.filter(x => x.id !== collaborator);\n                console.log(newCollabs)\n                setCollaborators(newCollabs);\n            }\n        }\n        callApi();\n    }\n\n    //function for adding collaborator\n    async function addCollaborator(){\n        if(!collaborators.includes(input)){\n            console.log(\"adding \" + input);\n\n            const callApi = async () => {\n\n                //call the dao for getting collaborators\n                let res = await projectsDao.addProjectCollaborator(project.id, {\"email\": input});\n                //error checking\n                //there is some other errors\n                if (mountRef.current && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }\n                //didn't get an error\n                else if (res) {\n                    setInput(\"\");\n                    setCollaborators([...collaborators, res]);\n                }\n            }\n            callApi();\n        }\n    }\n\n\n    if(loadIconDisplay){\n        output = (\n            <div className=\"right-side-wrapper project-description hidden-form-description\">\n                <h2>Description:</h2>\n                <LoadIcon/>\n            </div>\n            );\n    }else{\n        output = (\n            <div className={(!editing) ? \"right-side-wrapper project-description hidden-form-description\" : \"right-side-wrapper project-description\"}>\n                <h2>Description:</h2>\n                <p style={{fontSize: (editing) ? \"0px\" : \"15px\"}}> {project.data.description}</p>\n                <form className=\"edit-project-description\" style={{height:(editing) ? \"\" : \"0px\"}}>\n                        <textarea id=\"edit-project-description-input\"  value={description} style={{width: (editing) ? \"100%\" : \"0%\", padding: (editing) ? \"\" : \"0px\", height:(editing) ? \"\" : \"0px\"}}\n                        onChange={(e) => setDescription(e.target.value)}\n                        onBlur={(e) => {\n                                        console.log(\"blurring\");\n                                        setEditing(false);\n                                    }}\n                        />\n                        <button className=\"edit-button\" onMouseDown={handleEditRequest} type=\"button\">\n                            <EditButton confirm={editing}/>\n                        </button>\n                </form>\n                <h2>Additional info:</h2>\n                <p className=\"project-date-info\"> <span>Created</span> {formatDate(project.date_created)} </p>\n                <p className=\"project-date-info\"> <span>Last edited</span> {formatDate(project.date_last_modified)} </p>\n                <h2>Collaborators:</h2>\n                {(collaborators.length === 0) ? \"You're not sharing this project with anyone\" : \"\"}\n                {collaborators.map((element, index) =>\n                    <div className=\"collaborator-wrapper\" key={index}>\n                        <p className=\"collaborator\">{element.data.email}</p>\n                        <button type=\"button\" className=\"remove-btn\" name={element.data.email}\n                            value={element.data.email} //name and value don't work on the button event for some reasons\n                            onClick={(e) => {\n                                removeCollaborator(element.id);\n                            }}>\n                            <RemoveButton/>\n                        </button>\n                    </div>\n                )}\n                <form className=\"add-collaborator\" onSubmit={addCollaborator}>\n                    <input type=\"text\" id=\"edit-project-description-input\" placeholder=\"add a collaborator\" value={input}\n                        onChange={(e) => {setInput(e.target.value);}}\n                    />\n                    <button className=\"add-collaborator-button\" disabled={(!input || input === \"\")}>\n                        \n                    </button>\n                </form>\n            </div>\n        );\n    }\n\n    return output;\n}\n\nexport default ProjectDescription;","import React, {useState, useContext, useRef, useEffect} from \"react\";\n\nimport {updateFileDao} from \"dao/updateFile.dao\";\n\nimport CloseButton from 'components/svg/closeButton';\n\nimport { AppContext } from 'components/providers/appProvider'\nimport LoadIcon from \"components/svg/loadIcon\";\n\n/**\n * this is the form for uploading a .csv of papers\n */\nfunction PapersCsvForm(props) {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //title field\n    const [title, setTitle] = useState(\"\")\n\n    //year field\n    const [year, setYear] = useState(\"\")\n\n    //abstract field\n    const [abstract, setAbstract] = useState(\"\")\n\n    //author field\n    const [authors, setAuthors] = useState(\"\")\n\n    //id(eid, doi) field\n    const [id, setId] = useState(\"\");\n\n    //flag for csv upload\n    const [csvUpload, setCsvUpload] = useState(false)\n\n    //reference for the input file field\n    const inputElement = useRef(null);\n\n    //function to handle file submission\n    async function handleSubmission(){\n\n        //get the file object\n        let file = inputElement.current.files[0];\n        console.log(file.name);\n        //if this file exists\n        if(file){\n\n            //check file extension\n            if(!/\\.(csv|CSV)$/.test(file.name)){\n                appConsumer.setNotificationMessage(\"The file must be a csv!\");\n            }\n            else{\n                //open flag of loading\n                setCsvUpload(true);\n\n                const map = {\n                    \"authors\" : (authors && authors !== \"\") ? authors : \"Authors\",\n                    \"title\" : (title && title !== \"\") ? title : \"Title\",\n                    \"year\" : (year && year !== \"\") ? year : \"Year\",\n                    \"date\" : \"\",\n                    \"source_title\" : \"\", //\"Source title\",\n                    \"link\" : \"\", //\"Link\",\n                    \"abstract\" : (abstract && abstract !== \"\") ? abstract : \"Abstract\",\n                    \"document_type\" : \"\", //\"Document Type\",\n                    \"source\" : \"\", //Source\",\n                    \"eid\" : (id && (id === \"eid\" || id === \"EID\")) ? id : ((!id) ? \"EID\" : \"\"), //EID\",\n                    \"abstract_structured\" : \"\", //abstract_structured\",\n                    \"filter_oa_include\" : \"\", //filter_OA_include\",\n                    \"filter_study_include\" : \"\", //filter_study_include\",\n                    \"notes\" : \"\", //notes\",\n                    \"manual\" : \"\", //manual\",\n                    \"doi\" : (id && (id === \"doi\" || id === \"DOI\")) ? id : \"\", //doi\"\n                    /*\n                    Authors,Title,Year,Source title,Link,Abstract,\n                    Document Type,Source,EID,abstract_structured,\n                    filter_OA_include,filter_study_include,notes\n                    */\n                }\n\n                //prepare the form data for post\n                let formData = new FormData();\n                formData.append('file', file);\n                formData.append('project_id', props.project_id);\n                formData.append('fields', JSON.stringify(map));\n\n\n                //call the dao\n               let res = await updateFileDao.uploadCsv(formData);\n               console.log(res);\n\n                \n                //if there is a error\n                if (res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setNotificationMessage(\"Error during parsing file\");\n                \n                }\n                else{\n                    //set paperdata\n                    //setPaperData(res);\n                    props.setForcePapersFetch(!props.forcePapersFetch);\n                    props.setVisibility(!props.visibility);\n                }\n\n\n               setTimeout(() => {\n                    //close flag of loading\n                    setCsvUpload(false);\n                }, 2000);\n\n\n            }\n        }\n    }\n\n\n    let output = \"\";\n\n    if(csvUpload){\n        output = (<LoadIcon/>);\n    }else{\n        output = (\n            <>\n            <button type=\"button\" className=\"close-btn\" onClick={(e) => {\n                props.setVisibility(!props.visibility);\n            }}><CloseButton/></button>\n\n            <h2>Upload papers CSV</h2>\n\n            <div className=\"field-names\">\n                <p>Field names<span>(leave empty for default values)</span></p>\n                <div className=\"field-input-row\">\n                    <div className=\"field-input-holder\">\n                        <label>Title : </label>\n                        <input\n                            name=\"name\"\n                            type=\"text\" \n                            placeholder=\"title\" \n                            value={title}\n                            onChange={(e) => {setTitle(e.target.value)}}    \n                        />\n                    </div>\n                    <div className=\"field-input-holder\">\n                        <label>Year : </label>\n                        <input\n                            name=\"name\"\n                            type=\"text\" \n                            placeholder=\"year\" \n                            value={year}\n                            onChange={(e) => {setYear(e.target.value)}}    \n                        />\n                    </div>\n                </div>\n                <div className=\"field-input-row\">\n                    <div className=\"field-input-holder\">\n                        <label>Abstract : </label>\n                        <input\n                            name=\"name\"\n                            type=\"text\" \n                            placeholder=\"abstract\" \n                            value={abstract}\n                            onChange={(e) => {setAbstract(e.target.value)}}    \n                        />\n                    </div>\n                    <div className=\"field-input-holder\">\n                        <label>Authors : </label>\n                        <input\n                            name=\"name\"\n                            type=\"text\" \n                            placeholder=\"authors\" \n                            value={authors}\n                            onChange={(e) => {setAuthors(e.target.value)}}    \n                        />\n                    </div>\n                </div>\n                <div className=\"field-input-row\">\n                    <div className=\"field-input-holder\">\n                        <label>ID : </label>\n                        <input\n                            name=\"name\"\n                            type=\"text\" \n                            placeholder=\"id, eid, doi, ...\" \n                            value={id}\n                            onChange={(e) => {setId(e.target.value)}}    \n                        />\n                    </div>\n                </div>\n            </div>\n            <input type=\"file\"name =\"file\" id=\"real-input\" ref={inputElement} onChange={handleSubmission}/>\n            <button className=\"file-input\" type=\"button\" onClick={() => {inputElement.current.click();}}>Uplaod .csv file</button>\n            </>\n        );\n    }\n    return (\n        <>\n            <form className=\"modal floating-form add-csv-papers\" style={{visibility: (!props.visibility) ? 'hidden' : '' }}>\n                {output}\n            </form>\n        </>\n    );\n\n\n}\n\n\nexport default PapersCsvForm;","import React, {useState} from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport PapersList from 'components/projects_page/papers_tab/papersList';\nimport ProjectDescription from 'components/projects_page/papers_tab/projectDescription';\nimport {join} from 'utils';\n\nimport Cover from \"components/modules/cover\";\nimport PapersCsvForm from \"components/projects_page/papers_tab/forms/papersCsvForm\";\n\n\n/**\n * this is the paper tab which will call the other components\n */\nconst PapersTab = function (props) {\n\n    //bool to control visualization of form\n    const [displayCsvForm, setDisplayCsvForm] = useState(false);\n\n    //paper fetch toggler (its value will be toggled and it will trigger the useEffect fetching papers)\n    const [forcePapersFetch, setForcePapersFetch] = useState(false);\n\n    return (\n        <>\n            <Cover cls={displayCsvForm ? \"full-screen\" : \"\"} handler={setDisplayCsvForm}/>\n            <PapersCsvForm visibility={displayCsvForm} setVisibility={setDisplayCsvForm} project_id={props.project_id}\n                forcePapersFetch={forcePapersFetch} setForcePapersFetch={setForcePapersFetch}\n            />\n            <ProjectDescription project={props.project} setProject={props.setProject} collaborators={props.collaborators} setCollaborators={props.setCollaborators}/>\n            <PapersList project_id={props.project_id} location={props.location} match={props.match} history={props.history}\n                forcePapersFetch={forcePapersFetch}\n            />\n            <div className=\"bottom-right-button-holder\">\n                <div>\n                    <button className=\"bottom-right-btn add-csv-papers-btn\" type=\"button\" value=\"toggle-insert-form\" \n                    onClick={(e) => {\n                        setDisplayCsvForm(!displayCsvForm);\n                    }}>\n                        <div className=\"btn-title\">Upload .csv papers</div><div className=\"btn-icon\"> </div>\n                    </button>\n                </div>\n                <div>\n                    <Link to={join(props.match.url,\"/addpaper\")}>\n                        <button className=\"bottom-right-btn add-custompaper-btn\">\n                            <div className=\"btn-title\">Add Custom Paper</div><div className=\"btn-icon\"> </div>\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default PapersTab;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * get a specific filter\n */\nasync function selectById(id){\n    let url = config.home + config.filters + \"/\" + id;\n\n    const res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to get a list of filters associated with a project\n * @param queryData\n * @return {array[objects]}\n */\nasync function getFiltersList(queryData) {\n    let url = config.home + config.filters;\n    const res = await http.get(url, queryData);\n    return res;\n\n}\n\n/**\n * dao to post a new filter\n * @param bodyData\n * @return {Object} filter created\n */\nasync function postFilterIntoProject(bodyData) {\n    let url = config.home + config.filters;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to delete a filter\n * @param filter_id\n * @return {String} empty string\n */\nasync function deleteFilter(filter_id) {\n    let url = config.home + config.filters + \"/\" + filter_id;\n    return await http.delete(url);\n}\n\n/**\n * dao to update a filter\n * @param filter_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putFilter(filter_id, bodyData) {\n    let url = config.home + config.filters + \"/\" + filter_id;\n    return await http.put(url, bodyData);\n}\n\nconst projectFiltersDao = {\n    selectById,\n    getFiltersList,\n    postFilterIntoProject,\n    deleteFilter,\n    putFilter,\n    \"abortRequest\" : http.abortRequest\n}\n\n\n\nexport {projectFiltersDao};\n","import React, {useEffect, useContext, useRef} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n/**\n * this is the form for adding a new filter to a project\n */\n\n\nconst InsertFilterForm = function(props){\n\n    const mountRef = useRef(false);\n\n    let yup = require('yup');\n\n    const predicateValidationSchema = yup.object().shape({\n        predicate: yup.string().required('please enter a question'),\n        inclusion_description: yup.string().required('please enter the positive answer'),\n        exclusion_description: yup.string().required('please enter the neagative answer')\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    let output = \"\";\n    output = (\n        <div className=\"right-side-wrapper form-filter-wrapper\">\n            <Formik\n                initialValues={{predicate: '', inclusion_description: '', exclusion_description: ''}}\n                validationSchema={predicateValidationSchema}\n                onSubmit={async (values, { setSubmitting, resetForm }) => {\n                    let bodyData = {project_id: props.project_id, predicate: values.predicate, \n                                    inclusion_description: values.inclusion_description, exclusion_description: values.exclusion_description};\n\n                    //call dao\n                    let res = await projectFiltersDao.postFilterIntoProject(bodyData);\n\n                    //error checking\n                    if(mountRef.current && res.message){\n                        //pass error object to global context\n                        appConsumer.setError(res);\n                    }else if(mountRef.current && res){\n                        console.log(res);\n                        props.setFiltersList([res, ...(props.filtersList)])\n                    }\n                    if(mountRef.current){\n                        setSubmitting(false);\n                        resetForm({predicate: '', inclusion_description: '', exclusion_description: ''});\n                    }\n                }}\n                validateOnBlur={false}\n            >\n            {function ({ errors, touched, isSubmitting, setErrors, validateField, handleChange }) {\n                let output = \"\";\n                output = (\n                <Form className=\"add-filter\">\n                    <Field\n                        style={{borderBottom : (errors.predicate && touched.predicate) ? \"solid 1px #d81e1e\" : \"\"}}\n                        name=\"predicate\"\n                        type=\"text\" \n                        placeholder=\"Type a question, predicate, ...\"\n                        onChange={(e) => {handleChange(e); validateField('predicate')}}/>\n                    <Field\n                        style={{borderBottom : (errors.inclusion_description && touched.inclusion_description) ? \"solid 1px #d81e1e\" : \"\"}}\n                        name=\"inclusion_description\"\n                        component=\"textarea\"\n                        placeholder=\"Type what the answer should include\"/>\n                    <Field\n                        style={{borderBottom : (errors.exclusion_description && touched.exclusion_description) ? \"solid 1px #d81e1e\" : \"\"}}\n                        name=\"exclusion_description\"\n                        component=\"textarea\"\n                        placeholder=\"Type what the answer should not include\"/>\n                    <button type=\"submit\" disabled={isSubmitting || \n                        ((errors.predicate && touched.predicate) ||\n                        (errors.inclusion_description && touched.inclusion_description)        ||\n                        (errors.exclusion_description && touched.exclusion_description))}>Add Filter</button>\n                </Form>\n            );\n            return output;\n        }}\n        </Formik>\n\n    </div>\n    );\n    return output;\n}\n\nexport default InsertFilterForm;\n","import React, {useContext, useEffect, useRef} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport CloseButton from 'components/svg/closeButton';\nimport {AppContext} from 'components/providers/appProvider';\n\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\n\nconst UpdateFilterForm = function ({project_id, filter, setFilter, yup, setEditing}) {\n\n    const mountRef = useRef(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //validation schema\n    const predicateValidationSchema = yup.object().shape({\n        predicate: yup.string().required('please enter a question'),\n        inclusion_description: yup.string().required('please enter the positive answer'),\n        exclusion_description: yup.string().required('please enter the neagative answer')\n    });\n\n    return (\n        <Formik\n            initialValues={{predicate: filter.data.predicate, inclusion_description: filter.data.inclusion_description, exclusion_description: filter.data.exclusion_description}}\n            validationSchema={predicateValidationSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                let bodyData = {predicate: values.predicate, inclusion_description: values.inclusion_description, exclusion_description: values.exclusion_description};\n                \n                //call dao\n                let res = await projectFiltersDao.putFilter(filter.id, {project_id, ...bodyData});\n\n                //empty string is the response from the dao layer in case of success(rember that empty string is a falsy value)\n                if (mountRef.current && res === \"\") {\n                    setFilter({id: filter.id, data: {...bodyData}});\n                }\n                //error checking\n                //if is other error\n                else if (mountRef.current && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }\n                if(mountRef.current){\n                    setSubmitting(false);\n                    setEditing(false);\n                }\n            }}\n            validateOnBlur={false}\n        >\n        {function ({ errors, touched, isSubmitting, setErrors, validateField, handleChange }) {\n            let output = \"\";\n            output = (\n            <Form className=\"update-filter-card\">\n                <button type=\"button\" className=\"close-btn\" disabled={isSubmitting} onClick={(e) => {\n                    setEditing(false);\n                }}><CloseButton/></button>\n                <Field\n                    style={{borderBottom : (errors.predicate && touched.predicate) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"predicate\"\n                    type=\"text\" \n                    placeholder=\"Type a question, predicate, ...\"\n                    onChange={(e) => {handleChange(e); validateField('predicate')}}/>\n                <div className=\"textareas-description-wrapper\">\n                    <div>\n                        Positive answer\n                    </div>\n                    <div>\n                        Negative answer\n                    </div>\n                </div>\n                <div className=\"textareas-wrapper\">\n                    <Field\n                        style={{borderBottom : (errors.inclusion_description && touched.inclusion_description) ? \"solid 1px #d81e1e\" : \"\"}}\n                        name=\"inclusion_description\"\n                        component=\"textarea\"\n                        placeholder=\"Type what the answer should include\"/>\n                    <Field\n                        style={{borderBottom : (errors.exclusion_description && touched.exclusion_description) ? \"solid 1px #d81e1e\" : \"\"}}\n                        name=\"exclusion_description\"\n                        component=\"textarea\"\n                        placeholder=\"Type what the answer should not include\"/>\n                </div>\n                <button type=\"submit\" disabled={isSubmitting || \n                    ((errors.predicate && touched.predicate) ||\n                    (errors.inclusion_description && touched.inclusion_description)        ||\n                    (errors.exclusion_description && touched.exclusion_description))}>Update Filter</button>\n            </Form>\n        );\n        return output;\n        }}\n        </Formik>\n    );\n\n};\n\nexport default UpdateFilterForm;","import React, {useState, useEffect} from \"react\";\n\nimport SideOptions from 'components/modules/sideOptions';\nimport UpdateFilterForm from \"./forms/updateFilterForm\";\n\n\n\nconst FilterCard = function ({project_id, filter, callDelete, yup}) {\n\n    //local copy of the filter to manage on the card and update form\n    const [localFilter, setLocalFilter] = useState(filter)\n\n    //bool to disable card while doing delete call\n    const [disabled, setDisabled] = useState(false);\n\n    //bool to display the edit form\n    const [editing, setEditing] = useState(false);\n\n    //side options\n    let sideOptions= [\"delete\", \"update\"];\n\n    //handle for the side options\n    function handleSideOptions(id, name){\n        if(name === \"delete\"){\n            setDisabled(true);\n            callDelete(id);\n        }\n        else if(name === \"update\"){\n            setEditing(true);\n        }\n    }\n\n    let output;\n\n    if(editing){\n        output = (\n            <UpdateFilterForm project_id={project_id} filter={localFilter} setFilter={setLocalFilter} yup={yup} setEditing={setEditing}/>\n        );\n    }\n    else{\n        output = (\n            <div className={(disabled) ? \"disabled\" : \"\"}>\n                <SideOptions options={sideOptions} handler={handleSideOptions} target={localFilter.id} cls=\"card-options\"/>\n                <h3>{localFilter.id}) {localFilter.data.predicate}</h3>\n                <div className=\"answer\"><p><span><span>Include</span><span>:</span></span> {localFilter.data.inclusion_description}</p></div>\n                <div className=\"answer\"><p><span><span>Exclude</span><span>:</span></span> {localFilter.data.exclusion_description}</p></div>\n            </div>\n        );\n    }\n\n    return output;\n\n};\n\nexport default FilterCard;","import React from \"react\";\n\n/**\n * component svg \n */\nconst NoFilters = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"no-filters\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st0-no-filters\" points=\"927.7,149.1 948.9,123.8 915.9,123.8 \t\t\"/>\n            <line className=\"st1-no-filters\" x1=\"806.2\" y1=\"123.8\" x2=\"138.9\" y2=\"123.8\"/>\n            <polyline className=\"st0-no-filters\" points=\"84.1,123.8 51.1,123.8 72.3,149.1 \t\t\"/>\n            <path className=\"st2-no-filters\" d=\"M136.4,225.6l260.1,310.2c11.4,13.6,17.7,30.8,17.7,48.6v271.2c0,37.9,30.8,68.7,68.7,68.7h34.3\n                c37.9,0,68.7-30.8,68.7-68.7V584.3c0-17.8,6.3-35,17.7-48.6l292.1-348.4\"/>\n        </svg>\n    );\n};\n\nexport default NoFilters;","import React, {useEffect, useContext, useRef} from \"react\";\n\nimport FilterCard from \"./filterCard\";\nimport NoFilters from \"components/svg/noFilters\";\n\nimport {AppContext} from 'components/providers/appProvider';\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\nconst PrintFiltersList = function ({filtersList, setFiltersList, project_id}) {\n\n    const mountRef = useRef(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    let yup = require('yup');\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n    \n    //function to delete filter and update the list\n    async function deleteFilter(id){\n        console.log(\"deleting \" + id);\n            \n        //call the dao\n        let res = await projectFiltersDao.deleteFilter(id);\n\n        //error checking\n        //if is other error\n        if (mountRef.current && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);\n        }\n        //if res isn't null\n        else if (mountRef.current && res !== null) {\n\n            appConsumer.setNotificationMessage(\"Successfully deleted\");\n            let newFiltersList = filtersList.filter((filter)=>filter.id !== id);\n            //update project list state\n            setFiltersList(newFiltersList);\n        }\n    }\n\n    let output = \"\";\n    //if list is empty, print a notice message\n    if (filtersList.length === 0) {\n        output = (\n            <div className=\"empty-list-wrapper empty-filters\"> <NoFilters/> \n            <p className=\"empty-list-description\"> There are no filters here, you can add new ones by filling the form to the right</p></div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else{\n        output = (\n            <>\n            {filtersList.map((element) =>\n                <div key={element.id} className=\"generic-card filter-card\">\n                    <FilterCard project_id={project_id} filter={element} filtersList={filtersList} callDelete={deleteFilter} yup={yup}/>\n                </div>\n            )}\n            </>\n        );\n    }\n    return output;\n\n\n};\n\nexport default PrintFiltersList;","import React, {useState, useEffect, useContext} from \"react\";\n\nimport {createQueryDataForFiltersTab} from 'utils/index';\n\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\nimport InsertFilterForm from \"components/projects_page/filters_tab/forms/insertFilterForm\";\nimport PrintFiltersList from \"./printFiltersList\";\nimport Pagination from \"components/modules/pagination\";\n\nimport LoadIcon from 'components/svg/loadIcon';\n\nimport {AppContext} from 'components/providers/appProvider'\n\nconst FiltersTab = function (props) {\n\n    const [filtersList, setFiltersList] = useState([]);\n\n    //filters fetch flag\n    const [filtersFetch, setFiltersFetch] = useState(true);\n\n    //total number of fetched results (useful for the pagination component)\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryDataForFiltersTab(props.location.search);\n\n    useEffect(() => {\n        let mnt = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setFiltersFetch(true);\n\n            //call the dao\n            let res = await projectFiltersDao.getFiltersList({\"project_id\" : props.project_id, ...queryData});\n\n            console.log(res);\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setFiltersList([]);\n                setTotalResults(0);\n                //show the page\n                setFiltersFetch(false);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n                //update state\n                setFiltersList(res.results);\n                setTotalResults(res.totalResults);\n                //show the page\n                setFiltersFetch(false);\n            }\n\n        };\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count, queryData.sort, queryData.orderBy]); //re-execute when these variables change\n\n    return (\n        <>\n            <InsertFilterForm project_id={props.project_id} start={queryData.start} filtersList={filtersList} setFiltersList={setFiltersList}/>\n            <div className=\"left-side-wrapper filters-wrapper\">\n                {(filtersFetch) ?\n                    (\n                        <LoadIcon class={\"small\"}/>\n                    ) :\n                    (\n                        <>\n                        <PrintFiltersList filtersList={filtersList} setFiltersList={setFiltersList} project_id={props.project_id}/>\n                        <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={props.match.url}/>\n                        </>\n                    )\n                }\n            </div>\n        </>\n    );\n}\n\n\nexport default FiltersTab;\n","import React, {useState, useEffect, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\nimport LoadIcon from \"components/svg/loadIcon\";\n\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\nimport {AppContext} from 'components/providers/appProvider'\n\nconst SearchAutomatedDescription = function ({project_id}) {\n\n    //filters\n    const [filtersList, setFiltersList] = useState([]);\n\n    //shows the number of results\n    const [totalResults, setTotalResults] = useState(0);\n\n    //filters fetch flag\n    const [filtersFetch, setFiltersFetch] = useState(false)\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let  mnt = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            setFiltersFetch(true);\n            //call the dao\n            let res = await projectFiltersDao.getFiltersList({\"project_id\" : project_id});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setFiltersList([]);\n                setTotalResults(0);\n                //show the page\n                setFiltersFetch(false);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n                //update state\n                setFiltersList(res.results);\n                setTotalResults(res.totalResults);\n                //show the page\n                setFiltersFetch(false);\n            }\n\n        };\n\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, []);\n\n    let output = \"\";\n    if(filtersFetch){\n        output = <LoadIcon class={'small'}/>\n    }else{\n        if(totalResults !== 0){\n            output = (\n                <>\n                {filtersList.map((element) =>\n                    <p key={element.id} className=\"filter-predicate\">{element.data.predicate}</p>\n                )}\n                <Link to={\"/projects/\"+project_id+\"/filters\"}>Go to filters details</Link>\n                </>\n            );\n        }else{\n            output = (\n                <>\n                    <p className=\"filter-predicate\"><i>No filters yet in this project</i></p>\n                    <Link to={\"/projects/\"+project_id+\"/filters\"}>Add a new filter from filters tab</Link>\n                </>\n            );\n        }\n    }\n\n    return (\n        <div className=\"right-side-wrapper search-automated-right-wrapper\">\n            <div className=\"search-automated-description\">\n                <p>This searching mode leverages NLP models to find relevant papers based on the topic and focus of your project and also considers the inclusion and exclusion criteria you defined.</p>\n                <Link to={\"/projects/\"+project_id+\"/search\"}>(Go back to a normal search)</Link>\n            </div>\n            <div className=\"filters-holder\">\n                <h2>Filters:</h2>\n                <div className=\"side-filters-wrapper\">\n                    {output}\n                </div>\n            </div>\n        </div>\n    );\n\n\n};\n\nexport default SearchAutomatedDescription;","import React, {useContext} from \"react\";\nimport Textarea from 'react-textarea-autosize';\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject} from 'utils/index';\nimport SearchButton from \"components/svg/searchButton\";\n\n/**\n * automated search form component\n */\nconst SearchAutomatedForm = function ({keywords, setKeyWords, history, queryData, description}){\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    /*handles the submission of a search */\n    function handleSendSearch(event) {\n        \n        event.preventDefault();\n\n        //if query input is empty\n        if (keywords === \"\") {\n            appConsumer.setNotificationMessage(\"Search query is empty\")\n        }\n        else {\n            //synchronize the query data from react state hooks\n            queryData.query = keywords;\n            //set query url\n            let queryString = createQueryStringFromObject(queryData);\n            //update url\n            history.push(queryString);//this allows pushing the same data and refreshing the page with the hash router\n\n        }\n\n\n    }\n\n    return (\n        <>\n            <form className='search-automated-form'\n                    onSubmit={handleSendSearch}>\n            <Textarea\n                useCacheForDOMMeasurements\n                maxRows={6}\n                placeholder=\"search\"\n                name=\"query\"\n                value={keywords}\n                onChange={(e) => {setKeyWords(e.target.value)}}\n            />\n            <button type=\"submit\" disabled={(keywords === description && !queryData.query)}><SearchButton/></button>\n            </form>\n        </>\n    );\n\n};\n\n\nexport default SearchAutomatedForm;","import React, {useState, useEffect, useContext, useRef} from \"react\";\n\nimport {paperDao} from 'dao/paper.dao';\n\nimport CheckBox from \"components/forms_elements/checkbox\";\nimport {PrintSearchAutomatedList} from 'components/modules/printPapersList';\nimport Pagination from \"components/modules/pagination\";\nimport SelectedPapersListBox from \"components/projects_page/search_tab/selectedPapersListBox\";\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport NoSearchResults from \"components/svg/noSearchResults\";\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryDataForAutomatedSearch, getIndexOfObjectArrayByKeyAndValue, arrayOfObjectsContains} from 'utils/index';\nimport SearchAutomatedDescription from \"components/projects_page/search_tab/search_automated/searchAutomatedDescription\";\nimport SearchAutomatedForm from \"components/projects_page/search_tab/search_automated/searchAutomatedForm\";\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n\n/**\n * automated search component\n * */\n\nconst SearchAutomatedManager = function ({project, location, match, history}) {\n\n    const mountRef = useRef(false);\n\n    //list of result papers data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to control the visualization of the results when fetching results data\n    const [display, setDisplay] = useState(true);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    let queryData = createQueryDataForAutomatedSearch(location.search);\n\n    //keyword hook\n    const [keywords, setKeyWords] = useState(project.data.description);\n\n    //get the localStorage object (used for saving selected papers)\n    const storage = window.localStorage;\n    if (!window.localStorage) {\n        console.log(\"the browser must be support localStorage\");\n    }\n\n    // list of selected papers\n    const [selectedPapersList, setSelectedPapersList] = useState([]);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    useEffect(() => {\n\n        let mnt = true;\n\n        const fetchPapers= async () => {\n            \n            setDisplay(false);\n\n            setKeyWords(queryData.query || project.data.description);\n\n            //I call the dao for the automated search\n            let resx = undefined;\n\n            resx = await paperDao.searchAutomated({\"project_id\" : project.id, \"query\" : queryData.query, \n                                                    \"start\" : queryData.start, \"count\" : queryData.count});\n\n            console.log(resx);\n            //error checking\n            //if is 404 error\n            if (mnt && resx && resx.message === \"Not Found\") {\n                setPapersList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if is other error\n            else if (mnt && resx && resx.message) {\n                //pass error object to global context\n                appConsumer.setError(resx);\n            }\n            //if res isn't null\n            else if (mnt && (resx !== null)) {\n                //update state\n                setPapersList(resx.results);\n                setTotalResults(resx.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n        }\n\n        fetchPapers();\n\n        //execute when the component will unmount and everytime the useEffect will end\n        return () => {\n            mnt = false;\n        };\n    }, [queryData.query, queryData.start, queryData.count])\n\n    let resultPart = \"\";\n\n     /*\n        START OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n\n    /*function to insert and remove the paper id from selected list*/\n    function handlePaperSelection(event) {\n        let newList;\n        //get eid\n        let eid = event.target.value;\n        //get ttitle\n        let title = event.target.name;\n        //if id is not included in the list yet\n        if (getIndexOfObjectArrayByKeyAndValue(selectedPapersList, \"eid\", eid) === -1) {\n           //create a copy of array\n            newList = [...selectedPapersList];\n            //insert into array\n            newList.push({\"eid\": eid, \"title\": title});\n\n        }\n        //if id already exists in the list\n        else {\n            //remove the  target paper from array\n            newList = selectedPapersList.filter(function (element) {\n                return element.eid !== eid;\n            });\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*function to select all papers*/\n    function selectAllPapers(event) {\n        \n        let newList;\n        \n        //if not all papers are selected yet\n        if(!arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")){\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //and merge them with the previously selected ones\n            let tmpList = [...allPapersInPage, ...selectedPapersList];\n            newList = _.uniqBy(tmpList, 'eid');\n        }else{//otherwise\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //I filter the selectedPapersList by removing the papers that are in the current page\n            newList = selectedPapersList.filter(x => !allPapersInPage.some(paper => paper.eid === x.eid));\n        }\n        \n        setSelectedPapersList(newList);\n\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*\n        END OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //if is loading\n    if (display === false) {\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\" style={{pointerEvents: \"none\"}}>{/* this way the user cannot sort while loading the results */}\n                    <div className=\"select-all\">\n                    <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={false} handler={selectAllPapers}/>\n                    </div>\n                </div>\n                <div className=\"search-loading-holder\">\n                    <LoadIcon class={\"small\"}/>\n                </div>\n            </div>);\n    }\n\n    //if the search results list is empty\n    else if (papersList.length === 0) {\n        //the 'no-results' class is used only to workaround a small bug that display not found just as the search start before the loading icon\n        resultPart = (\n            <div className=\"no-results\"> <NoSearchResults/> <p className=\"not-found-description\"> Nothing was found </p> </div>\n        );\n    }\n    else if (papersList.length > 0) {\n\n        //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\">\n                    <div className=\"select-all\">\n                    <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")} handler={selectAllPapers}/>\n                    </div>\n                </div>\n                <SelectedPapersListBox project_id={project.id} selectedPapersList={selectedPapersList} \n                    setSelectedPapersList={setSelectedPapersList} handlePaperSelection={handlePaperSelection}\n                    mounted={mountRef}\n                />\n                \n                <PrintSearchAutomatedList papersList={papersList} handlePaperSelection={handlePaperSelection}\n                                        selectedEidList={arrayEid}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </div>\n        );\n    }\n\n\n    let output = (\n        <>\n            {/*<Link className=\"back-from-search-automated\"></Link>*/}\n            <SearchAutomatedDescription project_id={project.id}/>\n            <SearchAutomatedForm {...{keywords, setKeyWords, history, queryData}} description={project.data.description}/>\n            <div className=\"search-results\">\n                {resultPart}\n            </div>\n        </>\n    );\n\n    return output;\n};\n\nexport default SearchAutomatedManager;","import React, {useState, useEffect, useContext} from \"react\";\nimport {Route, Link, Switch} from 'react-router-dom';\n\nimport SearchStandardManager from 'components/projects_page/search_tab/search_standard/searchStandardManager';\nimport SearchSimilarManager from 'components/projects_page/search_tab/search_similar/searchSimilarManager';\nimport CustomPaperPage from 'components/projects_page/papers_tab/customPaperPage';\nimport {projectsDao} from 'dao/projects.dao';\nimport ProjectName from 'components/projects_page/projectName';\nimport {join} from 'utils';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport Forbidden from 'components/svg/forbidden';\n\nimport {AppContext} from 'components/providers/appProvider';\nimport PageNotFound from \"components/modules/pageNotFound\";\nimport PapersTab from \"./papers_tab/papersTab\";\nimport FiltersTab from \"./filters_tab/filtersTab\";\nimport SearchAutomatedManager from \"components/projects_page/search_tab/search_automated/searchAutomatedManager\";\n\n\n/**\n *this component will show a projects page\n */\nconst ProjectPage = (props) => {\n\n    //project object of page\n    const [project, setProject] = useState({data: {name: \"loading...\"}});\n\n    //collaborators\n    const [collaborators, setCollaborators] = useState([]);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //notFound state for hiding the navbar\n    const [notFound, setNotFound] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //flag for unauthorized user\n    const [unauthorized, setUnauthorized] = useState(false);\n\n    const project_id = props.match.params.id;\n\n    //set the project title\n    useEffect(() => {\n        if(project.data.name === \"loading...\" || project.data.name === \"UNAUTHORIZED OR INEXISTENT PROJECTS\"){\n            appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">{project.data.name}</h2> </div>);//I set the page title\n        }else{\n            appConsumer.setTitle(<ProjectName project={project} setProject={setProject}/>);\n            appConsumer.setProjectName(project.data.name);\n        }\n\n    }, [project.data.name]);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let mnt = true;\n\n        setDisplay(false);\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //call the dao for main project data\n            let res = await projectsDao.getProject(project_id);\n\n            //error checking\n            //if unauthorized user\n            if(mnt && res.payload && (res.payload.statusCode === 401 || res.payload.message === \"the token does not match any user!\" || res.payload.message === \"empty token id in header, the user must first login!\")){\n                setUnauthorized(true);\n                setDisplay(true);\n                setProject({data: {name: \"UNAUTHORIZED OR INEXISTENT PROJECTS\"}});\n            }\n            //if the component is still mounted and there is some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and res isn't null\n            else if (mnt && res ) {\n                setUnauthorized(false);\n                //update state\n                setProject(res);\n                //show the page\n                setDisplay(true);\n            }\n\n\n        };\n        fetchData();\n        //when the component will unmount\n        return () => {\n\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, [project_id, appConsumer.user]); //re-execute when these variables change\n\n\n    let output;\n\n    //if the page is loading\n    if (display === false) {\n        //print svg image\n        output = <LoadIcon/>;\n    }\n    else if(unauthorized){\n        output = (\n            <div className=\"forbidden-wrapper\">\n                <Forbidden/>\n                <p>This project does not exist or maybe you are not allowed to see it</p>\n            </div>\n        )\n    }\n    else {\n        output = (\n            <div className=\"project-wrapper\">\n                {/*<div>\n                    {JSON.stringify(project)}\n                    <button style={{marginLeft: \"20px\"}} onClick={() => {\n                        let newProject = project;\n                        newProject.data.name = \"__°°__\";\n                        //setProject(newProject);\n                        setProject({...newProject});\n                        console.log(project)\n                    }}>i</button>\n                </div>*/}\n                <ProjectPageHead match={props.match} notFound={notFound}/>\n\n                {/*route the papers list*/}\n                <Switch>\n                    <Route exact  path={props.match.url} render={function(props){\n                        setNotFound(false);\n                        return (<PapersTab project_id={project_id} project={project} setProject={setProject} collaborators={collaborators} setCollaborators={setCollaborators} {...props}/>);\n                    }}/>\n\n                    {/*route the form of search*/}\n                    <Route exact path={props.match.url + \"/search\"} render={function(props){\n                        setNotFound(false);\n                        return (<SearchStandardManager project_id={project_id} {...props} />);\n                    }}/>\n\n                    <Route exact path={props.match.url + \"/filters\"} render={function(props){\n                        setNotFound(false);\n                        return (<FiltersTab project_id={project_id} project={project} {...props}/>);\n                    }}/>\n\n                    <Route exact path={props.match.url + \"/screening\"} render={function(props){\n                        setNotFound(false);\n                        return (<p>screening page</p>);\n                    }}/>\n\n                    <Route exact path={props.match.url + \"/searchautomated\"} render={function(props){\n                        setNotFound(false);\n                        return (<SearchAutomatedManager project={project} {...props} />);\n                    }}/>\n\n                    <Route exact path={props.match.url + \"/searchsimilar\"} render={function(props){\n                        setNotFound(false);\n                        return (<SearchSimilarManager project_id={project_id} {...props} />);\n                    }}/>\n\n                    <Route path = {props.match.url + \"/addpaper\"} render={function(props){\n                        setNotFound(false);\n                        return (\n                            <>\n                                <Link className=\"back\" to={props.match.url.substr(0, props.match.url.length - 9 )}>  </Link>\n                                <CustomPaperPage projectId={project.id} url={props.match.url} history={props.history}/>\n                            </>\n                        );\n                    }} />\n                    <Route render={(props) => {setNotFound(true); return <PageNotFound/>}}/>\n                </Switch>\n\n            </div>\n        );\n    }\n\n    return output;\n};\n\n/**\n * this is the local component to print head of project page\n */\nconst ProjectPageHead = function ({match, notFound}) {\n    //hash  -> #/projects/6/search/ || #/projects/6/search/\n    const lc = window.location.hash.split(\"?\")[0];\n    var slider = \"hide\";\n    switch (true) {\n        case /^#\\/projects\\/\\d+\\/?$/.test(lc): //papers tab\n            slider = \"20px\";\n            break;\n\n        case /^#\\/projects\\/\\d+\\/filters\\/?$/.test(lc): //filters tab\n            slider = \"190px\";\n            break;\n\n        case /#\\/projects\\/\\d+\\/search\\/?/.test(lc): //search tab\n            slider = \"360px\";\n            break;\n\n        case /^#\\/projects\\/\\d+\\/screening\\/?$/.test(lc): //screening tab\n            slider = \"530px\";\n            break;\n\n        default:\n            console.log(\"no tab\");\n            break;\n    }\n    let output = (\n        <>\n            <div className=\"project-nav-link-wrapper\" style={{display: (notFound || slider === \"hide\") ? \"none\" : \"\"}}>\n                <div className=\"nav-link\">\n                    <Link to={match.url}>papers</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/filters\")}>filters</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/search\")}>search</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/screening\")}>screening</Link>\n                </div>\n                <div className=\"underline\" style={{left: slider}}/>\n            </div>\n        </>\n    );\n    return output;\n\n};\n\n\nexport default ProjectPage;\n","import React, {useContext} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n\nimport {AppContext} from 'components/providers/appProvider';\n\nimport Home from 'components/home';\nimport ProjectsList from 'components/projects_page/projectsList';\nimport ProjectPage from 'components/projects_page/projectPage';\nimport LoadIcon from 'components/svg/loadIcon';\nimport PageNotFound from \"./modules/pageNotFound\";\n\n/**\n * compotent main of page\n */\nconst Main = function(props){\n\n    let output = \"\";\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //If I'm fecthing the user I dispay a loading icon\n    if(appConsumer.userFetch){\n        output = (<LoadIcon/>);\n    }\n    //I render routes only if the user is logged\n    else if(appConsumer.user){\n        output = (\n            <Switch>\n                <Route exact path=\"/\" render={() => <Home/> }/>\n                <Route exact path=\"/projects\" render={(props) => <ProjectsList {...props} />}/>\n                <Route path=\"/projects/:id\" render={(props) => <ProjectPage {...props} />}/>\n                <Route render={(props) => <PageNotFound/>}/>\n            </Switch>\n        );\n    }\n    else{\n        output = (\n            <Switch>\n                <Route path=\"/projects/:id\" render={(props) => <ProjectPage {...props} />}/>\n                <Route render={() => <Home/>}/>\n            </Switch>\n        );\n    }\n\n    return (\n        <div className=\"main-wrapper\">\n            {output}\n        </div>\n    );\n};\n\nexport default Main;","import React, {useContext} from \"react\";\n\nimport {AppContext} from \"components/providers/appProvider\";\n\n/**\n * this is the head component of page\n * @param props\n * @param \"menu_elements\" contains the list of menu-items\n */\n\n\nconst NavBar = function(props){\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    \n    return (\n        <div className=\"navigation-wrapper\">\n\n            {/*background of the menu-bar*/}\n            <nav className={appConsumer.user ? \"main-nav\" : \"main-nav nav-title-to-left\"}>\n                {appConsumer.title}\n            </nav>\n            {props.children}\n\n        </div>\n    );\n}\n\nexport default NavBar;","import React from \"react\";\n\n/**\n * component svg \n */\nconst NoImage = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"no-image\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <g>\n                <path className=\"st0-image-error\" d=\"M276.4,541.4c0-20.6,83.9-32.6,187.4-32.6s187.4,12,187.4,32.6\"/>\n                <path className=\"st1-image-error\" d=\"M339.2,554.9c32.4-5.1,76.5-7.9,125.1-7.9c48.2,0,92,2.7,124.3,7.7\"/>\n                <path className=\"st0-image-error\" d=\"M651.9,560.8v52.8l-0.7,0.1c0,20.6-83.9,31-187.4,31s-187.4-10.5-187.4-31l-0.6-0.1v-52.8\"/>\n                <path className=\"st0-image-error\" d=\"M290.4,643.2l43,257.2l0.4-0.2c0,13.7,56,20.7,125.1,20.7s125.1-7,125.1-20.7l53.5-257.1\"/>\n                <g>\n                    <path className=\"st2-image-error\" d=\"M473.9,527.7c-8-4.4,135.3-110.1,166.8-164.5C560.3,392.4,503.6,455.5,473.9,527.7\"/>\n                    <path className=\"st2-image-error\" d=\"M570.5,245.9C545.3,276,474.1,487.5,464.9,574\"/>\n                </g>\n                <g>\n                    <path className=\"st3-image-error\" d=\"M684.6,229.2c1.7-6.1,2.8-12.3,3.2-18.5l36.3-13.4c-1.4-24-9.6-47.7-24.2-67.6L663.6,143\n                        c-2.1-2.2-4.4-4.4-6.8-6.4c-2.4-2-4.9-3.9-7.4-5.7l6.7-38.5c-22-11.2-46.4-15.3-70-12.5l-6.7,38.5c-6,1.5-11.9,3.6-17.5,6.4\n                        l-29.6-25.2c-9.8,6.5-18.9,14.6-26.8,24.2c-7.9,9.6-14.2,20-18.9,30.9l29.6,25.2c-1.7,6.1-2.8,12.3-3.2,18.5l-36.3,13.4\n                        c1.4,24,9.6,47.7,24.2,67.6l36.4-13.4c2.1,2.2,4.4,4.4,6.8,6.4c2.4,2,4.9,3.9,7.4,5.7l-6.7,38.5c22,11.2,46.4,15.3,70,12.5\n                        l6.7-38.5c6-1.5,11.9-3.6,17.5-6.4l29.6,25.2c9.8-6.5,18.9-14.6,26.8-24.2c7.9-9.6,14.2-20,18.9-30.9L684.6,229.2z\"/>\n                    <ellipse className=\"st4-image-error\" cx=\"600.4\" cy=\"204.5\" rx=\"41.9\" ry=\"42.4\"/>\n                </g>\n                <path className=\"st0-image-error\" d=\"M651.2,541.4c0,20.6-83.9,31-187.4,31s-187.4-10.5-187.4-31\"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default NoImage;","import React, {useContext, useState} from \"react\";\nimport { AppContext } from 'components/providers/appProvider'\nimport NoImage from \"components/svg/noImage\";\n\n/*\n* this is the component that visualize user information box\n* */\nconst UserInfo = function(props){\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //profile image fetch error\n    const [fetchError, setFetchError] = useState(false);\n\n    //not logged in as default\n    let output = (\n        <div className=\"user\">\n            <h3>you're not logged in</h3>\n        </div>\n    );\n\n    let img = <></>;\n\n    if(fetchError){\n        img = <div className=\"no-face\" alt=\"error loading image\"><NoImage/></div>\n    }else{\n        img = <img className=\"face\" alt=\"profile\" src={appConsumer.user.image} onError={() => {setFetchError(true)}}/>\n    }\n\n    //if user is logged in I load his data\n    if(appConsumer.user){\n        output = (\n            <div className=\"user\" >\n                {img}\n                <div className=\"user-info\">\n                    {appConsumer.user.name}\n                    <br/>\n                    {appConsumer.user.surname}\n                </div>\n            </div>\n        );\n    }\n\n    return output;\n\n};\n\nexport  default  UserInfo;","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst MenuButton = function (props) {\n\n    return (\n\n        <svg id=\"menu-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n             x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M214,482.1\"/>\n            <line className=\"st-t\" x1=\"172\" y1=\"482.1\" x2=\"172\" y2=\"482.1\"/>\n            <line className=\"st-m\" x1=\"500\" y1=\"482.1\" x2=\"500\" y2=\"482.1\"/>\n            <line className=\"st-b\" x1=\"828\" y1=\"482.1\" x2=\"828\" y2=\"482.1\"/>\n        </svg>\n    );\n};\n\nexport default MenuButton;\n","import React, {useState, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\n\nimport { AppContext } from 'components/providers/appProvider';\n\nimport UserInfo from 'components/navigation/userInfo';\nimport config from 'config/index';\nimport MenuButton from 'components/svg/menuButton';\nimport Cover from 'components/modules/cover';\n\n/**\n *this is the side menu component\n */\nconst SideMenu = function (props) {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //bool to control the visualization of menu\n    const [shown, setShown] = useState(false);\n    const [firstTime, setFirstTime] = useState(true);\n\n\n    //function to open/close the menu\n    function handleToggleMenuButton() {\n        setShown(!shown);\n        setFirstTime(false);\n    }\n\n    //function to close the menu\n    function handleMenuBlur(e) {\n        setShown(false);\n    }\n\n    /**\n     * logout handler function\n     */\n    async function logout (e){\n        console.log(\"logging out\");\n\n        //this way we won't trigger the menu animation again if the user logs in again \n        setFirstTime(true);\n        //remove token from storage\n        localStorage.removeItem(\"userToken\");\n        //remove user info from context\n        appConsumer.setUser(null);\n\n    }\n\n    //change the class of element by menu state\n    var clsidemenu = \"modal side-menu up\";\n    var clsbutton = \"button-wrapper close\";\n\n    if (firstTime) {\n        clsidemenu = \"modal side-menu\"\n    }\n    if (shown) {\n        clsbutton = \"button-wrapper open\"\n        clsidemenu = \"modal side-menu down\"\n    }\n\n    if(appConsumer.user){\n        return (\n            <div className=\"menu\">\n                <Cover cls={(shown) ? \"full-screen-transparent\" : \"\"} handler={handleMenuBlur}/>\n                <div className={clsbutton} onClick={handleToggleMenuButton}>\n                    <MenuButton/>\n                </div>\n\n                <div className={clsidemenu} tabIndex={-1}>\n\n                    {/*user info box*/}\n                    <UserInfo/>\n                    <PrintMenu handleMenuBlur={handleMenuBlur}/>\n                    <div className=\"entry-holder\">\n                        <button type=\"button\" className=\"menu-option\" onClick={logout} onMouseUp={handleMenuBlur}>Log out</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }else{\n        return (\n            <div className=\"menu\">\n            </div>\n        );\n    }\n};\n\n/**\n *internal component that is used only for print menu items\n */\nconst PrintMenu = function (props) {\n\n    let output = (\n        config.menu_list.map((element, index) => (\n                <div key={index} className=\"entry-holder\">\n                    <Link to={element.link} className=\"menu-option\"\n                          onMouseUp={props.handleMenuBlur}>{element.content}</Link>\n                </div>\n            )\n        )\n    );\n    return output;\n\n\n}\n\n\nexport default SideMenu;","import React, {useContext} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport {AppContext} from 'components/providers/appProvider';\n\n\nconst BreadCrumbs = function(props) {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n    \n    let bcPath = <></>;\n\n    function createBreadCrumbs(){\n\n        //I extract the location from the router\n        const { location } = props;\n\n        //I split the pathname by '/' and remove empty strings\n        let path = location.pathname.split('/').filter(x => x);\n\n        //will contain the partial url\n        let href= \"/\";\n        //will contain the link element\n        let link;\n        //array of JSX elements containing the links\n        let bc = [];\n\n        //I don't print ' > ' at the end if there's only one link\n        if(path.length === 0){\n            link = (<div key={0}></div>);\n        }else{\n            link = (<Link key={0} to={href}>Home<span> > </span></Link>);\n        }\n\n        //I push the initial breadcrumb (</> if we are in the home)\n        bc.push(link);\n\n        //I iterate over the paths taking care of links\n        for(let i = 0; i < path.length; i++){\n\n            //avoids the path '/' and the trailing slash\n            if(href === \"/\"){\n                href += path[i];//I update the partial url\n            }else{\n                href += (\"/\" + path[i]);//I update the partial url\n            }\n            \n            //I check whether is the ID of a project \n            if(path[i-1] && path[i-1] === \"projects\"){\n                //I retrieve the project title from the context\n                link = (<Link key={i+1} to={href}>{appConsumer.projectName}</Link>);\n            }else{\n                switch (path[i]) {\n                    case \"projects\":\n                        link = (<Link key={i+1} to={href}>My Projects</Link>);\n                        break;\n                    case \"searchsimilar\":\n                        link = (<Link key={i+1} to={href}>Search for similar papers</Link>);\n                        break;\n                    case \"searchautomated\":\n                        link = (<Link key={i+1} to={href}>Intelligent papers search</Link>);\n                        break;\n                    case \"search\":\n                        link = (<Link key={i+1} to={href}>Search</Link>);\n                        break;\n                    case \"filters\":\n                        link = (<Link key={i+1} to={href}>Filters</Link>);\n                        break;\n                    case \"screening\":\n                        link = (<Link key={i+1} to={href}>Screening</Link>);\n                        break;\n                    default:\n                        link = (<Link key={i+1} to={href}>{path[i]}</Link>);\n                        break;\n                }\n            }\n\n            //I push the link into the list of breadcrumbs\n            bc.push(link);\n\n            //I put ' > ' at the end\n            if(i < (path.length - 1)){\n                bc.push(<span key={i+9999}>{\" > \"}</span>);\n            }\n            \n        }\n        return bc;\n\n    }\n\n    if(appConsumer.user){\n        bcPath = createBreadCrumbs();\n    }\n    \n\n    return (\n        <div className=\"relative-header\">\n            <div className=\"breadcrumbs\">{bcPath}</div>\n        </div>\n    );\n\n}\n\nexport default withRouter(BreadCrumbs);\n","import React, {useContext, useRef} from \"react\";\n\nimport { AppContext } from 'components/providers/appProvider'\nimport CloseButton from 'components/svg/closeButton';\n\n/**\n * component for notification\n */\nconst Notification = function (props) {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    const mountKeyRef = useRef(\"_\");\n\n    let output = <></>;\n\n    //if there's a notification I sent it in input\n    if(appConsumer.notificationMessage){\n        let key = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n        mountKeyRef.current = key;\n\n        //I automatically remove it after 5 seconds\n        setTimeout(() => {\n            console.log((key === mountKeyRef.current));\n            if(appConsumer.notificationMessage && (key === mountKeyRef.current)){\n                appConsumer.setNotificationMessage(undefined);\n            }\n        }, 5000);\n\n        output = (\n            <div className=\"top-right-notification\">\n                <div className=\"message-content\">\n                    {appConsumer.notificationMessage}\n                </div>\n                <button type=\"button\" className=\"close-notification-btn\" onClick={(e) => {appConsumer.setNotificationMessage(undefined)}}>\n                    <CloseButton/>\n                </button>\n            </div>\n        );\n    }\n    return output;\n};\n\nexport default Notification;","import React, {useContext} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {GoogleLogin} from 'react-google-login';\n\nimport config from 'config/index'\n\nimport {AppContext} from 'components/providers/appProvider';\n\n\n/**\n * this component handles the google login and logout from the platform\n */\nconst UsersLogin = function (props) {\n\n    //output var\n    let output = <></>;\n\n    //get the localStorage object\n    const storage = window.localStorage;\n\n    //get history element from router\n    const { history } = props;\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    /**\n     * google response handler function\n     */\n    async function responseGoogle(response){\n        //if the google login is succeeded\n        if (response.tokenId) {\n            console.log(response.profileObj);\n            let user = {\"email\": response.profileObj.email, \n                        \"name\": response.profileObj.givenName, \n                        \"surname\": response.profileObj.familyName, \n                        \"image\": response.profileObj.imageUrl};\n\n            // set the user data in context provider\n            appConsumer.setUser(user);\n            //and save the token as string in localStorage\n            storage.setItem(\"userToken\", response.tokenId);\n\n            \n        }\n    }\n\n    //part of visualization-----------------------------\n\n    //if there's no token or I'm not fetching an user\n    if (!appConsumer.userFetch && !appConsumer.user) {\n        output = (\n            <div className=\"login-holder\">\n                <GoogleLogin\n                    clientId={config.google_login_client_id}\n                    buttonText=\"Login\"\n                    onSuccess={responseGoogle}\n                    onFailure={responseGoogle}\n                    cookiePolicy={'single_host_origin'}\n                />\n            </div>\n        );\n    }\n    return output;\n\n}\n\nexport default withRouter(UsersLogin); //I export passing router components\n","import React from 'react';\nimport {HashRouter as Router} from \"react-router-dom\";\n\n\n\nimport Main from 'components/main';\n\nimport NavBar from 'components/navigation/navBar';\nimport SideMenu from 'components/navigation/sideMenu';\nimport BreadCrumbs from 'components/navigation/breadCrumbs';\n\nimport Notification from 'components/modules/notification';\n\nimport UsersLogin from 'components/modules/usersLogin';\n\n\nimport  {AppProvider} from 'components/providers/appProvider';\n\n\n/**\n *this is the start point of application\n */\n\nconst App = function(props) {\n\n\n        return (\n            <Router>\n                <div className=\"app\">\n\n                    {/*mount a root context object*/}\n                    <AppProvider>\n\n                        <NavBar>\n                            {/*component menu*/}\n                            <SideMenu/>\n                        </NavBar>\n\n                        <BreadCrumbs/>\n\n                        <Notification/>\n\n                        <Main/>\n\n                        <UsersLogin/>\n\n                    </AppProvider>\n                </div>\n            </Router>\n        );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport * as serviceWorker from 'serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}