{"version":3,"sources":["utils/conn.js","config/index.js","dao/users.dao.js","components/modules/error.js","components/providers/appProvider.js","components/home.js","dao/projects.dao.js","components/svg/loadIcon.js","components/svg/closeButton.js","components/projects_page/projectForm.js","components/modules/pagination.js","components/modules/cover.js","components/svg/emptyFolder.js","utils/index.js","components/svg/optionsButton.js","components/modules/sideOptions.js","components/projects_page/projectCard.js","components/projects_page/projectsList.js","dao/paper.dao.js","components/svg/selectTick.js","components/forms_elements/checkbox.js","dao/projectPapers.dao.js","components/svg/noImage.js","components/modules/image.js","components/svg/noPapers.js","components/svg/infoIcon.js","components/modules/infoTooltip.js","components/projects_page/search_tab/search_automated/paperConfidence.js","components/projects_page/papers_tab/projectPaperCard.js","components/modules/printPapersList.js","components/svg/selectArrow.js","components/forms_elements/select.js","components/svg/removeButton.js","components/projects_page/search_tab/selectedPapersListBox.js","components/svg/orderArrow.js","components/svg/noSearchResults.js","components/svg/radioTick.js","components/forms_elements/radiobox.js","components/svg/searchButton.js","components/svg/searchSimilarButton.js","components/projects_page/search_tab/search_standard/searchStandardForm.js","components/svg/robot.js","components/projects_page/search_tab/search_standard/searchStandardManager.js","dao/updateFile.dao.js","components/svg/goButton.js","components/projects_page/search_tab/search_similar/targetPaper.js","components/projects_page/search_tab/search_similar/searchSimilarForm.js","components/projects_page/search_tab/search_similar/searchSimilarManager.js","components/forms_elements/selectformik.js","components/projects_page/papers_tab/forms/customPaperForm.js","components/projects_page/papers_tab/customPaperPage.js","components/svg/editButton.js","components/projects_page/projectName.js","components/svg/forbidden.js","components/svg/ghost.js","components/modules/pageNotFound.js","components/projects_page/papers_tab/papersList.js","components/projects_page/papers_tab/projectDescription.js","components/projects_page/papers_tab/forms/papersCsvForm.js","components/projects_page/papers_tab/papersTab.js","dao/projectFilters.dao.js","components/projects_page/filters_tab/forms/insertFilterForm.js","components/projects_page/filters_tab/forms/updateFilterForm.js","components/projects_page/filters_tab/filterCard.js","components/svg/noFilters.js","components/projects_page/filters_tab/printFiltersList.js","components/projects_page/filters_tab/filtersTab.js","components/projects_page/screening_tab/backlog_subtab/backlogPapers.js","dao/projectScreening.dao.js","components/projects_page/screening_tab/backlog_subtab/forms/autoScreeningForm.js","components/forms_elements/radioboxFormik.js","components/projects_page/screening_tab/backlog_subtab/forms/userCheckboxFormik.js","components/projects_page/screening_tab/backlog_subtab/forms/manualScreeningForm.js","components/svg/manualScreningIcon.js","components/svg/autoScreeningIcon.js","components/svg/crowdScreeningIcon.js","components/projects_page/screening_tab/backlog_subtab/screeningBacklog.js","components/projects_page/screening_tab/manual_subtab/manualResults.js","components/projects_page/screening_tab/screened_subtab/screenedPapers.js","components/projects_page/screening_tab/screeningTab.js","components/projects_page/search_tab/search_automated/searchAutomatedDescription.js","components/projects_page/search_tab/search_automated/searchAutomatedManager.js","components/projects_page/projectPage.js","components/screenings_page/screeningsList.js","components/svg/plusIcon.js","components/modules/filtersAccordion.js","components/modules/paperTags.js","components/svg/removeHighlights.js","components/modules/highlighter.js","components/svg/positiveAnswer.js","components/svg/negativeAnswer.js","components/svg/undecidedAnswer.js","components/screenings_page/singlePredicate.js","components/screenings_page/multiPredicateForm.js","components/screenings_page/multiPredicate.js","components/screenings_page/screeningPage.js","components/main.js","components/navigation/navBar.js","components/navigation/userInfo.js","components/svg/menuButton.js","components/navigation/sideMenu.js","components/navigation/breadCrumbs.js","components/modules/notification.js","components/modules/usersLogin.js","App.js","AppRouter.js","serviceWorker.js","index.js"],"names":["abortController","abortRequestType","config","home","search","scopus_search","search_similar","search_automated","projects","papers","customPapers","filters","auto_screening","screenings","votes","userLogin","userInfo","userLogout","menu_list","id","content","link","max_total_number_for_results","pdf_parse_server","csv_parse_server","google_login_client_id","timeOutTime","localStorage","window","request","_callee","url","options","signal","requestOptions","timer","response","data","timeOutError","regenerator_default","a","wrap","_context","prev","next","AbortController","Object","assign","mode","setTimeout","abort","fetch","sent","clearTimeout","parseResponseData","checkResponseStatus","abrupt","t0","Error","name","stop","_callee2","queryData","query","key","jsonHeaders","_args2","arguments","_context2","length","undefined","encodeURIComponent","slice","Headers","append","getItem","method","headers","_callee3","_context3","_callee4","bodyData","body","_args4","_context4","JSON","stringify","_callee5","_args5","_context5","_callee6","_args6","_context6","status","error","statusText","payload","_callee7","contentType","_context7","get","indexOf","text","formData","blob","json","http","post","delete","put","postFile","abortRequest","console","log","id_token","usersDao","postTokenId","getUserByTokenId","logoutUser","withRouter","props","_useState","useState","_useState2","slicedToArray","firstTime","setFirstTime","appConsumer","useContext","AppContext","history","location","useEffect","setError","pathname","statusCode","message","storage","getUserData","_ref","asyncToGenerator","mark","res","removeItem","setUser","apply","this","goBack","e","output","react_default","createElement","Fragment","className","style","textAlign","type","onClick","React","createContext","AppProvider","user","_useState3","_useState4","userFetch","setUserFetch","_useState5","_useState6","_useState7","_useState8","title","setTitle","_useState9","_useState10","notificationMessage","setNotificationMessage","_useState11","_useState12","projectName","setProjectName","contextObject","_user","email","given_name","surname","family_name","image","picture","testing","Provider","value","modules_error","children","push","fontSize","fontWeight","_args","project_id","_callee8","collaborator_id","_context8","projectsDao","getProjectsList","getProject","postProject","putProject","deleteProject","getProjectCollaborators","removeProjectCollaborator","addProjectCollaborator","LoadIcon","class","xmlns","xmlnsXlink","x","y","viewBox","d","CloseButton","x1","y1","x2","y2","ProjectForm","mountRef","useRef","yup","require","projectValidationSchema","object","shape","string","required","description","current","formik_esm","initialValues","validationSchema","onSubmit","_ref2","values","setSubmitting","_x","_x2","validateOnBlur","_ref3","errors","touched","isSubmitting","isValid","validateField","setErrors","handleChange","visibility","setVisibility","closeButton","borderBottom","placeholder","onChange","component","disabled","Pagination","start","count","totalResults","path","queryString","href","split","newQueryString","arryQuery","i","parameterName","setStartAndCountInUrl","firstPage","lastPage","listPage","paged","Math","floor","totalPage","ceil","react_router_dom","to","paginationLength","display","map","element","index","margin","Cover","cls","handler","EmptyFolder","version","arrayOfObjectsContains","b","_loop","some","v","_ret","join","base","charAt","createQueryStringFromObject","keys","getIndexOfObjectArrayByKeyAndValue","array","createQueryData","queryUrl","fields","params","parse","default","label","orderBy","sort","DeleteButton","SideOptions","target","focused","setFocused","onBlur","onMouseDown","optionsButton","padding","border","ProjectCard","callDelete","project","setDisabled","modules_sideOptions","date_last_modified","queryParams","PrintList","maps","projectsList","handleDelete","emptyFolder","projectCard","ProjectsList","setProjectsList","setTotalResults","setDisplay","toggleform","setToggleForm","_handleDelete","newProjectsList","filter","mnt","even_projs","odd_projs","objectSpread","results","concat","fetchData","loadIcon","cover","projectsList_PrintList","match","pagination","projectForm","paperDao","selectById","searchSimilar","searchAutomated","SelectTick","points","stroke","color","attributeName","dur","repeatCount","fill","from","CheckBox","val","isChecked","tick","setTick","selectTick","checked","paper_id","projectPapersDao","getPapersList","getPaper","postPaperIntoProject","postCustomPaperIntoProject","putPaper","deletePaper","NoImage","cx","cy","rx","ry","Image","alt","src","fetchError","setFetchError","mount","noImage","onError","NoPapers","InfoIcon","r","InfoTooltip","infoIcon","PaperConfidence","filtersList","confidence","localConfidenceArray","setLocalConfidenceArray","confArray","filterArray","pairArray","tooltip","predicate","filterValue","correctFilter","find","pairCoupleArray","toFixed","parseFloat","infoTooltip","ProjectPaperCard","callOptions","paper","authors","eid","year","lib_default","abstract","lines","ellipsis","moreText","lessText","PrintPapersList","papersList","localPaperList","setLocalPaperList","handleSideOptions","_x4","_x5","_x6","_handleSideOptions2","newPapersList","setItem","noPapers","projectPaperCard","PrintScreenedPapersList","metadata","automatedScreening","screening","source","parseInt","result","PrintManuallyScreenedPapersList","_ref4","answer","elementx","modules_image","PrintScoupusSearchList","handlePaperSelection","selectedEidList","setTargetPaperData","sideOptions","_x3","_handleSideOptions","goSimilar","substring","forms_elements_checkbox","includes","PrintSearchAutomatedList","_ref5","paperConfidence","automatedSearch","PrintBacklogPapersList","_ref6","SelectArrow","code","attributeType","isNaN","begin","Select","selected","handleFocus","document","getElementById","beginElement","tabIndex","selectArrow","borderLeft","borderRight","borderTop","data-value","RemoveButton","SelectedPapersListBox","selectedPapersList","setSelectedPapersList","mounted","_handleAddPapers","event","papersToAdd","arrayEid","opacity","pointerEvents","removeButton","height","OrderArrow","up","destination","setDestination","transform","NoSearchResults","RadioTick","RadioBox","radioTick","SearchButton","SearchSimilarButton","_","searchByOptions","endYear","Date","getFullYear","yearOptions","toConsumableArray","range","String","SearchStandardForm","keywords","setKeyWords","scopus","googleScholar","arXiv","setSource","searchBy","setSearchBy","setYear","handleOnInputChange","newSource","_handleSendSearch","preventDefault","position","searchSimilarButton","searchButton","radiobox","singleYear","Robot","orderByOptions","SearchStandardManager","selectedPapersListFromStorage","setPapersList","setUp","newList","resultPart","selectedPapersListBox","noSearchResults","searchStandardForm","robot","allPapersInPage","tmpList","uniqBy","forms_elements_select","getAttribute","orderArrow","updateFileDao","updatePdf","uploadCsv","GoButton","TargetPaper","close","input","paperInfo","fetching","setPaperInfo","setPaperFile","topRightButton","inputElement","_handleSubmission","files","goButton","ref","click","SearchSimilarForm","targetPaperData","similarFormVisibility","setSimilarFormVisibility","similarPaperFetch","setSimilarPaperFetch","targetPaperFile","setTargetPaperFile","fetchMainPaper","resx","test","FormData","marginTop","targetPaper","boxShadow","SearchSimilarManager","onbeforeunload","similarPaperDataFromStorage","paperData","fetchSimilarPapers","searchSimilarForm","form","setSelected","setFieldValue","paperType","CustomPaperForm","paperValidationSchema","number","min","max","integer","customPaper","document_type","doi","toString","source_title","abstract_structured","filter_oa_include","filter_study_include","notes","manual","projectId","render","field","selectformik","CustomPaperPage","paperDataFetch","setPaperDataFetch","setPaperData","displayForm","setDisplayForm","file","customPaperForm","EditButton","confirm","ProjectName","setProject","editing","setEditing","setName","_updateProject","newProject","focus","width","updateProject","editButton","Forbidden","Ghost","PageNotFound","ghost","PapersList","forcePapersFetch","ProjectDescription","collaborators","setCollaborators","setDescription","setInput","loadIconDisplay","setLoadIconDisplay","formatDate","date","_removeCollaborator","collaborator","newCollabs","callApi","_addCollaborator","date_created","removeCollaborator","PapersCsvForm","setAbstract","setAuthors","setId","csvUpload","setCsvUpload","setForcePapersFetch","PapersTab","displayCsvForm","setDisplayCsvForm","papersCsvForm","projectDescription","papers_tab_papersList","filter_id","projectFiltersDao","getFiltersList","postFilterIntoProject","deleteFilter","putFilter","InsertFilterForm","predicateValidationSchema","inclusion_description","exclusion_description","resetForm","setFiltersList","UpdateFilterForm","setFilter","FilterCard","localFilter","setLocalFilter","updateFilterForm","NoFilters","PrintFiltersList","_deleteFilter","newFiltersList","noFilters","filterCard","FiltersTab","filtersFetch","setFiltersFetch","insertFilterForm","printFiltersList","confidenceValues","minConfidenceValues","maxConfidenceValues","resultOutput","c","min_confidence","max_confidence","screening_id","projectScreeningDao","startAutoScreening","startManualScreening","getAutoScreeningStatus","getScreening","getProjectPaperToScreen","getProjectsToScreen","submitVote","AutoScreeningForm","threshold","setAutoScreeningFlag","UserCheckbox","screeners","ManualScreeningForm","collaboratorsFetch","setCollaboratorsFetch","isMpAvailable","setIsMpAvailable","screening_mode","array_user_ids","manual_screening_type","setManualStarted","userCheckboxFormik","radioboxFormik","ManualScreeningIcon","AutoScreeningIcon","CrowdScreeningIcon","ScreeningBacklog","displayManualForm","setDisplayManualForm","displayAutoForm","setDisplayAutoForm","autoScreeningFlag","autoScreeningStatus","setAutoScreeningStatus","manualStarted","_checkStatus","checkStatus","poll","clearInterval","setInterval","screeningStrategy","manualScreningIcon","strokeWidth","strokeDasharray","strokeDashoffset","transition","autoScreeningIcon","crowdScreeningIcon","manualScreeningForm","autoScreeningForm","backlogPapers","totalPapers","setTotalPapers","ScreeningPageNavigation","notFound","lc","hash","slider","paddingRight","setNotFound","screeningTab_ScreeningPageNavigation","react_router","exact","screeningBacklog","manualResults","screenedPapers","pageNotFound","SearchAutomatedDescription","SearchAutomatedManager","fetchPapers","searchAutomatedDescription","ProjectPageHead","left","ProjectPage","unauthorized","setUnauthorized","projects_page_projectName","forbidden","projectPage_ProjectPageHead","papersTab","searchStandardManager","filtersTab","screeningTab","searchAutomatedManager","searchSimilarManager","substr","customPaperPage","screeningsList","project_data","setScreeningsList","screeningsList_PrintList","PlusIcon","FilterElement","isOpen","setIsOpen","localOpen","plusIcon","maxHeight","FiltersAccordion","filtersAccordion_FilterElement","Tags","selectedTags","setSelectedTags","availableTags","suggestionTimeout","tagSuggestions","setTagSuggestions","addTag","_addTag","tag","tagx","_removeTag","removeTag","localInput","toLowerCase","selectionLength","tog","handleInputChange","RemoveHighlights","HighLighter","highlightedData","setHighlightedData","startingBlock","endingBlock","selectingInterval","clicking","onMouseUp","onMouseLeave","end","removeHighlights","dataChunk","onMouseEnter","onDoubleClick","getSelection","empty","onEnd","selection","anchorNode","nodeName","selectionStart","anchorOffset","selectionEnd","focusOffset","tmp","firstSubBlock","midSubBlock","lastSubBlock","newLocalData","splice","firstSubBlockx","midSubBlockx","newBlock","PositiveAnswer","NegativeAnswer","UndecidedAnswer","_array","SinglePredicateScreening","paperHeight","setPaperHeight","decision","setDecision","tags","_useState13","_useState14","nextPaper","setNextPaper","_sendSubmission","screeningData","project_paper_id","vote","highlights","handleKey","activeElement","sendSubmission","union","getElementsByClassName","clientHeight","paperToDisplay","formPart","backgroundColor","positiveAnswer","negativeAnswer","undecidedAnswer","highlighter","react_keyboard_event_handler_default","handleKeys","handleFocusableElements","onKeyEvent","filtersAccordion","overflow","paperTags","FilterScreen","filterHighlights","setFilterHighlights","filterVotes","setFilterVotes","currentOutcome","setCurrentOutcome","currentIndex","findIndex","filterx","localOutcome","outcome","localHighlight","filter_predicate","MultiPredicateForm","tagsData","clearHighlights","displayedFilter","setDisplayedFilter","underlineOffset","setUnderlineOffset","_sendResults","dataToSend","filterVote","multiPredicateForm_FilterScreen","MultiPredicateScreening","multiPredicateForm","setScreening","fetchProjectData","singlePredicate","multiPredicate","Main","projects_page_projectsList","projectPage","screenings_page_screeningsList","screeningPage","NavBar","UserInfo","MenuButton","PrintMenu","handleMenuBlur","SideMenu","shown","setShown","_logout","clsidemenu","clsbutton","menuButton","sideMenu_PrintMenu","bcPath","bc","toUpperCase","createBreadCrumbs","Notification","notificationTimeout","UsersLogin","responseGoogle","_responseGoogle","tokenId","profileObj","givenName","familyName","imageUrl","google_login","clientId","buttonText","onSuccess","onFailure","cookiePolicy","App","appProvider_AppProvider","navBar","sideMenu","breadCrumbs","notification","main","usersLogin","AppRouter","src_App","Boolean","hostname","ReactDOM","src_AppRouter","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7dbcb615.chunk.js","sourcesContent":["/*this is the file to communicate with backend by fetch request*/\nimport config from 'config/index';\n\n//signal to abort the request\nlet abortController;\n//int to know abort error type\nlet abortRequestType;\n//10seconds for timeout\nlet timeOutTime = 10 * 1000;\n\n//get the localStorage object\nconst localStorage = window.localStorage;\n\n/**\n * abort all request in progeress by user\n */\nfunction abortRequest() {\n    abortController.abort();\n    abortRequestType = 1;\n    console.log(\"abort\")\n\n}\n\n/**\n * abort all request if timeout\n */\nfunction timeOut() {\n\n    abortController.abort();\n    abortRequestType = 2;\n}\n\n/**\n * create a basic fetch request\n * @param url\n * @param options request config\n * @param {int} timeOutTime\n * @return {object} response data\n\n */\nasync function request(url, options, timeOutTime) {\n    try {\n\n        //create a new abortController for this request\n        abortController = new AbortController();\n        let signal = abortController.signal;\n        //initialize as 0 for every request\n        abortRequestType = 0;\n\n        let requestOptions = Object.assign(\n            {\n                //enable the  sending of cookie\n                //credentials: (url.includes(config.userInfo)) ? 'omit' : 'include', //if it's a google user api request I don't need credentials\n                \"mode\": 'cors',\n                \"signal\": signal\n            },\n            options\n        );\n\n        //set timeout clock\n        let timer = setTimeout(() => timeOut(), timeOutTime);\n\n        let response = await fetch(url, requestOptions);\n\n        //clear timeout clock\n        clearTimeout(timer);\n\n\n        //parse response data\n        let data = await parseResponseData(response);\n        //response error check\n        checkResponseStatus(response,data);\n        return  data;\n\n    }\n    catch (error) {\n\n        //console.dir(error);\n\n        //if abort error is caused by timeout\n        if (abortRequestType === 2) {\n            //create a custom error for timeout\n            let timeOutError = new Error(\"Error: Time out to get response from backend\");\n            timeOutError.name = \"timeout\";\n            return  timeOutError;\n        }\n        //if is a abort error  caused by user\n        else if (abortRequestType === 1) {\n            return null;\n        }\n\n        return error;\n\n\n    }\n}\n\n/**\n * get method\n * @param url\n * @param queryData quey string\n * @return {object} response data\n */\nasync function get(url, queryData = \"\") {\n    let query = \"\";\n    if (queryData !== \"\") {\n        query = \"?\";\n        for (let key in queryData) {\n            query += key + \"=\" + encodeURIComponent(queryData[key]) + \"&\";\n        }\n        //delete the last &\n        query = query.slice(0, query.length - 1);\n    }\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let options = {\n        \"method\": 'GET',\n        \"headers\": jsonHeaders,\n    };\n\n    return await request(url + query, options, timeOutTime);\n}\n\n/**\n * delete method\n * @param url\n */\nasync function deletes(url) {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let options = {\n        \"method\": 'DELETE',\n        \"headers\": jsonHeaders,\n    };\n\n    return await request(url, options, timeOutTime);\n}\n\n/**\n * post method\n * @param url\n * @param bodyData\n * @return {object } response data\n */\nasync function post(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'POST',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options, timeOutTime);\n}\n\n/**\n * post file method\n * @param url\n * @param bodyData\n * @return {object} response data\n */\nasync function postFile(url, bodyData = \"\") {\n\n    //custom timeout for request\n    let customTimeOutTime= 10 * 1000;\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n   // jsonHeaders.append('Content-Type', 'multipart/form-data');\n    let options = {\n        \"method\": 'POST',\n        \"headers\": jsonHeaders,\n        \"body\": bodyData\n    };\n\n    return await request(url, options, customTimeOutTime);\n}\n\n\n/**\n * put method\n * @param url\n * @param bodyData\n */\nasync function put(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'PUT',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options,timeOutTime);\n}\n\n\n/**\n *  * check resposonse status\n * @param response to check\n * @param data data received\n * @throws {Error} if  status code < 200 or status code >= 300\n */\nfunction checkResponseStatus(response, data) {\n\n    if (response.status < 200 || response.status >= 300) {\n        const error = new Error(response.statusText);\n        error.data = response;\n        if(data.payload){\n            error.payload = data.payload;\n        }\n        throw error;\n    }\n\n}\n\n/**\n * parse the response of  http request\n * @param response response object\n * @return {object} data parsed\n */\nasync function parseResponseData(response) {\n    //get response data type\n    const contentType = response.headers.get('Content-Type');\n    let data = null;\n    //parse the data by its type\n    if (contentType != null) {\n        if (contentType.indexOf('text') > -1) {\n            data = await response.text()\n        }\n        if (contentType.indexOf('form') > -1) {\n            data = await response.formData();\n        }\n        if (contentType.indexOf('video') > -1) {\n            data = await response.blob();\n        }\n        if (contentType.indexOf('json') > -1) {\n            data = await response.json();\n        }\n    }\n    else if (response != null) {\n        data = await response.text();\n    }\n    return data;\n}\n\n\n\n//object to export\nconst http = {\n    get,\n    post,\n    \"delete\" : deletes,\n    put,\n    postFile,\n    abortRequest,\n};\n\nexport default http;","/**\n * this is the config file\n */\n\n\nconst config = {\n    \"home\": \"https://crowdai-slr-api-dev.herokuapp.com/\",\n    //\"home\": \"http://localhost:3001/\",\n    \"search\": \"search\",\n    \"scopus_search\": \"search-scopus\",\n    \"search_similar\": \"search/similar\",\n    \"search_automated\": \"search/automated\",\n    \"projects\": \"projects\",\n    \"papers\": \"papers\",\n    \"customPapers\": \"customPapers\",\n    \"filters\": \"filters\",\n    \"auto_screening\": \"screenings/automated\",\n    \"screenings\": \"screenings\",\n    \"votes\": \"votes\",\n    \"userLogin\": \"auth/login\",\n    \"userInfo\": \"https://www.googleapis.com/oauth2/v3/tokeninfo\",\n    \"userLogout\": \"auth/logout\",\n    \"menu_list\": [\n        {id: 4, content: \"Home\", link: \"/\"},\n        {id: 5, content: \"My Projects\", link: \"/projects\"},\n        {id: 6, content: \"My Screenings\", link: \"/screenings\"}\n    ],\n    \"max_total_number_for_results\": 5000,\n    \"pdf_parse_server\": \"upload/pdf\",\n    \"csv_parse_server\": \"upload/csv\",\n    \"google_login_client_id\": \"282160526683-84sdnoqh3bc1obojfpepcbonnfg3uks4.apps.googleusercontent.com\",\n\n\n\n\n\n};\n\nexport default config;\n","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to post validation token\n * @param bodyData\n * @return {Object} Google user data\n */\nasync function postTokenId(bodyData) {\n    let url = config.home + config.userLogin;\n    return await http.post(url, bodyData);\n}\n\n/**\n * get user by token\n * @return {Object} user data\n */\nasync function getUserByTokenId(id_token) {\n    let url = config.userInfo;\n    return await http.get(url, {id_token});\n}\n\n/**\n * logout user\n * @return {Object} user data\n */\nasync function logoutUser() {\n    let url = config.home + config.userLogout;\n    return await http.get(url);\n}\n\nconst usersDao = {\n    postTokenId,\n    getUserByTokenId,\n    logoutUser\n}\n\n\nexport {usersDao};","import React, {useContext, useState, useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nimport {AppContext} from \"components/providers/appProvider\";\nimport {usersDao} from \"dao/users.dao\";\n\nconst Error = function (props) {\n\n    //this avoids setting the error to null on mount\n    const [firstTime, setFirstTime] = useState(true);\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //useful router stuff\n    const { history, location } = props;\n\n    //if the pathname changes(and it's not the first time) I remove the error\n    //because it means the user manually changed the path\n    useEffect(() => {\n        \n        if(firstTime){\n            console.log(\"error mountes\")\n            setFirstTime(false);\n        }else{\n            appConsumer.setError(null);\n        }\n\n    }, [location.pathname])\n\n    useEffect(() => {\n        try{\n            console.log(appConsumer.error.payload.statusCode);\n\n            //once the component is mounted I go immediately back if error is 401\n            if(appConsumer.error.payload.statusCode === 401 || appConsumer.error.payload.message === \"the token does not match any user!\"){\n                console.log(\"unauth call\")\n                //once I get unauthorized error I check whether the user token is expired\n                const storage = window.localStorage;\n                if (storage.getItem(\"userToken\")) {\n                    async function getUserData(){\n                        let res = await usersDao.getUserByTokenId(storage.getItem(\"userToken\"));\n                        //If the token is expired I remove it and I logout the user\n                        if(res && res.message){\n                            console.log(\"INVALID TOKEN\");\n                            storage.removeItem(\"userToken\");\n                            appConsumer.setUser(null);\n                        }else{\n                            console.log(\"VALID TOKEN\");\n                        }\n                        \n                    }\n                    console.log(\"checking token\")\n                    getUserData();\n                }\n                //then I go back\n                console.log(\"pushing back\")\n                history.goBack();\n            }\n        }catch (e){\n            console.log(\"YOU MAY NEED TO CHANGE THE HOME URL PARAMETER FROM 'config/index.js'\");\n        }\n        return () => {\n            //delete the error, so app can resume its work\n            appConsumer.setError(null);\n        }\n\n    }, []);\n    \n\n    //function to delete the error object in context\n    function handleOnRefresh(){\n        appConsumer.setError(null);\n    }\n    //function to return to previous page\n    function handleOnGoBack(){\n        history.goBack();\n        appConsumer.setError(null);\n    }\n\n    //console.dir(appConsumer.error);\n    let output = <></>;\n\n    //is a error from backend\n    if (appConsumer.error.payload) {\n        output = (\n            <>\n                <p>Error code:</p>\n                <p>{appConsumer.error.payload.statusCode}</p>\n                <p>Error name:</p>\n                <p>{appConsumer.error.payload.error}</p>\n                <p>Error message</p>\n                <p>{appConsumer.error.payload.message}</p>\n            </>\n        );\n    }\n\n    //is a error of other type\n    else {\n        output = (\n            <>\n                <p>Error name:</p>\n                <p>{appConsumer.error.name}</p>\n                <p>Error message</p>\n                <p>{appConsumer.error.message}</p>\n            </>\n        );\n    }\n\n    output = (\n        <div className=\"error-wrapper\" style={{textAlign: \"center\"}}>\n            {output}\n            <br/>\n            <button type=\"button\" onClick={handleOnGoBack}><u>return to previous page</u></button>\n            <br/>\n            <p>or</p>\n            <br/>\n            <button type=\"button\" onClick={handleOnRefresh}><u>refresh</u></button>\n\n        </div>\n    );\n\n    return output;\n\n}\n\n\nexport default withRouter(Error);","import React, {useState, useEffect} from 'react';\n\nimport Error from 'components/modules/error';\n\nimport {usersDao} from 'dao/users.dao';\n\n//create a context object\nconst AppContext = React.createContext();\n\n/**\n * this is the component that include a context object that it can be access by all its children component\n */\nconst AppProvider = function (props) {\n\n    //user data\n    const [user, setUser] = useState(null);\n\n    //user data fetch flag\n    const [userFetch, setUserFetch] = useState(true);\n\n    //error\n    const [error, setError] = useState(null);\n\n    //title\n    const [title, setTitle] = useState(<div className=\"nav-elements\"> <h2 className=\"static-title\">HOME</h2> </div>);\n\n    //notification message\n    const [notificationMessage, setNotificationMessage] = useState(undefined);\n\n    const [projectName, setProjectName] = useState(\"\");\n\n    //preparate an object to be insertd into context\n    const contextObject ={\n        user,\n        setUser,\n        userFetch,\n        setUserFetch,\n        error,\n        setError,\n        title,\n        setTitle,\n        notificationMessage,\n        setNotificationMessage,\n        projectName,\n        setProjectName\n    };\n\n\n    //effect on context mount to fetch user data if he's logged\n    useEffect(() => {\n        //get the localStorage object\n        const storage = window.localStorage;\n\n        if (storage.getItem(\"userToken\")) {\n            async function getUserData(){\n                let res = await usersDao.getUserByTokenId(storage.getItem(\"userToken\"));\n\n                //if I receive an error I remove the deprecated token\n                if((res && res.message) || !res.email){\n                    storage.removeItem(\"userToken\");\n                }else{\n                    let user = {\"email\": res.email, \n                                \"name\": res.given_name, \n                                \"surname\": res.family_name, \n                                \"image\": res.picture};\n                    setUser(user);\n                }\n\n                setUserFetch(false);\n            }\n            getUserData();\n        }else if(props.testing){ //data setup for testing\n            let user = {\"email\": \"gmail@gmail\", \n                        \"name\": \"bob\", \n                        \"surname\": \"man\", \n                        \"image\": \"invalid\"};\n            setUser(user);\n            setUserFetch(false);\n        }else{\n            setUserFetch(false);\n        }\n\n        \n    }, [])\n\n    //if there isn't error\n    if (!error) {\n\n        return (\n            //*set the values of contenxt*\n            <AppContext.Provider value={contextObject}>\n\n                {/*mount all components children*/}\n                {props.children}\n\n            </AppContext.Provider>\n        );\n    }\n    //if there is a error\n    else {\n        return (\n            //*set the values of contenxt*\n            <AppContext.Provider value={contextObject}>\n\n                    <Error/>\n\n            </AppContext.Provider>\n        )\n    }\n\n\n}\n\nexport {AppContext, AppProvider};","import React, {useContext, useEffect} from \"react\";\n\nimport {withRouter} from 'react-router-dom';\n\nimport {AppContext} from \"components/providers/appProvider\";\n\n/**\n * this is home component\n */\nconst Home = function (props) {\n\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set title when component mounts\n    useEffect(() => {\n        appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">HOME</h2> </div>);\n    },[])//run on component mount\n\n    const { history, location } = props;\n\n    useEffect(() => {\n        //if user is not logged it I redirect to homepage\n        if(!appConsumer.user){\n            history.push(\"/\");\n        }\n    }, [location.pathname]) //every time location changes\n\n    return (\n        <>\n            <h1>\n                Systematic Literature Review manager\n            </h1>\n            <h2 style={{fontSize: 22, fontWeight: \"normal\"}}>the system right now allows you to</h2>\n            <ul style={{fontSize: 18, fontWeight: \"lighter\"}}>\n                <li>browse a list of prjects</li>\n                <li>add a new project</li>\n                <li>browse the list of papers on a project</li>\n                <li>search(from scopus) and add papers to a project</li>\n                <li>add custom papers based on a file or form data</li>\n                <li>'fake search' similar papers</li>\n            </ul>\n            <h2 style={{fontSize: 22, fontWeight: \"normal\"}}>notes</h2>\n            <ul style={{fontSize: 18, fontWeight: \"lighter\"}}>\n                <li><i>the scopus search works partially(can't retrieve the description)</i>\n                    <ul><li style={{fontSize: 16}}><i>from Elsevier developer portal : \"The data available depends on your institutional subscriptions, and only when you're making calls from within your institutional network are you considered a subscriber\"</i></li></ul>\n                </li>\n                <li><i>the options don't affect the search, for now</i></li>\n            </ul>\n        </>\n    );\n\n\n\n\n};\n\n\nexport default withRouter(Home); //I export passing router componets to the Home so it can access history and location","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to get a projects list\n * @param queryData\n * @return {array[objects]}\n */\nasync function getProjectsList(queryData = \"\") {\n    let url = config.home + config.projects\n    let res = await http.get(url, queryData);\n    return res;\n\n\n}\n\n/**\n * dao to get a project\n * @param project_id\n * @return {Object} project requested\n */\nasync function getProject(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    let res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to get project collaborators\n * @param project_id\n * @return {array[objects]} array of collaborators\n */\nasync function getProjectCollaborators(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id + \"/collaborators\";\n    let res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to post a new project\n * @param bodyData\n * @return {Object} project created\n */\nasync function postProject(bodyData) {\n    let url = config.home + config.projects;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to post a new collaborator\n * @param project_id\n * @param bodyData email of collaborator\n * @return {String} empty string\n */\nasync function addProjectCollaborator(project_id, bodyData) {\n    let url = config.home + config.projects + \"/\" + project_id + \"/collaborators\";\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to put a old project\n * @param project_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putProject(project_id, bodyData) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    return await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a project\n * @param project_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function deleteProject(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    let res = await http.delete(url);\n    return res;\n}\n\n/**\n * dao to remove collaborator\n * @param project_id\n * @param collaborator_id the mail of the collaborator\n * @return {String} empty string\n */\nasync function removeProjectCollaborator(project_id, collaborator_id) {\n    let url = config.home + config.projects + \"/\" + project_id + \"/collaborators/\" + collaborator_id;\n    let res = await http.delete(url);\n    return res;\n}\n\n\nconst projectsDao = {\n    getProjectsList,\n    getProject,\n    postProject,\n    putProject,\n    deleteProject,\n    \"abortRequest\": http.abortRequest,\n    getProjectCollaborators,\n    removeProjectCollaborator,\n    addProjectCollaborator\n}\n\n\nexport {projectsDao};","import React from \"react\";\n\n/**\n * component svg loading-icon\n */\nconst LoadIcon = function (props) {\n\n    return (\n\n        <svg id=\"loading-icon\" className={props.class} xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n             y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <g>\n                <path id=\"loading-circle1\" d=\"\n                  M 500, 500\n                  m -160, 0\n                  a 160,160 0 1,0 320,0\n                  a 160,160 0 1,0 -320,0\n          \"/>\n                <path id=\"loading-circle2\" d=\"\n                  M 500, 500\n                  m -305, 0\n                  a 305,305 0 1,0 610,0\n                  a 305,305 0 1,0 -610,0\n          \"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default LoadIcon;\n","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst CloseButton = function (props) {\n\n    return (\n        <svg id=\"close-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <line className=\"ln\" x1=\"134\" y1=\"866\" x2=\"866\" y2=\"134\"/>\n        <line className=\"ln\" x1=\"134\" y1=\"134\" x2=\"866\" y2=\"866\"/>\n        </svg>\n    );\n};\n\nexport default CloseButton;\n","import React, {useEffect, useContext, useRef} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectsDao} from 'dao/projects.dao'\n\nimport CloseButton from 'components/svg/closeButton';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n/**\n * this is the form for create or edit the project\n * @param props.project  project object if we want to update a old project\n * @param null if we want to create a new project\n */\nfunction ProjectForm(props) {\n\n    const mountRef = useRef(false);\n    \n    let yup = require('yup');\n\n    const projectValidationSchema = yup.object().shape({\n        name: yup.string().required('please enter a title'),\n        description: yup.string().required('please enter a description')\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    return (\n        <>\n        <Formik\n            initialValues={{ name: '', description:''}}\n            validationSchema={projectValidationSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                let bodyData = {name: values.name, description: values.description};\n                //call dao\n                let res = await projectsDao.postProject(bodyData);\n\n                //error checking\n                if(mountRef.current && res.message){\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }else if(mountRef.current){\n                    props.history.push(\"/projects/\" + res.id);\n                }\n                if(mountRef.current){\n                    setSubmitting(false);\n                }\n            }}\n            validateOnBlur={false}\n        >\n        {function ({ errors, touched, isSubmitting, isValid, setErrors, validateField, handleChange }) {\n            let output = \"\";\n            output = (<Form className=\"modal floating-form add-project\" style={{visibility: (!props.visibility) ? 'hidden' : '' }}>\n                <button type=\"button\" className=\"close-btn\" onClick={(e) => {\n                    props.setVisibility(!props.visibility);\n                }}><CloseButton/></button>\n                <Field\n                    style={{borderBottom : (errors.name && touched.name) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"name\"\n                    type=\"text\" \n                    placeholder=\"Please enter a project title\"\n                    onChange={(e) => {handleChange(e); validateField('name')}}/>\n                <br/>\n                <Field\n                    style={{borderBottom : (errors.description && touched.description) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"description\"\n                    component=\"textarea\"\n                    placeholder=\"Please describe the topic and focus of this new project\"/>\n                <br/>\n                <button type=\"submit\" disabled={isSubmitting || !isValid}>Add Project</button>\n            </Form>\n            );\n            return output;\n        }}\n        </Formik>\n\n       \n        </>\n    );\n\n\n}\n\n\nexport default ProjectForm;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport config from 'config/index';\n\n/**\n * this is the component for pagination\n * @param start offset of results\n * @param count number of element for page\n * @param totalResults the total number of results\n * @param path the path of current page\n * @return {*}\n * @constructor\n */\n\nconst Pagination = function({start, count, totalResults, path}) {\n\n    //set limit max of start\n    if(totalResults >config.max_total_number_for_results){\n        totalResults= config.max_total_number_for_results;\n    }\n    //prepare the correct link path for pagination\n    path = setStartAndCountInUrl(path);\n\n    let prev = \"\", next = \"\", firstPage = \"\", lastPage = \"\";\n    let listPage = [] ;\n    let separator = \"...\";\n    //number*2 of element in pagination\n    let paginationLength = 4;\n    //the page count start by 1.\n    let paged = Math.floor(start / count) + 1;\n    //get total page number\n    let totalPage = Math.ceil(totalResults / count);\n\n\n    //we need the pagination only the totalPage is major than 1\n    if (totalPage > 1) {\n\n        //if it isn't the first page, print the prev-page link\n        if (paged > 1) {\n            prev = (\n                <li>\n                    <Link className=\"prev-page\"\n                          to={path + \"start=\" + (((paged - 1) * count) > 0 ? ((paged - 2) * count) : 0) + \"&count=\" + count}>\n                        {\"<\"}\n                    </Link>\n                </li>\n            );\n        }\n        //if it isn't the last page, print the next-page link\n        if (paged < totalPage) {\n            next = (\n                <li>\n                    <Link className=\"next-page\" to={path + \"start=\" + (paged * count) + \"&count=\" + count}>\n                        {\">\"}\n                    </Link>\n                </li>\n            );\n        }\n\n        //if the first page  isn't include by regular listPage, print the first-page link\n        if (paged > paginationLength + 2) {\n            firstPage = (\n                <>\n                    <li>\n                        <Link className=\"first-page\" to={path + \"start=0&count=\" + count}>\n                            {\"1\"}\n                        </Link>\n                    </li>\n                    <li>\n                        <span>{separator}</span>\n                    </li>\n                </>\n            );\n        }\n\n        //if the last page  isn't include by regular listPage, print the last-page link\n        if (paged < totalPage - (paginationLength + 1)) {\n            lastPage = (\n                <>\n                    <li>\n                        <span>{separator}</span>\n                    </li>\n                    <li>\n                        <Link style={{display: \"inline-block\"}} className=\"last-page\"\n                              to={path + \"start=\" + ((totalPage - 1) * count) + \"&count=\" + count}>\n                            {totalPage}\n                        </Link>\n                    </li>\n                </>\n            );\n        }\n\n        //print the range of page link, the center is current paged\n        for (let i = paged - paginationLength; i <= paged + paginationLength; i++) {\n\n            //print only the i has a valid value\n            if (i > 0 && i <= totalPage) {\n\n                //if i isn't current page, print link\n                if (i !== paged) {\n\n                    listPage.push((\n                            <Link className=\"normal-page\" to={path + \"start=\" + ((i-1) * count) + \"&count=\" + count}>\n                                {i}\n                            </Link>\n                    ));\n                }\n                //if i is current page, print only text\n                else {\n                    listPage.push((\n                            <span className=\"current-page\">{paged}</span>\n                    ));\n                }\n\n            }\n        }\n\n\n    }\n\n    let output = (\n        <ul className=\"pagination\">\n            {prev}\n            {firstPage}\n            {listPage.map((element,index)=><li style={{display: \"inline-block\", margin: 10}} key={index}>{element}</li>)}\n            {lastPage}\n            {next}\n        </ul>\n    );\n    return output;\n};\n\n\n/**\n * internal function to prepare the path link for pagination\n * @param path\n * @return {*}\n */\n\nfunction setStartAndCountInUrl(path){\n\n    let url = window.location.href;\n    //get the queryString from url\n    let queryString = url.split(\"?\")[1];\n    //if it exists\n    if(queryString) {\n        //remove the part after # if it exists\n        queryString = queryString.split(\"#\")[0];\n\n        let newQueryString = \"\";\n        //split queryString in array of string\n        let arryQuery = queryString.split(\"&\");\n        for (let i = 0; i < arryQuery.length; i++) {\n            //check each queryElement\n            let parameterName = arryQuery[i].split(\"=\")[0];\n            //if it isn't start and count\n            if (parameterName !== \"start\" && parameterName !== \"count\") {\n                //add to the new queryString\n                newQueryString += arryQuery[i]+\"&\";\n            }\n        }\n        //create a new path whiteout start and count\n        path = path+\"?\"+newQueryString;\n    }\n    //if path doesn't contain any queryString\n    else {\n        path = path+\"?\";\n    }\n\n\n    return path;\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default Pagination;","import React from \"react\";\n\n\n\n/**\n * component for covering the page\n */\nconst Cover = function ({cls, handler}) {\n    //get data from global context\n    return (\n        <div className={\"cover \" + cls} onClick={(e) => {handler(false)}}></div>\n    );\n};\n\nexport default Cover;","import React from \"react\";\n\n/**\n * component svg \n */\nconst EmptyFolder = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"empty-folder\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <g>\n                <g>\n                    <path className=\"st0-empty-folder\" d=\"M967.9,448.6v260c0,15.1-12.2,27.3-27.3,27.3H59.4c-15.1,0-27.3-12.2-27.3-27.3v-260c0-0.3,0-0.7,0-1\n                        c0-0.2,0-0.4,0.1-0.6c0-0.2,0-0.4,0.1-0.7c0-0.2,0.1-0.4,0.1-0.6c0-0.3,0.1-0.6,0.2-1c0.6-2.4,1.7-4.7,3.5-6.8l141.3-168.3\n                        c2.9-3.4,7.1-5.4,11.6-5.4h89.1c8.5,0,15.9,5.4,18.5,13.5l11.4,35.1c6.3,19.3,24.3,32.4,44.7,32.4h294.4\n                        c20.3,0,38.4-13.1,44.7-32.4l11.4-35.1c2.6-8,10.1-13.5,18.5-13.5h89.1c4.5,0,8.8,2,11.6,5.4l141.3,168.3c1.8,2.1,2.9,4.4,3.5,6.8\n                        c0.1,0.3,0.2,0.6,0.2,1c0,0.2,0.1,0.4,0.1,0.6s0.1,0.5,0.1,0.7s0.1,0.4,0.1,0.6C967.8,447.9,967.9,448.2,967.9,448.6z\"/>\n                    <path d=\"M974.9,448.6c0.1,31-0.8,62-1.4,93c-0.2,7.8-0.3,15.5-0.4,23.3c-0.1,7.8-0.1,15.5-0.2,23.3v46.5v46.5v23.3v2.9\n                        c0,0.5,0,0.9,0,1.5l-0.1,1.7c0,1.1-0.2,2.3-0.4,3.4c-0.1,1.1-0.5,2.2-0.7,3.4c-1.2,4.4-3.4,8.6-6.4,12.1s-6.7,6.4-10.8,8.3\n                        c-4.1,2-8.7,3.1-13.3,3.1l-23.3,0.1l-46.5,0.1l-372.1,1.1L127,742.9L80.5,743H68.9h-5.8h-2.9h-0.7h-0.9l-1.8-0.1\n                        c-4.9-0.4-9.7-1.8-14-4.2s-8-5.7-11-9.6c-2.9-3.9-5-8.5-6.1-13.3c-0.3-1.2-0.4-2.4-0.6-3.6c-0.1-1.2-0.1-2.4-0.2-3.7v-5.8v-23.3\n                        L24.8,633v-93l0.2-46.5l0.1-23.3l0.1-11.6v-5.8v-2.9c0-0.5,0-0.9,0-1.5v-0.9c0,0,0-0.6,0.1-0.9c0-0.3,0.1-0.7,0.1-1l-0.1,1.4\n                        c0-0.5,0.1-1,0.1-1.5l0.1-0.6l0.1-0.6l-0.1,0.5l0.2-1c0.1-0.3,0.2-0.7,0.2-1c0.1-0.5,0.3-1.1,0.5-1.6c0.4-1.1,0.8-2.1,1.3-3.1\n                        s1.1-1.9,1.7-2.8c0.3-0.4,0.6-0.9,1-1.3l0.9-1l6.1-7.1l12.1-14.3L73.6,383l48.4-57l48.5-56.9l1.5-1.8l0.8-0.9l0.4-0.5l0.5-0.6\n                        c1.4-1.6,3.1-2.9,5-4c1.8-1.1,3.9-1.8,5.9-2.3c1-0.2,2.1-0.4,3.2-0.4c0.3,0,0.5,0,0.8,0h0.7h1.2l18.7,0.1l37.4,0.3l18.7,0.1\n                        l9.4,0.1h2.3h1.2l1.4,0.1c1.9,0.1,3.9,0.4,5.7,1c3.7,1.1,7.1,3.2,9.9,6c1.4,1.4,2.6,2.9,3.6,4.6s1.8,3.4,2.4,5.3l5.7,17.8\n                        l5.7,17.8c1.8,5.3,4.6,10.3,8.3,14.6c7.4,8.5,18.3,13.9,29.7,14.5l2.1,0.1h2.3h4.7h9.4l18.7,0.1l37.4,0.1l74.8,0.1l74.8-0.1\n                        l37.4-0.1l18.7-0.1h9.4h4.7h2.3l2.1-0.1c11.3-0.5,22.2-6,29.6-14.5c3.7-4.2,6.5-9.2,8.3-14.5l5.7-17.8l5.6-17.8\n                        c0.6-1.9,1.4-3.6,2.4-5.3c1-1.7,2.3-3.2,3.6-4.6c2.8-2.8,6.2-4.9,10-6c1.9-0.6,3.8-0.9,5.8-1.1l1.5-0.1h1.2h2.3l9.4-0.1l18.7-0.1\n                        l37.4-0.3l18.7-0.1h1.2h0.7c0.3,0,0.5,0,0.8,0c1.1,0.1,2.2,0.2,3.2,0.4c2.1,0.5,4.2,1.2,6,2.3c1.9,1.1,3.6,2.4,5.1,4l0.5,0.6\n                        l0.4,0.5l0.8,0.9l1.5,1.8l48.5,56.9l48.4,57.1l24.1,28.6l12.1,14.3l6,7.1l0.9,1.1c0.3,0.4,0.7,0.9,1,1.3c0.6,0.9,1.2,1.8,1.7,2.8\n                        s0.9,2,1.3,3.1c0.2,0.5,0.3,1.1,0.5,1.6c0.1,0.2,0.1,0.6,0.2,1l0.2,1l-0.1-0.5l0.1,0.6l0.1,0.6c0.1,0.5,0.1,1,0.1,1.5l-0.1-1.4\n                        c0.1,0.4,0.1,0.8,0.2,1.2v0.6v0.3L974.9,448.6z M960.8,448.6v-0.7v-0.2c0,0.1,0,0.1,0,0.2s0,0.2,0.1,0.4l-0.1-1.4\n                        c0,0.1,0,0.2,0,0.2l0,0V447l-0.1-0.5l0,0v-0.1c0,0,0,0,0-0.2c-0.1-0.3-0.1-0.4-0.2-0.6c-0.1-0.4-0.3-0.8-0.5-1.2\n                        c-0.2-0.4-0.4-0.8-0.7-1.2c-0.1-0.2-0.3-0.4-0.4-0.6l-0.6-0.7l-6-7.2l-12-14.4l-24-28.7l-47.8-57.5l-47.7-57.6l-2.8-3.4\n                        c-0.6-0.7-1.4-1.3-2.2-1.8s-1.7-0.8-2.6-1.1c-0.5-0.1-0.9-0.2-1.4-0.2c-0.1,0-0.2,0-0.4,0c-0.1,0-0.2,0-0.4,0h-1.2l-18.7-0.1\n                        l-37.4-0.3l-18.7-0.1l-9.4-0.1h-2.3h-1.2h-0.9c-1.1,0.1-2.3,0.2-3.4,0.6c-4.4,1.3-8.1,4.8-9.6,9.2l-5.9,17.8l-5.9,17.8\n                        c-2.3,6.5-5.7,12.5-10.3,17.6c-9.1,10.2-22.4,16.6-36,17.2L500,349.2l-149.8,0.2c-13.6-0.6-26.9-6.9-35.9-17.2\n                        c-4.6-5.1-8-11.1-10.3-17.6l-5.9-17.8l-5.9-17.8c-1.5-4.5-5.2-8.1-9.7-9.4c-1.1-0.4-2.3-0.5-3.4-0.6h-0.9H277h-2.3l-9.4,0.1\n                        l-18.7,0.1l-37.4,0.3l-18.7,0.1h-1.2c-0.2,0-0.3,0-0.5,0c-0.1,0-0.2,0-0.4,0c-0.5,0-1,0.1-1.5,0.2c-1,0.2-1.9,0.6-2.7,1.1\n                        c-0.9,0.5-1.6,1.1-2.3,1.9l-2.8,3.4l-47.7,57.6l-47.8,57.6l-23.9,28.8l-11.9,14.4l-6,7.2l-0.6,0.8c-0.1,0.2-0.3,0.4-0.4,0.6\n                        c-0.3,0.4-0.5,0.8-0.7,1.2c-0.2,0.4-0.4,0.8-0.5,1.2c-0.1,0.2-0.1,0.4-0.2,0.6c0,0.2,0,0.1,0,0.2v0.1v0.1l-0.1,0.5v0.1\n                        c0,0,0,0.1,0,0s0-0.2,0-0.2l-0.1,1.4c0-0.1,0.1-0.2,0.1-0.3c0-0.1,0-0.3,0-0.2v0.6c0,0.4,0,0.9,0,1.4v2.9v5.8l0.1,11.6l0.1,23.3\n                        l0.2,46.5v93l-0.1,46.5v23.3v5.8l0.1,2.1c0.1,0.7,0.2,1.4,0.3,2.1c0.6,2.8,1.8,5.4,3.5,7.7s3.9,4.2,6.4,5.6\n                        c2.5,1.4,5.3,2.2,8.1,2.4l1.1,0.1h0.5h0.7h2.9H69h11.6l46.5,0.1l372.1,0.8l372.1,1.1l46.5,0.1H941c6.3-0.1,12.5-3,16.6-7.9\n                        c2.1-2.4,3.5-5.3,4.4-8.3c0.2-0.8,0.4-1.5,0.5-2.3s0.3-1.6,0.3-2.4l0.1-1.2c0-0.4,0-0.9,0-1.4v-2.9V681v-46.5V588\n                        c0-7.8-0.1-15.5-0.2-23.3c-0.1-7.8-0.2-15.5-0.4-23.3C961.6,510.6,960.7,479.6,960.8,448.6z\"/>\n                </g>\n                <g>\n                    <path className=\"st1-empty-folder\" d=\"M952.8,686.4l-120.7-220l-9.8-17.9c-2.7-4.8-7.7-7.8-13.2-7.8H190.9c-5.5,0-10.6,3-13.2,7.8l-9.8,17.9\n                        L50,681.3\"/>\n                    <path className=\"st2-empty-folder\" d=\"M951.1,687.4L915,622.6l-36-64.9l-35.8-65l-17.9-32.5l-4.5-8.1l-1.1-2c-0.3-0.6-0.6-1.1-1-1.6\n                        c-0.8-1-1.7-1.8-2.7-2.6c-2-1.4-4.5-2.2-7-2.2h-9.3l-296.8,0.2l-296.8-0.2h-9.3h-4.6H191h-0.9c-0.6,0.1-1.2,0.1-1.8,0.3\n                        c-2.4,0.5-4.6,1.8-6.3,3.7c-0.4,0.5-0.8,1-1.1,1.5c-0.2,0.3-0.3,0.5-0.5,0.8l-0.6,1l-2.2,4.1l-17.9,32.5l-35.8,65l-36,64.9\n                        l-36.1,64.8l-3.5-1.9L83.5,615l35.4-65.2l35.6-65.1l17.8-32.6l2.2-4.1l0.6-1c0.2-0.4,0.5-0.8,0.7-1.2c0.5-0.8,1.1-1.5,1.7-2.2\n                        c2.5-2.8,5.8-4.7,9.5-5.6c0.9-0.2,1.8-0.3,2.8-0.4h1.4h1.2h4.6h9.3l296.8-0.2l296.8,0.2h9.3c3.7,0,7.4,1.2,10.5,3.3\n                        c1.5,1.1,2.9,2.4,4,3.8c0.6,0.7,1.1,1.5,1.5,2.3l1.1,2l4.5,8.1l17.8,32.6l35.6,65.1l35.4,65.2l35.3,65.3L951.1,687.4z\"/>\n                </g>\n                <path className=\"st3-empty-folder\" d=\"M967.9,448.6v260c0,15.1-12.2,27.3-27.3,27.3H59.4c-15.1,0-27.3-12.2-27.3-27.3v-260c0,8.7,6.8,16.9,16.8,16.9\n                    h111.4c12.9,0,24.4,8.3,28.3,20.6l17.4,53.8c9.6,29.6,37.2,49.7,68.4,49.7h451c31.2,0,58.8-20.1,68.4-49.7l17.4-53.8\n                    c4-12.3,15.4-20.6,28.3-20.6H951C961.1,465.5,967.9,457.3,967.9,448.6z\"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default EmptyFolder;","//need to parse query string of url\nimport queryString from 'query-string';\n\n//here are the common support function\n\n/**\n * compares two arrays of objects\n */\nfunction arrayOfObjectsEquals(a, b) {\n\n    if (a === null || b === null) {\n        return false;\n    }\n    if (a.length !== b.length) {\n        return false;\n    }\n\n    a.sort();\n    b.sort();\n\n\n    for (var i = 0; i < a.length; ++i) {\n        if (JSON.stringify(a[i]) !== JSON.stringify(b[i])) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * checks if B is contained in A, using a key to check the inclusion\n * @param {array} a\n * @param {array} b\n * @param {string} key (object field)\n */\nfunction arrayOfObjectsContains(a, b, key) {\n\n    if (a === null || b === null) {\n        return false;\n    }\n    if (a.length === 0 || b.length === 0) {\n        return false;\n    }\n\n    //iterate over all elements of B and check if A contains it \n    //by checking wether and element in A has the same key as the selected B element(b[i])\n    for (let i = 0; i < b.length; ++i) {\n        //if doesn't contain the given element then it meand that the vector A doesn't include the vector B\n        if (!a.some(e => e[key] === b[i][key])) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * converts the checkboxes object of the search form into parameters for the url\n */\nfunction searchCheckboxesToParams(checkboxes) {\n    var params = \"\";\n    Object.keys(checkboxes).forEach(key => {//I iterate over each field of the object\n        if (key !== \"years\") {//if it's not an year\n            if (checkboxes[key]) {//if it's a true flag\n                console.log(key)\n                params += \"&\" + key + \"=\" + checkboxes[key];\n            }\n        }\n        else {//if it's a year\n            if (checkboxes.years.length !== 0) {//if there are some years selected\n                params += \"&\" + queryString.stringify({\"years\": checkboxes.years}, {arrayFormat: 'comma'});\n            }\n        }\n    });\n    return params;\n}\n\n/**\n * this is  function to manipolate 2 url string\n * if first string ends with \"/\", removes \"/\".\n * then concate wite second string and return new string\n */\nfunction join(base, path) {\n    let newPath;\n    //if the last element is \"/\"\n    if (base.charAt(base.length - 1) === '/') {\n        newPath = base.slice(0, -1) + path;\n    }\n    else {\n        newPath = base + path;\n    }\n\n    return newPath;\n\n}\n\n/**\n *\n *\n * function to create string of query by queryObject\n * @param queryData query object\n * @return {string} query string\n */\nfunction createQueryStringFromObject(queryData) {\n\n    let queryString = \"?\";\n    //create a array of keys\n    let keys = Object.keys(queryData);\n    //concatenate the object.property\n    for (let i = 0; i < keys.length; i++) {\n        //I don't need to sort for the recently added sorting\n        if (queryData[\"orderBy\"] !== \"date_created\" || keys[i] !== \"sort\") {\n            queryString += keys[i] + \"=\" + encodeURIComponent(queryData[keys[i]]);\n            //if it isn't the last element, add symbol \"&\"\n            if (i !== (keys.length - 1)) {\n                queryString += \"&\";\n            }\n        }\n    }\n    return queryString;\n\n}\n\n\n/**\n * get element index of a object array by [key, value]\n * @param array to find\n * @param key to find\n * @param value to find\n * @return {number} index of element, -1 if didn't find\n */\nfunction getIndexOfObjectArrayByKeyAndValue(array, key, value) {\n    let index = -1;\n    for (let i = 0; i < array.length; i++) {\n        if (array[i][key] === value) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n\n/**\n * function to prepare a object of queryData\n * @param queryUrl\n * @param fields[] fields array\n * @return object of queryData for the fetch\n */\nfunction createQueryData(queryUrl, fields) {\n    \n    //set query params from queryString of url\n    let params = queryString.parse(queryUrl);\n    let queryData = {};\n    for(let i = 0; i < fields.length; i++){\n        if(typeof fields[i].default === \"boolean\"){\n            if(params[fields[i].label] === \"true\"){\n                queryData[fields[i].label] = true;\n            }else if(params[fields[i].label] === \"false\"){\n                queryData[fields[i].label] = false;\n            }else{\n                queryData[fields[i].label] = fields[i].default;\n            }\n        }else{\n            queryData[fields[i].label] = params[fields[i].label] || fields[i].default;\n        }\n    };\n\n    //date_created is used for sorting the most recently added so it makes sense only DESC sort\n    if(queryData && queryData.orderBy === \"date_created\"){\n        queryData.sort = \"DESC\";\n    }\n    \n    return queryData;\n\n}\n\nexport {\n    arrayOfObjectsEquals,\n    arrayOfObjectsContains,\n    searchCheckboxesToParams,\n    join,\n    createQueryStringFromObject,\n    getIndexOfObjectArrayByKeyAndValue,\n    createQueryData\n\n};","import React from \"react\";\n\n/**\n * component svg options menu button\n */\nconst DeleteButton = function (props) {\n\n    return (\n\n        <svg version=\"1.1\" id=\"options-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t        viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M214,482.1\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"250\" x2=\"500\" y2=\"250\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"500\" x2=\"500\" y2=\"500\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"750\" x2=\"500\" y2=\"750\"/>\n        </svg>\n\n    );\n};\n\nexport default DeleteButton;","import React,{useState} from \"react\";\n\nimport OptionsButton from 'components/svg/optionsButton';\n\n/**\n * component side options\n * it needs a class for the styling,\n * an array of options,\n * the function that will handle the click on the option\n * and, if necessary, a target for the handler function\n */\nconst SideOptions = function ({cls, options, handler, target, data}) {\n\n    //this is used to display or hide the options of the menu\n    const [focused, setFocused] = useState(false)\n\n\n    return (\n        <div className={cls}>\n            <button type=\"button\" \n                    onBlur={(e) => \n                        //if the element is blurred then I hide it\n                        {if(focused){setFocused(false)}}} \n                    onMouseDown={(e) => //onMouseDown fires before onBlur\n                        //immediately after the button is clicked I toggle the menu\n                        {setFocused(!focused)}}>\n                <OptionsButton/>\n            </button>\n            <div style={{fontSize: (focused) ? \"12px\" : \"0px\", padding: (focused) ? \"2px\" : \"0px\", border: (focused) ? \"solid 1px #e8e8e8\" : \"solid 0px #e8e8e800\"}} className=\"options-list\">\n                \n                {options.map((element, index) => \n                    <div key={index} onMouseDown={(e) => handler(target, element, data)} className=\"option\">{element}</div>\n                )}\n                \n            </div>\n        </div>\n    );\n}\n\nexport default SideOptions;","import React, {useState} from \"react\";\nimport {Link} from 'react-router-dom';\n\nimport SideOptions from 'components/modules/sideOptions';\nimport {join} from 'utils';\n\n\nconst ProjectCard = function ({callDelete, path, project}) {\n\n    const [disabled, setDisabled] = useState(false);\n\n    //side options\n    let sideOptions= [\"delete\"];\n\n    //handle for the side options\n    function handleSideOptions(id, name){\n        if(name === \"delete\"){\n            setDisabled(true);\n            callDelete(id);\n        }\n    }\n    return(\n        <div className={(disabled) ? \"disabled\" : \"\"}>\n            <SideOptions options={sideOptions} handler={handleSideOptions} target={project.id} cls=\"card-options project-card-options\"/>\n                <Link to={join(path, \"/\" + project.id)}>\n                    <h3>{project.data.name}</h3>\n                    <p className=\"description\">{project.data.description}</p>\n                    <div className=\"project-dates\">\n                        <p>{/*created on <i>{project.date_created.slice(0, 10)}</i>*/}</p>\n                        <p>last modified on <i>{project.date_last_modified.slice(0, 10)}</i></p> \n                    </div>\n                </Link>\n        </div>\n    )\n}\n\nexport default ProjectCard;","import React, {useState, useEffect, useContext, useRef} from \"react\";\n\nimport {projectsDao} from 'dao/projects.dao';\nimport LoadIcon from 'components/svg/loadIcon';\nimport ProjectForm from 'components/projects_page/projectForm';\nimport Pagination from 'components/modules/pagination';\nimport Cover from 'components/modules/cover';\n\nimport {AppContext} from \"components/providers/appProvider\";\nimport EmptyFolder from \"components/svg/emptyFolder\";\n\nimport {createQueryData} from 'utils/index';\nimport ProjectCard from \"./projectCard\";\n\nconst queryParams = [\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n]\n\n/**\n *this component will show a projects list page\n */\n\nconst ProjectsList = function (props) {\n\n    const mountRef = useRef(false);\n\n    //fetch data\n    const [projectsList, setProjectsList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //bool to control the visualization of input form\n    const [toggleform, setToggleForm] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(props.location.search, queryParams);\n\n\n    //set title when component mounts\n    useEffect(() => {\n        mountRef.current = true;\n\n        appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">PROJECTS</h2> </div>);\n        //I remove any old project name that was previously saved\n        appConsumer.setProjectName(\"\");\n\n        return () => {\n            mountRef.current = false;\n        };\n    },[]); //run on component mount\n\n    useEffect(() => {\n\n        let mnt = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //hide the page\n            setDisplay(false);\n            console.log(queryData);\n            //call the dao\n            const res = await projectsDao.getProjectsList({orderBy: \"date_last_modified\", ...queryData});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setProjectsList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n                //update state\n\n                //I put even first and then odd ones so I can display 2 columns with left-right flow \n                var even_projs = [];\n                even_projs = res.results.filter(function(element, index){ if( index % 2 ) return element;});\n                var odd_projs = [];\n                odd_projs = res.results.filter(function(element, index){ if( !(index % 2) ) return element;});\n\n                setProjectsList(odd_projs.concat(even_projs));\n                setTotalResults(res.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n        };\n\n        fetchData();\n\n        //when the component will unmount or this useEffect will stop\n        return () => {\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count]); //re-execute when these variables change\n\n\n    //handle to delete project\n    async function handleDelete(id){\n\n        console.log(\"deleting \" + id);\n        //call the dao\n        let res = await projectsDao.deleteProject(id);\n\n        //empty string is the response from the dao layer in case of success(rember that empty string is a falsy value)\n        if(mountRef.current && res === \"\"){\n            //create a new array without the project deleted\n            let newProjectsList = projectsList.filter((project)=>project.id !== id);\n            //update project list state\n            setProjectsList(newProjectsList);\n\n            appConsumer.setNotificationMessage(\"Successfully deleted\");\n        }\n        //error checking\n        //if is other error\n        else if (mountRef.current && res && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);  \n        }\n    }\n\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print svg image\n        output = <LoadIcon/>;\n    }\n\n    else {\n\n        output = (\n            <div>\n                <Cover cls={toggleform ? \"full-screen\" : \"\"} handler={setToggleForm}/>\n                {/*print list of projects*/}\n                <PrintList projectsList={projectsList} path={props.match.url} handleDelete={handleDelete}/>\n                {/*set listId and continues value*/}\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={props.match.url}/>\n\n                {/*print the input form to create/update the projects*/}\n                <ProjectForm visibility={toggleform} setVisibility={setToggleForm} history={props.history}/>\n                {/*button to show input form*/}\n                <div className=\"bottom-right-button-holder\">\n                    <button className=\"bottom-right-btn add-project-btn\" type=\"button\" value=\"toggle-insert-form\" \n                    onClick={(e) => {\n                        setToggleForm(!toggleform);\n                    }}>\n                        <div className=\"btn-title\">Add Project</div><div className=\"btn-icon\"> </div>\n                    </button>\n                </div>\n            </div>\n        );\n\n    }\n\n    return output;\n\n\n};\n\n\n/**\n *  internal component only to print the list\n * @param projectsList projects list data\n * @param path current page url\n * @param handleDelete function to delete the project\n * */\nconst PrintList = function ({projectsList, path, handleDelete}) {\n\n    let maps;\n    //if list is empty, print a notice message\n    if (projectsList.length === 0) {\n        maps = (\n            <div className=\"empty-folder-wrapper\"> <EmptyFolder/> <p className=\"empty-folder-description\"> You don't have any projects yet </p></div>\n        );\n    }\n    //if list isn't empty, print list of projects\n    else {\n        maps = (projectsList.map((element, index) =>\n                <div key={element.id} className=\"light-modal project-card\">\n                    <ProjectCard callDelete={handleDelete} path={path} project={element}/>\n                </div>\n        ));\n    }\n\n    let output =  (\n        <div className={(projectsList.length === 0) ? \"project-cards-holder-empty\" : \"project-cards-holder\"}>\n            {maps}\n        </div>\n    );\n\n    return output;\n\n};\n\nexport default ProjectsList;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to search local papers\n * @param queryData\n * @return {array[objects]}\n */\nasync function search(queryData){\n    let url = config.home+config.search;\n\n        const res = await http.get(url, queryData);\n        return res;\n\n}\n\n/**\n * get a specific paper\n */\nasync function selectById(id){\n    let url = config.home + config.papers + \"/\" + id;\n\n    const res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to search similar papers\n * @param bodyData\n * @return {array[objects]}\n */\nasync function searchSimilar(bodyData){\n    let url = config.home+config.search_similar;\n\n    const res = await http.post(url, bodyData);\n\n    \n    return res;\n\n}\n\n/**\n * dao to automated search\n * @param bodyData\n * @return {array[objects]}\n */\nasync function searchAutomated(bodyData){\n    let url = config.home+config.search_automated;\n\n    const res = await http.post(url, bodyData);\n\n    \n    return res;\n\n}\n\nconst paperDao = {\n    search,\n    selectById,\n    searchSimilar,\n    searchAutomated,\n    \"abortRequest\" : http.abortRequest\n}\n\n\n\nexport {paperDao};","import React from \"react\";\n\n/**\n * component svg\n */\nconst SelectTick = function (props) {\n\n    return (\n        <svg id=\"select-tick\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st-tick\" points=\"918,192.3 389.3,807.7 82,450 \" style={{stroke: (props.color) ? props.color : \"\"}}>\n                <animate attributeName=\"points\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\"\n                    from=\"500,600 400,700 200,750\"\n                    to=\"918,192.3 389.3,807.7 82,450 \"\n                />\n            </polyline>\n        </svg>\n    );\n};\n\nexport default SelectTick;\n","import React, {useState, useEffect} from \"react\";\n\nimport SelectTick from 'components/svg/selectTick';\n\nconst CheckBox = function ({ val, name, label, isChecked, handler }) {\n\n    let output = \"\";\n    const [tick, setTick] = useState(<></>);\n    useEffect(() => {\n        if(isChecked){\n            setTick(<SelectTick/>);\n        }else{\n            setTick(<></>)\n        }\n    }, [isChecked])\n\n    \n    output = (\n        <label className=\"checkbox-container\">\n            <input type=\"checkbox\" value={val} name={name} checked={isChecked} onChange={(e) => {handler(e)}} />\n            <span className=\"checkmark\">{tick}</span>\n            <span className=\"name\">{label}</span>\n        </label>\n    );\n    return output;\n}\n\nexport default CheckBox;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to get a list of paper associated with a project\n * @param queryData\n * @return {array[objects]}\n */\nasync function getPapersList(queryData) {\n    let url = config.home + config.papers\n    const res = await http.get(url, queryData);\n    return res;\n\n}\n\n/**\n * dao to get a paper\n * @param paper_id\n * @return {Object} paper requested\n */\nasync function getPaper(paper_id) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.get(url);\n}\n\n/**\n * dao to post a new paper\n * @param bodyData\n * @return {Object} project created\n */\nasync function postPaperIntoProject(bodyData) {\n    let url = config.home + config.papers;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to post a new custom paper\n * @param bodyData\n * @return {Object} project created\n */\nasync function postCustomPaperIntoProject(bodyData) {\n    let url = config.home + config.customPapers;\n    return await http.post(url, bodyData);\n}\n\n\n/**\n * dao to put a old paper\n * @param paper_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putPaper(paper_id, bodyData) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a paper\n * @param paper_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function deletePaper(paper_id) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.delete(url);\n}\n\n\nconst projectPapersDao = {\n    getPapersList,\n    getPaper,\n    postPaperIntoProject,\n    postCustomPaperIntoProject,\n    putPaper,\n    deletePaper,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {projectPapersDao};","import React from \"react\";\n\n/**\n * component svg \n */\nconst NoImage = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"no-image\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <g>\n                <path className=\"st5-image-error\" d=\"M276.4,541.4c0-20.6,83.9-32.6,187.4-32.6s187.4,12,187.4,32.6\"/>\n                <path className=\"st1-image-error\" d=\"M339.2,554.9c32.4-5.1,76.5-7.9,125.1-7.9c48.2,0,92,2.7,124.3,7.7\"/>\n                <path className=\"st5-image-error\" d=\"M651.9,560.8v52.8l-0.7,0.1c0,20.6-83.9,31-187.4,31s-187.4-10.5-187.4-31l-0.6-0.1v-52.8\"/>\n                <path className=\"st5-image-error\" d=\"M290.4,643.2l43,257.2l0.4-0.2c0,13.7,56,20.7,125.1,20.7s125.1-7,125.1-20.7l53.5-257.1\"/>\n                <g>\n                    <path className=\"st2-image-error\" d=\"M473.9,527.7c-8-4.4,135.3-110.1,166.8-164.5C560.3,392.4,503.6,455.5,473.9,527.7\"/>\n                    <path className=\"st2-image-error\" d=\"M570.5,245.9C545.3,276,474.1,487.5,464.9,574\"/>\n                </g>\n                <g>\n                    <path className=\"st3-image-error\" d=\"M684.6,229.2c1.7-6.1,2.8-12.3,3.2-18.5l36.3-13.4c-1.4-24-9.6-47.7-24.2-67.6L663.6,143\n                        c-2.1-2.2-4.4-4.4-6.8-6.4c-2.4-2-4.9-3.9-7.4-5.7l6.7-38.5c-22-11.2-46.4-15.3-70-12.5l-6.7,38.5c-6,1.5-11.9,3.6-17.5,6.4\n                        l-29.6-25.2c-9.8,6.5-18.9,14.6-26.8,24.2c-7.9,9.6-14.2,20-18.9,30.9l29.6,25.2c-1.7,6.1-2.8,12.3-3.2,18.5l-36.3,13.4\n                        c1.4,24,9.6,47.7,24.2,67.6l36.4-13.4c2.1,2.2,4.4,4.4,6.8,6.4c2.4,2,4.9,3.9,7.4,5.7l-6.7,38.5c22,11.2,46.4,15.3,70,12.5\n                        l6.7-38.5c6-1.5,11.9-3.6,17.5-6.4l29.6,25.2c9.8-6.5,18.9-14.6,26.8-24.2c7.9-9.6,14.2-20,18.9-30.9L684.6,229.2z\"/>\n                    <ellipse className=\"st4-image-error\" cx=\"600.4\" cy=\"204.5\" rx=\"41.9\" ry=\"42.4\"/>\n                </g>\n                <path className=\"st5-image-error\" d=\"M651.2,541.4c0,20.6-83.9,31-187.4,31s-187.4-10.5-187.4-31\"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default NoImage;","import React, {useState, useEffect} from \"react\";\nimport NoImage from \"components/svg/noImage\";\n\n/*\n* image component which deals with fetching error\n* */\nconst Image = function({className, alt, src, style}){\n\n    //profile image fetch error\n    const [fetchError, setFetchError] = useState(false);\n\n    useEffect(() => {\n        let mount = true;\n        if(mount && !src){\n            setFetchError(true);\n        }\n        return () => {\n            mount = false;\n        };\n    }, [])\n\n    let img = <></>;\n\n    if(fetchError){\n        img = <div className={className} alt=\"error loading image\" style={style}><NoImage/></div>\n    }else{\n        img = <img className={className} alt={alt} title={alt} src={src} onError={() => {setFetchError(true)}} style={style}/>\n    }\n\n    return img;\n\n};\n\nexport  default  Image;","import React from \"react\";\n\n/**\n * component svg \n */\nconst NoPapers = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"no-papers\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <line className=\"st0-no-papers\" x1=\"790\" y1=\"223.1\" x2=\"790\" y2=\"255.6\"/>\n            <line className=\"st1-no-papers\" x1=\"790\" y1=\"357.8\" x2=\"790\" y2=\"801.3\"/>\n            <polyline className=\"st0-no-papers\" points=\"790,852.4 790,884.9 757.5,884.9 \t\t\"/>\n            <line className=\"st2-no-papers\" x1=\"635.6\" y1=\"884.9\" x2=\"303.4\" y2=\"884.9\"/>\n            <polyline className=\"st0-no-papers\" points=\"242.5,884.9 210,884.9 210,852.4 \t\t\"/>\n            <line className=\"st3-no-papers\" x1=\"210\" y1=\"757.8\" x2=\"210\" y2=\"194.9\"/>\n            <polyline className=\"st0-no-papers\" points=\"210,147.6 210,115.1 242.5,115.1 \t\t\"/>\n            <polyline className=\"st4-no-papers\" points=\"338.4,115.1 682,115.1 733.1,166.2 \t\t\"/>\n            <polyline className=\"st0-no-papers\" points=\"767,200.1 790,223.1 757.5,223.1 \t\t\"/>\n            <polyline className=\"st0-no-papers\" points=\"714.5,223.1 682,223.1 682,190.6 \t\t\"/>\n            <line className=\"st0-no-papers\" x1=\"682\" y1=\"147.6\" x2=\"682\" y2=\"115.1\"/>\n        </svg>\n    );\n};\n\nexport default NoPapers;","import React from \"react\";\n\n/**\n * component svg\n */\nconst InfoIcon = function (props) {\n    return(\n        <svg version=\"1.1\" id=\"info\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <line className=\"st0-info\" x1=\"500\" y1=\"369\" x2=\"500\" y2=\"817\"/>\n            <circle className=\"st1-info\" cx=\"500\" cy=\"198\" r=\"48\"/>\n        </svg>\n    );\n}\n\nexport default InfoIcon;","import React from \"react\";\nimport InfoIcon from \"components/svg/infoIcon\";\n\n\nconst InfoTooltip = function ({className, children}) {\n\n    return (\n        <div className={(className) ? \"top-right-anchor \" + className : \"top-right-anchor\"}>\n            <div className=\"information-holder\">\n                <div className=\"info-button-icon\"><InfoIcon/></div>\n                <div className={(className) ? \"information-content-wrapper \" + className : \"information-content-wrapper\"}>\n                    <div className=\"information-content\">\n                        {children}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\nexport default InfoTooltip;","import React, {useEffect, useState} from \"react\";\nimport InfoTooltip from \"components/modules/infoTooltip\";\n\n\nconst PaperConfidence = function ({filtersList, confidence}) {\n\n    const [localConfidenceArray, setLocalConfidenceArray] = useState([]);\n\n    useEffect(() => {\n        let mnt = true;\n\n        //I combine two arrays in an array of pairs: from [a,b,c] and [1,2,3] to [{a,1}, {b,2}, {c,3}]\n        function pairCoupleArray(confArray,filterArray){\n            let pairArray = [];\n            for(let i = 0; i < confArray.length; i++){\n                //in case the 2 array filters are in the same order\n                if(confArray[i].id === filterArray[i].id){\n                    pairArray.push({\"label\" : filterArray[i].data.name, \"tooltip\" : filterArray[i].data.predicate, \"value\" : confArray[i].filterValue});\n                }\n                //otherwise I need to search for the correct pair\n                else{\n                    let correctFilter = filterArray.find(filter => filter.id === confArray[i].id);\n                    pairArray.push({\"label\" : correctFilter.data.name, \"tooltip\" : correctFilter.data.predicate, \"value\" : confArray[i].filterValue});\n                }\n            }\n            return pairArray;\n        }\n\n        console.log(confidence);\n\n        if(filtersList.length !== 0 && confidence !== undefined){\n            setLocalConfidenceArray(pairCoupleArray(confidence.filters, filtersList));\n        }\n\n        return () => {\n            mnt = false;\n        };\n    }, [])\n\n    \n\n    let output = <p>add filters in order to check partial confidence of each filter</p>;\n\n    if(localConfidenceArray.length !== 0){\n        output = (\n            <>\n                {localConfidenceArray.map((element, index) => \n                    <p key={index} title={element.tooltip}>\n                        <span>{element.label}</span> <span className=\"side-detail\">{(element.value) ? element.value.toFixed(2) : \"−.−−\"}</span>\n                    </p>\n                )}\n            </>\n        );\n    }else{\n        output = (<>This paper has not received any confidence score yet</>);\n    }\n\n    return (\n        <div className=\"side-info-wrapper\">\n        <div className=\"side-info\">\n                <div className=\"confidence\">\n                    {(confidence) ? parseFloat(confidence.value).toFixed(2) : \"−.−−\"}\n                </div>\n                <InfoTooltip className={\"filters-confidence\"}>\n                    {output}\n                </InfoTooltip>\n                \n            </div>\n        </div>\n    );\n\n};\n\nexport default PaperConfidence;","import React, {useState} from \"react\";\nimport ClampLines from 'react-clamp-lines';\nimport {Link} from 'react-router-dom';\n\nimport SideOptions from 'components/modules/sideOptions';\n\nconst ProjectPaperCard = function({callOptions, paper}){\n    const [disabled, setDisabled] = useState(false);\n\n    //side options\n    let sideOptions= [\"delete\", \"search similar\"];\n\n    //handle for the side options\n    function handleSideOptions(id, name, data){\n        if(name === \"delete\"){\n            setDisabled(true);\n        }\n        callOptions(id, name, data);\n    }\n\n    return(\n        <div className={(disabled) ? \"disabled\" : \"\"}>\n            <SideOptions options={sideOptions} handler={handleSideOptions} target={paper.id} data={paper.data} cls=\"card-options\"/>\n            <Link to={\"#\"}><h3>{(paper.data.title) ? paper.data.title : \"[MISSING TITLE]\"}</h3></Link>\n            <div className=\"extra-info\">\n                <p className=\"authors\">{(paper.data.authors) ? paper.data.authors : \"[MISSING AUTHORS]\"}</p>\n                <p className=\"eid\">{(paper.data.eid) ? paper.data.eid : \"[MISSING EID]\"}</p>\n                <p className=\"date\">{(paper.data.year) ? paper.data.year : \"[MISSING YEAR]\"}</p>\n            </div>\n            <ClampLines\n                text={(paper.data.abstract) ? paper.data.abstract : \"[MISSING ABSTRACT]\"}\n                lines={4}\n                ellipsis=\"...\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    )\n}\n\nexport default ProjectPaperCard;","import React, {useContext, useState, useEffect, useRef} from \"react\";\nimport ClampLines from 'react-clamp-lines';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport CheckBox from \"components/forms_elements/checkbox\";\nimport SideOptions from 'components/modules/sideOptions';\nimport {projectPapersDao} from 'dao/projectPapers.dao';\nimport {AppContext} from 'components/providers/appProvider'\nimport Image from 'components/modules/image';\nimport NoPapers from \"components/svg/noPapers\";\n\nimport {join} from 'utils/index';\nimport PaperConfidence from \"components/projects_page/search_tab/search_automated/paperConfidence\";\nimport ProjectPaperCard from \"components/projects_page/papers_tab/projectPaperCard\";\n/**\n * prints the papers list of a local search on the fake database\n */\n/*\nconst PrintLocalSearchList = function ({papersList, handlePaperSelection}) {\n\n    let output = papersList.map((element, index) =>\n        <div key={element.id} className=\"paper-card\">\n            <CheckBox name={\"\"} label={\"\"} val={element.eid}  handler={handlePaperSelection}/>\n            <Link to={\"#\"}><h3>{element.data && element.data.title}</h3></Link>\n            <ClampLines\n                text={element.data && element.data.abstract}\n                lines={4}\n                ellipsis=\"...\"\n                moreText=\"Expand\"\n                lessText=\"Collapse\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    );\n    return output;\n\n};\n*/\n\n/**\n * prints the results of a search on scopus\n */\nconst PrintScoupusSearchList_w = function ({papersList, handlePaperSelection, selectedEidList, history, match, setTargetPaperData}) {\n\n    //side options\n    let sideOptions= [\"search similar\"];\n\n    //handle for the side options\n    async function handleSideOptions(id, name, data){\n        if(name === \"search similar\"){\n            console.log(\"here you want to search for a similar paper\");\n            console.log(data);\n\n            //I extract the path to check if I'm on /search or /searchsimilar\n            let path = (match.path[match.path.length - 1] === \"/\") ? match.path.substring(0, match.path.length - 1) : match.path;\n            let goSimilar = path;\n            if(path[path.length - 1] === \"h\"){\n                goSimilar = path + \"similar\";\n                //I set the paper in the storage before switching page\n                const storage = window.localStorage;\n                storage.setItem(\"targetPaperData\", JSON.stringify(data));\n                history.push(goSimilar);\n            }else{\n                setTargetPaperData(data);\n            }\n\n        }\n    }\n\n    let output = papersList.map((element, index) =>\n        <div key={index} className=\"generic-card paper-card\">\n            <CheckBox name={element.title} label={\"\"} val={element.eid}  isChecked ={selectedEidList.includes(element.eid)} handler={handlePaperSelection}/>\n            <SideOptions options={sideOptions} handler={handleSideOptions} target={element.id} data={element} cls=\"card-options\"/>\n            <Link to={\"#\"}><h3>{(element.title) ? element.title : \"[MISSING TITLE]\"}</h3></Link>\n            <div className=\"extra-info\">\n                <p className=\"authors\">{(element.authors) ? element.authors : \"[MISSING AUTHORS]\"}</p>\n                <p className=\"eid\">{(element.eid) ? element.eid : \"[MISSING EID]\"}</p>\n                <p className=\"date\">{(element.year) ? element.year : \"[MISSING YEAR]\"}</p>\n            </div>\n            <ClampLines\n                text={(element.abstract) ? element.abstract : \"[MISSING ABSTRACT]\"}\n                lines={4}\n                ellipsis=\"...\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    );\n    return output;\n\n};\n\n/**\n * prints a list of papers and handles their removal from the project\n */\n\nconst PrintPapersList_w = function ({papersList, location, history}) {\n\n    const mountRef = useRef(false);\n\n    const [localPaperList, setLocalPaperList] = useState(papersList);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //side options\n    let sideOptions= [\"delete\", \"search similar\"];\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //handle for the side options\n    async function handleSideOptions(id, name, data){\n        if(name === \"delete\"){\n            console.log(\"deleting \" + id);\n            //call the dao\n            let res = await projectPapersDao.deletePaper(id);\n            //error checking\n            //if is other error\n            if (mountRef.current && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (mountRef.current && res !== null) {\n\n                appConsumer.setNotificationMessage(\"Successfully deleted\");\n                let newPapersList = localPaperList.filter((paper)=>paper.id !== id);\n                setLocalPaperList(newPapersList);\n            }\n        }else if(name === \"search similar\"){\n            console.log(\"here you want to search for a similar paper\");\n            console.log(location);\n\n            const storage = window.localStorage;\n            storage.setItem(\"targetPaperData\", JSON.stringify(data));\n            history.push(join(location.pathname, \"/searchsimilar\"));\n        }\n    }\n\n    let output;\n    //if list is empty, print a notice message\n    if (localPaperList.length === 0) {\n        output = (\n            <div className=\"empty-list-wrapper\"> <NoPapers/> <p className=\"empty-list-description\"> There are no papers here, you can add new ones by searching </p></div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else {\n        output = (\n            localPaperList.map((element) =>\n                <div key={element.id} className=\"generic-card paper-card\">\n                    <ProjectPaperCard callOptions={handleSideOptions} paper={element}/>\n                </div>\n            )\n        );\n    }\n    return output;\n\n\n};\n\n/**\n * prints a list of screened papers\n */\n\nconst PrintScreenedPapersList_w = function ({papersList}) {\n    \n    let output;\n    //if list is empty, print a notice message\n    if (papersList.length === 0) {\n        output = (\n            <div className=\"empty-list-wrapper\"> <NoPapers/> <p className=\"empty-list-description\"> No papers  have been screened yet</p></div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else {\n        output = (\n            papersList.map((element) =>\n                <div key={element.id} className=\"generic-card paper-card screened\">\n                    <Link to={\"#\"}><h3>{(element.data.title) ? element.data.title : \"[MISSING TITLE]\"}</h3></Link>\n                    <div className=\"screened-label\" \n                        title={(element.data.metadata.automatedScreening) ? element.data.metadata.automatedScreening.value : undefined}>\n                        <div className=\"type\">\n                            {(element.data.metadata.screening.source === \"automated screening\") ? \"Auto\" : \n                              (element.data.metadata.screening.source === \"manual screening\") ? \"Manual\" : \"Crowd\"}\n                        </div>\n                        <div className=\"in-out\">\n                            {(parseInt(element.data.metadata.screening.result) === 1) ? \"IN\" : \"OUT\"}\n                        </div>\n                    </div>\n                    <div className=\"extra-info\">\n                        <p className=\"authors\">{(element.data.authors) ? element.data.authors : \"[MISSING AUTHORS]\"}</p>\n                        <p className=\"eid\">{(element.data.eid) ? element.data.eid : \"[MISSING EID]\"}</p>\n                        <p className=\"date\">{(element.data.year) ? element.data.year : \"[MISSING YEAR]\"}</p>\n                    </div>\n                    <ClampLines\n                        text={(element.data.abstract) ? element.data.abstract : \"[MISSING ABSTRACT]\"}\n                        lines={4}\n                        ellipsis=\"...\"\n                        className=\"paragraph\"\n                        moreText=\"more\"\n                        lessText=\"less\"\n                    />\n                </div>\n            )\n        );\n    }\n    return output;\n\n\n};\n\n/**\n * prints a list of partially manual screened paper\n */\n\nconst PrintManuallyScreenedPapersList_w = function ({papersList}) {\n    let output;\n    //if list is empty, print a notice message\n    if (papersList.length === 0) {\n        output = (\n            <div className=\"empty-list-wrapper\"> <NoPapers/> <p className=\"empty-list-description\"> No papers have been manually screened yet</p></div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else {\n        output = (\n            papersList.map((element) => {\n                return(\n                    <div key={element.id} className=\"generic-card paper-card manual\">\n                        <Link to={\"#\"}><h3>{(element.data.title) ? element.data.title : \"[MISSING TITLE]\"}</h3></Link>\n                        <div className=\"extra-info\">\n                            <p className=\"authors\">{(element.data.authors) ? element.data.authors : \"[MISSING AUTHORS]\"}</p>\n                            <p className=\"eid\">{(element.data.eid) ? element.data.eid : \"[MISSING EID]\"}</p>\n                            <p className=\"date\">{(element.data.year) ? element.data.year : \"[MISSING YEAR]\"}</p>\n                        </div>\n                        <ClampLines\n                            text={(element.data.abstract) ? element.data.abstract : \"[MISSING ABSTRACT]\"}\n                            lines={4}\n                            ellipsis=\"...\"\n                            className=\"paragraph\"\n                            moreText=\"more\"\n                            lessText=\"less\"\n                        />\n                        <div className=\"users-votes\">\n                            <div className=\"votes\">\n                                {element.data.metadata.votes.filter(v => v.answer === \"1\").map((elementx, index) => (\n                                    <Image key={index} className=\"user-vote-image in-vote\" alt={elementx.user.name + \" voted: in\"} src={elementx.user.picture}/>\n                                ))}\n                            </div>\n                            <div className=\"votes\">\n                                {element.data.metadata.votes.filter(v => v.answer === \"0\").map((elementx, index) => (\n                                    <Image key={index} className=\"user-vote-image out-vote\" alt={elementx.user.name + \" voted: out\"} src={elementx.user.picture}/>\n                                ))}\n                            </div>\n                            <div className=\"votes\">\n                                {element.data.metadata.votes.filter(v => v.answer === \"2\").map((elementx, index) => (\n                                    <Image key={index} className=\"user-vote-image und-vote\" alt={elementx.user.name + \" is undecided\"} src={elementx.user.picture}/>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                );\n            })\n        );\n    }\n    return output;\n\n\n};\n\nconst PrintSearchAutomatedList_w = function ({papersList, filtersList, handlePaperSelection, selectedEidList}) {\n\n    let output = \"\";\n    //if list is empty, print a notice message\n    if (papersList.length === 0) {\n        output = (\n            <div className=\"empty-list-wrapper\"> <NoPapers/> <p className=\"empty-list-description\"> There are no papers here</p></div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else {\n        output = papersList.map((element, index) =>\n            <div key={index} className=\"generic-card paper-card\">\n                <CheckBox name={element.title} label={\"\"} val={element.eid}  isChecked ={selectedEidList.includes(element.eid)} handler={handlePaperSelection}/>\n                <PaperConfidence filtersList={filtersList}\n                    confidence={element.metadata.automatedSearch}/>\n                <Link to={\"#\"}><h3 className=\"auto-paper-title\">{element.title}</h3></Link>\n                <div className=\"extra-info\">\n                    <p className=\"authors\">{element.authors}</p>\n                    <p className=\"eid\">{element.eid}</p>\n                    <p className=\"date\">{element.year}</p>\n                </div>\n                <ClampLines\n                    text={element.abstract}\n                    lines={4}\n                    ellipsis=\"...\"\n                    className=\"paragraph\"\n                    moreText=\"more\"\n                    lessText=\"less\"\n                />\n            </div>\n        );\n    }\n    return output;\n\n};\n\nconst PrintBacklogPapersList_w = function ({papersList, filtersList}) {\n\n    let output = \"\";\n    //if list is empty, print a notice message\n    if (papersList.length === 0) {\n        output = (\n            <div className=\"empty-list-wrapper\"> <NoPapers/> <p className=\"empty-list-description\"> There are no papers here</p></div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else {\n        output = papersList.map((element, index) =>\n            <div key={index} className=\"generic-card paper-card\">\n                <PaperConfidence filtersList={filtersList}\n                    confidence={element.data.metadata && element.data.metadata.automatedScreening}/>\n                <Link to={\"#\"}><h3 className=\"auto-paper-title\">{element.data.title}</h3></Link>\n                <div className=\"extra-info\">\n                    <p className=\"authors\">{element.data.authors}</p>\n                    <p className=\"eid\">{element.data.eid}</p>\n                    <p className=\"date\">{element.data.year}</p>\n                </div>\n                <ClampLines\n                    text={element.data.abstract}\n                    lines={4}\n                    ellipsis=\"...\"\n                    className=\"paragraph\"\n                    moreText=\"more\"\n                    lessText=\"less\"\n                />\n            </div>\n        );\n    }\n    return output;\n\n};\n\nexport const PrintPapersList = PrintPapersList_w;\nexport const PrintScreenedPapersList = PrintScreenedPapersList_w;\nexport const PrintManuallyScreenedPapersList = PrintManuallyScreenedPapersList_w;\nexport const PrintScoupusSearchList = withRouter(PrintScoupusSearchList_w);\nexport const PrintSearchAutomatedList = withRouter(PrintSearchAutomatedList_w);\nexport const PrintBacklogPapersList = PrintBacklogPapersList_w;","import React from \"react\";\n\n/**\n * component svg select arrow\n * 'focused' is a flag used for displaying a different shape\n */\nconst SelectArrow= function ({focused, code}) {\n    var from=\"\";\n    var to=\"\";\n    //I check if the upper component is focused and then I animate\n    if(focused){\n        from=\"90,295.5 500,704.5 910,295.5 \";\n        to=\"90,704.5 500,295.5 910,704.5 \";;\n    }else{\n        from=\"90,704.5 500,295.5 910,704.5 \";;\n        to=\"90,295.5 500,704.5 910,295.5 \";\n    }\n    return (\n    <svg version=\"1.1\" id=\"arrow-select\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n        viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st-arrow-select\" points={from}>\n            <animate attributeType=\"XML\" id={(isNaN(code)) ? \"ani-select-arrow\" : \"ani-select-arrow\" + code} attributeName=\"points\" from={from} to={to} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n            </polyline>\n        </svg>\n    );\n};\n\nexport default SelectArrow;\n\n","import React, {useState} from \"react\";\nimport SelectArrow from 'components/svg/selectArrow';\n\n\n/**\n * this component acts as an html <select>\n * it needs an array of options, the index of the selected one and the hadler to change the status of the upper component calling this one\n */\nconst Select = ({ options, selected, handler, type, code }) => {\n    \n    //this is useful for the animation\n    const [focused, setFocused] = useState(false);\n\n\n    function handleFocus(type){\n        //handle arrow animation and focus of menu\n        if(type === \"click\"){\n            document.getElementById((isNaN(code)) ? \"ani-select-arrow\" : \"ani-select-arrow\" + code).beginElement();//trigger svg animation\n            setFocused(!focused);\n        }else if(focused){\n            document.getElementById((isNaN(code)) ? \"ani-select-arrow\" : \"ani-select-arrow\" + code).beginElement();//trigger svg animation\n            setFocused(false);\n        }\n    }\n\n    var output = (\n        <div className={(type) ? \"custom-select \" + type: \"custom-select\"}>\n            <div className=\"selected\" tabIndex={-2} onBlur={() => {handleFocus(\"blur\")}} onClick={() => {handleFocus(\"click\")}}>{(options[selected]) ? options[selected].label : \"[!]\"} <div className=\"arrow\">\n                <SelectArrow focused={focused} code={code}/>\n            </div></div>\n            <div className=\"options-holder\" style={{fontSize: (!focused) ? '0px' : '15px', borderBottom: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderLeft: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderRight: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderTop:\"none\"}}>\n                {options.map((element, index) => (\n                <div key={index} data-value={index} className=\"option\" style={{padding: (!focused) ? '0px' : '2px' }} onMouseDown={handler}>\n                    {element.label}\n                </div>))}\n            </div>\n        </div>\n    );\n    return output;\n}\n\nexport default Select;","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst RemoveButton = function (props) {\n\n    return (\n        <svg id=\"remove-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <line className=\"rb\" x1=\"134\" y1=\"866\" x2=\"866\" y2=\"134\"/>\n        <line className=\"rb\" x1=\"134\" y1=\"134\" x2=\"866\" y2=\"866\"/>\n        </svg>\n    );\n};\n\nexport default RemoveButton;\n","import React, {useEffect, useContext, useState} from \"react\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao';\n\nimport RemoveButton from 'components/svg/removeButton';\nimport InfoTooltip from \"components/modules/infoTooltip\";\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n\n/**\n * component to print the box of list of selected paper\n */\nconst SelectedPapersListBox = function ({project_id, selectedPapersList, setSelectedPapersList, handlePaperSelection, mounted}){\n\n    //get the localStorage object (used for saving selected papers)\n    const storage = window.localStorage;\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        //if exists already this attribute in the local storage\n        if (storage.getItem(\"selectedPapersList\")) {\n            setSelectedPapersList(JSON.parse(storage.getItem(\"selectedPapersList\")));\n        } \n\n    }, [])\n\n    /*function to post selected papers in the project*/\n    async function handleAddPapers(event) {\n\n        let papersToAdd = selectedPapersList;\n        //empties the state\n        setSelectedPapersList([]);\n        //update the storage\n        storage.removeItem(\"selectedPapersList\");\n\n        //create a eidList from the list of selected paper\n        let arrayEid = papersToAdd.map(element => element.eid);\n\n        console.log(\"ADDING\");\n        console.log(arrayEid);\n\n        //call dao\n        let res = await projectPapersDao.postPaperIntoProject({\n            \"arrayEid\": arrayEid, \"project_id\": project_id\n        });\n\n        //if there is the error\n        if (mounted.current && res && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);\n            return null;\n        }\n\n        if(mounted.current){\n            //empties the state\n            setSelectedPapersList([]);\n\n            //update the storage\n            storage.removeItem(\"selectedPapersList\");\n\n            appConsumer.setNotificationMessage(\"Insert completed\");\n        }\n\n    }\n\n    let output = \"\";\n    output = (\n        <div className=\"selected-papers-list\" style={{opacity: (selectedPapersList.length>0) ? \"1.0\" : \"0.0\", pointerEvents: (selectedPapersList.length>0) ? \"auto\" : \"none\"}}>\n            <InfoTooltip className={\"selected-papers\"}>\n                <p>this box contains the complete list of papers you currently selected in this browser</p>\n            </InfoTooltip>\n            <h3>\n                SELECTED PAPERS <br/><span>(total : {selectedPapersList.length})</span>\n            </h3>\n            <div className=\"submission-wrapper\">\n                <div className=\"papers-wrapper\" style={{border: (selectedPapersList.length>0) ? \"\" : \"0px\"}}>\n                    <div className=\"papers-flex\" style={{padding: (selectedPapersList.length>0) ? \"\" : \"0px\"}}>\n                        {selectedPapersList.map((element, index) =>\n                            <p key={index}>\n                                <span>{element.title}</span> \n                                <button type=\"button\" className=\"remove-btn\" name={element.title} value={element.eid} //name and value don't work on the button event for some reasons\n                                    onClick={(e) => {handlePaperSelection({target: {name: element.title, value:element.eid}})}}>\n                                    <RemoveButton/>\n                                </button>\n                            </p>\n                        )}\n                    </div>\n                </div>\n                <button style={{border: (selectedPapersList.length>0) ? \"\" : \"0px\", margin: (selectedPapersList.length>0) ? \"\" : \"0px\", height: (selectedPapersList.length>0) ? \"\" : \"0px\", pointerEvents: (selectedPapersList.length>0) ? \"auto\" : \"none\"}} \n                    className=\"ti-btn add-resultpaper-btn\" type=\"button\" value=\"Submit\" onClick={handleAddPapers}>\n                    <div className=\"btn-title\">Add Selected Paper</div><div className=\"btn-icon\"> </div>\n                </button>\n            </div>\n        </div>\n    );\n\n    return output;\n\n};\n\n\nexport default SelectedPapersListBox;","import React, {useState, useEffect} from \"react\";\n\n/**\n * component svg order arrow button\n@param {string} up [ASC or DESC]\n */\nconst OrderArrow= function ({up}) {\n\n    let output = \"\";\n\n    let from=\"\";\n    let to=\"\";\n\n    //I check where the arrow should point to(up or down) checking the 'up' flag passed by the parent component\n    if(up ===\"ASC\"){\n        from=\"371.7,293 500,165 628.3,293 \";\n        to=\"371.7,491.9 500,619.9 628.3,491.9 \";\n    }else{\n        from=\"371.7,491.9 500,619.9 628.3,491.9 \";\n        to=\"371.7,293 500,165 628.3,293 \";\n    }\n\n    const [destination, setDestination] = useState(to);\n\n    useEffect(() => {\n      setDestination(to);\n    }, [to])\n\n    output = (\n        <svg version=\"1.1\" id=\"order-arrow\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n        viewBox=\"0 0 1000 1000\" >\n            <polyline className=\"st-order-arrow-head\" points=\"371.7,293 500,165 628.3,293 \" transform=\"matrix(1.5303008,0,0,1.5303008,-279.47582,-105.57059)\">\n                <animate attributeType=\"XML\" id=\"ani-order-arrow\" attributeName=\"points\" from={from} to={destination} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n            </polyline>\n            <line className=\"st-order-arrow\" x1=\"485.67453\" y1=\"145.09268\" x2=\"485.67453\" y2=\"827.75989\"/>\n        </svg>\n    );\n    \n    return output;\n};\n\nexport default OrderArrow;","import React from \"react\";\n\n/**\n * component svg \n */\nconst NoSearchResults = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"no-results\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <circle className=\"st0-no-results\" cx=\"585.3\" cy=\"419.7\" r=\"271.7\"/>\n            <line className=\"st3-no-results\" x1=\"111.2\" y1=\"894\" x2=\"393.2\" y2=\"611.8\"/>\n            <path className=\"st1-no-results\" d=\"M460.6,533c83.1-20,166.2-20,249.4,0\"/>\n            <line className=\"st2-no-results\" x1=\"683.8\" y1=\"329\" x2=\"683.8\" y2=\"337\"/>\n            <line className=\"st2-no-results\" x1=\"512.8\" y1=\"329\" x2=\"512.8\" y2=\"337\"/>\n        </svg>\n    );\n};\n\nexport default NoSearchResults;","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst RadioTick = function (props) {\n\n    return (\n        <svg id=\"radio-tick\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t        viewBox=\"0 0 1000 1000\">\n            <circle className=\"st-circle\" cx=\"500\" cy=\"500\" r=\"375\">\n                <animate attributeName=\"r\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\"\n                                from=\"0\"\n                                to=\"375\"\n                />\n            </circle>\n        </svg>\n    );\n};\n\nexport default RadioTick;\n","import React, {useState, useEffect} from \"react\";\n\nimport RadioTick from 'components/svg/radioTick';\n\nconst RadioBox = function ({ label, name, val, isChecked , handler}) {\n\n    let output = \"\";\n    const [tick, setTick] = useState(<></>);\n    useEffect(() => {\n        if(isChecked){\n            setTick(<RadioTick/>);\n        }else{\n            setTick(<></>)\n        }\n    }, [isChecked])\n\n    output= (\n        <label className=\"radiobox-container\">\n        <input type=\"radio\" value={val} name={name} checked={isChecked} onChange={handler}/>\n        <span className=\"radiomark\">{tick}</span>\n        <span>{label}</span>\n        </label>\n    );\n    return output;\n}\n\nexport default RadioBox;","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst SearchButton = function (props) {\n\n    return (\n        <svg id=\"search-icon\" xmlns=\"http://www.w3.org/2000/svg\"\n             xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M626.9,644.3c-73.5,0-142.6-28.6-194.6-80.6s-80.6-121.1-80.6-194.6s28.6-142.6,80.6-194.6\n                c52-52,121.1-80.6,194.6-80.6c73.5,0,142.6,28.6,194.6,80.6c52,52,80.6,121.1,80.6,194.6s-28.6,142.6-80.6,194.6\n                S700.4,644.3,626.9,644.3z\"/>\n            <line className=\"st1\" x1=\"145.2\" y1=\"850.8\" x2=\"431.7\" y2=\"564.3\"/>\n        </svg>\n    );\n};\n\nexport default SearchButton;\n","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst SearchSimilarButton = function (props) {\n\n    return (\n        <svg id=\"similar-paper-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" \n            xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st0-sps\" points=\"795.8,214 734.8,214 736.8,146 \t\t\"/>\n            <polyline className=\"st0-sps\" points=\"842.8,214 842.8,875.8 262.8,875.8 262.8,106 734.8,106 \t\t\"/>\n            <line className=\"st0-sps\" x1=\"842.8\" y1=\"214\" x2=\"734.8\" y2=\"106\"/>\n            <line className=\"st1-sps\" x1=\"350.8\" y1=\"198.9\" x2=\"644.8\" y2=\"198.9\"/>\n            <line className=\"st2-sps\" x1=\"346.8\" y1=\"385.4\" x2=\"752.8\" y2=\"385.4\"/>\n            <line className=\"st2-sps\" x1=\"544\" y1=\"485.9\" x2=\"752.8\" y2=\"485.9\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"485.9\" x2=\"544\" y2=\"485.9\"/>\n            <line className=\"st2-sps\" x1=\"575.9\" y1=\"586.4\" x2=\"752.8\" y2=\"586.4\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"586.4\" x2=\"575.9\" y2=\"586.4\"/>\n            <line className=\"st2-sps\" x1=\"555.5\" y1=\"686.9\" x2=\"752.8\" y2=\"686.9\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"686.9\" x2=\"555.5\" y2=\"686.9\"/>\n            <circle className=\"st4-sps\" cx=\"410.8\" cy=\"594.3\" r=\"171.7\"/>\n            <line className=\"st4-sps\" x1=\"111.2\" y1=\"894\" x2=\"289.4\" y2=\"715.7\"/>\n        </svg>\n        \n    );\n};\n\nexport default SearchSimilarButton;\n","import React, {useState, useEffect, useContext} from \"react\";\nimport {Link} from 'react-router-dom'\n\nimport RadioBox from \"components/forms_elements/radiobox\";\n\nimport SearchButton from 'components/svg/searchButton';\nimport SearchSimilarButton from 'components/svg/searchSimilarButton';\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject} from 'utils/index';\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//search by  options\nconst searchByOptions = [\n    {label: 'all', value: 'all'},\n    {label: 'author', value: 'author'},\n    {label: 'content', value: 'content'},\n    {label: 'adv. query', value: 'advanced'}\n];\n\n//year options\nconst startYear = 2017;\nconst endYear = new Date().getFullYear() + 2;\n//create a int array from startYear to endYear, then convert it to string array, after this concatenate with \"all\"\nconst yearOptions = [\"all\", ...(_.range(startYear, endYear).map(String))];\n\n/**\n * standard search form component\n */\nconst SearchStandardForm = function ({history, queryData, project_id}){\n\n    //state for search form\n    const [keywords, setKeyWords] = useState(queryData.query);\n    const [source, setSource] = useState({\"scopus\": queryData.scopus, \"googleScholar\": queryData.googleScholar, \"arXiv\": queryData.arXiv});\n    const [searchBy, setSearchBy] = useState(queryData.searchBy);\n    const [year, setYear] = useState(queryData.year);\n\n    //I update the state every time the query data changes\n    useEffect(() => {\n        setKeyWords(queryData.query);\n        //we can't allow multiple sources yet\n        if((queryData.scopus && queryData.arXiv && queryData.googleScholar) || !(queryData.scopus ^ queryData.arXiv ^ queryData.googleScholar)){\n            queryData.arXiv = false;\n            queryData.scopus = true;\n            queryData.googleScholar = false;\n        }\n        setSource({\"scopus\": queryData.scopus, \"googleScholar\": queryData.googleScholar, \"arXiv\": queryData.arXiv});\n        setSearchBy(queryData.searchBy);\n        setYear(queryData.year);\n    }, [queryData.query, queryData.orderBy, queryData.searchBy, queryData.sort, queryData.year, queryData.start, queryData.count, queryData.scopus, queryData.googleScholar, queryData.arXiv])\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    /**\n     *handle to update hook state by input change\n     */\n    function handleOnInputChange(event) {\n\n        let newSource;\n\n        switch (event.target.name) {\n            case \"query\":\n                setKeyWords(event.target.value);\n                break;\n            case \"scopus\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.scopus = true;\n                newSource.googleScholar = false;\n                newSource.arXiv = false;\n                setSource(newSource);\n                break;\n\n            case \"googleScholar\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.scopus = false;\n                newSource.googleScholar = true;\n                newSource.arXiv = false;\n                setSource(newSource);\n                break;\n            case \"arXiv\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.scopus = false;\n                newSource.googleScholar = false;\n                newSource.arXiv = true;\n                setSource(newSource);\n                break;\n            case \"searchBy\":\n                setSearchBy(event.target.value);\n                break;\n            case \"year\":\n                setYear(event.target.value);\n                break;\n            default:\n                break;\n        }\n\n    }\n\n    /*function to send the query*/\n    async function handleSendSearch(event) {\n\n        event.preventDefault();\n\n        //if query input is empty\n        if (keywords === \"\") {\n            appConsumer.setNotificationMessage(\"Search string is empty\")\n        }\n        else {\n            //synchronize the query data from react state hooks\n            queryData.query = keywords;\n            queryData.scopus = source.scopus;\n            queryData.googleScholar = source.googleScholar;\n            queryData.arXiv = source.arXiv;\n            queryData.searchBy = searchBy;\n            queryData.year = year;\n\n            //send query url\n            let queryString = createQueryStringFromObject(queryData);\n            //launch to search\n            history.push(queryString);\n\n        }\n\n    }\n\n    return (\n        <>\n            <form className={(queryData.query === \"\") ? 'search-form' : 'search-form small'}\n                  onSubmit={handleSendSearch}>\n                {/*search form*/}\n                <div style={{position: 'relative'}}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"search\"\n                        name=\"query\"\n                        value={keywords}\n                        onChange={handleOnInputChange}\n                    />\n                    <Link to={\"/projects/\" + project_id + \"/searchsimilar\"}>\n                        <button className=\"go-similar\" type=\"button\">\n                            <SearchSimilarButton/>\n                        </button>\n                    </Link>\n                    <button className=\"go-search\" type=\"submit\" value=\"Submit\">\n                        <SearchButton/>\n                    </button>\n                </div>\n\n                <div className=\"option-holder\">\n                    <label>Source:</label><br/>\n\n                    <div className=\"checkboxes-holder\">\n                        <RadioBox label=\"Scopus\" name=\"scopus\" val=\"\" isChecked={source.scopus}\n                                  handler={handleOnInputChange}/>\n                        <RadioBox label=\"Google Scholar\" name=\"googleScholar\" val=\"\" isChecked={source.googleScholar}\n                                  handler={handleOnInputChange}/>\n                        <RadioBox label=\"arXiv\" name=\"arXiv\" val=\"\" isChecked={source.arXiv}\n                                  handler={handleOnInputChange}/>\n                    </div>\n\n                    <label>Search by:</label><br/>\n\n                    <div className=\"checkboxes-holder\">\n                        <RadioBox label={searchByOptions[0].label} name=\"searchBy\" val={searchByOptions[0].value}\n                                  isChecked={searchBy === searchByOptions[0].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[1].label} name=\"searchBy\" val={searchByOptions[1].value}\n                                  isChecked={searchBy === searchByOptions[1].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[2].label} name=\"searchBy\" val={searchByOptions[2].value}\n                                  isChecked={searchBy === searchByOptions[2].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[3].label} name=\"searchBy\" val={searchByOptions[3].value}\n                                  isChecked={searchBy === searchByOptions[3].value} handler={handleOnInputChange}/>\n                    </div>\n\n                    <label>Year:</label><br/>\n                    <div className=\"checkboxes-holder\">\n                        {\n                            yearOptions.map((singleYear, index) =>\n                                <RadioBox key={index} label={singleYear} name=\"year\" val={singleYear}\n                                          isChecked={year === singleYear} handler={handleOnInputChange}/>\n                            )\n                        }\n                    </div>\n                </div>\n\n            </form>\n        </>\n    );\n\n};\n\n\nexport default SearchStandardForm;","import React from \"react\";\n\n/**\n * component svg \n */\nconst Robot = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"robot\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <path className=\"st0-robot\" d=\"M406.3,576.3c-46.8,3.4-95,5.9-144.5,7.2c-69.2,1.9-127.2-52.1-130.5-121.3l-3.2-66.9\n                c-3.3-70.2,50.9-129.9,121.2-133.2l139.1-6.6c54.8-2.6,101.3,39.7,103.9,94.6l5.8,122.4C500.7,526.3,460,572.3,406.3,576.3z\"/>\n            <path className=\"st1-robot\" d=\"M407.4,528.8l-124.1,5.9c-9.8,0.5-18.1-7.1-18.6-16.9l-0.1-3.1c-0.2-4.1,3-7.6,7.1-7.8l144.7-6.8\n                c4.1-0.2,7.6,3,7.8,7.1l0.1,3.1C424.8,520,417.2,528.3,407.4,528.8z\"/>\n            <path className=\"st2-robot\" d=\"M263.1,415.9L263.1,415.9c-13.1-0.6-23.5-11.2-24.2-24.5l-1.9-39.8c-0.6-13,8.5-24.4,21.1-26.6h0\n                c14.9-2.5,28.7,8.8,29.4,24.2l1.9,39.8C290.2,404.2,278,416.6,263.1,415.9z\"/>\n            <path className=\"st2-robot\" d=\"M418.4,408.8L418.4,408.8c-14.2,2.2-27.2-9.1-27.9-24.4l-1.9-40.1c-0.7-15.5,11.5-28.2,26.1-26.9h0\n                c12.2,1.1,21.7,11.6,22.4,24.6l1.9,40.1C439.5,395.4,430.7,406.9,418.4,408.8z\"/>\n            <path className=\"st0-robot\" d=\"M133.6,610.9c126.4,12.4,246,15.2,357.6,6.4c47.7-3.8,87.3,39.8,84.4,92.5l-32.5,594.5\n                c-3.9,23.4-99,39-120.6,38.7l-229.1-3.5c-47.1-0.7-86.2-40-91.4-91.7L48.1,707.4C42.6,652.6,84,606.1,133.6,610.9z\"/>\n            {/*<polyline className=\"st3-robot\" points=\"598,721 765,627 765.5,459.7 \"/>\n            <ellipse className=\"st4-robot\" cx=\"765.6\" cy=\"404.8\" rx=\"167.2\" ry=\"25.7\"/>\n            <ellipse className=\"st5-robot\" cx=\"765.6\" cy=\"411.7\" rx=\"107.2\" ry=\"12.5\"/>\n            <path className=\"st6-robot\" d=\"M865,427.3c-69.6,13.7-141.5,13.3-212.7-3\"/>*/}\n            <ellipse transform=\"matrix(0.9989 -4.710610e-02 4.710610e-02 0.9989 -19.9378 7.7157)\" className=\"st5-robot\" cx=\"153.7\" cy=\"426.9\" rx=\"13.6\" ry=\"70\"/>\n            <path className=\"st7-robot\" d=\"M451.3,736.2c-0.4,30.4-52.1,65.7-114.8,64.8c-62.7-0.9-113.2-36.2-112.8-66.6s51.6-44.3,114.3-43.4\n                C400.8,691.9,451.8,705.8,451.3,736.2z\"/>\n            {/*<g>\n                <g>\n                    <polyline className=\"st8-robot\" points=\"841.2,211.2 841.2,359.7 711.1,359.7 711.1,187 817,187 \t\t\"/>\n                    <line className=\"st9-robot\" x1=\"730.8\" y1=\"207.8\" x2=\"796.8\" y2=\"207.8\"/>\n                    <line className=\"st10-robot\" x1=\"729.9\" y1=\"249.7\" x2=\"821\" y2=\"249.7\"/>\n                    <line className=\"st10-robot\" x1=\"729.9\" y1=\"272.2\" x2=\"821\" y2=\"272.2\"/>\n                    <line className=\"st10-robot\" x1=\"729.9\" y1=\"294.8\" x2=\"821\" y2=\"294.8\"/>\n                    <line className=\"st10-robot\" x1=\"729.9\" y1=\"317.3\" x2=\"821\" y2=\"317.3\"/>\n                    <polyline className=\"st2-robot\" points=\"841.2,211.2 817,211.2 817,187 \t\t\"/>\n                    <line className=\"st2-robot\" x1=\"841.2\" y1=\"211.2\" x2=\"817\" y2=\"187\"/>\n                </g>\n                <g>\n                    <polyline className=\"st8-robot\" points=\"829.1,223.4 829.1,371.8 699,371.8 699,199.1 804.9,199.1 \t\t\"/>\n                    <line className=\"st9-robot\" x1=\"718.7\" y1=\"220\" x2=\"784.7\" y2=\"220\"/>\n                    <line className=\"st10-robot\" x1=\"717.8\" y1=\"261.8\" x2=\"808.9\" y2=\"261.8\"/>\n                    <line className=\"st10-robot\" x1=\"717.8\" y1=\"284.4\" x2=\"808.9\" y2=\"284.4\"/>\n                    <line className=\"st10-robot\" x1=\"717.8\" y1=\"306.9\" x2=\"808.9\" y2=\"306.9\"/>\n                    <line className=\"st10-robot\" x1=\"717.8\" y1=\"329.5\" x2=\"808.9\" y2=\"329.5\"/>\n                    <polyline className=\"st2-robot\" points=\"829.1,223.4 804.9,223.4 804.9,199.1 \t\t\"/>\n                    <line className=\"st2-robot\" x1=\"829.1\" y1=\"223.4\" x2=\"804.9\" y2=\"199.1\"/>\n                </g>\n                <g>\n                    <polyline className=\"st8-robot\" points=\"817,235.5 817,384 686.9,384 686.9,211.2 792.8,211.2 \t\t\"/>\n                    <line className=\"st11-robot\" x1=\"706.6\" y1=\"232.1\" x2=\"772.6\" y2=\"232.1\"/>\n                    <line className=\"st12-robot\" x1=\"705.7\" y1=\"273.9\" x2=\"796.8\" y2=\"273.9\"/>\n                    <line className=\"st12-robot\" x1=\"705.7\" y1=\"296.5\" x2=\"796.8\" y2=\"296.5\"/>\n                    <line className=\"st12-robot\" x1=\"705.7\" y1=\"319\" x2=\"796.8\" y2=\"319\"/>\n                    <line className=\"st12-robot\" x1=\"705.7\" y1=\"341.6\" x2=\"796.8\" y2=\"341.6\"/>\n                    <polyline className=\"st2-robot\" points=\"817,235.5 792.8,235.5 792.8,211.2 \t\t\"/>\n                    <line className=\"st2-robot\" x1=\"817\" y1=\"235.5\" x2=\"792.8\" y2=\"211.2\"/>\n                </g>\n            </g>*/}\n            <g>\n                <path className=\"st13-robot\" d=\"M255,721c47.2,3.6,94.3,4,141.5,1.2\"/>\n                <path className=\"st13-robot\" d=\"M246,732c59,4,118,4,177,0\"/>\n                <path className=\"st13-robot\" d=\"M252,743c40.2,2.9,80.4,3.7,120.5,2.4\"/>\n                <path className=\"st13-robot\" d=\"M258,754c51,4,102,4,153,0\"/>\n                <path className=\"st13-robot\" d=\"M261,765c14.5,1.2,29,2,43.5,2.5\"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default Robot;","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Link} from 'react-router-dom'\n\nimport {paperDao} from 'dao/paper.dao';\n\nimport CheckBox from \"components/forms_elements/checkbox\";\nimport {PrintScoupusSearchList} from 'components/modules/printPapersList';\nimport Select from 'components/forms_elements/select';\nimport Pagination from \"components/modules/pagination\";\nimport SelectedPapersListBox from \"components/projects_page/search_tab/selectedPapersListBox\";\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport OrderArrow from 'components/svg/orderArrow';\nimport NoSearchResults from \"components/svg/noSearchResults\";\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject, createQueryData, getIndexOfObjectArrayByKeyAndValue, arrayOfObjectsContains} from 'utils/index';\nimport SearchStandardForm from \"./searchStandardForm\";\nimport Robot from \"components/svg/robot\";\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//order options\nconst orderByOptions = [\n    {label: 'Title', value: 'title'},\n    {label: 'Date', value: 'date'}\n];\n\nconst queryParams = [\n    {label: \"arXiv\", default: false},\n    {label: \"googleScholar\", default: false},\n    {label: \"scopus\", default: true},\n    {label: \"query\", default: \"\"},\n    {label: \"searchBy\", default: \"all\"},\n    {label: \"orderBy\", default: \"title\"},\n    {label: \"sort\", default: \"ASC\"},\n    {label: \"year\", default: \"all\"},\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n]\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst SearchStandardManager = function ({project_id, location, match, history}) {\n\n    const mountRef = useRef(false);\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(true);\n\n    //total number of results (useful for pagination)\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    let queryData = createQueryData(location.search, queryParams);\n\n    //get the localStorage object\n    const storage = window.localStorage;\n    let selectedPapersListFromStorage;\n    if (!window.localStorage) {\n        console.log(\"the browser must be support localStorage\");\n    }\n    //if exists already this attribute in the local storage\n    if (storage.getItem(\"selectedPapersList\")) {\n        selectedPapersListFromStorage = JSON.parse(storage.getItem(\"selectedPapersList\"));\n    }\n    //if not exists, we create a new array\n    else {\n        selectedPapersListFromStorage = [];\n    }\n\n    // list of selected papers\n    const [selectedPapersList, setSelectedPapersList] = useState(selectedPapersListFromStorage);\n\n    //state for sorting arrow animation\n    const [up, setUp] = useState(queryData.sort);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //this will run on mount and every time the url params change\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let mnt = true;\n        //we can't allow multiple sources yet\n        if((queryData.scopus && queryData.arXiv && queryData.googleScholar) || !(queryData.scopus ^ queryData.arXiv ^ queryData.googleScholar)){\n            queryData.arXiv = false;\n            queryData.scopus = true;\n            queryData.googleScholar = false;\n        }\n\n        //if the sorting parameter changes I update the status and trigger the SVG animation\n        if (mnt && up !== queryData.sort) {\n            setUp(queryData.sort);\n            if(document.getElementById(\"ani-order-arrow\")){\n                document.getElementById(\"ani-order-arrow\").beginElement();\n            }\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n\n            //if there is queryString from URL\n            if (queryData.query !== \"\") {\n\n                setDisplay(false);\n\n                //always call the dao to search on scopus\n                let res = await paperDao.search(queryData);\n\n                //error checking\n                //if the component is still mounted and  is 404 error\n                if (mnt && res && res.message === \"Not Found\") {\n                    setPapersList([]);\n                    setTotalResults(0);\n                    //show the page\n                    setDisplay(true);\n                }\n                //if the component is still mounted and  there are some other errors\n                else if (mnt && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }\n                //if the component is still mounted and  res isn't null\n                else if (mnt && res) {\n                    //update state\n                    setPapersList(res.results);\n                    setTotalResults(res.totalResults);\n                    //show the page\n                    setDisplay(true);\n                }\n            }else{\n                setPapersList([]);\n                setTotalResults(0);\n            }\n        };\n\n\n        fetchData();\n        \n\n        //when the component will unmount or the useEffect will finish\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n\n    }, [project_id, queryData.query, queryData.orderBy, queryData.searchBy, queryData.sort, queryData.year, queryData.start, queryData.count, queryData.scopus, queryData.googleScholar, queryData.arXiv]);  //re-execute when these variables change\n\n\n    /*\n     START OF 'RESULT PAPERS HANDLING' ########################################################\n     */\n\n    //handler for sort selection\n    function handleSelection(e) {\n        //get index\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.orderBy = orderByOptions[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e) {\n\n        if (queryData.sort === \"ASC\") {\n            queryData.sort = \"DESC\";\n        }\n        else {\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n    /*function to insert and remove the paper id from selected list*/\n    function handlePaperSelection(event) {\n\n        let newList;\n        //get eid\n        let eid = event.target.value;\n        //get ttitle\n        let title = event.target.name;\n        //if id is not included in the list yet\n        if (getIndexOfObjectArrayByKeyAndValue(selectedPapersList, \"eid\", eid) === -1) {\n            //create a copy of array\n            newList = [...selectedPapersList];\n            //insert into array\n            newList.push({\"eid\": eid, \"title\": title});\n\n        }\n        //if id already exists in the list\n        else {\n            //remove the  target paper from array\n            newList = selectedPapersList.filter(function (element) {\n                return element.eid !== eid;\n            });\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*function to select all papers*/\n    function selectAllPapers(event) {\n\n        let newList;\n\n        //if not all papers are selected yet\n        if (!arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")) {\n\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {\n                return {\"eid\": paper.eid, \"title\": paper.title}\n            });\n            //and merge them with the previously selected ones\n            let tmpList = [...allPapersInPage, ...selectedPapersList];\n            newList = _.uniqBy(tmpList, 'eid');\n\n        }\n        //if all papers are selected, we need to remove them\n        else {\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {\n                return {\"eid\": paper.eid, \"title\": paper.title}\n            });\n            //I filter the selectedPapersList by removing the papers that are in the current page\n            newList = selectedPapersList.filter(x => !allPapersInPage.some(paper => paper.eid === x.eid));\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*\n     END OF 'RESULT PAPERS HANDLING' ########################################################\n     */\n\n\n    let resultPart = \"\";\n\n    //if is loading\n    if (display === false && queryData.query !== \"\") {\n\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project_id} selectedPapersList={selectedPapersList} setSelectedPapersList={setSelectedPapersList} \n                    handlePaperSelection={handlePaperSelection} mounted={mountRef}/>\n                <div className=\"search-loading-holder\">\n                    <LoadIcon class={\"small\"}/>\n                </div>\n            </>\n        );\n    }\n\n    //if the search results list is empty\n    else if (papersList.length === 0 && queryData.query !== \"\") {\n        //the class is used only to workaround a small bug that display not found just as the search start before the loading icon\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project_id} selectedPapersList={selectedPapersList} setSelectedPapersList={setSelectedPapersList} \n                    handlePaperSelection={handlePaperSelection} mounted={mountRef}/>\n                <div className=\"no-results\"> <NoSearchResults/> <p className=\"not-found-description\"> Nothing was found </p> </div>\n            </>\n        );\n    }\n    else if (papersList.length > 0 && queryData.query !== \"\") {\n\n        //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project_id} selectedPapersList={selectedPapersList} setSelectedPapersList={setSelectedPapersList} \n                    handlePaperSelection={handlePaperSelection} mounted={mountRef}/>\n                    \n                <PrintScoupusSearchList papersList={papersList} handlePaperSelection={handlePaperSelection}\n                                        selectedEidList={arrayEid}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults}\n                            path={match.url}/>\n            </>\n        );\n    }\n\n\n    let output = (\n        <>\n            <SearchStandardForm\n                {...{history, queryData, project_id}}\n            />\n            <div className=\"search-automated-option\" \n                style={{display: (queryData.query === \"\") ? \"block\" : \"none\"}}\n                >\n                <p><i>or</i><br/>let an algorithm provide search results for you</p>\n                <Link to={\"/projects/\" + project_id + \"/searchautomated\"}>\n                    <Robot/>\n                </Link>\n            </div>\n            <div className=\"search-results\"\n                style={{display: (queryData.query !== \"\") ? \"block\" : \"none\"}}\n            >\n                <div className=\"paper-card-holder\">\n                    <div className=\"paper-card-holder-head\"\n                        style={{\n                            pointerEvents: (!display || papersList.length === 0) ? \"none\" : \"\",\n                            opacity: (papersList.length === 0) ? \"0.0\" : \"1.0\"\n                        }}\n                        >\n                        <div className=\"select-all\">\n                            <CheckBox label=\"Select All\" name=\"select_all\" val=\"\"\n                                    isChecked={arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")}\n                                    handler={selectAllPapers}/>\n                        </div>\n                        <div className=\"order\">\n                            <div className=\"order-flex-item\">\n                                <label>sort by:</label>\n                                <Select options={orderByOptions}\n                                        selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                        handler={handleSelection}/>\n                                <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                {resultPart}\n                </div>\n            </div>\n        </>\n    );\n\n    return output;\n};\n\n\nexport default SearchStandardManager;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to post the file pdf to backend\n * @param data the file data\n * @return {objects}\n */\nasync function updatePdf(data) {\n    let url = config.home +config.pdf_parse_server;\n\n    let res = await http.postFile(url, data);\n    return res;\n\n}\n\n/**\n * dao to post the file csv to backend\n * @param data the file data\n * @return {objects}\n */\nasync function uploadCsv(data) {\n    let url = config.home +config.csv_parse_server;\n\n    let res = await http.postFile(url, data);\n    return res;\n\n}\n\n\nconst updateFileDao = {\n    updatePdf,\n    uploadCsv,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {updateFileDao};","import React from \"react\";\n\n/**\n * component svg go-btn\n */\nconst GoButton = function (props) {\n\n    return (\n        <svg id=\"go-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 1000 1000\">\n\n            <polyline\n            className=\"st1-go\"\n            points=\"371.7,481.9 500,609.9 628.3,481.9 \"\n            transform=\"matrix(0,-1.4834458,1.4856134,0,-92.453824,1228.1491)\"/>\n            <line\n            className=\"st0-go\"\n            x1=\"810.69312\"\n            y1=\"486.42624\"\n            x2=\"206.34099\"\n            y2=\"486.42624\"/>\n\n        </svg>\n    );\n};\n\nexport default GoButton;\n","import React, {useRef} from \"react\";\nimport ClampLines from 'react-clamp-lines';\n\nimport CloseButton from 'components/svg/closeButton';\nimport GoButton from \"components/svg/goButton\";\nimport LoadIcon from \"components/svg/loadIcon\";\n\n/**\n * the search form component used for inserting the data relative to the paper we are searching for similar ones\n */\nconst TargetPaper = ({close, //the setter for closing the form when it's visible(sets the visibility to false)\n                                style, //style of the component\n                                project_id,\n                                input, //the string input\n                                handler, //handler for the string input\n                                paperInfo, //the data of the retrieved paper(should match the paper we are searching similarities for)\n                                fetching, //flag to control when the component is fetching the data related to the paper we are searching similarities for\n                                setPaperInfo, //sets the info of the paper we are searching similarites for\n                                setPaperFile, //handles the input of a file(when we upload a file instead os specifying the paper by a string)\n                                history\n                            }) => {\n    \n    let output = \"\";\n    let content = \"\";\n    let topRightButton = \"\";\n\n    //reference for the input file field\n    const inputElement = useRef(null);\n\n\n    //clicking the button will trigger the input file\n    const onButtonClick = () => {\n        inputElement.current.click();\n    };\n\n    async function handleSubmission(){\n        //if the user submits a paper I set the paperFile variable to its content so the main form can work with it\n        if(inputElement.current.files[0]){\n            setPaperFile(inputElement.current.files[0]);\n        }\n    }\n\n    //output\n    if(fetching){\n        content = (<div className=\"load-icon-similar-paper\"><LoadIcon/></div>);\n    }else if(paperInfo && paperInfo.title){\n        content = (\n            <>\n            <h3 className=\"similar-paper-title\">{paperInfo.title}</h3>\n            <ClampLines\n                text={paperInfo.abstract || \"\"}\n                lines={4}\n                ellipsis=\"...\"\n                className=\"similar-paper-paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n            </>\n        );\n    }else{\n        content = (\n            <>\n                <p className=\"similar-description\">Search for Similar Papers</p>\n                <div className=\"DOI-holder\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"type DOI, EID, or paper title\"\n                        value={input}\n                        onChange={handler}\n                        name=\"query\"\n                    />\n                    <button className=\"go-search-similar DOI-btn\" type=\"submit\" value=\"Submit\">\n                        <GoButton/>\n                    </button>\n                </div>\n                <p className=\"or\">or</p>\n                <div className=\"file-input-container\">\n                    <input type=\"file\" id=\"real-input\" ref={inputElement} onChange={handleSubmission}/>\n                    <button type=\"button\" className=\"browse-btn\" onClick={onButtonClick}>\n                        Upload a Paper\n                    </button>\n                </div>\n            </>\n        );\n    }\n    if(paperInfo){\n        topRightButton = (\n            <button type=\"button\" className={\"close-btn red-x\"} onClick={(e) => {\n                setPaperInfo(undefined);//I delete the similar paper info\n                setPaperFile(undefined);//I delete its file\n                history.push({});\n            }}><CloseButton/></button>\n        );\n    }else{\n        topRightButton = (\n            <></>\n        );\n    }\n    output = (\n        <div style={{...style}} className=\"light-modal similar-search-paper-upload\">\n            {topRightButton}\n            {content}\n        </div>\n    );\n    return output;\n}\n\nexport default TargetPaper;","import React, {useState, useEffect, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\n\nimport {paperDao} from 'dao/paper.dao';\nimport {updateFileDao} from \"dao/updateFile.dao\";\n\nimport TargetPaper from \"components/projects_page/search_tab/search_similar/targetPaper\";\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject} from 'utils/index';\n\n\n\n/**\n * standard search form component\n */\nconst SearchSimilarForm = function ({history, queryData, project_id, targetPaperData, setTargetPaperData}){\n\n    //state for 'similar papers search' form\n    const [similarFormVisibility, setSimilarFormVisibility] = useState(false);\n\n    //bool for target similar paper fetching\n    const [similarPaperFetch, setSimilarPaperFetch] = useState(false);\n\n    //state for the form\n    const [keywords, setKeyWords] = useState(queryData.query);\n    //const [year, setYear] = useState(queryData.year); //this is not used right now\n    const [targetPaperFile, setTargetPaperFile] = useState(undefined); //the file of the paper to search similarities for\n\n\n    //get the localStorage object\n    const storage = window.localStorage;\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n\n        let mnt = true;\n\n        console.log(\"FETCHING TARGET PAPER\")\n\n        console.log(queryData);\n\n        //fetches data when searching for similarities\n        const fetchMainPaper = async () => {\n\n            if(mnt){\n\n                //standard options parameters\n                setKeyWords(queryData.query);\n                //setYear(queryData.year);\n                setTargetPaperData(undefined);\n            }\n\n            \n            //if there's a file I can do an api call to parse it\n            if(targetPaperFile && queryData.query === \"\"){\n                \n                console.log(\"FILE NAME : \" + targetPaperFile.name);\n\n                //check file extension and its mine type\n                if(!/\\.(pdf|PDF)$/.test(targetPaperFile.name) || targetPaperFile.type.indexOf(\"application/pdf\") === -1){\n                    appConsumer.setNotificationMessage(\"The file must be a pdf!\");\n                }\n                else{\n                    //open flag of loading\n                    setSimilarPaperFetch(true);\n                    console.log(\"FETCHING PARSE PDF\")\n                    //prepare the form data for post\n                    let formData = new FormData();\n                    formData.append('file', targetPaperFile);\n\n                    //call the dao\n                    console.log(\"CALLING THE PAPER PARSER SERVICE\")\n                    let res = await updateFileDao.updatePdf(formData);\n    \n                    //if there is a error\n                    if (mnt && res && res.message) {\n                        //pass error object to global context\n                        appConsumer.setNotificationMessage(\"Error during parsing file\");\n                        setSimilarPaperFetch(false);\n                        setTargetPaperData(undefined);//I delete the similar paper info\n                        setTargetPaperFile(undefined);//I delete its file\n                    }\n                    else if(mnt){\n                        console.log(res);\n                        //set paperdata(which whill call the useEffect on the paperData)\n                        setTargetPaperData(res);\n                        //display the paper data\n                        setSimilarPaperFetch(false);\n                    }\n\n                }\n            }\n            //if there's a query I can retrieve similar papers based on the query\n            else if (queryData.query !== \"\") {\n                \n                setSimilarPaperFetch(true);\n                //this will be the call to the service identifying a specific paper\n                let resx = await paperDao.search({\"query\" : queryData.query, \"scopus\": true});\n\n                //if there is a error\n                //if is 404 error\n                if (mnt && resx && resx.message === \"Not Found\") {\n                    setTargetPaperData({title:\"unable to retrieve paper\"});\n                    //show the page\n                    setSimilarPaperFetch(false);\n                }\n                else if (mnt && resx && resx.message) {\n                    //pass error object to global context\n                    appConsumer.setError(resx);\n                }else if(mnt){\n                    //set paperdata(which whill call the useEffect on the paperData)\n                    console.log(\"setting target paper data\");\n                    setTargetPaperData(resx.results[0]);\n                    setSimilarPaperFetch(false);\n\n                }\n            }\n            else{\n                console.log(\"no file (& no similarPaperString)\");\n                setSimilarPaperFetch(false);\n            }\n\n        };\n\n        if(!targetPaperData || queryData.query !== keywords){\n            fetchMainPaper();\n        }\n        \n        //execute on unmount and every time the useEffect ends\n        return () => {\n            mnt = false;\n        };\n\n    }, [project_id, targetPaperFile, queryData.query]);  //re-execute when these variables change\n\n    \n    /**\n     * effect to handle live update on year change(not used)\n     */\n    /*\n    useEffect(() => {\n        queryData.year = year;\n\n        //send query url\n        let queryString = createQueryStringFromObject(queryData);\n        //launch to search\n        history.push(queryString);//this allows pushing the same data and refreshing the page with the hash router\n        \n    }, [year])\n    */\n\n    /**\n     *handle to update hook state by input change\n     */\n    function handleOnInputChange(event) {\n\n        switch (event.target.name) {\n            case \"query\":\n                setKeyWords(event.target.value);\n                break;\n            case \"year\":\n                //setYear(event.target.value); //not used\n                break;\n            default:\n                break;\n        }\n        \n\n    }\n\n    /*function to send the query*/\n    async function handleSendSearch(event) {\n\n        console.log(\"SUBMITTING SEARCH\");\n        if(event){\n            event.preventDefault();\n        }\n\n        console.log(\"similarity search was called\");\n        //if query input is empty\n        if (keywords === \"\" && !targetPaperFile) {\n            appConsumer.setNotificationMessage(\"Similar paper string is empty\")\n        }\n        else {\n            //synchronize the query data from react state hooks\n            //if there isn't any file I search with the string\n            if(!targetPaperFile){\n                console.log(\"there isn't a file\")\n                queryData.query = keywords;\n            }else{\n                console.log(\"there's a file\")\n                queryData.query = \"\";\n            }\n            //queryData.year = year; (not used)\n\n            //send query url\n            let queryString = createQueryStringFromObject(queryData);\n            //launch to search\n            history.push(queryString);//this allows pushing the same data and refreshing the page with the hash router\n\n        }\n\n\n    }\n\n    return (\n        <>\n            <form className={(queryData.query === \"\" && !targetPaperFile && !targetPaperData) ? 'search-form' : 'search-form small'}\n                    style={{marginTop: (similarFormVisibility) ? \"30px\" : \"60px\"}}\n                    onSubmit={handleSendSearch}>\n                {/*search form*/}\n                \n                <TargetPaper style={{boxShadow: \"0px 0px 3px -1px rgba(0, 0, 0, 0.25)\"}}\n                    project_id={project_id}\n                    close={setSimilarFormVisibility} handler={handleOnInputChange} \n                    input={keywords} paperInfo={targetPaperData}\n                    fetching={similarPaperFetch} setPaperInfo={setTargetPaperData}\n                    setPaperFile={setTargetPaperFile}\n                    history={history}/>\n                \n                {/*<div className=\"option-holder\">\n\n                    <label>Year:</label><br/>\n                    <div className=\"checkboxes-holder\" >\n                        {\n                            yearOptions.map((singleYear, index) =>\n                                <RadioBox key={index} label={singleYear} name=\"year\" val={singleYear}\n                                          isChecked={year === singleYear} handler={handleOnInputChange}/>\n                            )\n                        }\n                    </div>\n                </div>*/}\n            </form>\n            <div className={(similarPaperFetch || targetPaperData) ? \"top-right-side-wrapper search-similar-description-wrapper\" : \"center-side-wrapper search-similar-description-wrapper\"}>\n                <div className=\"search-similar-description\">\n                    <p>This searching mode leverages AI to find relevant papers based on the topic and focus of the given paper.</p>\n                    <Link to={\"/projects/\"+project_id+\"/search\"}>(Go back to a normal search)</Link>\n                </div>\n            </div>\n        </>\n    );\n\n};\n\n\n\n\nexport default SearchSimilarForm;","import React, {useState, useEffect, useContext, useRef} from \"react\";\n\n\nimport {paperDao} from 'dao/paper.dao';\n\nimport CheckBox from \"components/forms_elements/checkbox\";\nimport {PrintScoupusSearchList} from 'components/modules/printPapersList';\nimport Select from 'components/forms_elements/select';\nimport Pagination from \"components/modules/pagination\";\n\nimport OrderArrow from 'components/svg/orderArrow';\nimport LoadIcon from 'components/svg/loadIcon';\nimport NoSearchResults from \"components/svg/noSearchResults\";\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue, arrayOfObjectsContains, createQueryData} from 'utils/index';\nimport SelectedPapersListBox from \"components/projects_page/search_tab/selectedPapersListBox\";\nimport SearchSimilarForm from \"./searchSimilarForm\";\n\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//order options\nconst orderByOptions = [\n    {label: 'Title', value: 'title'},\n    {label: 'Date', value: 'date'}\n];\n\nconst queryParams = [\n        {label: \"query\", default: \"\"},\n        {label: \"orderBy\", default: \"title\"},\n        {label: \"sort\", default: \"ASC\"},\n        {label: \"start\", default: 0},\n        {label: \"count\", default: 10},\n];\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst SearchSimilarManager = function ({project_id, location, match, history}) {\n\n    const mountRef = useRef(false);\n\n    //remove similar paper data once the page is\n    window.onbeforeunload = function(e){\n        window.localStorage.removeItem(\"targetPaperData\");\n    }\n\n    //list of result papers data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to control the visualization of the results when fetching results data\n    const [display, setDisplay] = useState(true);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n\n    //set query params from url\n    let queryData = createQueryData(location.search, queryParams);\n    //console.log(queryData);\n\n    //get the localStorage object\n    const storage = window.localStorage;\n    let selectedPapersListFromStorage;\n    let similarPaperDataFromStorage;\n    if (!window.localStorage) {\n        console.log(\"the browser must be support localStorage\");\n    }\n    \n    //if exists already this attribute in the local storage\n    if (storage.getItem(\"selectedPapersList\")) {\n        selectedPapersListFromStorage = JSON.parse(storage.getItem(\"selectedPapersList\"));\n    }\n    //if not exists, we create a new array\n    else {\n        selectedPapersListFromStorage = [];\n    }\n\n    //if exists already this attribute in the local storage\n    if (storage.getItem(\"targetPaperData\")) {\n        similarPaperDataFromStorage = JSON.parse(storage.getItem(\"targetPaperData\"));\n    }\n    //if not exists, we create a new array\n    else {\n        similarPaperDataFromStorage = null;\n    }\n\n    // list of selected papers\n    const [selectedPapersList, setSelectedPapersList] = useState(selectedPapersListFromStorage);\n\n    const [targetPaperData, setTargetPaperData] = useState(similarPaperDataFromStorage); //the data of the paper to search similarities for\n\n    //state for sorting arrow animation\n    const [up, setUp] = useState(queryData.sort);\n\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //update local storage every time the similar paper data changes\n    useEffect(() => {\n\n        let mnt = true;\n\n        console.log(\"FETCHING RESULTS\");\n        console.log(targetPaperData);\n\n        //if the sorting parameter changes I update the status and trigger the SVG animation\n        if (up !== queryData.sort) {\n            setUp(queryData.sort);\n            if(document.getElementById(\"ani-order-arrow\")){\n                document.getElementById(\"ani-order-arrow\").beginElement();\n            }\n        }\n\n        if(targetPaperData && targetPaperData.title !== \"unable to retrieve paper\"){\n            //fetches for similar papers\n            const fetchSimilarPapers= async () => {\n                \n                setDisplay(false);\n                storage.setItem(\"targetPaperData\", JSON.stringify(targetPaperData));\n\n                //I call the dao for searching for similar papers based on similarPaperString\n                //this will be the call for the similarity search\n                let resx = await paperDao.searchSimilar({\"paperData\" : targetPaperData, \"start\" : queryData.start, \"count\" : queryData.count, \"scopus\": true});\n\n                //error checking\n                //if is 404 error\n                if (mnt && resx && resx.message === \"Not Found\") {\n                    setPapersList([]);\n                    setTotalResults(0);\n                    //show the page\n                    setDisplay(true);\n                }\n                //if is other error\n                else if (mnt && resx && resx.message) {\n                    //pass error object to global context\n                    appConsumer.setError(resx);\n                }\n                //if res isn't null\n                else if (mnt && (resx !== null)) {\n                    console.log(\"SETTING RESULTS\");\n                    //update state\n                    setPapersList(resx.results);\n                    setTotalResults(resx.totalResults);\n                    //show the page\n                    setDisplay(true);\n                }else{\n                    console.log(\"can't set enything\");\n                }\n            }\n\n            fetchSimilarPapers();\n        }else{\n            setPapersList([]);\n            setTotalResults(0);\n            storage.removeItem(\"targetPaperData\");\n        }\n\n        //execute on unmount and every time the useEffect ends\n        return () => {\n            mnt = false;\n        };\n\n    }, [targetPaperData, queryData.orderBy, queryData.sort, queryData.start, queryData.count])\n\n\n    let resultPart = \"\";\n\n     /*\n        START OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //handler for sort selection\n    function handleSelection(e) {\n        //get index\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.orderBy = orderByOptions[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e) {\n\n        if (queryData.sort === \"ASC\") {\n            queryData.sort = \"DESC\";\n        }\n        else {\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n    /*function to insert and remove the paper id from selected list*/\n    function handlePaperSelection(event) {\n        let newList;\n        //get eid\n        let eid = event.target.value;\n        //get ttitle\n        let title = event.target.name;\n        //if id is not included in the list yet\n        if (getIndexOfObjectArrayByKeyAndValue(selectedPapersList, \"eid\", eid) === -1) {\n           //create a copy of array\n            newList = [...selectedPapersList];\n            //insert into array\n            newList.push({\"eid\": eid, \"title\": title});\n\n        }\n        //if id already exists in the list\n        else {\n            //remove the  target paper from array\n            newList = selectedPapersList.filter(function (element) {\n                return element.eid !== eid;\n            });\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*function to select all papers*/\n    function selectAllPapers(event) {\n        \n        let newList;\n        \n        //if not all papers are selected yet\n        if(!arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")){\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //and merge them with the previously selected ones\n            let tmpList = [...allPapersInPage, ...selectedPapersList];\n            newList = _.uniqBy(tmpList, 'eid');\n        }else{//otherwise\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //I filter the selectedPapersList by removing the papers that are in the current page\n            newList = selectedPapersList.filter(x => !allPapersInPage.some(paper => paper.eid === x.eid));\n        }\n        \n        setSelectedPapersList(newList);\n\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n\n    /*\n        END OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //if is loading\n    if (display === false && targetPaperData) {\n\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project_id} selectedPapersList={selectedPapersList} \n                    setSelectedPapersList={setSelectedPapersList} handlePaperSelection={handlePaperSelection}\n                    mounted={mountRef}    \n                />\n                <div className=\"search-loading-holder\">\n                    <LoadIcon class={\"small\"}/>\n                </div>\n            </>\n        );\n    }\n\n    //if the search results list is empty\n    else if (papersList.length === 0 && targetPaperData) {\n        //the class is used only to workaround a small bug that display not found just as the search start before the loading icon\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project_id} selectedPapersList={selectedPapersList} \n                    setSelectedPapersList={setSelectedPapersList} handlePaperSelection={handlePaperSelection}\n                    mounted={mountRef}    \n                />\n                <div className=\"no-results\"> <NoSearchResults/> <p className=\"not-found-description\"> Nothing was found </p> </div>\n            </>\n        );\n    }\n    else if (papersList.length > 0 && targetPaperData) {\n\n        //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project_id} selectedPapersList={selectedPapersList} \n                    setSelectedPapersList={setSelectedPapersList} handlePaperSelection={handlePaperSelection}\n                    mounted={mountRef}    \n                />\n\n                <PrintScoupusSearchList papersList={papersList} handlePaperSelection={handlePaperSelection} selectedEidList={arrayEid} setTargetPaperData={setTargetPaperData}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </>\n        );\n    }\n\n\n    let output = (\n        <>\n            <SearchSimilarForm {...{history, queryData, project_id, targetPaperData, setTargetPaperData}}/>\n            <div className=\"search-results\">\n                <div className=\"paper-card-holder similar-holder\">\n                    <div className=\"paper-card-holder-head\" \n                        style={{\n                            pointerEvents: (!display || papersList.length === 0) ? \"none\" : \"\",\n                            opacity: (!targetPaperData || papersList.length === 0) ? \"0.0\" : \"1.0\"\n                        }}\n                        >\n                        <div className=\"select-all\">\n                        <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" \n                            isChecked={arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")} handler={selectAllPapers}\n                            />\n                        </div>\n                        <div className=\"order\">\n                            <div className=\"order-flex-item\">\n                                <label>sort by:</label>\n                                <Select options={orderByOptions}\n                                        selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                        handler={handleSelection}/>\n                                <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/></button>\n                            </div>\n                        </div>\n                    </div>\n                    {resultPart}\n                </div>\n            </div>\n        </>\n    );\n\n    return output;\n};\n\n\nexport default SearchSimilarManager;","import React, {useState, useEffect} from \"react\";\nimport SelectArrow from 'components/svg/selectArrow';\n\n\n/**\n * this component acts as an html <select> for Formik\n * it needs an array of options, the index of the selected one and the hadler to change the status of the upper component calling this one\n */\nconst Select = ({ options, form, name, type, code }) => {\n    \n\n    //this is useful for the animation\n    const [focused, setFocused] = useState(false);\n\n    //this keeps the selected option\n    const [selected, setSelected] = useState(0)\n\n    //this handle the selection setting the index of the selected option\n    function handler(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n        setSelected(index);\n    }\n\n    //this updates the field value for formik\n    useEffect(() => {\n        form.setFieldValue(name, options[selected].value);\n    }, [selected])\n\n    function handleFocus(type){\n        //handle arrow animation and focus of menu\n        if(type === \"click\"){\n            document.getElementById((isNaN(code)) ? \"ani-select-arrow\" : \"ani-select-arrow\" + code).beginElement();//trigger svg animation\n            setFocused(!focused);\n        }else if(focused){\n            document.getElementById((isNaN(code)) ? \"ani-select-arrow\" : \"ani-select-arrow\" + code).beginElement();//trigger svg animation\n            setFocused(false);\n        }\n    }\n\n    var output = (\n        <div className={(type) ? \"custom-select \" + type: \"custom-select\"}>\n            <div className=\"selected\" tabIndex={-2} onBlur={() => {handleFocus(\"blur\")}} onClick={() => {handleFocus(\"click\")}}>{options[selected].label} <div className=\"arrow\">\n                <SelectArrow focused={focused} code={code}/>\n            </div></div>\n            <div className=\"options-holder\" style={{fontSize: (!focused) ? '0px' : '15px', borderBottom: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderLeft: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderRight: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderTop:\"none\"}}>\n                {options.map((element, index) => (\n                <div key={index} data-value={index} className=\"option\" style={{padding: (!focused) ? '0px' : '2px' }} onMouseDown={handler}>\n                    {element.label}\n                </div>))}\n            </div>\n        </div>\n    );\n    return output;\n}\n\nexport default Select;","import React, {useContext, useEffect, useRef} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao'\n\nimport Select from 'components/forms_elements/selectformik';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n//order options\nconst paperType = [\n    { value: 'article', label: 'Article' },\n    { value: 'book_chapter', label: 'Book Chapter' },\n    { value: 'conf_publication', label: 'Conf. Publication' }\n  ];\n\n/**\n * this is the form for create or edit the paper\n * @param props.projectId  relative project where we will insert the paper\n */\nfunction CustomPaperForm(props) {\n\n    const mountRef = useRef(false);\n\n    let yup = require('yup');\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //validation schema for form\n    const paperValidationSchema = yup.object().shape({\n        title: yup.string().required('please enter a title'),\n        authors: yup.string().required('please enter an author'),\n        year: yup.number().required('please enter a year').min(1000).max(new Date().getFullYear() + 1).integer(),\n        //document_type: yup.string().required('please enter a paper type'),\n        abstract: yup.string().required('please enter the abstract')\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    return (\n        <>\n        <Formik\n            initialValues={{\n                title: (props.customPaper && props.customPaper.title) || '',\n                authors: (props.customPaper && props.customPaper.authors) || '',\n                year: (props.customPaper && props.customPaper.year) || '',\n                abstract: (props.customPaper && props.customPaper.abstract) || '',\n                //it is not present in pdf parse service\n                document_type: (props.customPaper && props.customPaper.document_type) || '',\n                doi: (props.customPaper && props.customPaper.doi) || \"\"\n            }}\n            validationSchema={paperValidationSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                //if doi is not specified I set it as empty string\n                if(values.doi === undefined){\n                    values.doi = \"\";\n                }\n                const paperData = {...values, \n                    year: values.year.toString(), \n                    source_title: values.title, \n                    link: \"custom_paper\", \n                    source: \"slr_custom_papers\", \n                    abstract_structured: \"0\",\n                    filter_oa_include: \"0\",\n                    filter_study_include: \"0\",\n                    notes: \"\",\n                    //data necessary for identifying custom papers\n                    manual: \"true\"}\n                console.log(paperData);\n                \n                let res = await projectPapersDao.postCustomPaperIntoProject({\n                    paper: paperData, project_id: props.projectId\n                });\n                //error checking\n                if (mountRef.current && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }else if(mountRef.current){\n                    props.history.push(props.url);\n                }\n                if(mountRef.current){\n                    setSubmitting(false);\n                }\n            }}\n            validateOnBlur={false}\n        >\n        {({ errors, touched, isValid, isSubmitting }) => (\n            <Form className=\"new-paper-form\">\n                <Field\n                    style={{borderBottom: (errors.title && touched.title) ? \"1px solid #d81e1e\" : \"\"}}\n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\" \n                    placeholder=\"Paper Title\"/>\n                <div className=\"new-paper-form-ad\">\n                    <div className=\"author-year\">\n                        <Field\n                            style={{borderBottom: (errors.authors && touched.authors) ? \"1px solid #d81e1e\" : \"\"}}\n                            name=\"authors\"\n                            type=\"text\" \n                            placeholder=\"paper author\"/>\n                        <Field \n                            style={{borderBottom: (errors.year && touched.year) ? \"1px solid #d81e1e\" : \"\"}}\n                            name=\"year\"\n                            type=\"number\"\n                            placeholder=\"year\"/>\n                    </div>\n                    <div className=\"type-doi\">\n                        <Field\n                            name=\"document_type\"\n                            render={({ field, form }) => (\n                                    <Select options={paperType} {...field} form={form}/>\n                            )}\n                        />\n                        <Field \n                            name=\"doi\"\n                            type=\"text\"\n                            placeholder=\"DOI(optional)\"/>\n                    </div>\n                </div>\n                <Field\n                    style={{borderBottom: (errors.abstract && touched.abstract) ? \"1px solid #d81e1e\" : \"\"}}\n                    name=\"abstract\"\n                    placeholder=\"Paper Abstract\"\n                    component=\"textarea\"/>\n                <button type=\"submit\" disabled={isSubmitting || !isValid}>Add paper</button>\n            </Form>\n        )}\n        </Formik>\n        </>\n    );\n\n\n}\n\n\nexport default CustomPaperForm;","import React, {useEffect, useState, useRef, useContext} from \"react\";\nimport CustomPaperForm from 'components/projects_page/papers_tab/forms/customPaperForm';\nimport LoadIcon from \"components/svg/loadIcon\";\n\nimport {updateFileDao} from \"dao/updateFile.dao\";\n\nimport {AppContext} from 'components/providers/appProvider';\n\nfunction CustomPaperPage({projectId, url, history}) {\n\n    const mountRef = useRef(false);\n\n    const [paperDataFetch, setPaperDataFetch] = useState(false);\n    const [paperData, setPaperData] = useState(undefined);\n    const [displayForm, setDisplayForm] = useState(false);\n\n    //reference for the input file field\n    const inputElement = useRef(null);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    async function handleSubmission(){\n\n        //get the file object\n        let file = inputElement.current.files[0];\n        //if this file exist\n        if(file){\n\n            //check file extension and its mine type\n            if(!/\\.(pdf|PDF)$/.test(file.name) || file.type.indexOf(\"application/pdf\") === -1){\n                appConsumer.setNotificationMessage(\"The file must be a pdf!\");\n            }\n            else{\n                //open flag of loading\n                setPaperDataFetch(true);\n\n                //prepare the form data for post\n                let formData = new FormData();\n                formData.append('file', file);\n\n                //call the dao\n               let res = await updateFileDao.updatePdf(formData);\n\n               //if there is a error\n                if (mountRef.current && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setNotificationMessage(\"Error during parsing file\");\n                   \n                }\n                else if(mountRef.current){\n                    //set paperdata\n                    setPaperData(res);\n                    //display the form\n                    setDisplayForm(true);\n                }\n                if(mountRef.current){\n                    //close flag of loading\n                    setPaperDataFetch(false);\n                }\n\n            }\n        }\n    }\n\n    let output = \"\";\n\n    if(!displayForm && !paperDataFetch){\n        output = (\n            <div className=\"new-paper-page-wrapper\">\n                <div>\n                    <div className=\"file-input-container\">\n                        <input type=\"file\"name =\"file\" id=\"real-input\" ref={inputElement} onChange={handleSubmission}/>\n                        <button type=\"button\" className=\"browse-btn\" onClick={() => {inputElement.current.click();}}>\n                            Upload a Paper\n                        </button>\n                    </div>\n                        or<br/>\n                    <button type=\"button\"\n                        onClick={() => {setDisplayForm(true)}}\n                    >insert data manually</button>\n                </div>\n            </div>\n        );\n    }else if(paperDataFetch){\n        output = (\n            <div className=\"new-paper-page-wrapper\">\n                <div className=\"file-input-container\">\n                    <input type=\"file\" id=\"real-input\"/>\n                    <button type=\"button\" className=\"browse-btn\">\n                        <LoadIcon/>\n                    </button>\n                </div>\n                    or<br/>\n                <button type=\"button\"\n                    onClick={() => {/* reset connection to api if necessary */ setPaperDataFetch(false); setDisplayForm(true);}}\n                >abort and insert data manually</button>\n            </div>\n        );\n    }else{\n        output = (\n            <CustomPaperForm projectId={projectId} url={url} history={history} customPaper={paperData}/>\n        );\n    }\n\n    return output;\n\n}\n\n\nexport default CustomPaperPage;","import React from \"react\";\n\n/**\n * component svg edit button\n * based on the 'confirm' flag the icon will change\n */\nconst EditButton = function ({confirm}) {\n    var output = <></>;\n    if(!confirm){//if the user is not editing\n        output = (<svg version=\"1.1\" id=\"edit-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <path className=\"st-pencil\" d=\"M224,632.3l-81.6,225.3L367.7,776l0,0L833,310.7c39.4-39.4,39.9-103.3,0.7-142.9c-0.5-0.5-1-1-1.4-1.4\n            c-39.6-39.2-103.6-38.7-142.9,0.7L224,632.3L224,632.3z\"/>\n            <path className=\"st-pencil-border\" d=\"M367.7,776c-24-71.7-71.9-119.6-143.7-143.7\"/>\n            <path className=\"st-pencil\" d=\"M805.7,338c-24-71.7-71.9-119.6-143.7-143.7\"/>\n        </svg>);\n    }else{//if the user is editing\n        output = (\n            <svg version=\"1.1\" id=\"confirm-edit-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t            viewBox=\"0 0 1000 1000\">\n                <polyline className=\"st-confirm\" points=\"918,192.3 389.3,807.7 82,450 \"/>\n            </svg>\n        );\n    }\n    return output;\n};\n\nexport default EditButton;\n","import React, {useState,useContext,useEffect, useRef} from \"react\";\n\nimport {projectsDao} from 'dao/projects.dao';\nimport {AppContext} from 'components/providers/appProvider';\n\nimport EditButton from \"components/svg/editButton\";\n\n/**\n * this is the head component of page\n * @param \"menu_elements\" contains the list of menu-items\n */\n\n\nconst ProjectName = function({project, setProject}){\n\n    const mountRef = useRef(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //this is used as a toggle for checking if the user is trying to edit the name of the project\n    const [editing, setEditing] = useState(false);\n\n    //this is used as field value for the project name\n    const [name, setName] = useState(project.data.name);\n\n\n    //checks if there's an edit request\n    function handleEditRequest(e){\n        if(!editing){//if the user is not editing the name yet(the check is useful because handleEditRequest and handleConfirm fire at the same time)\n            document.getElementById(\"edit-project-name-input\").focus();\n            setEditing(!editing);\n        }\n    }\n\n    //function for updating the description and name\n    async function updateProject(){\n\n        //if the new name o description are difference from the old name o description\n        if(name !== project.data.name){\n\n            let res = await projectsDao.putProject(project.id, {name: name, description : project.data.description});\n\n            \n            //empty string is the response from the dao layer in case of success(rember that empty string is a falsy value)\n            if (mountRef.current && res === \"\") {\n                console.log(\"we got a success\");\n                let newProject = project;\n                newProject.data.name = name;\n                setProject({...newProject});\n            }\n            //error checking\n            //if is other error\n            else if (mountRef.current && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n\n        }\n    }\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n\n    //checks if the user wants to confirm the change\n    function handleConfirm(e){\n        if(editing){//if the user was editing I confirm its request and call the api(the check is useful because handleEditRequest and handleConfirm fire at the same time)\n            updateProject();\n            setEditing(!editing);\n        }\n    }\n\n    return(\n        <div className={(editing) ? \"nav-elements\" : \"nav-elements hidden-form\"}> \n            <h2 style={{fontSize: (editing) ? \"0px\" : \"21px\"}}>{project.data.name}</h2> \n            {/*clicking on the div containing the title will allow the user to access the form for editing the project name*/}\n            <form className=\"edit-project-name\"  onClick={handleEditRequest} onSubmit={(e) => {e.preventDefault()}}>\n                <input type=\"text\" id=\"edit-project-name-input\" value={name} style={{width: (editing) ? \"\" : \"0px\", padding: (editing) ? \"\" : \"0px\"}}\n                    onChange={(e) => setName(e.target.value)}\n                    onBlur={(e) => {setEditing(false)}}\n                />\n                <button className=\"edit-button\" onMouseDown={handleConfirm} type=\"button\"><EditButton confirm={editing}/></button>\n                {/*clicking on the button will confirm the new name*/}\n            </form>\n        </div>\n    );\n}\n\nexport default ProjectName;","import React from \"react\";\n\n/**\n * component svg\n */\nconst Forbidden = function (props) {\n    return(\n        <svg version=\"1.1\" id=\"forbidden\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <circle className=\"st0-forbidden\" cx=\"500\" cy=\"500\" r=\"397\"/>\n        <g>\n            <line className=\"st1-forbidden\" x1=\"780.2\" y1=\"780.2\" x2=\"218.8\" y2=\"218.8\"/>\n        </g>\n        </svg>\n    );\n}\n\nexport default Forbidden;","import React from \"react\";\n\n/**\n * component svg \n */\nconst Ghost = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"ghost\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <path className=\"st0-ghost\" d=\"M949.5,759c-34.3-97-89.7-188.9-98.5-293.2c0-0.3,0-0.6,0-0.9s-0.8-0.1-0.1-1c-5.7-99-58.2-209-174.7-205.1\n                C550.8,263,499.5,395.2,512,505.6c16.2,110.9,19.6,217.5,6.4,329\"/>\n            <ellipse transform=\"matrix(1.122617e-02 -0.9999 0.9999 1.122617e-02 200.0576 961.9827)\" cx=\"586.5\" cy=\"379.8\" rx=\"21.8\" ry=\"27.4\"/>\n            <ellipse transform=\"matrix(1.122617e-02 -0.9999 0.9999 1.122617e-02 329.3011 1095.6136)\" cx=\"718.6\" cy=\"381.3\" rx=\"21.8\" ry=\"29.1\"/>\n            <path d=\"M678.8,453.7c2.3,22-9.1,49.7-35.9,45.1c-26.8-4.6-21.4-27.8-21.6-47.3c-0.2-19.5-3-38.9,20.7-41.1S676.5,431.7,678.8,453.7\n                z\"/>\n            <path className=\"st1-ghost\" d=\"M407.8,331.6c31.9-17.6,51.3-40.8,51.3-66.3c0-55.2-91.5-100-204.3-100s-204.3,44.8-204.3,100\n                s91.5,100,204.3,100c33.7,0,65.5-4,93.6-11.1c21.9,31.4,51.9,40.2,98.4,39.6C417.6,378.1,408.1,355.2,407.8,331.6z\"/>\n            <text transform=\"matrix(1 0 0 1 159.4091 299.821)\" className=\"st2-ghost\">404</text>\n            <path className=\"st0-ghost\" d=\"M518.4,834.6l18.3-11.6c25.3-16.1,57.5-16.4,83.2-0.9l0,0c25.3,15.3,56.9,15.2,82.1-0.2l33.1-20.3\n                c34.3-21,76.8-23.7,113.5-7.1l0,0c37.7,17,82.1,1.4,100.8-35.5l0,0\"/>\n        </svg>\n    );\n};\n\nexport default Ghost;","import React from \"react\";\nimport Ghost from \"components/svg/ghost\";\n\n\n\n/**\n * 404 page\n */\nconst PageNotFound = function (props) {\n    //get data from global context\n    return (\n        <div className=\"page-not-found-wrapper\">\n            <Ghost/>\n        </div>\n    );\n};\n\nexport default PageNotFound;","import React, {useState, useEffect, useContext} from \"react\";\nimport queryString from \"query-string\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport {PrintPapersList} from 'components/modules/printPapersList';\nimport Select from 'components/forms_elements/select';\nimport OrderArrow from 'components/svg/orderArrow';\nimport Pagination from \"components/modules/pagination\";\nimport {createQueryData, createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue} from 'utils/index';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n\n\n//order options\nconst orderByOptions = [\n    { value: 'date_created', label: 'Recently Added' },\n    { value: 'title', label: 'Title' },\n    { value: 'authors', label: 'Authors' }\n  ];\n\nconst queryParams = [\n    {label: \"orderBy\", default: \"date_created\"},\n    {label: \"sort\", default: \"ASC\"},\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n]\n\n/**\n * the local component that shows the papers list of a project\n */\nconst PapersList = ({project_id, location, match, history, forcePapersFetch}) => {\n\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(location.search, queryParams);\n\n    const [up, setUp] = useState(queryData.sort);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let  mnt = true;\n        if(queryData.orderBy !== \"date_created\" && up !== queryData.sort){\n            setUp(queryData.sort);\n            document.getElementById(\"ani-order-arrow\").beginElement();\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setDisplay(false);\n\n            //call the dao\n            let res = await projectPapersDao.getPapersList({project_id, type: \"all\", ...queryData});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setPapersList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n\n                //update state\n                setPapersList(res.results);\n                setTotalResults(res.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n\n        };\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count, queryData.sort, queryData.orderBy, forcePapersFetch]); //re-execute when these variables change\n\n\n    //handler for sort selection\n    function handleSelection(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n\n        //if I previously ordered by 'most recent' then I sort the next order by ASC\n        if(queryData.orderBy === \"date_created\"){\n            queryData.sort = \"ASC\";\n        }\n        queryData.orderBy=orderByOptions[index].value;\n\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e){\n        //trigger svg animation\n        if(queryData.sort === \"ASC\"){\n            queryData.sort = \"DESC\";\n        }\n        else{\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print loading image\n        output = (\n            <>\n                <LoadIcon class={\"small\"}/>\n            </> );\n    }\n    else {\n\n        output = (\n            <>\n                <PrintPapersList papersList={papersList} location={location} history={history}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </>\n        );\n    }\n\n    output = (\n        <div className=\"left-side-wrapper\">\n            <div className=\"paper-card-holder\">\n                <div className=\"order\" \n                    style={{\n                        pointerEvents: (!display || papersList.length === 0) ? \"none\" : \"\",\n                        opacity: (papersList.length === 0) ? \"0.0\" : \"1.0\"\n                    }}>\n                    <div className=\"order-flex-item\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)} handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder} style={{display: (queryData.orderBy === \"date_created\") ? \"none\" : \"\"}}>\n                            <OrderArrow up={up}/>\n                        </button>\n                    </div>\n                </div>\n                {output}\n            </div>\n        </div>\n    );\n\n    return output;\n\n};\n\n\nexport default PapersList;","import React, {useState, useContext, useEffect, useRef} from \"react\";\n\nimport {projectsDao} from 'dao/projects.dao';\nimport {AppContext} from 'components/providers/appProvider'\n\nimport EditButton from \"components/svg/editButton\";\nimport RemoveButton from \"components/svg/removeButton\";\nimport LoadIcon from 'components/svg/loadIcon';\n\n/**\n * this is the description component for the project page\n */\n\n\nconst ProjectDescription = function({project, setProject, collaborators, setCollaborators}){\n\n    const mountRef = useRef(false); //in the future we should get ref from parent component because we also get to set its properties\n\n    //this is used as a toggle for checking if the user is trying to edit the name of the project\n    const [editing, setEditing] = useState(false);\n\n    //state form project description\n    const [description, setDescription] = useState(project.data.description);\n\n    //state form input collaborator\n    const [input, setInput] = useState(\"\");\n\n    //flag for collaborators loading\n    const [loadIconDisplay, setLoadIconDisplay] = useState(true);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    let output = <></>;\n\n    useEffect(() => {\n        mountRef.current = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //call the dao for getting collaborators\n            let res = await projectsDao.getProjectCollaborators(project.id);\n\n            //error checking\n            //if the component is still mounted and there is some other errors\n            if (mountRef.current && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and res isn't null\n            else if (mountRef.current &&  res) {\n                setCollaborators(res.filter(x => x.data.email !== appConsumer.user.email));\n                //show the page\n                setLoadIconDisplay(false);\n            }\n        }\n\n        fetchData();\n\n        return () => {\n            mountRef.current = false;\n        };\n    }, [])\n\n    //function for updating the description and name\n    async function updateProject(){\n\n        //if the new name o description are difference from the old name o description\n        if(description !== project.data.description){\n\n            //call the dao\n            let res = await projectsDao.putProject(project.id, {name: project.data.name, description : description});\n            console.log(res);\n\n            //empty string is the response from the dao layer in case of success(rember that empty string is a falsy value)\n            if (mountRef.current && res === \"\") {\n                console.log(\"scccc\");\n                let newProject = project;\n                newProject.data.description = description;\n                setProject({...newProject});\n                console.log(project);\n            }\n            //error checking\n            //if is other error\n            else if (mountRef.current && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n\n\n        }\n    }\n\n    //handles the click on the edit/confirm button\n    function handleEditRequest(e){\n        console.log(\"CLICK\");\n        if(!editing){//if the user was not editing I allow him to edit\n            setTimeout(//I wait for the button event to fire before blurring out the textarea\n                function(){\n                    document.getElementById(\"edit-project-description-input\").focus();\n                },100);\n            \n            setEditing(true);\n            console.log(editing)\n        }else{//if the user was editing I submit its changes\n            updateProject();\n        }\n    }\n\n    //format the date string\n    function formatDate(date){\n        return <span className=\"date\">{date.slice(0,10)} at {date.slice(11,19)}</span>\n    }\n\n    //function for removing collaborators\n    async function removeCollaborator(collaborator){\n        console.log(\"removing \" + collaborator + \" from \" + project.id);\n\n        const callApi = async () => {\n\n            //call the dao for getting collaborators\n            let res = await projectsDao.removeProjectCollaborator(project.id, collaborator);\n            //error checking\n            //there is some other errors\n            if (mountRef.current && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //didn't get an error\n            else{\n                let newCollabs = collaborators.filter(x => x.id !== collaborator);\n                console.log(newCollabs)\n                setCollaborators(newCollabs);\n            }\n        }\n        callApi();\n    }\n\n    //function for adding collaborator\n    async function addCollaborator(){\n        if(!collaborators.includes(input)){\n            console.log(\"adding \" + input);\n\n            const callApi = async () => {\n\n                //call the dao for getting collaborators\n                let res = await projectsDao.addProjectCollaborator(project.id, {\"email\": input});\n                //error checking\n                //there is some other errors\n                if (mountRef.current && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }\n                //didn't get an error\n                else if (res) {\n                    setInput(\"\");\n                    setCollaborators([...collaborators, res]);\n                }\n            }\n            callApi();\n        }\n    }\n\n\n    if(loadIconDisplay){\n        output = (\n            <div className=\"right-side-wrapper project-description hidden-form-description\">\n                <h2>Description:</h2>\n                <LoadIcon/>\n            </div>\n            );\n    }else{\n        output = (\n            <div className={(!editing) ? \"right-side-wrapper project-description hidden-form-description\" : \"right-side-wrapper project-description\"}>\n                <h2>Description:</h2>\n                <p style={{fontSize: (editing) ? \"0px\" : \"15px\"}}> {project.data.description}</p>\n                <form className=\"edit-project-description\" style={{height:(editing) ? \"\" : \"0px\"}}>\n                        <textarea id=\"edit-project-description-input\"  value={description} style={{width: (editing) ? \"100%\" : \"0%\", padding: (editing) ? \"\" : \"0px\", height:(editing) ? \"\" : \"0px\"}}\n                        onChange={(e) => setDescription(e.target.value)}\n                        onBlur={(e) => {\n                                        console.log(\"blurring\");\n                                        setEditing(false);\n                                    }}\n                        />\n                        <button className=\"edit-button\" onMouseDown={handleEditRequest} type=\"button\">\n                            <EditButton confirm={editing}/>\n                        </button>\n                </form>\n                <h2>Additional info:</h2>\n                <p className=\"project-date-info\"> <span>Created</span> {formatDate(project.date_created)} </p>\n                <p className=\"project-date-info\"> <span>Last edited</span> {formatDate(project.date_last_modified)} </p>\n                <h2>Collaborators:</h2>\n                {(collaborators.length === 0) ? \"You're not sharing this project with anyone\" : \"\"}\n                {collaborators.map((element, index) =>\n                    <div className=\"collaborator-wrapper\" key={index}>\n                        <p className=\"collaborator\">{element.data.email}</p>\n                        <button type=\"button\" className=\"remove-btn\" name={element.data.email}\n                            value={element.data.email} //name and value don't work on the button event for some reasons\n                            onClick={(e) => {\n                                removeCollaborator(element.id);\n                            }}>\n                            <RemoveButton/>\n                        </button>\n                    </div>\n                )}\n                <form className=\"add-collaborator\" onSubmit={addCollaborator}>\n                    <input type=\"text\" id=\"edit-project-description-input\" placeholder=\"add a collaborator\" value={input}\n                        onChange={(e) => {setInput(e.target.value);}}\n                    />\n                    <button className=\"add-collaborator-button\" disabled={(!input || input === \"\")}>\n                        \n                    </button>\n                </form>\n            </div>\n        );\n    }\n\n    return output;\n}\n\nexport default ProjectDescription;","import React, {useState, useContext, useRef, useEffect} from \"react\";\n\nimport {updateFileDao} from \"dao/updateFile.dao\";\n\nimport CloseButton from 'components/svg/closeButton';\n\nimport { AppContext } from 'components/providers/appProvider'\nimport LoadIcon from \"components/svg/loadIcon\";\n\n/**\n * this is the form for uploading a .csv of papers\n */\nfunction PapersCsvForm(props) {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //title field\n    const [title, setTitle] = useState(\"\")\n\n    //year field\n    const [year, setYear] = useState(\"\")\n\n    //abstract field\n    const [abstract, setAbstract] = useState(\"\")\n\n    //author field\n    const [authors, setAuthors] = useState(\"\")\n\n    //id(eid, doi) field\n    const [id, setId] = useState(\"\");\n\n    //flag for csv upload\n    const [csvUpload, setCsvUpload] = useState(false)\n\n    //reference for the input file field\n    const inputElement = useRef(null);\n\n    //function to handle file submission\n    async function handleSubmission(){\n\n        //get the file object\n        let file = inputElement.current.files[0];\n        console.log(file.name);\n        //if this file exists\n        if(file){\n\n            //check file extension\n            if(!/\\.(csv|CSV)$/.test(file.name)){\n                appConsumer.setNotificationMessage(\"The file must be a csv!\");\n            }\n            else{\n                //open flag of loading\n                setCsvUpload(true);\n\n                const map = {\n                    \"authors\" : (authors && authors !== \"\") ? authors : \"Authors\",\n                    \"title\" : (title && title !== \"\") ? title : \"Title\",\n                    \"year\" : (year && year !== \"\") ? year : \"Year\",\n                    \"date\" : \"\",\n                    \"source_title\" : \"\", //\"Source title\",\n                    \"link\" : \"\", //\"Link\",\n                    \"abstract\" : (abstract && abstract !== \"\") ? abstract : \"Abstract\",\n                    \"document_type\" : \"\", //\"Document Type\",\n                    \"source\" : \"\", //Source\",\n                    \"eid\" : (id && (id === \"eid\" || id === \"EID\")) ? id : ((!id) ? \"EID\" : \"\"), //EID\",\n                    \"abstract_structured\" : \"\", //abstract_structured\",\n                    \"filter_oa_include\" : \"\", //filter_OA_include\",\n                    \"filter_study_include\" : \"\", //filter_study_include\",\n                    \"notes\" : \"\", //notes\",\n                    \"manual\" : \"\", //manual\",\n                    \"doi\" : (id && (id === \"doi\" || id === \"DOI\")) ? id : \"\", //doi\"\n                    /*\n                    Authors,Title,Year,Source title,Link,Abstract,\n                    Document Type,Source,EID,abstract_structured,\n                    filter_OA_include,filter_study_include,notes\n                    */\n                }\n\n                //prepare the form data for post\n                let formData = new FormData();\n                formData.append('file', file);\n                formData.append('project_id', props.project_id);\n                formData.append('fields', JSON.stringify(map));\n\n\n                //call the dao\n               let res = await updateFileDao.uploadCsv(formData);\n               console.log(res);\n\n                \n                //if there is a error\n                if (res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setNotificationMessage(\"Error during parsing file\");\n                \n                }\n                else{\n                    //set paperdata\n                    //setPaperData(res);\n                    props.setForcePapersFetch(!props.forcePapersFetch);\n                    props.setVisibility(!props.visibility);\n                }\n\n\n               setTimeout(() => {\n                    //close flag of loading\n                    setCsvUpload(false);\n                }, 2000);\n\n\n            }\n        }\n    }\n\n\n    let output = \"\";\n\n    if(csvUpload){\n        output = (<LoadIcon/>);\n    }else{\n        output = (\n            <>\n            <button type=\"button\" className=\"close-btn\" onClick={(e) => {\n                props.setVisibility(!props.visibility);\n            }}><CloseButton/></button>\n\n            <h2>Upload papers CSV</h2>\n\n            <div className=\"field-names\">\n                <p>Field names<span>(leave empty for default values)</span></p>\n                <div className=\"field-input-row\">\n                    <div className=\"field-input-holder\">\n                        <label>Title : </label>\n                        <input\n                            name=\"name\"\n                            type=\"text\" \n                            placeholder=\"title\" \n                            value={title}\n                            onChange={(e) => {setTitle(e.target.value)}}    \n                        />\n                    </div>\n                    <div className=\"field-input-holder\">\n                        <label>Year : </label>\n                        <input\n                            name=\"name\"\n                            type=\"text\" \n                            placeholder=\"year\" \n                            value={year}\n                            onChange={(e) => {setYear(e.target.value)}}    \n                        />\n                    </div>\n                </div>\n                <div className=\"field-input-row\">\n                    <div className=\"field-input-holder\">\n                        <label>Abstract : </label>\n                        <input\n                            name=\"name\"\n                            type=\"text\" \n                            placeholder=\"abstract\" \n                            value={abstract}\n                            onChange={(e) => {setAbstract(e.target.value)}}    \n                        />\n                    </div>\n                    <div className=\"field-input-holder\">\n                        <label>Authors : </label>\n                        <input\n                            name=\"name\"\n                            type=\"text\" \n                            placeholder=\"authors\" \n                            value={authors}\n                            onChange={(e) => {setAuthors(e.target.value)}}    \n                        />\n                    </div>\n                </div>\n                <div className=\"field-input-row\">\n                    <div className=\"field-input-holder\">\n                        <label>ID : </label>\n                        <input\n                            name=\"name\"\n                            type=\"text\" \n                            placeholder=\"id, eid, doi, ...\" \n                            value={id}\n                            onChange={(e) => {setId(e.target.value)}}    \n                        />\n                    </div>\n                </div>\n            </div>\n            <input type=\"file\"name =\"file\" id=\"real-input\" ref={inputElement} onChange={handleSubmission}/>\n            <button className=\"file-input\" type=\"button\" onClick={() => {inputElement.current.click();}}>Uplaod .csv file</button>\n            </>\n        );\n    }\n    return (\n        <>\n            <form className=\"modal floating-form add-csv-papers\" style={{visibility: (!props.visibility) ? 'hidden' : '' }}>\n                {output}\n            </form>\n        </>\n    );\n\n\n}\n\n\nexport default PapersCsvForm;","import React, {useState} from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport PapersList from 'components/projects_page/papers_tab/papersList';\nimport ProjectDescription from 'components/projects_page/papers_tab/projectDescription';\nimport {join} from 'utils';\n\nimport Cover from \"components/modules/cover\";\nimport PapersCsvForm from \"components/projects_page/papers_tab/forms/papersCsvForm\";\n\n\n/**\n * this is the paper tab which will call the other components\n */\nconst PapersTab = function (props) {\n\n    //bool to control visualization of form\n    const [displayCsvForm, setDisplayCsvForm] = useState(false);\n\n    //paper fetch toggler (its value will be toggled and it will trigger the useEffect fetching papers)\n    const [forcePapersFetch, setForcePapersFetch] = useState(false);\n\n    return (\n        <>\n            <Cover cls={displayCsvForm ? \"full-screen\" : \"\"} handler={setDisplayCsvForm}/>\n            <PapersCsvForm visibility={displayCsvForm} setVisibility={setDisplayCsvForm} project_id={props.project_id}\n                forcePapersFetch={forcePapersFetch} setForcePapersFetch={setForcePapersFetch}\n            />\n            <ProjectDescription project={props.project} setProject={props.setProject} collaborators={props.collaborators} setCollaborators={props.setCollaborators}/>\n            <PapersList project_id={props.project_id} location={props.location} match={props.match} history={props.history}\n                forcePapersFetch={forcePapersFetch}\n            />\n            <div className=\"bottom-right-button-holder\">\n                <div>\n                    <button className=\"bottom-right-btn add-csv-papers-btn\" type=\"button\" value=\"toggle-insert-form\" \n                    onClick={(e) => {\n                        setDisplayCsvForm(!displayCsvForm);\n                    }}>\n                        <div className=\"btn-title\">Upload .csv papers</div><div className=\"btn-icon\"> </div>\n                    </button>\n                </div>\n                <div>\n                    <Link to={join(props.match.url,\"/addpaper\")}>\n                        <button className=\"bottom-right-btn add-custompaper-btn\">\n                            <div className=\"btn-title\">Add Custom Paper</div><div className=\"btn-icon\"> </div>\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default PapersTab;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * get a specific filter\n */\nasync function selectById(id){\n    let url = config.home + config.filters + \"/\" + id;\n\n    const res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to get a list of filters associated with a project\n * @param queryData\n * @return {array[objects]}\n */\nasync function getFiltersList(queryData) {\n    let url = config.home + config.filters;\n    const res = await http.get(url, queryData);\n    return res;\n\n}\n\n/**\n * dao to post a new filter\n * @param bodyData\n * @return {Object} filter created\n */\nasync function postFilterIntoProject(bodyData) {\n    let url = config.home + config.filters;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to delete a filter\n * @param filter_id\n * @return {String} empty string\n */\nasync function deleteFilter(filter_id) {\n    let url = config.home + config.filters + \"/\" + filter_id;\n    return await http.delete(url);\n}\n\n/**\n * dao to update a filter\n * @param filter_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putFilter(filter_id, bodyData) {\n    let url = config.home + config.filters + \"/\" + filter_id;\n    return await http.put(url, bodyData);\n}\n\nconst projectFiltersDao = {\n    selectById,\n    getFiltersList,\n    postFilterIntoProject,\n    deleteFilter,\n    putFilter,\n    \"abortRequest\" : http.abortRequest\n}\n\n\n\nexport {projectFiltersDao};\n","import React, {useEffect, useContext, useRef} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n/**\n * this is the form for adding a new filter to a project\n */\n\n\nconst InsertFilterForm = function(props){\n\n    const mountRef = useRef(false);\n\n    let yup = require('yup');\n\n    const predicateValidationSchema = yup.object().shape({\n        predicate: yup.string().required('please enter a question'),\n        inclusion_description: yup.string(),\n        exclusion_description: yup.string()\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    let output = \"\";\n    output = (\n        <div className=\"right-side-wrapper form-filter-wrapper\">\n            <Formik\n                initialValues={{predicate: '', inclusion_description: '', exclusion_description: ''}}\n                validationSchema={predicateValidationSchema}\n                onSubmit={async (values, { setSubmitting, resetForm }) => {\n                    let bodyData = {project_id: props.project_id, \n                                    filter: {\n                                        predicate: values.predicate, \n                                        inclusion_description: values.inclusion_description, \n                                        exclusion_description: values.exclusion_description\n                                    }\n                                };\n\n                    //call dao\n                    let res = await projectFiltersDao.postFilterIntoProject(bodyData);\n\n                    //error checking\n                    if(mountRef.current && res.message){\n                        //pass error object to global context\n                        appConsumer.setError(res);\n                    }else if(mountRef.current && res){\n                        console.log(res);\n                        props.setFiltersList([res, ...(props.filtersList)])\n                    }\n                    if(mountRef.current){\n                        setSubmitting(false);\n                        resetForm({predicate: '', inclusion_description: '', exclusion_description: ''});\n                    }\n                }}\n                validateOnBlur={false}\n            >\n            {function ({ errors, touched, isSubmitting, isValid, setErrors, validateField, handleChange }) {\n                let output = \"\";\n                output = (\n                <Form className=\"add-filter\">\n                    <Field\n                        style={{borderBottom : (errors.predicate && touched.predicate) ? \"solid 1px #d81e1e\" : \"\"}}\n                        name=\"predicate\"\n                        type=\"text\" \n                        placeholder=\"Type a question, predicate, ...\"\n                        onChange={(e) => {handleChange(e); validateField('predicate')}}/>\n                    <Field\n                        style={{borderBottom : (errors.inclusion_description && touched.inclusion_description) ? \"solid 1px #d81e1e\" : \"\"}}\n                        name=\"inclusion_description\"\n                        component=\"textarea\"\n                        placeholder=\"Type what the answer should include (optional)\"/>\n                    <Field\n                        style={{borderBottom : (errors.exclusion_description && touched.exclusion_description) ? \"solid 1px #d81e1e\" : \"\"}}\n                        name=\"exclusion_description\"\n                        component=\"textarea\"\n                        placeholder=\"Type what the answer should not include (optional)\"/>\n                    <button type=\"submit\" disabled={isSubmitting || !isValid}>Add Filter</button>\n                </Form>\n            );\n            return output;\n        }}\n        </Formik>\n\n    </div>\n    );\n    return output;\n}\n\nexport default InsertFilterForm;\n","import React, {useContext, useEffect, useRef} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport CloseButton from 'components/svg/closeButton';\nimport {AppContext} from 'components/providers/appProvider';\n\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\n\nconst UpdateFilterForm = function ({project_id, filter, setFilter, yup, setEditing}) {\n\n    const mountRef = useRef(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //validation schema\n    const predicateValidationSchema = yup.object().shape({\n        predicate: yup.string().required('please enter a question'),\n        inclusion_description: yup.string(),\n        exclusion_description: yup.string()\n    });\n\n    return (\n        <Formik\n            initialValues={{predicate: filter.data.predicate, inclusion_description: filter.data.inclusion_description, exclusion_description: filter.data.exclusion_description}}\n            validationSchema={predicateValidationSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                let bodyData = {predicate: values.predicate, \n                                inclusion_description: values.inclusion_description, exclusion_description: values.exclusion_description};\n                \n                //call dao\n                let res = await projectFiltersDao.putFilter(filter.id, {project_id, ...bodyData});\n\n                //empty string is the response from the dao layer in case of success(rember that empty string is a falsy value)\n                if (mountRef.current && res === \"\") {\n                    setFilter({id: filter.id, data: {name: filter.data.name, ...bodyData}});\n                }\n                //error checking\n                //if is other error\n                else if (mountRef.current && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }\n                if(mountRef.current){\n                    setSubmitting(false);\n                    setEditing(false);\n                }\n            }}\n            validateOnBlur={false}\n        >\n        {function ({ errors, touched, isSubmitting, isValid, setErrors, validateField, handleChange }) {\n            let output = \"\";\n            output = (\n            <Form className=\"update-filter-card\">\n                <button type=\"button\" className=\"close-btn\" disabled={isSubmitting} onClick={(e) => {\n                    setEditing(false);\n                }}><CloseButton/></button>\n                <Field\n                    style={{borderBottom : (errors.predicate && touched.predicate) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"predicate\"\n                    type=\"text\" \n                    placeholder=\"Type a question, predicate, ...\"\n                    onChange={(e) => {handleChange(e); validateField('predicate')}}/>\n                <div className=\"textareas-description-wrapper\">\n                    <div>\n                        Positive answer\n                    </div>\n                    <div>\n                        Negative answer\n                    </div>\n                </div>\n                <div className=\"textareas-wrapper\">\n                    <Field\n                        style={{borderBottom : (errors.inclusion_description && touched.inclusion_description) ? \"solid 1px #d81e1e\" : \"\"}}\n                        name=\"inclusion_description\"\n                        component=\"textarea\"\n                        placeholder=\"Type what the answer should include (optional)\"/>\n                    <Field\n                        style={{borderBottom : (errors.exclusion_description && touched.exclusion_description) ? \"solid 1px #d81e1e\" : \"\"}}\n                        name=\"exclusion_description\"\n                        component=\"textarea\"\n                        placeholder=\"Type what the answer should not include (optional)\"/>\n                </div>\n                <button type=\"submit\" disabled={isSubmitting || !isValid}>Update Filter</button>\n            </Form>\n        );\n        return output;\n        }}\n        </Formik>\n    );\n\n};\n\nexport default UpdateFilterForm;","import React, {useState, useEffect} from \"react\";\n\nimport SideOptions from 'components/modules/sideOptions';\nimport UpdateFilterForm from \"./forms/updateFilterForm\";\n\n\n\nconst FilterCard = function ({project_id, filter, callDelete, yup}) {\n\n    //local copy of the filter to manage on the card and update form\n    const [localFilter, setLocalFilter] = useState(filter)\n\n    //bool to disable card while doing delete call\n    const [disabled, setDisabled] = useState(false);\n\n    //bool to display the edit form\n    const [editing, setEditing] = useState(false);\n\n    //side options\n    let sideOptions= [\"delete\", \"update\"];\n\n    //handle for the side options\n    function handleSideOptions(id, name){\n        if(name === \"delete\"){\n            setDisabled(true);\n            callDelete(id);\n        }\n        else if(name === \"update\"){\n            setEditing(true);\n        }\n    }\n\n    let output;\n\n    if(editing){\n        output = (\n            <UpdateFilterForm project_id={project_id} filter={localFilter} setFilter={setLocalFilter} yup={yup} setEditing={setEditing}/>\n        );\n    }\n    else{\n        output = (\n            <div className={(disabled) ? \"disabled\" : \"\"}>\n                <SideOptions options={sideOptions} handler={handleSideOptions} target={localFilter.id} cls=\"card-options\"/>\n                <h3><span className=\"filter-label\">{localFilter.data.name}</span> {localFilter.data.predicate}</h3>\n                <div className=\"answer\"><p><span><span>Include</span><span>:</span></span> {localFilter.data.inclusion_description || <i>empty criterion</i>}</p></div>\n                <div className=\"answer\"><p><span><span>Exclude</span><span>:</span></span> {localFilter.data.exclusion_description || <i>empty criterion</i>}</p></div>\n            </div>\n        );\n    }\n\n    return output;\n\n};\n\nexport default FilterCard;","import React from \"react\";\n\n/**\n * component svg \n */\nconst NoFilters = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"no-filters\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st0-no-filters\" points=\"927.7,149.1 948.9,123.8 915.9,123.8 \t\t\"/>\n            <line className=\"st1-no-filters\" x1=\"806.2\" y1=\"123.8\" x2=\"138.9\" y2=\"123.8\"/>\n            <polyline className=\"st0-no-filters\" points=\"84.1,123.8 51.1,123.8 72.3,149.1 \t\t\"/>\n            <path className=\"st2-no-filters\" d=\"M136.4,225.6l260.1,310.2c11.4,13.6,17.7,30.8,17.7,48.6v271.2c0,37.9,30.8,68.7,68.7,68.7h34.3\n                c37.9,0,68.7-30.8,68.7-68.7V584.3c0-17.8,6.3-35,17.7-48.6l292.1-348.4\"/>\n        </svg>\n    );\n};\n\nexport default NoFilters;","import React, {useEffect, useContext, useRef} from \"react\";\n\nimport FilterCard from \"./filterCard\";\nimport NoFilters from \"components/svg/noFilters\";\n\nimport {AppContext} from 'components/providers/appProvider';\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\nconst PrintFiltersList = function ({filtersList, setFiltersList, project_id}) {\n\n    const mountRef = useRef(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    let yup = require('yup');\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n    \n    //function to delete filter and update the list\n    async function deleteFilter(id){\n        console.log(\"deleting \" + id);\n            \n        //call the dao\n        let res = await projectFiltersDao.deleteFilter(id);\n\n        //error checking\n        //if is other error\n        if (mountRef.current && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);\n        }\n        //if res isn't null\n        else if (mountRef.current && res !== null) {\n\n            appConsumer.setNotificationMessage(\"Successfully deleted\");\n            let newFiltersList = filtersList.filter((filter)=>filter.id !== id);\n            //update project list state\n            setFiltersList(newFiltersList);\n        }\n    }\n\n    let output = \"\";\n    //if list is empty, print a notice message\n    if (filtersList.length === 0) {\n        output = (\n            <div className=\"empty-list-wrapper empty-filters\"> <NoFilters/> \n            <p className=\"empty-list-description\"> There are no filters here, you can add new ones by filling the form to the right</p></div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else{\n        output = (\n            <>\n            {filtersList.map((element) =>\n                <div key={element.id} className=\"generic-card filter-card\">\n                    <FilterCard project_id={project_id} filter={element} filtersList={filtersList} callDelete={deleteFilter} yup={yup}/>\n                </div>\n            )}\n            </>\n        );\n    }\n    return output;\n\n\n};\n\nexport default PrintFiltersList;","import React, {useState, useEffect, useContext} from \"react\";\n\nimport {createQueryData} from 'utils/index';\n\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\nimport InsertFilterForm from \"components/projects_page/filters_tab/forms/insertFilterForm\";\nimport PrintFiltersList from \"./printFiltersList\";\nimport Pagination from \"components/modules/pagination\";\n\nimport LoadIcon from 'components/svg/loadIcon';\n\nimport {AppContext} from 'components/providers/appProvider';\n\nconst queryParams = [\n    {label: \"orderBy\", default: \"date_created\"},\n    {label: \"sort\", default: \"ASC\"},\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n];\n\nconst FiltersTab = function (props) {\n\n    const [filtersList, setFiltersList] = useState([]);\n\n    //filters fetch flag\n    const [filtersFetch, setFiltersFetch] = useState(true);\n\n    //total number of fetched results (useful for the pagination component)\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(props.location.search, queryParams);\n\n    useEffect(() => {\n        let mnt = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setFiltersFetch(true);\n\n            //call the dao\n            let res = await projectFiltersDao.getFiltersList({\"project_id\" : props.project_id, ...queryData});\n\n            console.log(res);\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setFiltersList([]);\n                setTotalResults(0);\n                //show the page\n                setFiltersFetch(false);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n                //update state\n                setFiltersList(res.results);\n                setTotalResults(res.totalResults);\n                //show the page\n                setFiltersFetch(false);\n            }\n\n        };\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count, queryData.sort, queryData.orderBy]); //re-execute when these variables change\n\n    return (\n        <>\n            <InsertFilterForm project_id={props.project_id} start={queryData.start} filtersList={filtersList} setFiltersList={setFiltersList}/>\n            <div className=\"left-side-wrapper filters-wrapper\">\n                {(filtersFetch) ?\n                    (\n                        <LoadIcon class={\"small\"}/>\n                    ) :\n                    (\n                        <>\n                        <PrintFiltersList filtersList={filtersList} setFiltersList={setFiltersList} project_id={props.project_id}/>\n                        <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={props.match.url}/>\n                        </>\n                    )\n                }\n            </div>\n        </>\n    );\n}\n\n\nexport default FiltersTab;\n","import React, {useState, useEffect, useContext} from \"react\";\nimport {withRouter} from \"react-router-dom\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao';\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport Select from 'components/forms_elements/select';\nimport {PrintBacklogPapersList} from 'components/modules/printPapersList';\nimport OrderArrow from 'components/svg/orderArrow';\nimport Pagination from \"components/modules/pagination\";\nimport {createQueryStringFromObject, createQueryData, getIndexOfObjectArrayByKeyAndValue} from 'utils/index';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n//confidence value array\nconst confidenceValues = [\n    {label : \"0.00\", value: 0.0},\n    {label : \"0.10\", value: 0.1},\n    {label : \"0.20\", value: 0.2},\n    {label : \"0.30\", value: 0.3},\n    {label : \"0.40\", value: 0.4},\n    {label : \"0.50\", value: 0.5},\n    {label : \"0.60\", value: 0.6},\n    {label : \"0.70\", value: 0.7},\n    {label : \"0.80\", value: 0.8},\n    {label : \"0.90\", value: 0.9},\n    {label : \"1.00\", value: 1.0},\n];\n\n//will keep valid minimum values\nvar minConfidenceValues = [{label : \"0.00\", value: 0.0}];\n//will keep valid maximum values\nvar maxConfidenceValues = [{label : \"1.00\", value: 1.0}];\n\n//order options\nconst orderByOptions = [\n    { value: 'date_created', label: 'Recently Added' },\n    { value: 'title', label: 'Title' }\n];\n\nconst queryParams = [\n    {label: \"orderBy\", default: \"date_created\"},\n    {label: \"min_confidence\", default: 0.0},\n    {label: \"max_confidence\", default: 1.0},\n    {label: \"sort\", default: \"ASC\"},\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n];\n\n/**\n * the local component that manages the papers in the backlog of a project\n */\nconst BacklogPapers = ({project_id, totalResults, setTotalResults, match, location, history}) => {\n\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //filters\n    const [filtersList, setFiltersList] = useState([]);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(location.search, queryParams);\n\n    const [up, setUp] = useState(queryData.sort);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let  mnt = true;\n        console.log(queryData);\n        if(queryData.orderBy !== \"date_created\" && up !== queryData.sort){\n            setUp(queryData.sort);\n            console.log(\"calling animation\")\n            document.getElementById(\"ani-order-arrow\").beginElement();\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setDisplay(false);\n\n            //max confidence that can be selected must be above the min value\n            maxConfidenceValues = confidenceValues.filter(c => c.value > parseFloat(queryData.min_confidence));\n            //min confidence that can be selected must be below the max value\n            minConfidenceValues = confidenceValues.filter(c => c.value < parseFloat(queryData.max_confidence));\n\n            //call the dao for getting the filters\n            let res = await projectFiltersDao.getFiltersList({\"project_id\" : project_id});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setFiltersList([]);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n                //update state\n                setFiltersList(res.results);\n            }\n\n            //call the dao for getting the papers\n            let resx = await projectPapersDao.getPapersList({project_id, type: \"backlog\", ...queryData});\n\n            console.log(resx);\n            //error checking\n            //if is 404 error\n            if (mnt && resx && resx.message === \"Not Found\") {\n                setPapersList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if is other error\n            else if (mnt && resx && resx.message) {\n                //pass error object to global context\n                appConsumer.setError(resx);\n            }\n            //if res isn't null\n            else if (mnt && (resx !== null)) {\n                //update state\n                setPapersList(resx.results);\n                setTotalResults(resx.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n            console.log(resx.results)\n        }\n\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count, queryData.sort, queryData.orderBy, queryData.min_confidence, queryData.max_confidence]); //re-execute when these variables change\n\n\n    /*\n        START OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //handler for sort selection\n    function handleSelection(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n\n        //if I previously ordered by 'most recent' then I sort the next order by ASC\n        if(queryData.orderBy === \"date_created\"){\n            queryData.sort = \"ASC\";\n        }\n        queryData.orderBy=orderByOptions[index].value;\n\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e){\n        console.log(\"doing my part\")\n        //trigger svg animation\n        if(queryData.sort === \"ASC\"){\n            queryData.sort = \"DESC\";\n        }\n        else{\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    //handler for min confidence selection\n    function handleMinConfidenceSelection(e) {\n        //get index value\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.min_confidence = minConfidenceValues[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for max confidence selection\n    function handleMaxConfidenceSelection(e) {\n        //get index value\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.max_confidence = maxConfidenceValues[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    /*\n        END OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n\n    let output;\n    let resultOutput;\n    //if the page is loading\n    if (display === false) {\n        //print loading image\n        resultOutput = (\n            <>\n                <LoadIcon class={\"small\"}/>\n            </>\n        );\n    }\n    else {\n        //print results\n        resultOutput = (\n            <>\n                <PrintBacklogPapersList papersList={papersList} filtersList={filtersList}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </>\n        );\n    }\n\n    output = (\n        <div className={(papersList.length === 0) ? \"center-side-wrapper\" :\"left-side-wrapper\"}>\n            <div className=\"paper-card-holder large\">\n                <div className=\"order\" style={{\n                        pointerEvents: (!display || papersList.length === 0) ? \"none\" : \"\",\n                        opacity: (papersList.length === 0) ? \"0.0\" : \"1.0\"\n                    }}>\n                    <div className=\"order-flex-item\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)} \n                            handler={handleSelection}\n                            type={\"medium\"}\n                            code={0}\n                            />\n                        <button type=\"button\" onClick={handelOrder} style={{display: (queryData.orderBy === \"date_created\") ? \"none\" : \"\"}}>\n                            <OrderArrow up={up}/>\n                        </button>\n                    </div>\n                    <div className=\"order-flex-item\">\n                        <label>min confidence:</label>\n                        <Select options={minConfidenceValues}\n                                selected={getIndexOfObjectArrayByKeyAndValue(minConfidenceValues, \"value\", parseFloat(queryData.min_confidence))}\n                                handler={handleMinConfidenceSelection}\n                                //optional fields\n                                type={\"mini\"} //displays select menu with a smaller width\n                                code={1} //you can put here a random number in case you have multiple selects on the same page\n                                            //this way you won't trigger the arrow animation for all the selects at the same time\n                                />\n                        <label>max confidence:</label>\n                        <Select options={maxConfidenceValues}\n                                selected={getIndexOfObjectArrayByKeyAndValue(maxConfidenceValues, \"value\", parseFloat(queryData.max_confidence))}\n                                handler={handleMaxConfidenceSelection}\n                                type={\"mini\"}\n                                code={2}/>\n                    </div>\n                </div>\n                {resultOutput}\n            </div>\n        </div>\n    );\n\n    return output;\n\n};\n\n\nexport default withRouter(BacklogPapers);","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * start auto screening\n */\nasync function startAutoScreening(bodyData){\n    let url = config.home + config.auto_screening;\n    return await http.post(url, bodyData)\n}\n\n/**\n * start manual screening\n */\nasync function startManualScreening(bodyData){\n    let url = config.home + config.screenings;\n    return await http.post(url, bodyData)\n}\n\n/**\n * auto screening status\n * @param project_id\n * @return {Number} completion percentage\n */\nasync function getAutoScreeningStatus(project_id) {\n    let url = config.home + config.auto_screening;\n    const res = await http.get(url, project_id);\n    return res;\n\n}\n\n/**\n * dao to get a screening\n * @param screening_id\n * @return {Object} project requested\n */\nasync function getScreening(screening_id) {\n    let url = config.home + config.screenings + \"/\" + screening_id;\n    let res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to get next paper to screen\n * @param screening_id\n * @return {array[objects]}\n */\nasync function getProjectPaperToScreen(screening_id) {\n    let url = config.home + config.screenings + \"/\" + screening_id + \"/next\";\n    let res = await http.get(url);\n    return res;\n\n\n}\n\n/**\n * dao to get next paper to screen in a project\n * @param queryData\n * @return {array[objects]}\n */\nasync function getProjectsToScreen(queryData = \"\") {\n    let url = config.home + config.screenings;\n    let res = await http.get(url, queryData);\n    return res;\n\n\n}\n\n/**\n * sumbit a vote\n */\nasync function submitVote(bodyData){\n    let url = config.home + config.votes;\n    return await http.post(url, bodyData)\n}\n\nconst projectScreeningDao = {\n    startAutoScreening,\n    startManualScreening,\n    getAutoScreeningStatus,\n    getScreening,\n    getProjectPaperToScreen,\n    getProjectsToScreen,\n    submitVote,\n    \"abortRequest\" : http.abortRequest\n}\n\n\n\nexport {projectScreeningDao};\n","import React, {useEffect, useContext, useRef} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport Select from 'components/forms_elements/selectformik';\n\nimport CloseButton from 'components/svg/closeButton';\n\nimport {projectScreeningDao} from 'dao/projectScreening.dao';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n//confidence value array\nconst confidenceValues = [\n    {label : \"0.90\", value: 0.9},\n    {label : \"0.80\", value: 0.8},\n    {label : \"0.70\", value: 0.7},\n    {label : \"0.60\", value: 0.6},\n    {label : \"0.50\", value: 0.5},\n    {label : \"0.40\", value: 0.4},\n    {label : \"0.30\", value: 0.3},\n    {label : \"0.20\", value: 0.2},\n    {label : \"0.10\", value: 0.1},\n];\n\n/**\n * this is the form for starting the auto screening\n */\nfunction AutoScreeningForm(props) {\n\n    const mountRef = useRef(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    return (\n        <>\n        <Formik\n            initialValues={{threshold: 0.9}}\n            onSubmit={async (values, { setSubmitting }) => {\n                let bodyData = {project_id: props.project_id, threshold: values.threshold};\n\n                //call dao\n                let res = await projectScreeningDao.startAutoScreening(bodyData);\n\n                //error checking\n                if(mountRef.current && res.message){\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }else \n                if(mountRef.current){\n                    setSubmitting(false);\n                    props.setVisibility(!props.visibility);\n                    props.setAutoScreeningFlag(true);\n                }\n            }}\n            validateOnBlur={false}\n        >\n        {function ({ errors, touched, isSubmitting, isValid, setErrors, validateField, handleChange }) {\n            let output = \"\";\n            output = (<Form className=\"modal floating-form start-auto-screening\" style={{visibility: (!props.visibility) ? 'hidden' : '' }}>\n                <button type=\"button\" className=\"close-btn\" onClick={(e) => {\n                    props.setVisibility(!props.visibility);\n                }}><CloseButton/></button>\n\n                <h2>Start automated screening?</h2>\n\n                <p>\n                    The process will analyze the papers in the backlog and will\n                    assing a confidence score to each one, this may take a while.\n                    You can select a confidence threshold and, as the process is\n                    proceeding, all papers with a resulting confidence level above\n                    the threshold will be automatically set as screened (in). The\n                    remaining ones will be here in the backlog.\n                </p>\n\n                <Field\n                    name=\"threshold\"\n                    render={({ field, form }) => (\n                            <Select options={confidenceValues} {...field} form={form} type={\"mini\"}/>\n                    )}\n                />\n\n                <button className=\"start-btn\" type=\"submit\">Start Auto-screening</button>\n            </Form>\n            );\n            return output;\n        }}\n        </Formik>\n\n       \n        </>\n    );\n\n\n}\n\n\nexport default AutoScreeningForm;","import React, {useState, useEffect} from \"react\";\n\nimport RadioTick from 'components/svg/radioTick';\n\nconst RadioBox = function ({ label, name, val, isChecked, form, className}) {\n\n    let output = \"\";\n    const [tick, setTick] = useState(<></>);\n    useEffect(() => {\n        if(isChecked){\n            setTick(<RadioTick/>);\n        }else{\n            setTick(<></>)\n        }\n    }, [isChecked])\n\n    function radioHandler(){\n        form.setFieldValue(name, val);\n    }\n\n    output= (\n        <label className={(className) ? \"radiobox-container \" + className : \"radiobox-container\"}>\n        <input type=\"radio\" value={val} name={name} checked={isChecked} onChange={radioHandler}/>\n        <span className=\"radiomark\">{tick}</span>\n        <span>{label}</span>\n        </label>\n    );\n    return output;\n}\n\nexport default RadioBox;","import React from \"react\";\n\nimport Image from 'components/modules/image';\nimport SelectTick from 'components/svg/selectTick';\n\n/**\n * userCheckBox for Formik\n */\nconst UserCheckbox = ({ user, form, name }) => {\n\n    function selectHandler() {\n        if(form.values.screeners.includes(user.id)){\n            form.setFieldValue(name, form.values.screeners.filter((id) => id !== user.id));\n        }else{\n            form.setFieldValue(name, [...(form.values.screeners), user.id]);\n        }\n    }\n\n    var output = (\n        <button type=\"button\" className=\"user-data\"\n            onClick={selectHandler}\n        >   \n        <div className=\"user-data-image-wrapper\">\n            <div className=\"img-wrapper-cover\" style={{opacity: (form.values.screeners.includes(user.id)) ? \"0.9\" : \"0.0\"}}>\n                <SelectTick color={\"white\"}/>\n            </div>\n            <Image className=\"user-data-image\" alt={\"profile image\"} src={user.data.picture || user.data.image}/>\n        </div>\n        <p className=\"user-data-names\">{user.data.name} {user.data.surname}</p>\n        </button>\n    );\n    return output;\n}\n\nexport default UserCheckbox;","import React, {useEffect, useContext, useRef, useState} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectsDao} from 'dao/projects.dao';\nimport {projectScreeningDao} from 'dao/projectScreening.dao';\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\nimport RadioBox from \"components/forms_elements/radioboxFormik\";\nimport UserCheckbox from 'components/projects_page/screening_tab/backlog_subtab/forms/userCheckboxFormik';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport CloseButton from 'components/svg/closeButton';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n/**\n * this is the form for starting the manual screening\n */\nfunction ManualScreeningForm(props) {\n\n    const mountRef = useRef(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //collaborators fetch state\n    const [collaboratorsFetch, setCollaboratorsFetch] = useState(true);\n\n    //collaborators list\n    const [collaborators, setCollaborators] = useState([]);\n\n    //bool for multi predicate option availability\n    const [isMpAvailable, setIsMpAvailable] = useState(false);\n\n    useEffect(() => {\n        mountRef.current = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //call the dao for getting collaborators\n            let res = await projectsDao.getProjectCollaborators(props.project_id);\n            console.log(res);\n            //error checking\n            //if the component is still mounted and there is some other errors\n            if (mountRef.current && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and res isn't null\n            else if (mountRef.current && res) {\n                //setCollaborators(res);\n                setCollaborators(res);\n\n                //call the dao for getting the filters(this way I know if the user can start multi predicate screening)\n                let resx = await projectFiltersDao.getFiltersList({\"project_id\" : props.project_id});\n                //error checking\n                //if the component is still mounted and  is 404 error\n                if (mountRef.current && resx && resx.message === \"Not Found\") {\n                    setIsMpAvailable(false);\n                }\n                //if the component is still mounted and  there are some other errors\n                else if (mountRef.current && resx && resx.message) {\n                    //pass error object to global context\n                    appConsumer.setError(resx);\n                }\n                //if the component is still mounted and  res isn't null\n                else if (mountRef.current && resx) {\n                    //update state\n                    setIsMpAvailable(true);\n                }\n                //show the list\n                setCollaboratorsFetch(false);\n            }\n        }\n        setTimeout(() => {\n            fetchData();\n        }, 3000);\n        \n\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    return (\n        <>\n        <Formik\n            initialValues={{screeners: [], screening_mode: \"single-predicate\"}}\n            onSubmit={async (values, { setSubmitting }) => {\n                let bodyData = {project_id: props.project_id, array_user_ids: values.screeners, manual_screening_type: values.screening_mode};\n                console.log(bodyData);\n                if(values.screeners.length > 0){\n                    let res = await projectScreeningDao.startManualScreening(bodyData);\n                    //let res = 1;\n                    //error checking\n                    if(mountRef.current && res.message){\n                        //pass error object to global context\n                        appConsumer.setError(res);\n                    }else if(mountRef.current){\n                        setSubmitting(false);\n                        props.setVisibility(!props.visibility);\n                        props.setManualStarted(true);\n                    }\n                }\n\n            }}\n            validateOnBlur={false}\n        >\n        {function ({ errors, touched, isSubmitting, isValid, setErrors, validateField, handleChange, values }) {\n            let output = \"\";\n            let result = \"\";\n            if(collaboratorsFetch){\n                result = <LoadIcon class=\"small\" />;\n            }else{\n                result = (\n                    <>\n                    <p className=\"tip\">Is a good practice to select at least two people for screening</p>\n                    <div className=\"users-list\">\n                        <Field\n                            name=\"screeners\"\n                            render={({ field, form }) => (\n                                <>\n                                    {collaborators.map(function (user) {\n                                        if(user.data.name !== \"\"){\n                                            return (\n                                                <div key={user.id}>\n                                                    <UserCheckbox user={user} {...field} form={form}/>\n                                                </div>\n                                            );\n                                        }\n                                    })}\n                                </>\n                            )}\n                        />\n                    </div>\n                    <div className=\"screening-type\">\n                        <label>Screening mode : </label>\n                        <Field\n                            name=\"screening_mode\"\n                            render={({ field, form }) => (\n                                <>\n                                    <RadioBox label={\"single-predicate\"} {...field} val={\"single-predicate\"} form={form}\n                                            isChecked={(values.screening_mode === \"single-predicate\")} />\n                                    <RadioBox className={(isMpAvailable) ? \"\" : \"disabled\"} label={\"multi-predicate\"} {...field} val={\"multi-predicate\"} form={form}\n                                            isChecked={(values.screening_mode === \"multi-predicate\")}/>\n                                </>\n                            )}\n                        />\n                    </div>\n                    </>\n                );\n            }\n            output = (<Form className=\"modal floating-form start-manual-screening\" style={{visibility: (!props.visibility) ? 'hidden' : '' }}>\n                <button type=\"button\" className=\"close-btn\" onClick={(e) => {\n                    props.setVisibility(!props.visibility);\n                }}><CloseButton/></button>\n\n                <h2>Select screeners</h2>\n                {result}\n                {/*\n                <Field\n                    name=\"threshold\"\n                    render={({ field, form }) => (\n                            <Select options={confidenceValues} {...field} form={form} type={\"mini\"}/>\n                    )}\n                />\n                */}\n                <button className=\"start-btn\" type=\"submit\" style={{visibility: (collaboratorsFetch) ? 'hidden' : '' }} disabled={(values.screeners.length === 0)}>\n                    Start Manual-screening\n                </button>\n            </Form>\n            );\n            return output;\n        }}\n        </Formik>\n\n        </>\n    );\n\n}\n\n\nexport default ManualScreeningForm;","import React from \"react\";\n\n/**\n * component svg\n */\nconst ManualScreeningIcon = function (props) {\n\n    return (\n        <svg id=\"manual-screening\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <path className=\"st0-msi\" d=\"M327.9,827.9c0,0.1,0.1,0.3,0.1,0.4L97.5,911.8c-5.7,2.1-11.3-3.5-9.2-9.2l83.6-230.6c0.1,0,0.2,0.1,0.4,0.1\n                C250.7,698.5,301.7,749.5,327.9,827.9z\"/>\n            <path className=\"st0-msi\" d=\"M824.8,341.6L366.1,800.3c-4.2,4.2-11.4,2.8-13.6-2.8c-28.8-70.7-79.2-121-150-149.9c-5.5-2.3-7-9.4-2.8-13.6l458.7-458.7\n                c4.8-4.8,12-6.3,18.5-4c0,0,0.1,0,0.1,0C753.6,197,803.2,246.6,828.8,323c0,0,0,0.1,0,0.1C831.1,329.6,829.6,336.8,824.8,341.6z\"/>\n            <path className=\"st0-msi\" d=\"M882.5,283.9l-13.6,13.6c-29.9-80.4-85.8-136.3-166.4-166.4l13.6-13.6c45.6-45.6,119.7-46.2,165.5-0.7\n                c0.5,0.5,1.1,1.1,1.6,1.6C928.7,164.4,928.1,238.3,882.5,283.9z\"/>\n        </svg>\n    );\n};\n\nexport default ManualScreeningIcon;\n","import React from \"react\";\n\n/**\n * component svg\n */\nconst AutoScreeningIcon = function (props) {\n\n    return (\n        <svg id=\"auto-screening\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <path className=\"st0-asi\" d=\"M578.7,404.1c-17.9,11-35.8,22.3-53.5,33.7c-28.2-27.2-61.5-47.2-97-59.4c2.1-20.9,4-42.1,5.7-63\n                c-26.1-7.6-52.9-11.8-79.9-12.6c-4.8,20.6-9.5,41.1-13.9,61.7c-37.7,0.6-75.5,9.3-110.8,26.6c-13.3-16.4-26.8-32.3-40.5-48.5\n                c-12,6.5-23.4,13.7-34.4,21.7c-11,8-21.5,16.7-31.2,25.9c11,17.9,22.3,35.8,33.7,53.5c-27.2,28.2-47.2,61.5-59.4,97\n                c-20.9-2.1-42.1-4-63-5.7c-7.6,26.1-11.8,52.9-12.6,79.9c20.6,4.8,41.1,9.5,61.7,13.9c0.6,37.7,9.3,75.5,26.6,110.8\n                c-16.4,13.3-32.3,26.8-48.5,40.5c6.5,12,13.7,23.4,21.7,34.4c8.2,11,16.7,21.5,25.9,31.2c17.9-11,35.8-22.3,53.5-33.7\n                c28.2,27.2,61.5,47.2,97,59.4c-2.1,20.9-4,42.1-5.7,63c26.1,7.6,52.9,11.8,79.9,12.6c4.8-20.6,9.5-41.1,13.9-61.7\n                c37.7-0.6,75.5-9.3,110.8-26.6c13.3,16.4,26.8,32.3,40.5,48.5c11.8-6.5,23-13.7,34.3-21.9c11-8.2,21.5-16.7,31.2-25.9\n                c-11-17.9-22.3-35.8-33.7-53.5c27.2-28.2,47.2-61.5,59.4-97c20.9,2.1,42.1,4,63,5.7c7.6-26.1,11.8-52.9,12.6-79.9\n                c-20.6-4.8-41.1-9.5-61.7-13.9c-0.6-37.7-9.3-75.5-26.6-110.8c16.4-13.3,32.3-26.8,48.5-40.5c-6.5-11.8-13.7-23-21.9-34.3\n                C596.4,424.3,587.8,413.8,578.7,404.1z M487.3,608.7c2.9,26.1-1.1,52.3-12,76.1c-4.8,10.7-11,20.7-18.5,30.1\n                c-8,10.1-17.3,19-28.2,26.8c-10.8,7.8-22.3,14.1-34.3,18.5c-11.2,4.2-22.6,6.9-34.3,8.2c-26.1,2.9-52.3-1.1-76.1-12\n                c-10.7-4.8-20.7-11-30.1-18.5c-10.1-8-19-17.3-26.8-28.2c-7.8-10.8-14.1-22.3-18.5-34.3c-4.2-11.2-6.9-22.6-8.2-34.3\n                c-2.9-26.1,1.1-52.3,12-76.1c4.8-10.7,11-20.7,18.5-30.1c8-10.1,17.3-19,28.2-26.8c10.8-7.8,22.3-14.1,34.3-18.5\n                c11.2-4.2,22.6-6.9,34.3-8.2c26.1-2.9,52.3,1.1,76.1,12c10.7,4.8,20.7,11,30.1,18.5c10.1,8,19,17.3,26.8,28.2\n                c7.8,10.8,14.1,22.3,18.5,34.3C483.3,585.4,486.2,597,487.3,608.7z\"/>\n            <path className=\"st1-asi\" d=\"M976.6,328.2c-12.7-6.7-25.7-13.3-38.6-19.8c6.3-26.1,6.3-52.7,1.1-78c13.1-6.1,26.1-12.4,39-18.6\n                c-4.6-17.9-11.6-35.4-20.6-51.6c-13.7,4.4-27.6,8.8-41.3,13.3c-13.5-22.1-31.8-41.3-54.4-55.9c4.9-13.5,9.7-27.2,14.5-40.9\n                c-8-4.8-16.2-8.9-24.9-12.7c-8.6-3.8-17.3-6.9-26.3-9.3c-6.7,12.7-13.3,25.7-19.8,38.6c-26.1-6.3-52.7-6.3-78-1.1\n                c-6.1-13.1-12.4-26.1-18.6-39c-17.9,4.6-35.4,11.6-51.6,20.6c4.4,13.7,8.8,27.6,13.3,41.3c-22.1,13.5-41.3,31.8-55.9,54.4\n                c-13.5-4.9-27.2-9.7-40.9-14.5c-4.8,8-8.9,16.2-12.7,24.9c-3.8,8.8-6.9,17.3-9.3,26.3c12.7,6.7,25.7,13.3,38.6,19.8\n                c-6.3,26.1-6.3,52.7-1.1,78c-13.1,6.1-26.1,12.4-39,18.6c4.6,17.9,11.6,35.4,20.6,51.6c13.7-4.4,27.6-8.8,41.3-13.3\n                c13.5,22.1,31.8,41.3,54.4,55.9c-4.9,13.5-9.7,27.2-14.5,40.9c8,4.6,16.2,8.8,24.7,12.6s17.3,6.9,26.3,9.3\n                c6.7-12.7,13.3-25.7,19.8-38.6c26.1,6.3,52.7,6.3,78,1.1c6.1,13.1,12.4,26.1,18.6,39c17.9-4.6,35.4-11.6,51.6-20.6\n                c-4.4-13.7-8.8-27.6-13.3-41.3c22.1-13.5,41.3-31.8,55.9-54.4c13.5,4.9,27.2,9.7,40.9,14.5c4.6-8,8.8-16.2,12.6-24.7\n                C970.9,345.7,974.1,336.9,976.6,328.2z M824.2,345.9c-14.3,10.8-31.2,17.7-49.1,19.6c-8,1-16,0.8-24.2-0.4\n                c-8.8-1.1-17.3-3.6-25.7-7.2c-8.4-3.6-16-8.2-22.8-13.7c-6.3-5.1-12-11-16.9-17.3c-10.8-14.3-17.7-31.2-19.6-49.1\n                c-1-8-0.8-16,0.4-24.2c1.1-8.8,3.6-17.3,7.2-25.7c3.6-8.4,8.2-16,13.7-22.8c5.1-6.3,11-12,17.3-16.9c14.3-10.8,31.2-17.7,49.1-19.6\n                c8-1,16-0.8,24.2,0.4c8.8,1.1,17.3,3.6,25.7,7.2s16,8.2,22.8,13.7c6.3,5.1,12,11,16.9,17.3c10.8,14.3,17.7,31.2,19.6,49.1\n                c1,8,0.8,16-0.4,24.2c-1.1,8.8-3.6,17.3-7.2,25.7c-3.6,8.4-8.2,16-13.7,22.8C836.3,335.4,830.6,340.9,824.2,345.9z\"/>\n        </svg>\n    );\n};\n\nexport default AutoScreeningIcon;\n","import React from \"react\";\n\n/**\n * component svg\n */\nconst CrowdScreeningIcon = function (props) {\n\n    return (\n        <svg id=\"undecided-answer\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <g>\n                <circle className=\"st0-csi\" cx=\"253.1\" cy=\"277\" r=\"131.8\"/>\n                <path className=\"st0-csi\" d=\"M474.8,671.4c21.5,0,38.2-19.2,34.8-40.7c-16.4-106.8-97.2-218.1-250.1-218.1S25.8,523.9,9.4,630.7\n                    c-3.2,21.3,13.2,40.7,34.8,40.7H474.8z\"/>\n            </g>\n            <g>\n                <circle className=\"st0-csi\" cx=\"734.1\" cy=\"329\" r=\"131.8\"/>\n                <path className=\"st0-csi\" d=\"M955.8,723.2c21.5,0,38.2-19.2,34.8-40.7c-16.4-106.8-97.2-218.1-250.1-218.1S506.8,575.7,490.4,682.5\n                    c-3.2,21.3,13.2,40.7,34.8,40.7H955.8z\"/>\n            </g>\n            <g>\n                <circle className=\"st0-csi\" cx=\"449.2\" cy=\"460.3\" r=\"131.8\"/>\n                <path className=\"st0-csi\" d=\"M658.2,854.8c21.5,0,38.2-19.2,34.8-40.7c-16.4-106.8-97.4-218.1-250.1-218.1S209.2,707.2,192.8,814\n                    c-3.2,21.3,13.2,40.7,34.8,40.7L658.2,854.8L658.2,854.8z\"/>\n            </g>\n        </svg>\n    );\n    \n};\n\nexport default CrowdScreeningIcon;\n","import React, {useState, useEffect, useRef} from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport PapersList from 'components/projects_page/papers_tab/papersList';\nimport ProjectDescription from 'components/projects_page/papers_tab/projectDescription';\nimport {join} from 'utils';\n\nimport BacklogPapers from 'components/projects_page/screening_tab/backlog_subtab/backlogPapers';\n\nimport AutoScreeningForm from 'components/projects_page/screening_tab/backlog_subtab/forms/autoScreeningForm';\nimport ManualScreeningForm from 'components/projects_page/screening_tab/backlog_subtab/forms/manualScreeningForm';\nimport Cover from \"components/modules/cover\";\nimport ManualScreeningIcon from \"components/svg/manualScreningIcon\";\nimport AutoScreeningIcon from \"components/svg/autoScreeningIcon\";\nimport CrowdScreeningIcon from \"components/svg/crowdScreeningIcon\";\nimport { projectPapersDao } from \"dao/projectPapers.dao\";\nimport { projectScreeningDao } from \"dao/projectScreening.dao\";\n\n\n/**\n * this is the screening sub-tab\n */\nconst ScreeningBacklog = function ({project_id, project}) {\n\n    //bool to control visualization of form\n    const [displayManualForm, setDisplayManualForm] = useState(false);\n\n    //bool to control visualization of form\n    const [displayAutoForm, setDisplayAutoForm] = useState(false);\n\n    //autoScreening flag\n    const [autoScreeningFlag, setAutoScreeningFlag] = useState(false);\n\n    //autoScreeningStatus\n    const [autoScreeningStatus, setAutoScreeningStatus] = useState(3016);\n\n    //number of papers hooks, used to check if there are papers\n    const [totalResults, setTotalResults] = useState(0);\n\n    //flag to check if manual screening was started successfully(in order to disable the button afterwards)\n    const [manualStarted, setManualStarted] = useState(false);\n\n    useEffect(() => {\n        let mnt = true;\n        \n        async function checkStatus() {\n            let res = await projectScreeningDao.getAutoScreeningStatus({project_id});\n            if(res !== 0 && res !== null){\n                setAutoScreeningFlag(true);\n            }\n        }\n\n        //this is the first check we do when the component mounts\n        checkStatus();\n\n        return () => {\n            mnt = false;\n        };\n    },[]);\n\n    useEffect(() => {\n        let mnt = true;\n        let poll = undefined;\n\n        if(autoScreeningFlag){\n            clearInterval(poll);\n            poll = setInterval(async () => {\n                let resx = await projectScreeningDao.getAutoScreeningStatus({project_id});\n                setAutoScreeningStatus(3016 - 3016*resx/100)\n                if(resx === 100 || resx === null){\n                    setAutoScreeningFlag(false);\n                }\n\n            }, 1000);\n        }\n\n        return () => {\n            console.log(\"clearing polling\");\n            mnt = false;\n            clearInterval(poll);\n        };\n    },[autoScreeningFlag]);\n\n    let screeningStrategy = <></>;\n    if(totalResults !== 0){\n        screeningStrategy = (\n            <div className=\"bottom-right-screening-strategy-box\">\n                <h3>\n                    Screening strategy\n                </h3>\n                <div className=\"screening-strategy-buttons\">\n                    <div className=\"screening-strategy-btn-holder\">\n                        <button className=\"screening-strategy-btn manual\" type=\"button\"\n                            disabled = {project.data.manual_screening_type || manualStarted}\n                            onClick={() => {setDisplayManualForm(true)}}\n                        > \n                        <ManualScreeningIcon/>\n                        </button>\n                        <div className=\"strategy-tooltip\">\n                            manual\n                        </div>\n                    </div>\n                    <div className=\"screening-strategy-btn-holder\">\n                        <svg id=\"circle-progress\"\n                            version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n                            viewBox=\"0 0 1000 1000\">\n                            <ellipse fill=\"none\" stroke=\"#0b8a42\" strokeWidth=\"30\" cx=\"500\" cy=\"500\" rx=\"480\" ry=\"480\"\n                                style={{strokeDasharray: \"3016\", strokeDashoffset: autoScreeningStatus, transition: \"all 0.2s\"}}\n                            />\n                        </svg>\n                        <button className=\"screening-strategy-btn auto\" type=\"button\"\n                            disabled={autoScreeningStatus !== 3016}\n                            onClick={() => {setDisplayAutoForm(true)}}\n                        > \n                        <AutoScreeningIcon/>\n                        </button>\n                        <div className=\"strategy-tooltip\">\n                            automatic\n                        </div>\n                    </div>\n                    <div className=\"screening-strategy-btn-holder\">\n                        <button className=\"screening-strategy-btn crowdsource\" type=\"button\"> \n                        <CrowdScreeningIcon/>\n                        </button>\n                        <div className=\"strategy-tooltip\">\n                            crowdsourced\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return (\n        <>\n\n            <Cover cls={displayManualForm ? \"full-screen\" : \"\"} handler={setDisplayManualForm}/>\n            <ManualScreeningForm visibility={displayManualForm} setManualStarted={setManualStarted}setVisibility={setDisplayManualForm} project_id={project_id}/>\n            \n            <Cover cls={displayAutoForm ? \"full-screen\" : \"\"} handler={setDisplayAutoForm}/>\n            <AutoScreeningForm visibility={displayAutoForm} setVisibility={setDisplayAutoForm} project_id={project_id} setAutoScreeningFlag={setAutoScreeningFlag}/>\n\n            <BacklogPapers project_id={project_id}\n                totalResults={totalResults} setTotalResults={setTotalResults} //I pass this hook so I will know how much papers are there\n            />\n            {screeningStrategy}\n        </>\n    );\n}\n\nexport default ScreeningBacklog;","import React, {useState, useEffect, useContext} from \"react\";\nimport {withRouter, Link} from \"react-router-dom\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport Select from 'components/forms_elements/select';\nimport {PrintManuallyScreenedPapersList} from 'components/modules/printPapersList';\nimport OrderArrow from 'components/svg/orderArrow';\nimport Pagination from \"components/modules/pagination\";\nimport {createQueryStringFromObject, createQueryData, getIndexOfObjectArrayByKeyAndValue} from 'utils/index';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n//order options\nconst orderByOptions = [\n    { value: 'date_created', label: 'Most Recent' },\n    { value: 'title', label: 'Title' }\n];\n\nconst queryParams = [\n    {label: \"orderBy\", default: \"date_created\"},\n    {label: \"sort\", default: \"ASC\"},\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n];\n\n/**\n * the local component that manages the papers which are partially screened in manual mode\n */\nconst ManualResults = ({project_id, match, location, history}) => {\n\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(location.search, queryParams);\n\n    const [up, setUp] = useState(queryData.sort);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let  mnt = true;\n        console.log(queryData);\n        if(queryData.orderBy !== \"date_created\" && up !== queryData.sort){\n            setUp(queryData.sort);\n            console.log(\"calling animation\")\n            document.getElementById(\"ani-order-arrow\").beginElement();\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setDisplay(false);\n\n            //call the dao for getting the papers\n            let resx = await projectPapersDao.getPapersList({project_id, type:\"manual\", ...queryData});\n\n            //error checking\n            //if is 404 error\n            if (mnt && resx && resx.message === \"Not Found\") {\n                setPapersList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if is other error\n            else if (mnt && resx && resx.message) {\n                //pass error object to global context\n                appConsumer.setError(resx);\n            }\n            //if res isn't null\n            else if (mnt && (resx !== null)) {\n                //update state\n                setPapersList(resx.results);\n                setTotalResults(resx.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n        }\n\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count, queryData.sort, queryData.orderBy]); //re-execute when these variables change\n\n\n    /*\n        START OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //handler for sort selection\n    function handleSelection(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n\n        //if I previously ordered by 'most recent' then I sort the next order by ASC\n        if(queryData.orderBy === \"date_created\"){\n            queryData.sort = \"ASC\";\n        }\n        queryData.orderBy=orderByOptions[index].value;\n\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e){\n        console.log(\"doing my part\")\n        //trigger svg animation\n        if(queryData.sort === \"ASC\"){\n            queryData.sort = \"DESC\";\n        }\n        else{\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    /*\n        END OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print loading image\n        output = (\n            <>\n                <LoadIcon class={\"small\"}/>\n            </>\n        );\n    }\n    else {\n        //print results\n        output = (\n            <>\n                <PrintManuallyScreenedPapersList papersList={papersList}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </>\n        );\n    }\n\n    output = (\n        <>\n            <div className=\"right-side-wrapper manual\">\n                <div className=\"top-right-description\">\n                    <p className=\"manual-description\"> \n                    Here you can see the status of the manual\n                    screening process. Below each paper you can see the votes related to it<br/>\n                    <span className=\"color-code red-color\">RED </span> voted no<br/>\n                    <span className=\"color-code green-color\">GREEN </span> voted yes<br/>\n                    <span className=\"color-code blue-color\">BLUE </span> voted undecided<br/>\n                    </p>\n                    <Link to={\"/screenings/\"+project_id+\"/\"}>(start your manual screening session)</Link>\n                </div>\n            </div>\n            <div className=\"left-side-wrapper\">\n                <div className=\"paper-card-holder large\">\n                    <div className=\"order\"\n                    style={{\n                        pointerEvents: (!display || papersList.length === 0) ? \"none\" : \"\",\n                        opacity: (papersList.length === 0) ? \"0.0\" : \"1.0\"\n                    }}\n                    >\n                        <div className=\"order-flex-item\">\n                            <label>sort by:</label>\n                            <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)} \n                                handler={handleSelection}\n                                type={\"medium\"}\n                                code={0}\n                                />\n                            <button type=\"button\" onClick={handelOrder} style={{display: (queryData.orderBy === \"date_created\") ? \"none\" : \"\"}}>\n                                <OrderArrow up={up}/>\n                            </button>\n                        </div>\n                    </div>\n                    {output}\n                </div>\n            </div>\n        </>\n    );\n\n    return output;\n\n};\n\n\nexport default withRouter(ManualResults);","import React, {useState, useEffect, useContext} from \"react\";\nimport {withRouter} from \"react-router-dom\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport Select from 'components/forms_elements/select';\nimport {PrintScreenedPapersList} from 'components/modules/printPapersList';\nimport OrderArrow from 'components/svg/orderArrow';\nimport Pagination from \"components/modules/pagination\";\nimport {createQueryStringFromObject, createQueryData, getIndexOfObjectArrayByKeyAndValue} from 'utils/index';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n//order options\nconst orderByOptions = [\n    { value: 'date_created', label: 'Recently Added' },\n    { value: 'title', label: 'Title' }\n];\n\nconst queryParams = [\n    {label: \"orderBy\", default: \"date_created\"},\n    {label: \"sort\", default: \"ASC\"},\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n];\n\n/**\n * the local component that manages the papers in the backlog of a project\n */\nconst ScreenedPapers = ({project_id, match, location, history}) => {\n\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //number of total papers in the project\n    const [totalPapers, setTotalPapers] = useState(undefined);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(location.search, queryParams);\n\n    const [up, setUp] = useState(queryData.sort);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let  mnt = true;\n        console.log(queryData);\n        if(queryData.orderBy !== \"date_created\" && up !== queryData.sort){\n            setUp(queryData.sort);\n            console.log(\"calling animation\")\n            document.getElementById(\"ani-order-arrow\").beginElement();\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setDisplay(false);\n\n            //call the dao for getting the papers\n            let resx = await projectPapersDao.getPapersList({project_id, type: \"screened\", ...queryData});\n            console.log(resx);\n\n            console.log(resx);\n            //error checking\n            //if is 404 error\n            if (mnt && resx && resx.message === \"Not Found\") {\n                setPapersList([]);\n                setTotalResults(0);\n                setTotalPapers(undefined);\n                //show the page\n                setDisplay(true);\n            }\n            //if is other error\n            else if (mnt && resx && resx.message) {\n                //pass error object to global context\n                appConsumer.setError(resx);\n            }\n            //if res isn't null\n            else if (mnt && (resx !== null)) {\n                //update state\n                setPapersList(resx.results);\n                setTotalResults(resx.totalResults);\n                setTotalPapers(resx.totalPapers);\n                //show the page\n                setDisplay(true);\n            }\n        }\n\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count, queryData.sort, queryData.orderBy]); //re-execute when these variables change\n\n\n    /*\n        START OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //handler for sort selection\n    function handleSelection(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n\n        //if I previously ordered by 'most recent' then I sort the next order by ASC\n        if(queryData.orderBy === \"date_created\"){\n            queryData.sort = \"ASC\";\n        }\n        queryData.orderBy=orderByOptions[index].value;\n\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e){\n        console.log(\"doing my part\")\n        //trigger svg animation\n        if(queryData.sort === \"ASC\"){\n            queryData.sort = \"DESC\";\n        }\n        else{\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    /*\n        END OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print loading image\n        output = (\n            <>\n                <LoadIcon class={\"small\"}/>\n            </>\n        );\n    }\n    else {\n        //print results\n        output = (\n            <>\n                <PrintScreenedPapersList papersList={papersList}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </>\n        );\n    }\n\n    output = (\n        <>\n            <div className=\"right-side-wrapper status\">\n                <h2 className=\"screened-status\"><span className=\"partial\">{totalResults} </span> \n                    {(totalPapers) ? \n                        <>out of <span className=\"total\">{totalPapers}</span> </>\n                       :\n                        <></>\n                    }\n                papers were screened</h2>\n            </div>\n            <div className=\"left-side-wrapper\">\n                <div className=\"paper-card-holder large\">\n                    <div className=\"order\"\n                        style={{\n                            pointerEvents: (!display || papersList.length === 0) ? \"none\" : \"\",\n                            opacity: (papersList.length === 0) ? \"0.0\" : \"1.0\"\n                        }}\n                        >\n                        <div className=\"order-flex-item\">\n                            <label>sort by:</label>\n                            <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)} \n                                handler={handleSelection}\n                                type={\"medium\"}\n                                code={0}\n                                />\n                            <button type=\"button\" onClick={handelOrder} style={{display: (queryData.orderBy === \"date_created\") ? \"none\" : \"\"}}>\n                                <OrderArrow up={up}/>\n                            </button>\n                        </div>\n                    </div>\n                    {output}\n                </div>\n            </div>\n        </>\n    );\n\n    return output;\n\n};\n\n\nexport default withRouter(ScreenedPapers);","import React from \"react\";\nimport {Route, Link, Switch, withRouter, Redirect} from 'react-router-dom';\n\nimport {join} from 'utils';\n\nimport PageNotFound from \"components/modules/pageNotFound\";\nimport ScreeningBacklog from 'components/projects_page/screening_tab/backlog_subtab/screeningBacklog';\nimport ManualResults from 'components/projects_page/screening_tab/manual_subtab/manualResults';\nimport ScreenedPapers from 'components/projects_page/screening_tab/screened_subtab/screenedPapers';\n\n\n/**\n *this component will manage the screening sub tabs\n */\nconst ScreeningTab = ({project_id, project, match, notFound, setNotFound}) => {\n\n    let output;\n\n    output = (\n        <>\n            <ScreeningPageNavigation notFound={notFound} match={match}/>\n            <Switch>\n                    <Route exact path={match.url} render={function(props){\n                        return (<Redirect to={join(match.url, '/backlog')} />);\n                    }}/>\n                    <Route exact path={match.url + \"/backlog\"} render={function(props){\n                        return (<ScreeningBacklog project_id={project_id} project={project}/>);\n                    }}/>\n                    <Route exact path={match.url + \"/manual\"} render={function(props){\n                        return (<ManualResults project_id={project_id}/>);\n                    }}/>\n\n                    <Route exact path={match.url + \"/crowdsource\"} render={function(props){\n                        return (<p>crowdsource</p>);\n                    }}/>\n\n                    <Route path={match.url + \"/screened\"} render={function(props){\n                        return (<ScreenedPapers project_id={project_id}/>);\n                    }}/>\n\n                    <Route render={(props) => {setNotFound(true);return <PageNotFound/>}}/>\n                </Switch>\n\n        </>\n    );\n\n    return output;\n};\n\n/**\n * this is the local component to print the navigation tabs of the screening page\n */\nconst ScreeningPageNavigation = function ({notFound, match}) {\n    //hash  -> #/projects/6/search/ || #/projects/6/search/\n    const lc = window.location.hash.split(\"?\")[0];\n    var slider = \"hide\";\n    switch (true) {\n        case /#\\/projects\\/\\d+\\/screening\\/backlog\\/?/.test(lc): //papers tab\n            slider = \"4px\";\n            break;\n\n        case /#\\/projects\\/\\d+\\/screening\\/manual\\/?/.test(lc): //filters tab\n            slider = \"28px\";\n            break;\n\n        case /#\\/projects\\/\\d+\\/screening\\/crowdsource\\/?/.test(lc): //search tab\n            slider = \"52px\";\n            break;\n\n        case /#\\/projects\\/\\d+\\/screening\\/screened\\/?/.test(lc): //screening tab\n            slider = \"76px\";\n            break;\n\n        default:\n            break;\n    }\n    let output = (\n        <>\n            <div className=\"screening-nav-link-wrapper\" style={{display: (notFound || slider === \"hide\") ? \"none\" : \"\"}}>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/backlog\")} style={{paddingRight: (slider === \"4px\") ? \"0px\" : \"\", color: (slider === \"4px\") ? \"black\" : \"\"}}>backlog</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/manual\")} style={{paddingRight: (slider === \"28px\") ? \"0px\" : \"\", color: (slider === \"28px\") ? \"black\" : \"\"}}>manual</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/crowdsource\")} style={{paddingRight: (slider === \"52px\") ? \"0px\" : \"\", color: (slider === \"52px\") ? \"black\" : \"\"}}>crowdsourcing</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/screened\")} style={{paddingRight: (slider === \"76px\") ? \"0px\" : \"\", color: (slider === \"76px\") ? \"black\" : \"\"}}>screened</Link>\n                </div>\n                {/*<div className=\"verline\" style={{top: slider}}/>*/}\n            </div>\n        </>\n    );\n\n   return output;\n\n};\n\n\nexport default withRouter(ScreeningTab);\n","import React, {useState, useEffect, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\nimport LoadIcon from \"components/svg/loadIcon\";\n\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\nimport {AppContext} from 'components/providers/appProvider'\n\nconst SearchAutomatedDescription = function ({project_id, filtersList, setFiltersList}) {\n\n    //shows the number of results\n    const [totalResults, setTotalResults] = useState(0);\n\n    //filters fetch flag\n    const [filtersFetch, setFiltersFetch] = useState(false)\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let  mnt = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            setFiltersFetch(true);\n            //call the dao\n            let res = await projectFiltersDao.getFiltersList({\"project_id\" : project_id});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setFiltersList([]);\n                setTotalResults(0);\n                //show the page\n                setFiltersFetch(false);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n                //update state\n                setFiltersList(res.results);\n                setTotalResults(res.totalResults);\n                //show the page\n                setFiltersFetch(false);\n            }\n\n        };\n\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, []);\n\n    let output = \"\";\n    if(filtersFetch){\n        output = <LoadIcon class={'small'}/>\n    }else{\n        if(totalResults !== 0){\n            output = (\n                <>\n                {filtersList.map((element) =>\n                    <p key={element.id} className=\"filter-predicate\">{element.data.predicate}</p>\n                )}\n                <Link to={\"/projects/\"+project_id+\"/filters\"}>Go to filters details</Link>\n                </>\n            );\n        }else{\n            output = (\n                <>\n                    <p className=\"filter-predicate\"><i>No filters yet in this project</i></p>\n                    <Link to={\"/projects/\"+project_id+\"/filters\"}>Add a new filter from filters tab</Link>\n                </>\n            );\n        }\n    }\n\n    return (\n        <div className=\"right-side-wrapper search-automated-right-wrapper\">\n            <div className=\"top-right-description\">\n                <p>This searching mode leverages NLP models to find relevant papers based on the topic and focus of your project and also considers the inclusion and exclusion criteria you defined.</p>\n                <Link to={\"/projects/\"+project_id+\"/search\"}>(Go back to a normal search)</Link>\n            </div>\n            <div className=\"filters-holder\">\n                <h2>Filters:</h2>\n                <div className=\"side-filters-wrapper\">\n                    {output}\n                </div>\n            </div>\n        </div>\n    );\n\n\n};\n\nexport default SearchAutomatedDescription;","import React, {useState, useEffect, useContext, useRef} from \"react\";\n\nimport {paperDao} from 'dao/paper.dao';\n\nimport CheckBox from \"components/forms_elements/checkbox\";\nimport {PrintSearchAutomatedList} from 'components/modules/printPapersList';\nimport Select from 'components/forms_elements/select';\nimport Pagination from \"components/modules/pagination\";\nimport SelectedPapersListBox from \"components/projects_page/search_tab/selectedPapersListBox\";\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport NoSearchResults from \"components/svg/noSearchResults\";\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject, createQueryData, getIndexOfObjectArrayByKeyAndValue, arrayOfObjectsContains} from 'utils/index';\nimport SearchAutomatedDescription from \"components/projects_page/search_tab/search_automated/searchAutomatedDescription\";\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//confidence value array\nconst confidenceValues = [\n    {label : \"0.00\", value: 0.0},\n    {label : \"0.10\", value: 0.1},\n    {label : \"0.20\", value: 0.2},\n    {label : \"0.30\", value: 0.3},\n    {label : \"0.40\", value: 0.4},\n    {label : \"0.50\", value: 0.5},\n    {label : \"0.60\", value: 0.6},\n    {label : \"0.70\", value: 0.7},\n    {label : \"0.80\", value: 0.8},\n    {label : \"0.90\", value: 0.9},\n    {label : \"1.00\", value: 1.0},\n];\n\n//will keep valid minimum values\nvar minConfidenceValues = [{label : \"0.00\", value: 0.0}];\n//will keep valid maximum values\nvar maxConfidenceValues = [{label : \"1.00\", value: 1.0}];\n\nconst queryParams = [\n    {label: \"min_confidence\", default: 0.0},\n    {label: \"max_confidence\", default: 1.0},\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n];\n/**\n * automated search component\n * */\n\nconst SearchAutomatedManager = function ({project, location, match, history}) {\n\n    const mountRef = useRef(false);\n\n    //list of result papers data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //filters\n    const [filtersList, setFiltersList] = useState([]);\n\n    //bool to control the visualization of the results when fetching results data\n    const [display, setDisplay] = useState(true);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    let queryData = createQueryData(location.search, queryParams);\n\n    //get the localStorage object (used for saving selected papers)\n    const storage = window.localStorage;\n    if (!window.localStorage) {\n        console.log(\"the browser must be support localStorage\");\n    }\n\n    // list of selected papers\n    const [selectedPapersList, setSelectedPapersList] = useState([]);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    useEffect(() => {\n\n        let mnt = true;\n\n        const fetchPapers= async () => {\n            \n            setDisplay(false);\n            \n            //I call the dao for the automated search\n            let resx = undefined;\n\n            console.log(queryData);\n\n            //max confidence that can be selected must be above the min value\n            maxConfidenceValues = confidenceValues.filter(c => c.value > parseFloat(queryData.min_confidence));\n            //min confidence that can be selected must be below the max value\n            minConfidenceValues = confidenceValues.filter(c => c.value < parseFloat(queryData.max_confidence));\n\n            resx = await paperDao.searchAutomated({\"project_id\" : project.id, \"start\" : queryData.start, \"count\" : queryData.count,\n                                                    \"min_confidence\": queryData.min_confidence, \"max_confidence\": queryData.max_confidence});\n\n            console.log(resx);\n            //error checking\n            //if is 404 error\n            if (mnt && resx && resx.message === \"Not Found\") {\n                setPapersList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if is other error\n            else if (mnt && resx && resx.message) {\n                //pass error object to global context\n                appConsumer.setError(resx);\n            }\n            //if res isn't null\n            else if (mnt && (resx !== null)) {\n                //update state\n                setPapersList(resx.results);\n                setTotalResults(resx.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n        }\n\n        fetchPapers();\n\n        //execute when the component will unmount and everytime the useEffect will end\n        return () => {\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count, queryData.min_confidence, queryData.max_confidence])\n\n    let resultPart = \"\";\n\n     /*\n        START OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //handler for min confidence selection\n    function handleMinConfidenceSelection(e) {\n        //get index value\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.min_confidence = minConfidenceValues[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for max confidence selection\n    function handleMaxConfidenceSelection(e) {\n        //get index value\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.max_confidence = maxConfidenceValues[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    /*function to insert and remove the paper id from selected list*/\n    function handlePaperSelection(event) {\n        let newList;\n        //get eid\n        let eid = event.target.value;\n        //get ttitle\n        let title = event.target.name;\n        //if id is not included in the list yet\n        if (getIndexOfObjectArrayByKeyAndValue(selectedPapersList, \"eid\", eid) === -1) {\n           //create a copy of array\n            newList = [...selectedPapersList];\n            //insert into array\n            newList.push({\"eid\": eid, \"title\": title});\n\n        }\n        //if id already exists in the list\n        else {\n            //remove the  target paper from array\n            newList = selectedPapersList.filter(function (element) {\n                return element.eid !== eid;\n            });\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*function to select all papers*/\n    function selectAllPapers(event) {\n        \n        let newList;\n        \n        //if not all papers are selected yet\n        if(!arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")){\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //and merge them with the previously selected ones\n            let tmpList = [...allPapersInPage, ...selectedPapersList];\n            newList = _.uniqBy(tmpList, 'eid');\n        }else{//otherwise\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //I filter the selectedPapersList by removing the papers that are in the current page\n            newList = selectedPapersList.filter(x => !allPapersInPage.some(paper => paper.eid === x.eid));\n        }\n        \n        setSelectedPapersList(newList);\n\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*\n        END OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //if is loading\n    if (display === false) {\n\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project.id} selectedPapersList={selectedPapersList} \n                        setSelectedPapersList={setSelectedPapersList} handlePaperSelection={handlePaperSelection}\n                        mounted={mountRef}\n                    />\n                <div className=\"search-loading-holder\">\n                    <LoadIcon class={\"small\"}/>\n                </div>\n            </>\n        );\n    }\n\n    //if the search results list is empty\n    else if (papersList.length === 0) {\n        //the 'no-results' class is used only to workaround a small bug that display not found just as the search start before the loading icon\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project.id} selectedPapersList={selectedPapersList} \n                    setSelectedPapersList={setSelectedPapersList} handlePaperSelection={handlePaperSelection}\n                    mounted={mountRef}\n                />\n                <div className=\"no-results\"> <NoSearchResults/> <p className=\"not-found-description\"> Nothing was found </p> </div>\n            </>\n        );\n    }\n    else if (papersList.length > 0) {\n\n        //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project.id} selectedPapersList={selectedPapersList} \n                    setSelectedPapersList={setSelectedPapersList} handlePaperSelection={handlePaperSelection}\n                    mounted={mountRef}\n                />\n                \n                <PrintSearchAutomatedList papersList={papersList} filtersList={filtersList} \n                                        handlePaperSelection={handlePaperSelection} selectedEidList={arrayEid}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </>\n        );\n    }\n\n\n    let output = (\n        <>\n            <SearchAutomatedDescription project_id={project.id} filtersList={filtersList} setFiltersList={setFiltersList}/>\n            <div className=\"search-results auto\">\n                <div className=\"paper-card-holder\">\n                    <div className=\"paper-card-holder-head\"\n                        style={{\n                            pointerEvents: (!display || papersList.length === 0) ? \"none\" : \"\",\n                            opacity: (papersList.length === 0) ? \"0.0\" : \"1.0\"\n                        }}\n                        >\n                        <div className=\"select-all\">\n                        <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")} handler={selectAllPapers}/>\n                        </div>\n                        <div className=\"order\">\n                            <label>min confidence:</label>\n                            <Select options={minConfidenceValues}\n                                    selected={getIndexOfObjectArrayByKeyAndValue(minConfidenceValues, \"value\", parseFloat(queryData.min_confidence))}\n                                    handler={handleMinConfidenceSelection}\n                                    //optional fields\n                                    type={\"mini\"} //displays select menu with smaller width\n                                    code={0} //you can put here a random number in case you have multiple selects on the same page\n                                            //this way you won't trigger the arrow animation for all the selects at the same time\n                                    />\n                            <label>max confidence:</label>\n                            <Select options={maxConfidenceValues}\n                                    selected={getIndexOfObjectArrayByKeyAndValue(maxConfidenceValues, \"value\", parseFloat(queryData.max_confidence))}\n                                    handler={handleMaxConfidenceSelection}\n                                    type={\"mini\"}\n                                    code={1}/>\n                        </div>\n                    </div>\n                    {resultPart}\n                </div>\n            </div>\n        </>\n    );\n\n    return output;\n};\n\nexport default SearchAutomatedManager;","import React, {useState, useEffect, useContext} from \"react\";\nimport {Route, Link, Switch} from 'react-router-dom';\n\nimport SearchStandardManager from 'components/projects_page/search_tab/search_standard/searchStandardManager';\nimport SearchSimilarManager from 'components/projects_page/search_tab/search_similar/searchSimilarManager';\nimport CustomPaperPage from 'components/projects_page/papers_tab/customPaperPage';\nimport {projectsDao} from 'dao/projects.dao';\nimport ProjectName from 'components/projects_page/projectName';\nimport {join} from 'utils';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport Forbidden from 'components/svg/forbidden';\n\nimport {AppContext} from 'components/providers/appProvider';\nimport PageNotFound from \"components/modules/pageNotFound\";\nimport PapersTab from \"components/projects_page/papers_tab/papersTab\";\nimport FiltersTab from \"components/projects_page/filters_tab/filtersTab\";\nimport ScreeningTab from \"components/projects_page/screening_tab/screeningTab\";\nimport SearchAutomatedManager from \"components/projects_page/search_tab/search_automated/searchAutomatedManager\";\n\n\n/**\n *this component will show a projects page\n */\nconst ProjectPage = (props) => {\n\n    //project object of page\n    const [project, setProject] = useState({data: {name: \"loading...\"}});\n\n    //collaborators\n    const [collaborators, setCollaborators] = useState([]);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //notFound state for hiding the navbar\n    const [notFound, setNotFound] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //flag for unauthorized user\n    const [unauthorized, setUnauthorized] = useState(false);\n\n    const project_id = props.match.params.id;\n\n    //set the project title\n    useEffect(() => {\n        if(project.data.name === \"loading...\" || project.data.name === \"UNAUTHORIZED OR INEXISTENT PROJECTS\"){\n            appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">{project.data.name}</h2> </div>);//I set the page title\n        }else{\n            appConsumer.setTitle(<ProjectName project={project} setProject={setProject}/>);\n            appConsumer.setProjectName(project.data.name);\n        }\n\n    }, [project.data.name]);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let mnt = true;\n\n        setDisplay(false);\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //call the dao for main project data\n            let res = await projectsDao.getProject(project_id);\n\n            //error checking\n            //if unauthorized user\n            if(mnt && res.payload && (res.payload.statusCode === 401 || res.payload.message === \"the token does not match any user!\" || res.payload.message === \"empty token id in header, the user must first login!\")){\n                setUnauthorized(true);\n                setDisplay(true);\n                setProject({data: {name: \"UNAUTHORIZED OR INEXISTENT PROJECTS\"}});\n            }\n            //if the component is still mounted and there is some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and res isn't null\n            else if (mnt && res ) {\n                setUnauthorized(false);\n                //update state\n                setProject(res);\n                //show the page\n                setDisplay(true);\n            }\n\n\n        };\n        fetchData();\n        //when the component will unmount\n        return () => {\n\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, [project_id, appConsumer.user]); //re-execute when these variables change\n\n\n    let output;\n\n    //if the page is loading\n    if (display === false) {\n        //print svg image\n        output = <LoadIcon/>;\n    }\n    else if(unauthorized){\n        output = (\n            <div className=\"forbidden-wrapper\">\n                <Forbidden/>\n                <p>This project does not exist or maybe you are not allowed to see it</p>\n            </div>\n        )\n    }\n    else {\n        output = (\n            <div className=\"project-wrapper\">\n                {/*<div>\n                    {JSON.stringify(project)}\n                    <button style={{marginLeft: \"20px\"}} onClick={() => {\n                        let newProject = project;\n                        newProject.data.name = \"__°°__\";\n                        //setProject(newProject);\n                        setProject({...newProject});\n                        console.log(project)\n                    }}>i</button>\n                </div>*/}\n                <ProjectPageHead match={props.match} notFound={notFound}/>\n\n                {/*route the papers list*/}\n                <Switch>\n                    <Route exact  path={props.match.url} render={function(props){\n                        setNotFound(false);\n                        return (<PapersTab project_id={project_id} project={project} setProject={setProject} collaborators={collaborators} setCollaborators={setCollaborators} {...props}/>);\n                    }}/>\n\n                    {/*route the form of search*/}\n                    <Route exact path={props.match.url + \"/search\"} render={function(props){\n                        setNotFound(false);\n                        return (<SearchStandardManager project_id={project_id} {...props} />);\n                    }}/>\n\n                    <Route exact path={props.match.url + \"/filters\"} render={function(props){\n                        setNotFound(false);\n                        return (<FiltersTab project_id={project_id} project={project} {...props}/>);\n                    }}/>\n\n                    <Route path={props.match.url + \"/screening\"} render={function(props){\n                        setNotFound(false);\n                        return (<ScreeningTab project_id={project_id} project={project} notFound={notFound} setNotFound={setNotFound}/>);\n                    }}/>\n\n                    <Route exact path={props.match.url + \"/searchautomated\"} render={function(props){\n                        setNotFound(false);\n                        return (<SearchAutomatedManager project={project} {...props} />);\n                    }}/>\n\n                    <Route exact path={props.match.url + \"/searchsimilar\"} render={function(props){\n                        setNotFound(false);\n                        return (<SearchSimilarManager project_id={project_id} {...props} />);\n                    }}/>\n\n                    <Route path = {props.match.url + \"/addpaper\"} render={function(props){\n                        setNotFound(false);\n                        return (\n                            <>\n                                <Link className=\"back\" to={props.match.url.substr(0, props.match.url.length - 9 )}>  </Link>\n                                <CustomPaperPage projectId={project.id} url={props.match.url} history={props.history}/>\n                            </>\n                        );\n                    }} />\n                    <Route render={(props) => {setNotFound(true); return <PageNotFound/>}}/>\n                </Switch>\n\n            </div>\n        );\n    }\n\n    return output;\n};\n\n/**\n * this is the local component to print head of project page\n */\nconst ProjectPageHead = function ({match, notFound}) {\n    //hash  -> #/projects/6/search/ || #/projects/6/search/\n    const lc = window.location.hash.split(\"?\")[0];\n    var slider = \"hide\";\n    switch (true) {\n        case /^#\\/projects\\/\\d+\\/?$/.test(lc): //papers tab\n            slider = \"20px\";\n            break;\n\n        case /^#\\/projects\\/\\d+\\/filters\\/?$/.test(lc): //filters tab\n            slider = \"190px\";\n            break;\n\n        case /#\\/projects\\/\\d+\\/search\\/?/.test(lc): //search tab\n            slider = \"360px\";\n            break;\n\n        case /#\\/projects\\/\\d+\\/screening\\/?/.test(lc): //screening tab\n            slider = \"530px\";\n            break;\n\n        default:\n            console.log(\"no tab\");\n            break;\n    }\n    let output = (\n        <>\n            <div className=\"project-nav-link-wrapper\" style={{display: (notFound || slider === \"hide\") ? \"none\" : \"\"}}>\n                <div className=\"nav-link\">\n                    <Link to={match.url}>papers</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/filters\")}>filters</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/search\")}>search</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/screening/backlog\")}>screening</Link>\n                </div>\n                <div className=\"underline\" style={{left: slider}}/>\n            </div>\n        </>\n    );\n    return output;\n\n};\n\n\nexport default ProjectPage;\n","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Link, withRouter} from 'react-router-dom';\n\n\nimport {projectScreeningDao} from 'dao/projectScreening.dao';\nimport LoadIcon from 'components/svg/loadIcon';\nimport Pagination from 'components/modules/pagination';\nimport {join} from 'utils';\n\nimport {AppContext} from \"components/providers/appProvider\";\nimport EmptyFolder from \"components/svg/emptyFolder\";\n\nimport {createQueryData} from 'utils/index';\n\nconst queryParams = [\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n]\n\n/**\n *this component will show the projects where the user is a screener\n */\n\nconst ScreeningsList = function (props) {\n\n    const mountRef = useRef(false);\n\n    //list of projects to screen\n    const [screeningsList, setScreeningsList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(props.location.search, queryParams);\n\n\n    //set title when component mounts\n    useEffect(() => {\n        mountRef.current = true;\n\n        appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">SCREENINGS</h2> </div>);\n        //I remove any old project name that was previously saved\n        appConsumer.setProjectName(\"\");\n\n        return () => {\n            mountRef.current = false;\n        };\n    },[]); //run on component mount\n\n    useEffect(() => {\n\n        let mnt = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //hide the page\n            setDisplay(false);\n            console.log(queryData);\n            //call the dao\n            const res = await projectScreeningDao.getProjectsToScreen({orderBy: \"date_last_modified\", ...queryData});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setScreeningsList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n                //update state\n\n                //I put even first and then odd ones so I can display 2 columns with left-right flow \n                var even_projs = [];\n                even_projs = res.results.filter(function(element, index){ if( index % 2 ) return element;});\n                var odd_projs = [];\n                odd_projs = res.results.filter(function(element, index){ if( !(index % 2) ) return element;});\n\n                setScreeningsList(odd_projs.concat(even_projs));\n                setTotalResults(res.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n        };\n\n        fetchData();\n\n        //when the component will unmount or this useEffect will stop\n        return () => {\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count]); //re-execute when these variables change\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print svg image\n        output = <LoadIcon/>;\n    }\n\n    else {\n\n        output = (\n            <div>\n                {/*print list of projects*/}\n                <PrintList screeningsList={screeningsList} path={props.match.url}/>\n                {/*set listId and continues value*/}\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={props.match.url}/>\n\n            </div>\n        );\n\n    }\n\n    return output;\n\n\n};\n\n\n/**\n *  internal component only to print the list\n * @param screeningsList projects list data\n * @param path current page url\n * */\nconst PrintList = function ({screeningsList, path}) {\n\n    let maps;\n    //if list is empty, print a notice message\n    if (screeningsList.length === 0) {\n        maps = (\n            <div className=\"empty-folder-wrapper\"> <EmptyFolder/> <p className=\"empty-folder-description\"> You don't have any projects to screen yet </p></div>\n        );\n    }\n    //if list isn't empty, print list of projects\n    else {\n        maps = (screeningsList.map((element, index) =>\n                <div key={element.id} className=\"light-modal project-card for-screening\">\n                    <Link to={join(path, \"/\" + element.id)}>\n                        <h3>{element.project_data.name}</h3>\n                        <p className=\"description\">{element.project_data.description}</p>\n                    </Link>\n                </div>\n        ));\n    }\n\n    let output =  (\n        <div className={(screeningsList.length === 0) ? \"project-cards-holder-empty\" : \"project-cards-holder\"}>\n            {maps}\n        </div>\n    );\n\n    return output;\n\n};\n\n\n\n\nexport default withRouter(ScreeningsList);","import React from \"react\";\n\n/**\n * component svg select arrow\n * 'focused' is a flag used for displaying a different shape\n */\nconst PlusIcon = function ({focused, code}) {\n    var from=\"\";\n    var to=\"\";\n    //I check if the upper component is focused and then I animate\n    if(focused){\n        from={y1: \"100\", y2: \"900\"};\n        to={y1: \"500\", y2: \"500\"};\n    }else{\n        from={y1: \"500\", y2: \"500\"};\n        to={y1: \"100\", y2: \"900\"};\n    }\n    return (\n    <svg version=\"1.1\" id=\"plus-icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n        viewBox=\"0 0 1000 1000\">\n            <line className=\"st0-plus\" x1=\"900\" y1=\"500\" x2=\"100\" y2=\"500\"/>\n            <line className=\"st0-plus\" x1=\"500\" y1=\"100\" x2=\"500\" y2=\"900\">\n            <animate attributeType=\"XML\" \n                id={(isNaN(code)) ? \"ani-plus-icon-y1\" : \"ani-plus-icon-y1\" + code} \n                attributeName=\"y1\" from={from.y1} to={to.y1} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n            <animate attributeType=\"XML\" \n                id={(isNaN(code)) ? \"ani-plus-icon-y2\" : \"ani-plus-icon-y2\" + code} \n                attributeName=\"y2\" from={from.y2} to={to.y2} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n            </line>\n        </svg>\n    );\n};\n\nexport default PlusIcon;\n\n","import React, {useState, useEffect} from \"react\";\nimport PlusIcon from \"components/svg/plusIcon\";\n\nconst FiltersAccordion = function ({filtersList}) {\n\n    const [isOpen, setIsOpen] = useState(filtersList.map((x) => (false)));\n\n    let output = \"\";\n    //if list is empty, print a notice message\n    if (filtersList.length === 0) {\n        output = (\n            <p className=\"empty-filters-list-description\"> There are no filters in this project</p>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else{\n        output = (\n            <div className=\"filters-list\">\n                {filtersList.map((element, index) =>\n                    <div key={element.id} className=\"filter\">\n                        <FilterElement filter={element.data} code={parseInt(element.id)} isOpen={isOpen} setIsOpen={setIsOpen} index={index}/>\n                    </div>\n                )}\n            </div>\n        );\n    }\n    return output;\n\n\n};\n\nconst FilterElement = function({filter, code, isOpen, setIsOpen, index}) {\n\n    function handleFocus(){\n        //handle arrow animation and focus of menu\n        document.getElementById((isNaN(code)) ? \"ani-plus-icon-y1\" : \"ani-plus-icon-y1\" + code).beginElement();//trigger svg animation\n        document.getElementById((isNaN(code)) ? \"ani-plus-icon-y2\" : \"ani-plus-icon-y2\" + code).beginElement();//trigger svg animation\n    }\n    function handleFilterClick(){\n        handleFocus();\n        let localOpen = isOpen.map((x) => false);\n        localOpen[index] = !isOpen[index];\n        setIsOpen([...localOpen]);\n    }\n    return(\n        <>\n            <button className=\"filter-title\" onClick={handleFilterClick}>\n                <span>{filter.predicate}</span> <PlusIcon focused={isOpen[index]} code={code}/>\n            </button>\n            <div className=\"filter-data\" style={{maxHeight: (isOpen[index]) ? \"300px\" : \"0px\"}}>\n                <p className=\"criteria-type\">\n                    inclusion criteria:\n                </p>\n                <p className=\"criteria-description\">\n                    {filter.inclusion_description || <i>empty criterion</i>}\n                </p>\n                <p className=\"criteria-type\">\n                    exclusion criteria:\n                </p>\n                <p className=\"criteria-description\">\n                    {filter.exclusion_description || <i>empty criterion</i>}\n                </p>\n            </div>\n        </>\n    )\n};\n\nexport default FiltersAccordion;","import React, {useState, useEffect, useRef} from \"react\";\n\nimport RemoveButton from \"components/svg/removeButton\";\n\nconst Tags = function ({className, display, selectedTags, setSelectedTags, availableTags}) {\n\n    const mountRef = useRef(false);\n\n    const suggestionTimeout = useRef();\n\n    const [tagSuggestions, setTagSuggestions] = useState([]);\n\n    const [input, setInput] = useState(\"\");\n\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //function for adding tag\n    async function addTag(tag){\n        if(!selectedTags.includes(tag)){\n            console.log(\"adding \" + tag);\n\n            setInput(\"\");\n            setSelectedTags([...selectedTags, tag]);\n            availableTags.current = availableTags.current.filter((tagx) => tagx !== tag);\n            setTagSuggestions([]);\n        }\n    }\n\n    async function removeTag(tag){\n\n        console.log(\"deleting \" + tag);\n\n        setSelectedTags(selectedTags.filter((tagx)=>tagx !== tag));\n        availableTags.current = [...availableTags.current, tag];\n    }\n\n    function handleInputChange(e){\n        clearTimeout(suggestionTimeout.current);\n        setInput(e.target.value);\n        var localInput = e.target.value.toLowerCase();\n        if(localInput){\n            suggestionTimeout.current = setTimeout(() => {\n                setTagSuggestions(availableTags.current.map((tagx) => {\n                    console.log(\"checking '\" + tagx + \"'\");\n                    let index = tagx.toLowerCase().indexOf(localInput);\n                    if(index !== -1){\n                        return {content: tagx, index: index, selectionLength: localInput.length};\n                    }else{\n                        return -1;\n                    }\n                }).filter((tog) => tog !== -1));\n            }, 500);\n        }else{\n            setTagSuggestions([]);\n        }\n    }\n\n    let output = <></>;\n    output = (\n        <>\n            <div className={(className === \"right\") ? \"tags-wrapper to-right\" : \"tags-wrapper\"}\n                style={{opacity: (display) ? \"1.0\" : \"0.0\"}}\n            >\n                {selectedTags.map((tag, index)=>(\n                    <div key={index} className=\"tag\">\n                        {tag}\n                        <button type=\"button\" className=\"delete-tag\"\n                            onClick={() => {removeTag(tag)}}\n                        >\n                            <RemoveButton/>\n                        </button>\n                    </div>\n                ))}\n                <form className=\"add-tag\" onSubmit={() => {addTag(input)}}>\n                    <input type=\"text\" id=\"tag-name\" placeholder=\"add new tag...\" value={input}\n                        onChange={(e) => {handleInputChange(e)}}\n                    />\n                    <button className=\"add-tag-button\" disabled={(!input || input === \"\")}/>\n                    <div className=\"tag-suggestions\" style={{display: (tagSuggestions.length === 0) ? \"none\" : \"\"}}>\n                        {tagSuggestions.map((tag, index)=>(\n                            <button key={index} type=\"button\" className=\"tag-suggestion\"\n                                    onClick={() => {addTag(tag.content)}}\n                            >\n                                {tag.content.substring(0,tag.index)}\n                                <span className=\"match\">{tag.content.substring(tag.index, tag.index+tag.selectionLength)}</span>\n                                {tag.content.substring(tag.index+tag.selectionLength, tag.content.length)}\n                            </button>\n                        ))}\n                    </div>\n                </form>\n            </div>\n        </>\n    );\n    return output;\n}\n\n\nexport default Tags;\n","import React from \"react\";\n\n/**\n * component svg\n */\nconst RemoveHighlights = function (props) {\n\n    return (\n        <svg id=\"clear-hl\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <g>\n                <path className=\"st0-hl\" d=\"M475.2,858.4c-69.5-0.1-154.3,27.6-195.3,68.7\"/>\n                <path className=\"st1-hl\" d=\"M281.7,664.9l499.9-463.1c29.5,22.7,57.4,47.1,83.5,73.2c26.1,26.1,50.5,53.9,73.2,83.5L475.2,858.4\"/>\n                <path className=\"st0-hl\" d=\"M213,860.2c41.1-41,68.8-125.7,68.7-195.3\"/>\n                <path className=\"st2-hl\" d=\"M255.8,932.7l-20.9,20.9l-89.8-6.8l62.4-62.4\"/>\n                <path className=\"st3-hl\" d=\"M475.2,858.4c-58.6-70.5-123.1-135-193.6-193.6\"/>\n                <line className=\"st4-hl\" x1=\"205.4\" y1=\"867.9\" x2=\"272.3\" y2=\"934.8\"/>\n            </g>\n            <line className=\"st5-hl\" x1=\"75.7\" y1=\"96.6\" x2=\"411.4\" y2=\"432.2\"/>\n            <line className=\"st5-hl\" x1=\"75.7\" y1=\"432.2\" x2=\"411.4\" y2=\"96.6\"/>\n        </svg>\n    );\n};\n\nexport default RemoveHighlights;\n","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport RemoveHighlights from \"components/svg/removeHighlights\";\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst HighLighter = function ({data, disabled, highlightedData, setHighlightedData, className}) {\n\n    const startingBlock = useRef(0);\n    const endingBlock = useRef(0);\n    const selectingInterval = useRef();\n    const clicking = useRef(false);\n\n    function selectingFunction(onEnd){\n        selectingInterval.current = setTimeout(() => {\n            const selection = document.getSelection();\n            //console.log(selection);\n            if(selection.anchorNode.nodeName === \"#text\"){\n                //data of the node\n                //var selectionData = selection.anchorNode.data;\n                //start of the selection\n                var selectionStart = selection.anchorOffset;\n                //end of the selection\n                var selectionEnd = selection.focusOffset;\n                if(onEnd){\n                    selectionEnd = highlightedData[highlightedData.length-1].end;\n                }\n\n\n                if(startingBlock.current == endingBlock.current && selectionStart > selectionEnd){\n                    let tmp = selectionStart;\n                    selectionStart = selectionEnd;\n                    selectionEnd = tmp;\n                }\n                if(startingBlock.current > endingBlock.current){\n                    let tmp = startingBlock.current;\n                    startingBlock.current = endingBlock.current;\n                    endingBlock.current = tmp;\n                    tmp = selectionStart;\n                    selectionStart = selectionEnd;\n                    selectionEnd = tmp;\n                }\n\n                console.log(selection);\n                console.log(\"startingBlock   > \" + startingBlock.current + \" | \" + highlightedData[startingBlock.current].type);\n                console.log(\"selection start   > \" + selectionStart);\n                console.log(\"endingBlock     > \" + endingBlock.current + \" | \" + highlightedData[endingBlock.current].type);\n                console.log(\"selection end     > \" + selectionEnd);\n                \n                if(startingBlock.current === endingBlock.current && highlightedData[startingBlock.current].type === \"not_highlighted\"){\n                    var firstSubBlock = {\n                        data: highlightedData[startingBlock.current].data.substring(0, selectionStart),\n                        start: highlightedData[startingBlock.current].start,\n                        end: highlightedData[startingBlock.current].start + selectionStart-1,\n                        type: \"not_highlighted\"\n                    }\n                    var midSubBlock = {\n                        data: highlightedData[startingBlock.current].data.substring(selectionStart, selectionEnd),\n                        start: highlightedData[startingBlock.current].start + selectionStart,\n                        end: highlightedData[startingBlock.current].start + selectionEnd-1,\n                        type: \"highlighted\"\n                    }\n                    var lastSubBlock = {\n                        data: highlightedData[startingBlock.current].data.substring(selectionEnd, highlightedData[startingBlock.current].end+1),\n                        start: highlightedData[startingBlock.current].start + selectionEnd,\n                        end: highlightedData[startingBlock.current].end,\n                        type: \"not_highlighted\"\n                    }\n                    var newLocalData = highlightedData;\n                    newLocalData.splice(startingBlock.current, 1, firstSubBlock, midSubBlock, lastSubBlock);\n\n                }else{\n                    var newLocalData = highlightedData;\n                    var firstSubBlock = {\n                        data: highlightedData[startingBlock.current].data.substring(0, selectionStart),\n                        start: highlightedData[startingBlock.current].start,\n                        end: highlightedData[startingBlock.current].start + selectionStart-1,\n                        type: highlightedData[startingBlock.current].type\n                    }\n                    var midSubBlock = {\n                        data: highlightedData[startingBlock.current].data.substring(selectionStart, highlightedData[startingBlock.current].data.length),\n                        start: highlightedData[startingBlock.current].start + selectionStart,\n                        end: highlightedData[startingBlock.current].end,\n                        type: \"highlighted\"\n                    }\n                    newLocalData.splice(startingBlock.current, 1, firstSubBlock, midSubBlock);\n\n\n                    for (let i = startingBlock.current+2; i<=endingBlock.current; i++){\n                        newLocalData[i].type=\"highlighted\";\n                    }\n\n                    var firstSubBlockx = {\n                        data: highlightedData[endingBlock.current+1].data.substring(0, selectionEnd),\n                        start: highlightedData[endingBlock.current+1].start,\n                        end: highlightedData[endingBlock.current+1].start + selectionEnd-1,\n                        type: \"highlighted\"\n                    }\n                    var midSubBlockx = {\n                        data: highlightedData[endingBlock.current+1].data.substring(selectionEnd, highlightedData[endingBlock.current+1].data.length),\n                        start: highlightedData[endingBlock.current+1].start + selectionEnd,\n                        end: highlightedData[endingBlock.current+1].end,\n                        type: highlightedData[endingBlock.current+1].type\n                    }\n                    newLocalData.splice(endingBlock.current+1, 1, firstSubBlockx, midSubBlockx);\n                }\n\n                newLocalData = newLocalData.filter((x) => x.start <= x.end);\n                    let i = 0;\n                    while(i<newLocalData.length){\n                        if(newLocalData[i+1] && newLocalData[i].type === newLocalData[i+1].type){\n                            let newBlock = {data: newLocalData[i].data + newLocalData[i+1].data, \n                                            start: newLocalData[i].start,\n                                            end: newLocalData[i+1].end,\n                                            type: newLocalData[i].type\n                                            }\n                            newLocalData.splice(i,2,newBlock);\n                        }else{\n                            i++;\n                        }\n                    }\n                    document.getSelection().empty();\n                    setHighlightedData([...newLocalData]);\n                /*\n                var newData = localData.slice(0, selectionStart) + \"<i>\" + localData.slice(selectionStart);\n                newData = newData.slice(0, selectionEnd) + \"</i>\" + newData.slice(selectionEnd)\n                setLocalData(newData);\n                */\n            }else{\n                //console.log(\"everything was selected\")\n            }\n        },10);\n    }\n\n    //useEffect(() => {console.log(\"local data change\"); console.log(localData)}, [localData])\n    let output = <></>;\n    console.log(disabled)\n    if(!disabled){\n        output = (\n            <div className={className}\n                onMouseDown={() => {\n                    clicking.current = true;\n                }}\n                onMouseUp={() => {\n                    clicking.current = false;\n                }}\n                onMouseLeave={() => {\n                    clicking.current = false;\n                }}\n            >\n                <div className={className+\"-head\"}>\n                    <button className=\"clear-highlight\" onClick={()=>{\n                            setHighlightedData([{data: data, start: 0, end: data.length-1, type:\"not_highlighted\"}]);\n                        }}\n                        style={{opacity: (highlightedData.length === 1 && (highlightedData[0].type === \"not_highlighted\" || highlightedData[0].type === \"disabled\")) ? \"0.0\" : \"1.0\",\n                                pointerEvents: (highlightedData.length === 1 && highlightedData[0].type === \"not_highlighted\") ? \"none\" : \"\"}}\n                    >\n                        <RemoveHighlights/> \n                    </button>\n                </div>\n                {highlightedData.map((dataChunk, index) => {\n                    if(dataChunk.type === \"disabled\"){\n                        return (\n                            <span className=\"not_highlighted disa\" key={index}>{dataChunk.data}</span>\n                        );\n                    }else{\n                        return (\n                            <span className={dataChunk.type} key={index}\n                                onMouseDown={() => {\n                                    startingBlock.current = index;\n                                    clearTimeout(selectingInterval.current)\n                                }}\n                                onMouseEnter={() => {\n                                    if(!clicking.current){\n                                        console.log(\"casual enter on -> \" + index)\n                                        clicking.current = true;\n                                        startingBlock.current = index;\n                                        clearTimeout(selectingInterval.current);\n                                    }\n                                }}\n                                onDoubleClick={(e) => {\n                                    //console.log(\"double\");\n                                    clearTimeout(selectingInterval.current);\n                                    document.getSelection().empty();}\n                                }\n                                onMouseUp={() => {\n                                    endingBlock.current=index; \n                                    selectingFunction();\n                                }}\n                            >{dataChunk.data}</span>\n                        );\n                    }\n                })}\n            </div>\n        );\n    }else{\n        output = (\n        <div className={className}>\n            {data}\n        </div>\n        );\n    }\n    return output;\n};\n\n\nexport default HighLighter;\n","import React from \"react\";\n\n/**\n * component svg\n */\nconst PositiveAnswer = function (props) {\n\n    return (\n        <svg id=\"positive-answer\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st-tick\" points=\"918,192.3 389.3,807.7 82,450 \" style={{stroke: (props.color) ? props.color : \"\"}}/>\n        </svg>\n    );\n};\n\nexport default PositiveAnswer;\n","import React from \"react\";\n\n/**\n * component svg\n */\nconst NegativeAnswer = function (props) {\n\n    return (\n        <svg id=\"negative-answer\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <line className=\"st-tick\" x1=\"181\" y1=\"181\" x2=\"819\" y2=\"819\" style={{stroke: (props.color) ? props.color : \"\"}}/>\n            <line className=\"st-tick\" x1=\"819\" y1=\"181\" x2=\"181\" y2=\"819\" style={{stroke: (props.color) ? props.color : \"\"}}/>\n        </svg>\n    );\n};\n\nexport default NegativeAnswer;\n","import React from \"react\";\n\n/**\n * component svg\n */\nconst UndecidedAnswer = function (props) {\n\n    return (\n        <svg id=\"undecided-answer\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <g>\n                <path className=\"st0-und\" \n                    d=\"M 500,661.78784 500,544.20058 C 954.19846,189.53532 376.85433,16.13961 335.29677,279.03194\"\n                    style={{stroke: (props.color) ? props.color : \"\"}}/>\n                <circle className=\"st1-und\" cx=\"500\" cy=\"853\" r=\"66\" style={{fill: (props.color) ? props.color : \"\"}}/>\n            </g>\n        </svg>\n    );\n};\n\nexport default UndecidedAnswer;\n","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Link} from 'react-router-dom';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nimport {projectScreeningDao} from 'dao/projectScreening.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\nimport FiltersAccordion from \"components/modules/filtersAccordion\";\nimport Tags from 'components/modules/paperTags';\nimport HighLighter from 'components/modules/highlighter';\nimport InfoTooltip from \"components/modules/infoTooltip\";\nimport PositiveAnswer from 'components/svg/positiveAnswer';\nimport NegativeAnswer from 'components/svg/negativeAnswer';\nimport UndecidedAnswer from 'components/svg/undecidedAnswer';\n\n\nconst _array = require('lodash/array');\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst SinglePredicateScreening = function ({screening, filtersList}) {\n\n    const mountRef = useRef(false);\n\n    //fetch data\n    const [paperData, setPaperData] = useState(undefined);\n\n    //paper wrapper-height js animation\n    const [paperHeight, setPaperHeight] = useState(220)\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //decision variable\n    const [decision, setDecision] = useState(\"\");\n\n    //highlighted data\n    const [highlightedData, setHighlightedData] = useState(undefined);\n\n    //selected tags\n    const [selectedTags, setSelectedTags] = useState([]);\n\n    //available tags\n    const availableTags = useRef(screening.data.tags);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //bool to trigger next paper fetch\n    const [nextPaper, setNextPaper] = useState(false);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //this will run on mount and every time the url params change\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let mnt = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            setDisplay(false);\n            setDecision(\"\");\n            availableTags.current = _array.union(availableTags.current, selectedTags);\n            setSelectedTags([]);\n            console.log(\"FETCHING NWE PAPAER\")\n            //call dao for getting next paper\n            let res = await projectScreeningDao.getProjectPaperToScreen(screening.id);\n            console.log(res);\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setPaperData({data: {title:\"Finished!\", \n                    abstract:(\n                        <>There are no more papers to screen in this project<br/>\n                            <Link to={\"/screenings\"}>Go back to screenings list</Link>\n                        </>\n                        )}});\n                //show the page\n                setDisplay(true);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n                //update state\n                setPaperData(res);\n                setHighlightedData([{data: res.data.abstract, start: 0, end: res.data.abstract.length-1, type:\"not_highlighted\"}])\n                //setHighlightedData([{data: res.results[queryData.question_id].abstract, start: 0, end: res.results[queryData.question_id].abstract.length-1, type:\"not_highlighted\"}]);\n                //show the page\n                setDisplay(true);\n            }\n            console.log(\"DONE FETCHING NWE PAER\")\n        };\n\n\n        fetchData();\n        \n\n        //when the component will unmount or the useEffect will finish\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n\n    }, [screening, nextPaper]);  //re-execute when these variables change\n\n    useEffect(() =>{\n        if(display){\n            setPaperHeight(document.getElementsByClassName('s-paper')[0].clientHeight+20);\n        }\n    }, [display])\n\n    async function sendSubmission(key) {\n        let screeningData = {\n            project_paper_id: paperData.id,\n            vote:{\n                answer: \"0\",\n                metadata: {type: \"single-predicate\", highlights: highlightedData, tags: selectedTags}\n            }\n        };\n\n        switch (key) {\n            case \"s\":\n                console.log(\"NO\");\n                setDecision(\"no\");\n                break;\n            case \"a\":\n                console.log(\"YES\");\n                setDecision(\"yes\");\n                screeningData.vote.answer = \"1\";\n                break;\n            case \"d\":\n                console.log(\"UND\");\n                setDecision(\"und\");\n                screeningData.vote.answer = \"2\";\n                break;\n            default:\n                break;\n        }\n        console.log(\"data to send _> \");\n        console.log(screeningData)\n        \n        //call the dao\n        let res = await projectScreeningDao.submitVote(screeningData);\n        \n        if(mountRef.current && res.data){\n            //I trigger the effect to get a new paper\n            setNextPaper(!nextPaper);\n        }   \n        //error checking\n        //if is other error\n        else if (mountRef.current && res && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);  \n        }\n        \n    }\n    \n    function handleKey(key){\n        if(document.activeElement.type !== \"text\" && display){\n            sendSubmission(key);\n        }\n    }\n\n    let resultPart = \"\";\n    let paperToDisplay = \"\";\n    let formPart = <></>;\n    if(paperData && paperData.data && paperData.data.title!==\"Finished!\"){\n        formPart = (\n            <form className=\"light-modal screening-outcome\">\n                <InfoTooltip className={\"s-p-form\"}>\n                    You can cast your vote by using the keyboard:<br/>\n                    <b>A : </b> <i>yes</i><br/>\n                    <b>S : </b> <i>no</i><br/>\n                    <b>D : </b> <i>undecided</i><br/>\n                </InfoTooltip>\n                <h2 className=\"question\">Is the paper relevant to the review?</h2>\n                <p className=\"hl-tip\">Please highlight in the text the evidence that supports your answer</p>\n                <div className=\"screening-choice\">\n                    <div className=\"yes-no-und\">\n                        <div className=\"btn-decision-holder\">\n                            <button className=\"yes\" style={{backgroundColor: (decision === \"yes\") ? \"#0b8a42\" : \"\"}}\n                                onClick={() => {handleKey(\"a\")}}\n                            >\n                                <PositiveAnswer color={(decision === \"yes\") ? \"white\" : \"#696969\"}/>\n                            </button>\n                            <div className=\"decision-tooltip\">yes</div>\n                        </div>\n                        <div className=\"btn-decision-holder\">\n                            <button className=\"no\" style={{backgroundColor: (decision === \"no\") ? \"#c31f1f\" : \"\"}}\n                                onClick={() => {handleKey(\"s\")}}\n                            >\n                                <NegativeAnswer color={(decision === \"no\") ? \"white\" : \"#696969\"}/>\n                            </button>\n                            <div className=\"decision-tooltip\">no</div>\n                        </div>\n                        <div className=\"btn-decision-holder\">\n                            <button className=\"und\" style={{backgroundColor: (decision === \"und\") ? \"#4242e1\" : \"\"}}\n                                onClick={() => {handleKey(\"d\")}}\n                            >\n                                <UndecidedAnswer color={(decision === \"und\") ? \"white\" : \"#696969\"}/>\n                            </button>\n                            <div className=\"decision-tooltip\">undecided</div>\n                        </div>\n                    </div>\n\n                </div>\n            </form>\n        );\n    }\n\n\n    if(display === false){\n        paperToDisplay = <LoadIcon class=\"small\"/>\n    }else if (paperData.data){\n        paperToDisplay = (\n            <>\n                <h2 className=\"paper-title\">{paperData.data.title}</h2>\n                <HighLighter data={paperData.data.abstract} disabled={paperData.data.title===\"Finished!\"} className={\"paragraph\"} \n                    highlightedData={highlightedData} setHighlightedData={setHighlightedData}\n                />\n            </>\n        )\n    }\n\n    resultPart = (\n        <>\n            <KeyboardEventHandler handleKeys={['a', 's', 'd']}  handleFocusableElements onKeyEvent={(key) => handleKey(key)} />\n            <div className=\"right-side-wrapper filters\">\n                <h2>Filters:</h2>\n                <FiltersAccordion filtersList={filtersList}/>\n            </div>\n            {/*div wrapper to set height animation*/}\n            <div style={{height: paperHeight+\"px\",overflow:\"hidden\", transition: \"all 0.5s linear\"}}>\n                {/*content of the animated div*/}\n                <div className=\"left-side-wrapper s-paper\">\n                    {paperToDisplay}\n                </div>\n            </div>\n            <div style={{display: (paperData && paperData.data && paperData.data.title===\"Finished!\") ? \"none\" : \"\"}}>\n                <Tags display={display} selectedTags={selectedTags} setSelectedTags={setSelectedTags}\n                    availableTags={availableTags}\n                />\n            </div>\n            {formPart}\n        </>\n    );\n\n\n\n\n    let output = (\n        <>\n            <div className=\"single-predicate-screening-wrapper\">\n                {resultPart}\n            </div>\n        </>\n    );\n\n    return output;\n};\n\n\nexport default SinglePredicateScreening;","import React, {useState, useEffect, useRef, useContext} from \"react\";\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport InfoTooltip from \"components/modules/infoTooltip\";\n\nimport {projectScreeningDao} from 'dao/projectScreening.dao';\n\nimport {AppContext} from 'components/providers/appProvider';\n\nimport PositiveAnswer from 'components/svg/positiveAnswer';\nimport NegativeAnswer from 'components/svg/negativeAnswer';\nimport UndecidedAnswer from 'components/svg/undecidedAnswer';\n\nconst MultiPredicateForm = function ({paperData, tagsData, filtersList, nextPaper, setNextPaper,\n                                      clearHighlights, highlightedData, setHighlightedData, display, mountRef}) {\n\n    const [displayedFilter, setDisplayedFilter] = useState(filtersList[0]);\n    \n    const [filterVotes, setFilterVotes] = useState(filtersList.map((filter) => ({filter_id: filter.id, filter_predicate: filter.data.predicate, outcome: \"\"})));\n\n    const [filterHighlights, setFilterHighlights] = useState(undefined);\n\n    const [underlineOffset, setUnderlineOffset] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        setDisplayedFilter(filtersList[0]);\n        setFilterVotes(filtersList.map((filter) => ({filter_id: filter.id, filter_predicate: filter.data.predicate, outcome: \"\"})));\n        setFilterHighlights(filtersList.map(() => []));\n    }, [display])\n    \n    useEffect(() => {\n        let index = filterVotes.findIndex((vote) => (vote.outcome === \"\"));\n        if(index >= 0){\n            setTimeout(() => {\n                if(mountRef.current){\n                    setDisplayedFilter(filtersList[index]);\n                }\n            }, 400);\n            \n        }else{\n            setTimeout(() => {\n                if(mountRef.current){\n                    setDisplayedFilter(\"summary\");\n                }\n            }, 400);\n        }\n    },[filterVotes]);\n\n    useEffect(() => {\n        let index = filtersList.findIndex((filter) => (filter.id === displayedFilter.id));\n        if(index >= 0){\n            console.log(\"GOING NEXT FILTER\");\n            setUnderlineOffset(index * 30 + 2);\n            if(filterHighlights && filterHighlights[index].length !== 0){\n                console.log(\"__settting highligerhe data\");\n                console.log(filterHighlights[index]);\n                setHighlightedData(filterHighlights[index]);\n            }else{\n                console.log(\"__clearing highligerhe data\")\n                clearHighlights();\n            }\n        }else{\n            console.log(\"___summary tab\")\n            clearHighlights(\"disabled\");\n            setUnderlineOffset(filterVotes.length * 30 + 2);\n        }\n    }, [displayedFilter])\n\n    async function sendResults(){\n        let dataToSend = filterVotes.map((filterVote, index) => {\n            if(filterHighlights[index].length === 1 && filterHighlights[index][0].type === \"not_highlighted\"){\n                return {...filterVote, filterHighlights: []};\n            }else{\n                return {...filterVote, filterHighlights: filterHighlights[index]};\n            }\n        });\n        let screeningData = {\n            project_paper_id: paperData.id,\n            vote:{\n                answer: \n                    (filterVotes.filter(v => v.outcome === \"1\").length >= filterVotes.filter(v => v.outcome === \"0\").length) ?\n                        \"1\"\n                    :\n                        \"0\"\n                    ,\n                metadata: {type: \"multi-predicate\", highlights: dataToSend, tags: tagsData}\n            }\n        };\n        console.log(\"data to send _>\")\n        console.log(screeningData);\n        if(filterVotes.findIndex((vote) => (vote.outcome === \"\")) === -1){\n            console.log(\"sening\")\n            //call the dao\n            let resx = await projectScreeningDao.submitVote(screeningData);\n            \n            //error checking\n            if (mountRef.current && resx && resx.message) {\n                //pass error object to global context\n                appConsumer.setError(resx);  \n            }\n\n            else if(mountRef.current && resx.data){\n                //I trigger the effect to get a new paper\n                setNextPaper(!nextPaper);\n            }   \n        }\n    }\n\n    let output = <></>;\n    if(paperData && paperData.data && paperData.data.title!==\"Finished!\"){\n        output = (\n            <form className=\"light-modal m-p-form\" onSubmit={sendResults}>\n                <InfoTooltip className={\"s-p-form\"}>\n                    You can cast your vote by using the keyboard:<br/>\n                    <b>A : </b> <i>yes</i><br/>\n                    <b>S : </b> <i>no</i><br/>\n                    <b>D : </b> <i>undecided</i><br/>\n                </InfoTooltip>\n                <div className=\"filters-nav\">\n                {filtersList.map((element) =>\n                    <button key={element.id} type=\"button\" className=\"filter-btn\" onClick={() => {setDisplayedFilter(element)}}>\n                        {element.data.name || \"[!]\"}\n                    </button>\n                )}\n                <button className=\"filter-btn summary\" type=\"button\" onClick={() => {setDisplayedFilter(\"summary\")}}>\n                    {\"[V]\"}\n                </button>\n                <div className=\"underline\" style={{left: underlineOffset + \"px\"}}></div>\n                </div>\n                <FilterScreen filter={displayedFilter} display={display} \n                    filterHighlights={filterHighlights} setFilterHighlights={setFilterHighlights}\n                    filterVotes={filterVotes} setFilterVotes={setFilterVotes} \n                    highlightedData={highlightedData} setHighlightedData={setHighlightedData}\n                mountRef={mountRef}/>\n            </form>\n        );\n    }\n\n    return output;\n\n\n};\n\nconst FilterScreen = function({ filter, display, \n                                filterHighlights, setFilterHighlights,\n                                filterVotes, setFilterVotes, \n                                highlightedData, setHighlightedData, mountRef}) {\n\n\n    const [currentOutcome, setCurrentOutcome] = useState(\"\");\n    const currentIndex = useRef(filterVotes.findIndex((filterx) => (filterx.filter_id === filter.id)));\n\n    useEffect(() => {\n        if(filter.id){\n            currentIndex.current = filterVotes.findIndex((filterx) => (filterx.filter_id === filter.id));\n            setCurrentOutcome(filterVotes[currentIndex.current].outcome);\n        }\n    }, [filter])\n\n    useEffect(() => {\n        if(filter.id && filterHighlights && highlightedData !== filterHighlights[currentIndex.current]){\n            console.log(\"updating highlight of tab : \" + currentIndex.current);\n            let localHighlight = filterHighlights;\n            localHighlight[currentIndex.current] = highlightedData;\n            setFilterHighlights([...localHighlight]);\n        }\n    }, [highlightedData])\n\n    async function sendSubmission(key){\n\n        let localOutcome = \"\";\n        \n        switch (key) {\n            case \"s\":\n                setCurrentOutcome(\"0\");\n                localOutcome = \"0\";\n                break;\n            case \"a\":\n                setCurrentOutcome(\"1\");\n                localOutcome = \"1\";\n                break;\n            case \"d\":\n                setCurrentOutcome(\"2\");\n                localOutcome = \"2\";\n                break;\n            default:\n                break;\n        }\n        setFilterVotes(\n            filterVotes.map((vote) => ((vote.filter_id === filter.id) ? {...vote, outcome : localOutcome} : vote))\n        );\n    }\n    function handleKey(key){\n        if(document.activeElement.type !== \"text\" && display){\n            sendSubmission(key);\n        }\n    }\n\n    let output = \"\"\n\n    if(filter.id){\n        output = (\n            <>\n                <KeyboardEventHandler handleKeys={['a', 's', 'd']}  handleFocusableElements onKeyEvent={(key) => handleKey(key)} />\n                <div className=\"filter-data\">\n                    <h2 className=\"filter-title\">\n                        {filter.data.predicate}\n                    </h2>\n                    <p className=\"criteria-type\">\n                        inclusion criteria:\n                    </p>\n                    <p className=\"criteria-description\">\n                        {filter.data.inclusion_description || <i>empty criterion</i>}\n                    </p>\n                    <p className=\"criteria-type\">\n                        exclusion criteria:\n                    </p>\n                    <p className=\"criteria-description\">\n                        {filter.data.exclusion_description || <i>empty criterion</i>}\n                    </p>\n                </div>\n                <div className=\"screening-choice multi-predicate\">\n                    <h3 className=\"filter-question\">Is the paper relevant for this eligibility criterion?</h3>\n                    <p className=\"hl-tip\">Please highlight in the text the evidence that supports your answer</p>\n                    \n                    <div className=\"yes-no-und\">\n                        <div className=\"btn-decision-holder\">\n                            <button className=\"yes\" type=\"button\" style={{backgroundColor: (currentOutcome === \"1\") ? \"#0b8a42\" : \"\"}}\n                                onClick={() => {handleKey(\"a\")}}\n                            >\n                                <PositiveAnswer color={(currentOutcome === \"1\") ? \"white\" : \"#696969\"}/>\n                            </button>\n                            <div className=\"decision-tooltip\">yes</div>\n                        </div>\n                        <div className=\"btn-decision-holder\">\n                            <button className=\"no\" type=\"button\" style={{backgroundColor: (currentOutcome === \"0\") ? \"#c31f1f\" : \"\"}}\n                                onClick={() => {handleKey(\"s\")}}\n                            >\n                                <NegativeAnswer color={(currentOutcome === \"0\") ? \"white\" : \"#696969\"}/>\n                            </button>\n                            <div className=\"decision-tooltip\">no</div>\n                        </div>\n                        <div className=\"btn-decision-holder\">\n                            <button className=\"und\" type=\"button\" style={{backgroundColor: (currentOutcome=== \"2\") ? \"#4242e1\" : \"\"}}\n                                onClick={() => {handleKey(\"d\")}}\n                            >\n                                <UndecidedAnswer color={(currentOutcome === \"2\") ? \"white\" : \"#696969\"}/>\n                            </button>\n                            <div className=\"decision-tooltip\">undecided</div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }else{\n        output = (\n            <div className=\"m-p-screening-summary\">\n                {filterVotes.map((vote, index)=>(\n                    <div key={index} className=\"filter-vote-summary\"><p>{vote.filter_predicate}</p> <div className=\"outcome-result\">\n                        {(vote.outcome === \"und\") ? \"undecided\" : vote.outcome}\n                    </div></div>\n                ))}\n                <button type=\"sumbit\" className=\"outcomes-submission\" disabled={(filterVotes.findIndex((vote) => (vote.outcome === \"\")) !== -1)}>\n                    Submit your outcomes\n                </button>\n            </div>\n        );\n    }\n\n    return output;\n};\n\nexport default MultiPredicateForm;","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Link} from 'react-router-dom';\n\nimport {projectScreeningDao} from 'dao/projectScreening.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\nimport MultiPredicateForm from \"components/screenings_page/multiPredicateForm\";\nimport HighLighter from 'components/modules/highlighter';\nimport Tags from 'components/modules/paperTags';\n\nconst _array = require('lodash/array');\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst MultiPredicateScreening = function ({screening, filtersList}) {\n\n    const mountRef = useRef(false);\n\n    //fetch data\n    const [paperData, setPaperData] = useState(undefined);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //paper wrapper-height js animation\n    const [paperHeight, setPaperHeight] = useState(220)\n\n    //highlighted data\n    const [highlightedData, setHighlightedData] = useState([]);\n\n    //selected tags\n    const [selectedTags, setSelectedTags] = useState([]);\n\n    //available tags\n    const availableTags = useRef(screening.data.tags);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //bool to trigger next paper fetch\n    const [nextPaper, setNextPaper] = useState(false);\n\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    useEffect(() =>{\n        if(display){\n            setPaperHeight(document.getElementsByClassName('s-paper')[0].clientHeight+20);\n        }\n    }, [display])\n\n    //this will run on mount and every time the url params change\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let mnt = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            setDisplay(false);\n            console.log(\"Fetching paper\")\n            availableTags.current = _array.union(availableTags.current, selectedTags);\n            setSelectedTags([]);\n            //call dao for getting next paper\n            let res = await projectScreeningDao.getProjectPaperToScreen(screening.id);\n            \n            console.log(res);\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setPaperData({data: {title:\"Finished!\", \n                abstract:(\n                    <>There are no more papers to screen in this project<br/>\n                        <Link to={\"/screenings\"}>Go back to screenings list</Link>\n                    </>\n                    )}});\n                //show the page\n                setDisplay(true);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n                //update state\n                //console.log(res.results[2])\n                setPaperData(res);\n                setHighlightedData([{data: res.data.abstract, start: 0, end: res.data.abstract.length-1, type:\"not_highlighted\"}])\n                //show the page\n                setDisplay(true);\n            }\n        };\n\n\n        fetchData();\n        \n\n        //when the component will unmount or the useEffect will finish\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n\n    }, [screening, nextPaper]);  //re-execute when these variables change\n\n    function clearHighlights(type = \"not_highlighted\"){\n        if(highlightedData && paperData){\n            setHighlightedData([{data: paperData.data.abstract, start: 0, end: paperData.data.abstract.length-1, type: type}])\n        }\n    }\n    let resultPart = \"\";\n    let paperToDisplay = \"\";\n\n    //if I don't have paper to display yet\n    if(display === false){\n        paperToDisplay = <LoadIcon class=\"small\"/>\n    }else if(paperData.data){\n        paperToDisplay = (\n            <>\n                <h2 className=\"paper-title\">{paperData.data.title}</h2>\n                <HighLighter data={paperData.data.abstract} disabled={paperData.data.title===\"Finished!\"} className={\"paragraph\"} \n                    highlightedData={highlightedData} setHighlightedData={setHighlightedData}\n                />\n            </>\n        )\n    }\n\n    resultPart = (\n        <>\n            <div className=\"right-side-wrapper tags-holder\" style={{display: (paperData && paperData.data && paperData.data.title===\"Finished!\") ? \"none\" : \"\"}}>\n                <Tags className={\"right\"} display={display} selectedTags={selectedTags} setSelectedTags={setSelectedTags}\n                    availableTags={availableTags}\n                />\n            </div>\n            {/*div wrapper to set height animation*/}\n            <div style={{height: paperHeight+\"px\",overflow:\"hidden\", transition: \"all 0.5s linear\"}}>\n                {/*content of the animated div*/}\n                <div className=\"left-side-wrapper s-paper\">\n                {paperToDisplay}\n                </div>\n            </div>\n            {(filtersList.length === 0) ? \n                <p className=\"empty-filters-description\"> There are no filters here, add new filters before starting here</p>\n                :\n                <>\n                <MultiPredicateForm paperData={paperData}\n                    tagsData={selectedTags} nextPaper={nextPaper} setNextPaper={setNextPaper}\n                    filtersList={filtersList} display={display} mountRef={mountRef}\n                    clearHighlights={clearHighlights}\n                    highlightedData={highlightedData} setHighlightedData={setHighlightedData}\n                />\n                </>\n            }\n        </>\n    );\n\n    let output = (\n        <>\n            <div className=\"multi-predicate-screening-wrapper\">\n                {resultPart}\n            </div>\n        </>\n    );\n\n    return output;\n};\n\n\nexport default MultiPredicateScreening;","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Route, Switch, withRouter} from 'react-router-dom';\n\nimport {projectsDao} from 'dao/projects.dao';\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\nimport {projectScreeningDao} from 'dao/projectScreening.dao';\nimport Forbidden from 'components/svg/forbidden';\n\nimport {AppContext} from 'components/providers/appProvider';\nimport SinglePredicateScreening from 'components/screenings_page/singlePredicate';\nimport MultiPredicateScreening from 'components/screenings_page/multiPredicate';\nimport LoadIcon from \"components/svg/loadIcon\";\n\n\n/**\n *this component will show a screenings page\n */\nconst ScreeningPage = (props) => {\n\n    const mountRef = useRef(false); \n\n    //screening object of page\n    const [screening, setScreening] = useState({data: {name: \"loading...\"}});\n\n    //flag for unauthorized user\n    const [unauthorized, setUnauthorized] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    const screening_id = props.match.params.id;\n\n    //filters of the project\n    const [filtersList, setFiltersList] = useState([]);\n\n    //display flag\n    const [display, setDisplay] = useState(false)\n\n    //set the project title\n    useEffect(() => {\n        if(mountRef.current && (screening.data.name === \"loading...\" || screening.data.name === \"UNAUTHORIZED OR INEXISTENT PROJECTS\")){\n            appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">{screening.data.name}</h2> </div>);//I set the page title\n        }else if(mountRef.current){\n            appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">{screening.data.name} screening</h2> </div>);//I set the page title\n            appConsumer.setProjectName(screening.data.name);\n        }\n\n    }, [screening.data.name]);\n\n    useEffect(() => {\n\n        mountRef.current = true;\n\n        //setDisplay(false);\n        //a wrapper function ask by react hook\n        const fetchProjectData = async () => {\n\n\n            let res = await projectScreeningDao.getScreening(screening_id);\n            console.log(res);\n\n            //error checking\n            //if unauthorized user\n            if(mountRef.current && res.payload && (res.payload.statusCode === 404 || res.payload.statusCode === 401 || res.payload.message === \"the token does not match any user!\" || res.payload.message === \"empty token id in header, the user must first login!\")){\n                setUnauthorized(true);\n                setScreening({data: {name: \"UNAUTHORIZED OR INEXISTENT SCREENING\"}});\n            }\n            //if the component is still mounted and there is some other errors\n            else if (mountRef.current && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and res isn't null\n            else if (mountRef.current && res ) {\n                setUnauthorized(false);\n                //update state\n                setScreening(res);\n\n                //call the dao\n                let resx = await projectFiltersDao.getFiltersList({\"project_id\" : res.project_id});\n                console.log(resx);\n\n                //error checking\n                //if the component is still mounted and  is 404 error\n                if (mountRef.current && resx && resx.message === \"Not Found\") {\n                    setFiltersList([]);\n                }\n                //if the component is still mounted and  there are some other errors\n                else if (mountRef.current && resx && resx.message) {\n                    //pass error object to global context\n                    appConsumer.setError(resx);\n                }\n                //if the component is still mounted and  res isn't null\n                else if (mountRef.current && resx) {\n                    //update state\n                    setFiltersList([...resx.results]);\n                }\n            }\n\n            setDisplay(true);\n            \n        };\n\n        fetchProjectData();\n        //when the component will unmount\n        return () => {\n            mountRef.current = false;\n        };\n    }, [screening_id, appConsumer.user]); //re-execute when these variables change\n\n\n    let output;\n\n    //if the page is loading\n    if(unauthorized){\n        output = (\n            <div className=\"forbidden-wrapper\">\n                <Forbidden/>\n                <p>This screening does not exist or maybe you are not allowed to see it</p>\n            </div>\n        )\n    }\n    else if(display && screening.data.manual_screening_type === \"single-predicate\"){\n        output = (\n            <SinglePredicateScreening screening={screening} filtersList={filtersList}/>\n        );\n    }\n    else if(display && screening.data.manual_screening_type === \"multi-predicate\"){\n        output = (\n            <MultiPredicateScreening screening={screening} filtersList={filtersList}/>\n        );\n    }else{\n        output = <LoadIcon/>\n    }\n\n    return output;\n};\n\n\n\nexport default withRouter(ScreeningPage);\n","import React, {useContext} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n\nimport {AppContext} from 'components/providers/appProvider';\n\nimport Home from 'components/home';\nimport ProjectsList from 'components/projects_page/projectsList';\nimport ProjectPage from 'components/projects_page/projectPage';\nimport ScreeningsList from 'components/screenings_page/screeningsList';\nimport ScreeningPage from 'components/screenings_page/screeningPage';\nimport LoadIcon from 'components/svg/loadIcon';\nimport PageNotFound from \"./modules/pageNotFound\";\n\n/**\n * compotent main of page\n */\nconst Main = function(props){\n\n    let output = \"\";\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //If I'm fecthing the user I dispay a loading icon\n    if(appConsumer.userFetch){\n        output = (<LoadIcon/>);\n    }\n    //I render routes only if the user is logged\n    else if(appConsumer.user){\n        output = (\n            <Switch>\n                <Route exact path=\"/\" render={() => <Home/> }/>\n                <Route exact path=\"/projects\" render={(props) => <ProjectsList {...props} />}/>\n                <Route path=\"/projects/:id\" render={(props) => <ProjectPage {...props} />}/>\n                <Route exact path=\"/screenings\" render={() => <ScreeningsList />}/>\n                <Route path=\"/screenings/:id\" render={() => <ScreeningPage />}/>\n                <Route render={(props) => <PageNotFound/>}/>\n            </Switch>\n        );\n    }\n    else{\n        output = (\n            <Switch>\n                <Route path=\"/projects/:id\" render={(props) => <ProjectPage {...props} />}/>\n                <Route render={() => <Home/>}/>\n            </Switch>\n        );\n    }\n\n    return output;\n};\n\nexport default Main;","import React, {useContext} from \"react\";\n\nimport {AppContext} from \"components/providers/appProvider\";\n\n/**\n * this is the head component of page\n * @param props\n * @param \"menu_elements\" contains the list of menu-items\n */\n\n\nconst NavBar = function(props){\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    \n    return (\n        <div className=\"navigation-wrapper\">\n\n            {/*background of the menu-bar*/}\n            <nav className={appConsumer.user ? \"main-nav\" : \"main-nav nav-title-to-left\"}>\n                {appConsumer.title}\n            </nav>\n            {props.children}\n\n        </div>\n    );\n}\n\nexport default NavBar;","import React, {useContext} from \"react\";\nimport { AppContext } from 'components/providers/appProvider'\n\nimport Image from 'components/modules/image';\n/*\n* this is the component that visualize user information box\n* */\nconst UserInfo = function(props){\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //not logged in as default\n    let output = (\n        <div className=\"user\">\n            <h3>you're not logged in</h3>\n        </div>\n    );\n\n    //if user is logged in I load his data\n    if(appConsumer.user){\n        output = (\n            <div className=\"user\" >\n                <Image className=\"face\" alt=\"profile picture\" src={appConsumer.user.image}/>\n                <div className=\"user-info\">\n                    <span className=\"name\">{appConsumer.user.name}</span>\n                    <span className=\"surname\">{appConsumer.user.surname}</span>\n                </div>\n            </div>\n        );\n    }\n\n    return output;\n\n};\n\nexport  default  UserInfo;","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst MenuButton = function (props) {\n\n    return (\n\n        <svg id=\"menu-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n             x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M214,482.1\"/>\n            <line className=\"st-t\" x1=\"172\" y1=\"482.1\" x2=\"172\" y2=\"482.1\"/>\n            <line className=\"st-m\" x1=\"500\" y1=\"482.1\" x2=\"500\" y2=\"482.1\"/>\n            <line className=\"st-b\" x1=\"828\" y1=\"482.1\" x2=\"828\" y2=\"482.1\"/>\n        </svg>\n    );\n};\n\nexport default MenuButton;\n","import React, {useState, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\n\nimport { AppContext } from 'components/providers/appProvider';\n\nimport UserInfo from 'components/navigation/userInfo';\nimport config from 'config/index';\nimport MenuButton from 'components/svg/menuButton';\nimport Cover from 'components/modules/cover';\n\n/**\n *this is the side menu component\n */\nconst SideMenu = function (props) {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //bool to control the visualization of menu\n    const [shown, setShown] = useState(false);\n    const [firstTime, setFirstTime] = useState(true);\n\n\n    //function to open/close the menu\n    function handleToggleMenuButton() {\n        setShown(!shown);\n        setFirstTime(false);\n    }\n\n    //function to close the menu\n    function handleMenuBlur(e) {\n        setShown(false);\n    }\n\n    /**\n     * logout handler function\n     */\n    async function logout (e){\n        console.log(\"logging out\");\n\n        //this way we won't trigger the menu animation again if the user logs in again \n        setFirstTime(true);\n        //remove token from storage\n        localStorage.removeItem(\"userToken\");\n        //remove user info from context\n        appConsumer.setUser(null);\n\n    }\n\n    //change the class of element by menu state\n    var clsidemenu = \"modal side-menu up\";\n    var clsbutton = \"button-wrapper close\";\n\n    if (firstTime) {\n        clsidemenu = \"modal side-menu\"\n    }\n    if (shown) {\n        clsbutton = \"button-wrapper open\"\n        clsidemenu = \"modal side-menu down\"\n    }\n\n    if(appConsumer.user){\n        return (\n            <div className=\"menu\">\n                <Cover cls={(shown) ? \"full-screen-transparent\" : \"\"} handler={handleMenuBlur}/>\n                <div className={clsbutton} onClick={handleToggleMenuButton}>\n                    <MenuButton/>\n                </div>\n\n                <div className={clsidemenu} tabIndex={-1}>\n\n                    {/*user info box*/}\n                    <UserInfo/>\n                    <PrintMenu handleMenuBlur={handleMenuBlur}/>\n                    <div className=\"entry-holder\">\n                        <button type=\"button\" className=\"menu-option\" onClick={logout} onMouseUp={handleMenuBlur}>Log out</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }else{\n        return (\n            <div className=\"menu\">\n            </div>\n        );\n    }\n};\n\n/**\n *internal component that is used only for print menu items\n */\nconst PrintMenu = function (props) {\n\n    let output = (\n        config.menu_list.map((element, index) => (\n                <div key={index} className=\"entry-holder\">\n                    <Link to={element.link} className=\"menu-option\"\n                          onMouseUp={props.handleMenuBlur}>{element.content}</Link>\n                </div>\n            )\n        )\n    );\n    return output;\n\n\n}\n\n\nexport default SideMenu;","import React, {useContext} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport {AppContext} from 'components/providers/appProvider';\n\n\nconst BreadCrumbs = function(props) {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n    \n    let bcPath = <></>;\n\n    function createBreadCrumbs(){\n\n        //I extract the location from the router\n        const { location } = props;\n\n        //I split the pathname by '/' and remove empty strings\n        let path = location.pathname.split('/').filter(x => x);\n\n        //will contain the partial url\n        let href= \"/\";\n        //will contain the link element\n        let link;\n        //array of JSX elements containing the links\n        let bc = [];\n\n        //I don't print ' > ' at the end if there's only one link\n        if(path.length === 0){\n            link = (<div key={0}></div>);\n        }else{\n            link = (<Link key={0} to={href}>Home<span> > </span></Link>);\n        }\n\n        //I push the initial breadcrumb (</> if we are in the home)\n        bc.push(link);\n\n        //I iterate over the paths taking care of links\n        for(let i = 0; i < path.length; i++){\n\n            //avoids the path '/' and the trailing slash\n            if(href === \"/\"){\n                href += path[i];//I update the partial url\n            }else{\n                href += (\"/\" + path[i]);//I update the partial url\n            }\n            \n            //I check whether is the ID of a project \n            if(path[i-1] && path[i-1] === \"projects\"){\n                //I retrieve the project title from the context\n                link = (<Link key={i+1} to={href}>{appConsumer.projectName}</Link>);\n            }else if(path[i-1] && path[i-1] === \"screenings\"){\n                //I retrieve the project title from the context\n                link = (<span key={i+1}>{appConsumer.projectName} screening</span>);\n            }else{\n                switch (path[i]) {\n                    case \"projects\":\n                        link = (<Link key={i+1} to={href}>My Projects</Link>);\n                        break;\n                    case \"screenings\":\n                        link = (<Link key={i+1} to={href}>My Screenings</Link>);\n                        break;\n                    case \"searchsimilar\":\n                        link = (<Link key={i+1} to={href}>Search for similar papers</Link>);\n                        break;\n                    case \"searchautomated\":\n                        link = (<Link key={i+1} to={href}>Intelligent papers search</Link>);\n                        break;\n                    case \"single_predicate\":\n                        link = (<Link key={i+1} to={href}>Single predicate Mode</Link>);\n                        break;\n                    case \"multi_predicate\":\n                        link = (<Link key={i+1} to={href}>Multi predicate Mode</Link>);\n                        break;\n                    case \"screening\":\n                        link = (<span key={i+1}>Screening</span>);\n                        break;\n                    default:\n                        link = (<Link key={i+1} to={href}>{path[i].charAt(0).toUpperCase() + path[i].slice(1)}</Link>);\n                        break;\n                }\n            }\n\n            //I push the link into the list of breadcrumbs\n            bc.push(link);\n\n            //I put ' > ' at the end\n            if(i < (path.length - 1)){\n                bc.push(<span key={i+9999}>{\" > \"}</span>);\n            }\n            \n        }\n        return bc;\n\n    }\n\n    if(appConsumer.user){\n        bcPath = createBreadCrumbs();\n    }\n    \n\n    return (\n        <div className=\"relative-header\">\n            <div className=\"breadcrumbs\">{bcPath}</div>\n        </div>\n    );\n\n}\n\nexport default withRouter(BreadCrumbs);\n","import React, {useContext, useRef} from \"react\";\n\nimport { AppContext } from 'components/providers/appProvider'\nimport CloseButton from 'components/svg/closeButton';\n\n/**\n * component for notification\n */\nconst Notification = function (props) {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    const notificationTimeout = useRef();\n\n    let output = <></>;\n\n    //if there's a notification I sent it in input\n    if(appConsumer.notificationMessage){\n\n        //I automatically remove it after 5 seconds\n        notificationTimeout.current = setTimeout(() => {\n            appConsumer.setNotificationMessage(undefined);\n        }, 5000);\n\n        output = (\n            <div className=\"top-right-notification\">\n                <div className=\"message-content\">\n                    {appConsumer.notificationMessage}\n                </div>\n                <button type=\"button\" className=\"close-notification-btn\" \n                    onClick={(e) => {\n                        appConsumer.setNotificationMessage(undefined);\n                        clearTimeout(notificationTimeout.current);\n                    }}>\n                    <CloseButton/>\n                </button>\n            </div>\n        );\n    }\n    return output;\n};\n\nexport default Notification;","import React, {useContext} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {GoogleLogin} from 'react-google-login';\n\nimport config from 'config/index'\n\nimport {AppContext} from 'components/providers/appProvider';\n\n\n/**\n * this component handles the google login and logout from the platform\n */\nconst UsersLogin = function (props) {\n\n    //output var\n    let output = <></>;\n\n    //get the localStorage object\n    const storage = window.localStorage;\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    /**\n     * google response handler function\n     */\n    async function responseGoogle(response){\n        //if the google login is succeeded\n        if (response.tokenId) {\n            console.log(response.profileObj);\n            let user = {\"email\": response.profileObj.email, \n                        \"name\": response.profileObj.givenName, \n                        \"surname\": response.profileObj.familyName, \n                        \"image\": response.profileObj.imageUrl};\n\n            // set the user data in context provider\n            appConsumer.setUser(user);\n            //and save the token as string in localStorage\n            storage.setItem(\"userToken\", response.tokenId);\n\n            \n        }\n    }\n\n    //part of visualization-----------------------------\n\n    //if there's no token or I'm not fetching an user\n    if (!appConsumer.userFetch && !appConsumer.user) {\n        output = (\n            <div className=\"login-holder\">\n                <GoogleLogin\n                    clientId={config.google_login_client_id}\n                    buttonText=\"Login\"\n                    onSuccess={responseGoogle}\n                    onFailure={responseGoogle}\n                    cookiePolicy={'single_host_origin'}\n                />\n            </div>\n        );\n    }\n    return output;\n\n}\n\nexport default UsersLogin;\n","import React, {useEffect} from 'react';\n\nimport Main from 'components/main';\n\nimport NavBar from 'components/navigation/navBar';\nimport SideMenu from 'components/navigation/sideMenu';\nimport BreadCrumbs from 'components/navigation/breadCrumbs';\n\nimport Notification from 'components/modules/notification';\n\nimport UsersLogin from 'components/modules/usersLogin';\n\n\nimport  {AppProvider} from 'components/providers/appProvider';\n\n\n/**\n *this is the start point of application\n */\n\nconst App = function(props) {\n\n\n        return (\n                <div className=\"app\">\n\n                    {/*mount a root context object*/}\n                    <AppProvider testing={props.testing}>\n\n                        <NavBar>\n                            {/*component menu*/}\n                            <SideMenu/>\n                        </NavBar>\n\n                        <BreadCrumbs/>\n\n                        <Notification/>\n\n                        <div className=\"main-wrapper\">\n\n                            <Main/>\n\n                            <UsersLogin/>\n\n                        </div>\n                        \n                    </AppProvider>\n                </div>\n        );\n\n}\n\nexport default App;\n","import React from 'react';\nimport {HashRouter as Router} from 'react-router-dom';\n\nimport App from 'App';\n\n/**\n *this is the router wrapper of application\n */\n\nconst AppRouter = function(props) {\n\n\n        return (\n            <Router>\n                <App/>\n            </Router>\n        );\n\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from 'AppRouter';\nimport * as serviceWorker from 'serviceWorker';\n\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}