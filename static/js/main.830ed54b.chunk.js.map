{"version":3,"sources":["utils/conn.js","components/svg/editButton.js","components/navigation/navBar.js","components/modules/error.js","config/index.js","dao/users.dao.js","components/providers/appProvider.js","components/home.js","dao/projects.dao.js","components/svg/loadIcon.js","components/svg/closeButton.js","components/forms/projectForm.js","components/modules/pagination.js","utils/index.js","components/modules/cover.js","components/svg/optionsButton.js","components/modules/sideOptions.js","components/projects/projectsList.js","dao/paper.dao.js","dao/projectPapers.dao.js","components/svg/selectTick.js","components/forms/checkbox.js","components/svg/radioTick.js","components/forms/radiobox.js","components/svg/searchButton.js","components/svg/searchSimilarButton.js","components/papers/printPapersList.js","components/svg/selectArrow.js","components/forms/select.js","components/svg/orderArrow.js","components/svg/removeButton.js","components/forms/searchform.js","dao/updateFile.dao.js","components/svg/goButton.js","components/forms/searchSimilarPapers.js","components/forms/searchSimilarForm.js","components/papers/papersList.js","components/forms/selectformik.js","components/forms/custompaper.js","components/papers/customPaperPage.js","components/projects/projectDescription.js","components/projects/projectName.js","components/projects/projectPage.js","components/main.js","components/navigation/userInfo.js","components/svg/menuButton.js","components/navigation/sideMenu.js","components/breadCrumbs.js","components/usersLoginLogout.js","App.js","serviceWorker.js","index.js"],"names":["abortController","abortRequestType","EditButton","_ref","confirm","react_default","a","createElement","Fragment","version","id","xmlns","xmlnsXlink","x","y","viewBox","className","points","d","NavBar","props","appConsumer","useContext","AppContext","title","children","Error","output","useEffect","setError","error","payload","statusCode","message","name","style","textAlign","type","onClick","window","history","back","timeOutTime","localStorage","request","_callee","url","options","signal","requestOptions","timer","response","data","timeOutError","regenerator_default","wrap","_context","prev","next","AbortController","Object","assign","credentials","mode","setTimeout","abort","fetch","sent","clearTimeout","parseResponseData","checkResponseStatus","abrupt","t0","stop","_callee2","queryData","query","key","jsonHeaders","_args2","arguments","_context2","length","undefined","encodeURIComponent","slice","Headers","append","getItem","method","headers","_callee3","_context3","_callee4","bodyData","body","_args4","_context4","JSON","stringify","_callee5","_args5","_context5","_callee6","_args6","_context6","status","statusText","_callee7","contentType","_context7","get","indexOf","text","formData","blob","json","http","post","delete","put","postFile","abortRequest","console","log","config","home","search","scopus_search","search_similar","projects","papers","customPapers","userLogin","userInfo","userLogout","menu_list","content","link","max_total_number_for_results","pdf_parse_server","google_login_client_id","usersDao","postTokenId","getUserByTokenId","logoutUser","React","createContext","AppProvider","_useState","useState","_useState2","slicedToArray","user","setUser","_useState3","_useState4","userFetch","setUserFetch","_useState5","_useState6","_useState7","_useState8","setTitle","_useState9","_useState10","projectName","setProjectName","contextObject","storage","asyncToGenerator","mark","res","apply","this","getUserData","Provider","value","modules_error","Home","fontSize","fontWeight","_args","project_id","projectsDao","getProjectsList","getProject","postProject","putProject","deleteProject","LoadIcon","class","CloseButton","x1","y1","x2","y2","ProjectForm","yup","require","projectValidationSchema","object","shape","string","required","description","formik_esm","initialValues","validationSchema","onSubmit","_ref2","values","setSubmitting","push","_x","_x2","validateOnBlur","_ref3","errors","touched","isSubmitting","validateField","setErrors","handleChange","visibility","e","setVisibility","closeButton","borderBottom","placeholder","onChange","component","disabled","Pagination","start","count","totalResults","path","queryString","location","href","split","newQueryString","arryQuery","i","parameterName","setStartAndCountInUrl","firstPage","lastPage","listPage","paged","Math","floor","totalPage","ceil","react_router_dom","to","paginationLength","display","map","element","index","margin","arrayOfObjectsContains","b","_loop","some","v","_ret","join","base","charAt","createQueryStringFromObject","keys","getIndexOfObjectArrayByKeyAndValue","array","Cover","cls","handler","DeleteButton","SideOptions","target","focused","setFocused","onBlur","onMouseDown","optionsButton","padding","border","PrintList","maps","projectsList","handleDelete","sideOptions","modules_sideOptions","date_last_modified","ProjectsList","setProjectsList","setTotalResults","setDisplay","toggleform","setToggleForm","params","parse","createQueryData","_handleDelete","newProjectsList","filter","project","alert","mounted","even_projs","odd_projs","objectSpread","orderBy","results","concat","fetchData","loadIcon","cover","projectsList_PrintList","match","pagination","projectForm","paperDao","selectById","searchSimilar","paper_id","projectPapersDao","getPapersList","getPaper","postPaperIntoProject","postCustomPaperIntoProject","putPaper","deletePaper","SelectTick","attributeName","dur","repeatCount","fill","from","CheckBox","val","label","isChecked","tick","setTick","selectTick","checked","RadioTick","cx","cy","r","RadioBox","radioTick","SearchButton","SearchSimilarButton","PrintScoupusSearchList","papersList","handlePaperSelection","selectedEidList","handleSideOptions","_handleSideOptions","forms_checkbox","eid","includes","authors","year","lib_default","abstract","lines","ellipsis","moreText","lessText","PrintPapersList","localPaperList","setLocalPaperList","_x3","_x4","_handleSideOptions2","newPapersList","paper","doi","SelectArrow","attributeType","begin","Select","selected","handleFocus","document","getElementById","beginElement","tabIndex","onFocus","selectArrow","borderLeft","borderRight","borderTop","data-value","OrderArrow","up","destination","setDestination","transform","RemoveButton","_","orderByOptions","searchByOptions","endYear","Date","getFullYear","yearOptions","toConsumableArray","range","String","SelectedPapersListBox","selectedPapersList","opacity","pointerEvents","removeButton","height","SearchForm","selectedPapersListFromStorage","setPapersList","queryUrl","scopus","searchBy","sort","googleScholar","arXiv","setSelectedPapersList","keywords","setKeyWords","_useState11","_useState12","source","setSource","_useState13","_useState14","setSearchBy","_useState15","_useState16","setYear","_useState17","_useState18","setUp","handleSelection","parseInt","getAttribute","handelOrder","event","newList","setItem","selectAllPapers","allPapersInPage","tmpList","uniqBy","_handleAddPapers","_arrayEid","preventDefault","arrayEid","removeItem","_handleSendSearch","_queryString","handleOnInputChange","newSource","formPart","position","searchButton","searchSimilarButton","radiobox","singleYear","resultPart","forms_select","orderArrow","searchform_SelectedPapersListBox","printPapersList_PrintScoupusSearchList","updateFileDao","updatePdf","GoButton","SearchSimilarPapers","close","input","paperInfo","fetching","setPaperInfo","setPaperFile","topRightButton","inputElement","useRef","_handleSubmission","current","files","goButton","ref","click","SearchSimilarForm","similarPaperDataFromStorage","similarPaperData","setSimilarPaperData","similarPaperFile","setSimilarPaperFile","_useState19","_useState20","_useState21","_useState22","similarFormVisibility","setSimilarFormVisibility","_useState23","_useState24","similarPaperFetch","setSimilarPaperFetch","paperData","_res","test","FormData","fetchDataSimilarity","marginTop","searchSimilarPapers","boxShadow","searchSimilarForm_SelectedPapersListBox","PapersList","printPapersList_PrintPapersList","form","setSelected","setFieldValue","paperType","PaperForm","paperValidationSchema","number","min","max","integer","customPaper","document_type","toString","source_title","abstract_structured","filter_oa_include","filter_study_include","notes","manual","projectId","render","_ref4","field","selectformik","CustomPaperPage","paperDataFetch","setPaperDataFetch","setPaperData","displayForm","setDisplayForm","file","custompaper","ProjectDescription","update","date_created","editing","setEditing","formatDate","date","defaultValue","width","focus","editButton","ProjectName","ProjectPageHead","notFound","lc","hash","substr","slider","es","flipKey","flipId","ProjectPage","setProject","setNotFound","updateProject","_updateProject","new_name","new_desc","reload","projects_projectName","projectPage_ProjectPageHead","react_router","exact","projectDescription","papers_papersList","searchform","searchSimilarForm","customPaperPage","Main","projects_projectsList","projectPage","UserInfo","alt","src","image","surname","MenuButton","PrintMenu","onMouseUp","handleMenuBlur","SideMenu","shown","setShown","firstTime","setFirstTime","handleToggleMenuButton","clsidemenu","clsbutton","menuButton","sideMenu_PrintMenu","BreadCrumbs","pathname","bc","UsersLoginLogout","responseGoogle","_responseGoogle","userLoginData","tokenId","token","_logout","google_login","clientId","buttonText","onSuccess","onFailure","cookiePolicy","App","appProvider_AppProvider","navBar","sideMenu","breadCrumbs","usersLoginLogout","main","Boolean","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.830ed54b.chunk.js","sourcesContent":["/*this is the file to communicate with backend by fetch request*/\n\n//signal to abort the request\nlet abortController;\n//int to know abort error type\nlet abortRequestType;\n//10seconds for timeout\nlet timeOutTime = 10 * 1000;\n\n//get the localStorage object\nconst localStorage = window.localStorage;\n\n/**\n * abort all request in progeress by user\n */\nfunction abortRequest() {\n    abortController.abort();\n    abortRequestType = 1;\n    console.log(\"abort\")\n\n}\n\n/**\n * abort all request if timeout\n */\nfunction timeOut() {\n\n    abortController.abort();\n    abortRequestType = 2;\n}\n\n/**\n * create a basic fetch request\n * @param url\n * @param options request config\n * @param {int} timeOutTime\n * @return {object} response data\n\n */\nasync function request(url, options, timeOutTime) {\n    try {\n\n        //create a new abortController for this request\n        abortController = new AbortController();\n        let signal = abortController.signal;\n        //initialize as 0 for every request\n        abortRequestType = 0;\n\n        let requestOptions = Object.assign(\n            {\n                //enable the  sending of cookie\n                credentials: 'include',\n                \"mode\": 'cors',\n                \"signal\": signal\n            },\n            options\n        );\n\n        //set timeout clock\n        let timer = setTimeout(() => timeOut(), timeOutTime);\n\n        let response = await fetch(url, requestOptions);\n\n        //clear timeout clock\n        clearTimeout(timer);\n\n\n        //parse response data\n        let data = await parseResponseData(response);\n        //response error check\n        checkResponseStatus(response,data);\n        return  data;\n\n    }\n    catch (error) {\n\n        //console.dir(error);\n\n        //if abort error is caused by timeout\n        if (abortRequestType === 2) {\n            //create a custom error for timeout\n            let timeOutError = new Error(\"Error: Time out to get response from backend\");\n            timeOutError.name = \"timeout\";\n            return  timeOutError;\n        }\n        //if is a abort error  caused by user\n        else if (abortRequestType === 1) {\n            return null;\n        }\n\n        return error;\n\n\n    }\n}\n\n/**\n * get method\n * @param url\n * @param queryData quey string\n * @return {object} response data\n */\nasync function get(url, queryData = \"\") {\n    let query = \"\";\n    if (queryData !== \"\") {\n        query = \"?\";\n        for (let key in queryData) {\n            query += key + \"=\" + encodeURIComponent(queryData[key]) + \"&\";\n        }\n        //delete the last &\n        query = query.slice(0, query.length - 1);\n    }\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let options = {\n        \"method\": 'GET',\n        \"headers\": jsonHeaders,\n    };\n\n    return await request(url + query, options, timeOutTime);\n}\n\n/**\n * delete method\n * @param url\n */\nasync function deletes(url) {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let options = {\n        \"method\": 'DELETE',\n        \"headers\": jsonHeaders,\n    };\n\n    return await request(url, options, timeOutTime);\n}\n\n/**\n * post method\n * @param url\n * @param bodyData\n * @return {object } response data\n */\nasync function post(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'POST',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options, timeOutTime);\n}\n\n/**\n * post file method\n * @param url\n * @param bodyData\n * @return {object} response data\n */\nasync function postFile(url, bodyData = \"\") {\n\n    //custom timeout for request\n    let customTimeOutTime= 10 * 1000;\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n   // jsonHeaders.append('Content-Type', 'multipart/form-data');\n    let options = {\n        \"method\": 'POST',\n        \"headers\": jsonHeaders,\n        \"body\": bodyData\n    };\n\n    return await request(url, options, customTimeOutTime);\n}\n\n\n/**\n * put method\n * @param url\n * @param bodyData\n */\nasync function put(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'PUT',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options,timeOutTime);\n}\n\n\n/**\n *  * check resposonse status\n * @param response to check\n * @param data data received\n * @throws {Error} if  status code < 200 or status code >= 300\n */\nfunction checkResponseStatus(response, data) {\n\n    if (response.status < 200 || response.status >= 300) {\n        const error = new Error(response.statusText);\n        error.data = response;\n        if(data.payload){\n            error.payload = data.payload;\n        }\n        throw error;\n    }\n\n}\n\n/**\n * parse the response of  http request\n * @param response response object\n * @return {object} data parsed\n */\nasync function parseResponseData(response) {\n    //get response data type\n    const contentType = response.headers.get('Content-Type');\n    let data = null;\n    //parse the data by its type\n    if (contentType != null) {\n        if (contentType.indexOf('text') > -1) {\n            data = await response.text()\n        }\n        if (contentType.indexOf('form') > -1) {\n            data = await response.formData();\n        }\n        if (contentType.indexOf('video') > -1) {\n            data = await response.blob();\n        }\n        if (contentType.indexOf('json') > -1) {\n            data = await response.json();\n        }\n    }\n    else if (response != null) {\n        data = await response.text();\n    }\n    return data;\n}\n\n\n\n//object to export\nconst http = {\n    get,\n    post,\n    \"delete\" : deletes,\n    put,\n    postFile,\n    abortRequest,\n};\n\nexport default http;","import React from \"react\";\n\n/**\n * component svg edit button\n * based on the 'confirm' flag the icon will change\n */\nconst EditButton = function ({confirm}) {\n    var output = <></>;\n    if(!confirm){//if the user is not editing\n        output = (<svg version=\"1.1\" id=\"edit-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <path className=\"st-pencil\" d=\"M224,632.3l-81.6,225.3L367.7,776l0,0L833,310.7c39.4-39.4,39.9-103.3,0.7-142.9c-0.5-0.5-1-1-1.4-1.4\n            c-39.6-39.2-103.6-38.7-142.9,0.7L224,632.3L224,632.3z\"/>\n            <path className=\"st-pencil-border\" d=\"M367.7,776c-24-71.7-71.9-119.6-143.7-143.7\"/>\n            <path className=\"st-pencil\" d=\"M805.7,338c-24-71.7-71.9-119.6-143.7-143.7\"/>\n        </svg>);\n    }else{//if the user is editing\n        output = (\n            <svg version=\"1.1\" id=\"confirm-edit-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t            viewBox=\"0 0 1000 1000\">\n                <polyline className=\"st-confirm\" points=\"918,192.3 389.3,807.7 82,450 \"/>\n            </svg>\n        );\n    }\n    return output;\n};\n\nexport default EditButton;\n","import React, {useContext} from \"react\";\n\nimport {AppContext} from \"components/providers/appProvider\";\nimport EditButton from \"components/svg/editButton\";\n\n/**\n * this is the head component of page\n * @param props\n * @param \"menu_elements\" contains the list of menu-items\n */\n\n\nconst NavBar = function(props){\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    \n    return (\n        <div className=\"navigation-wrapper\">\n\n            {/*background of the menu-bar*/}\n            <nav className=\"main-nav\">\n                {appConsumer.title}\n            </nav>\n            {props.children}\n\n        </div>\n    );\n}\n\nexport default NavBar;","import React, {useContext, useEffect} from 'react';\nimport {AppContext} from \"components/providers/appProvider\";\n\n\nconst Error = function () {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {//not used yet\n\n        return () => {\n            //delete the error, so app can resume its work\n            appConsumer.setError(null);\n        }\n\n    });\n\n    //function to delete the error object in context\n    function handleOnRefresh(){\n        appConsumer.setError(null);\n    }\n    //function to return to previous page\n    function handleOnGoBack(){\n        window.history.back();\n        appConsumer.setError(null);\n    }\n\n\n    //console.dir(appConsumer.error);\n    let output;\n    //is a error from backend\n    if (appConsumer.error.payload) {\n        output = (\n            <>\n                <p>Error code:</p>\n                <p>{appConsumer.error.payload.statusCode}</p>\n                <p>Error name:</p>\n                <p>{appConsumer.error.payload.error}</p>\n                <p>Error message</p>\n                <p>{appConsumer.error.payload.message}</p>\n            </>\n        );\n    }\n\n    //is a error of other type\n    else {\n        output = (\n            <>\n                <p>Error name:</p>\n                <p>{appConsumer.error.name}</p>\n                <p>Error message</p>\n                <p>{appConsumer.error.message}</p>\n            </>\n        );\n    }\n\n    output = (\n        <div className=\"error-wrapper\" style={{textAlign: \"center\"}}>\n            {output}\n            <br/>\n            <button type=\"button\" onClick={handleOnGoBack}><u>return to previous page</u></button>\n            <br/>\n            <p>or</p>\n            <br/>\n            <button type=\"button\" onClick={handleOnRefresh}><u>refresh</u></button>\n\n        </div>\n    );\n\n    return output;\n\n}\n\n\nexport default Error;","/**\n * this is the config file\n */\n\n\nconst config = {\n    \"home\": \"https://crowdai-slr-api-dev.herokuapp.com/\",\n    //\"home\": \"http://localhost:3001/\",\n    \"search\": \"search\",\n    \"scopus_search\": \"search-scopus\",\n    \"search_similar\": \"search/similar\",\n    \"projects\": \"projects\",\n    \"papers\": \"papers\",\n    \"customPapers\": \"customPapers\",\n    \"userLogin\": \"auth/login\",\n    \"userInfo\": \"user-info\",\n    \"userLogout\": \"auth/logout\",\n    \"menu_list\": [\n        {id: 4, content: \"home\", link: \"/\"},\n        {id: 5, content: \"my projects\", link: \"/projects\"},\n        {id: 6, content: \"account\", link: \"#\"}\n    ],\n    \"max_total_number_for_results\": 5000,\n    \"pdf_parse_server\": \"pdf\",\n    \"google_login_client_id\": \"282160526683-84sdnoqh3bc1obojfpepcbonnfg3uks4.apps.googleusercontent.com\",\n\n\n\n\n\n};\n\nexport default config;\n","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to post validation token\n * @param bodyData\n * @return {Object} Google user data\n */\nasync function postTokenId(bodyData) {\n    let url = config.home + config.userLogin;\n    return await http.post(url, bodyData);\n}\n\n/**\n * get user by token\n * @return {Object} user data\n */\nasync function getUserByTokenId() {\n    let url = config.home + config.userInfo;\n    return await http.get(url);\n}\n\n/**\n * logout user\n * @return {Object} user data\n */\nasync function logoutUser() {\n    let url = config.home + config.userLogout;\n    return await http.get(url);\n}\n\nconst usersDao = {\n    postTokenId,\n    getUserByTokenId,\n    logoutUser\n}\n\n\nexport {usersDao};","import React, {useState, useRef, useEffect} from 'react';\n\nimport NavBar from 'components/navigation/navBar';\nimport Main from 'components/main';\nimport Error from 'components/modules/error';\n\nimport {usersDao} from 'dao/users.dao';\n\n//create a context object\nconst AppContext = React.createContext();\n\n/**\n * this is the component that include a context object that it can be access by all its children component\n */\nconst AppProvider = function (props) {\n\n    //user data\n    const [user, setUser] = useState(null);\n\n    //user data fetch flag\n    const [userFetch, setUserFetch] = useState(true);\n\n    //error\n    const [error, setError] = useState(null);\n\n    //title\n    const [title, setTitle] = useState(<div className=\"nav-elements\"> <h2 className=\"static-title\">HOME</h2> </div>);\n\n    const [projectName, setProjectName] = useState(\"\");\n\n    //preparate an object to be insertd into context\n    const contextObject ={\n        user,\n        setUser,\n        userFetch,\n        setUserFetch,\n        error,\n        setError,\n        title,\n        setTitle,\n        projectName,\n        setProjectName\n    };\n\n\n    //effect on context mount to fetch user data if he's logged\n    useEffect(() => {\n        //get the localStorage object\n        const storage = window.localStorage;\n\n        if (storage.getItem(\"userToken\")) {\n            async function getUserData(){\n\n\n                let res = await usersDao.getUserByTokenId(storage.getItem(\"userToken\"));\n\n                // set the user data in context provider\n                setUser(res.user);\n\n                setUserFetch(false);\n            }\n            getUserData();\n        }else{\n            setUserFetch(false);\n        }\n\n        \n    }, [])\n\n    //if there isn't error\n    if (!error) {\n\n        return (\n            //*set the values of contenxt*\n            <AppContext.Provider value={contextObject}>\n\n                {/*mount all components children*/}\n                {props.children}\n\n            </AppContext.Provider>\n        );\n    }\n    //if there is a error\n    else {\n        return (\n            //*set the values of contenxt*\n            <AppContext.Provider value={contextObject}>\n\n                    <Error/>\n\n            </AppContext.Provider>\n        )\n    }\n\n\n}\n\nexport {AppContext, AppProvider};","import React, {useContext, useEffect} from \"react\";\n\nimport {AppContext} from \"components/providers/appProvider\";\n\n/**\n * this is home component\n */\nconst Home = function (props) {\n\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set title when component mounts\n    useEffect(() => {\n        appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">HOME</h2> </div>);\n    },[])//run on component mount\n\n\n    return (\n        <>\n            <h1>\n                Systematic Literature Review manager\n            </h1>\n            <h2 style={{fontSize: 22, fontWeight: \"normal\"}}>the system right now allows you to</h2>\n            <ul style={{fontSize: 18, fontWeight: \"lighter\"}}>\n                <li>browse a list of prjects</li>\n                <li>add a new project</li>\n                <li>browse the list of papers on a project</li>\n                <li>search(from scopus) and add papers to a project</li>\n                <li>add custom papers based on a file or form data</li>\n                <li>'fake search' similar papers</li>\n            </ul>\n            <h2 style={{fontSize: 22, fontWeight: \"normal\"}}>notes</h2>\n            <ul style={{fontSize: 18, fontWeight: \"lighter\"}}>\n                <li><i>the scopus search works partially(can't retrieve the description)</i>\n                    <ul><li style={{fontSize: 16}}><i>from Elsevier developer portal : \"The data available depends on your institutional subscriptions, and only when you're making calls from within your institutional network are you considered a subscriber\"</i></li></ul>\n                </li>\n                <li><i>the options don't affect the search, for now</i></li>\n            </ul>\n        </>\n    );\n\n\n\n\n};\n\nexport default Home;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to get a projects list\n * @param queryData\n * @return {array[objects]}\n */\nasync function getProjectsList(queryData = \"\") {\n    let url = config.home + config.projects\n    let res = await http.get(url, queryData);\n    return res;\n\n\n}\n\n/**\n * dao to get a project\n * @param project_id\n * @return {Object} project requested\n */\nasync function getProject(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    let res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to post a new project\n * @param bodyData\n * @return {Object} project created\n */\nasync function postProject(bodyData) {\n    let url = config.home + config.projects;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to put a old project\n * @param project_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putProject(project_id, bodyData) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    return await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a project\n * @param project_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function deleteProject(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    let res = await http.delete(url);\n    return res;\n}\n\n\nconst projectsDao = {\n    getProjectsList,\n    getProject,\n    postProject,\n    putProject,\n    deleteProject,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {projectsDao};","import React from \"react\";\n\n/**\n * component svg loading-icon\n */\nconst LoadIcon = function (props) {\n\n    return (\n\n        <svg id=\"loading-icon\" className={props.class} xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n             y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <g>\n                <path id=\"loading-circle1\" d=\"\n                  M 500, 500\n                  m -160, 0\n                  a 160,160 0 1,0 320,0\n                  a 160,160 0 1,0 -320,0\n          \"/>\n                <path id=\"loading-circle2\" d=\"\n                  M 500, 500\n                  m -305, 0\n                  a 305,305 0 1,0 610,0\n                  a 305,305 0 1,0 -610,0\n          \"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default LoadIcon;\n","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst CloseButton = function (props) {\n\n    return (\n        <svg id=\"close-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <line className=\"ln\" x1=\"134\" y1=\"866\" x2=\"866\" y2=\"134\"/>\n        <line className=\"ln\" x1=\"134\" y1=\"134\" x2=\"866\" y2=\"866\"/>\n        </svg>\n    );\n};\n\nexport default CloseButton;\n","import React, {useEffect, useState, useContext} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectsDao} from 'dao/projects.dao'\n\nimport CloseButton from 'components/svg/closeButton';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n/**\n * this is the form for create or edit the project\n * @param props.project  project object if we want to update a old project\n * @param null if we want to create a new project\n */\nfunction ProjectForm(props) {\n\n    let yup = require('yup');\n\n    const [touc, setTouc] = useState(false);\n\n    const projectValidationSchema = yup.object().shape({\n        name: yup.string().required('please enter a title'),\n        description: yup.string().required('please enter a description')\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    return (\n        <>\n        <Formik\n            initialValues={{ name: '', description:''}}\n            validationSchema={projectValidationSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                let bodyData = {name: values.name, description: values.description};\n                //call dao\n                let res = await projectsDao.postProject(bodyData);\n\n                //error checking\n                if(res.message){\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }else{\n                    props.history.push(\"/projects/\" + res.id);\n                }\n                setSubmitting(false);\n            }}\n            validateOnBlur={false}\n        >\n        {function ({ errors, touched, isSubmitting, setErrors, validateField, handleChange }) {\n            let output = \"\";\n            output = (<Form className=\"modal add-project\" style={{visibility: (!props.visibility) ? 'hidden' : '' }}>\n                <button type=\"button\" className=\"close-btn\" onClick={(e) => {\n                    props.setVisibility(!props.visibility);\n                }}><CloseButton/></button>\n                <br/>\n                <Field\n                    style={{borderBottom : (errors.name && touched.name) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"name\"\n                    type=\"text\" \n                    placeholder=\"Project Name\"\n                    onChange={(e) => {handleChange(e); validateField('name')}}/>\n                <br/>\n                <br/>\n                <Field\n                    style={{borderBottom : (errors.description && touched.description) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"description\"\n                    component=\"textarea\"\n                    placeholder=\"Project Description\"/>\n                <br/>\n                <button type=\"submit\" disabled={isSubmitting || \n                    ((errors.name && touched.name) ||\n                    (errors.description && touched.description))}>Add Project</button>\n            </Form>\n            );\n            return output;\n        }}\n        </Formik>\n\n       \n        </>\n    );\n\n\n}\n\n\nexport default ProjectForm;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport config from 'config/index';\n\n/**\n * this is the component for pagination\n * @param start offset of results\n * @param count number of element for page\n * @param totalResults the total number of results\n * @param path the path of current page\n * @return {*}\n * @constructor\n */\n\nconst Pagination = function({start, count, totalResults, path}) {\n\n    //set limit max of start\n    if(totalResults >config.max_total_number_for_results){\n        totalResults= config.max_total_number_for_results;\n    }\n    //prepare the correct link path for pagination\n    path = setStartAndCountInUrl(path);\n\n    let prev = \"\", next = \"\", firstPage = \"\", lastPage = \"\";\n    let listPage = [] ;\n    let separator = \"...\";\n    //number*2 of element in pagination\n    let paginationLength = 4;\n    //the page count start by 1.\n    let paged = Math.floor(start / count) + 1;\n    //get total page number\n    let totalPage = Math.ceil(totalResults / count);\n\n\n    //we need the pagination only the totalPage is major than 1\n    if (totalPage > 1) {\n\n        //if it isn't the first page, print the prev-page link\n        if (paged > 1) {\n            prev = (\n                <li>\n                    <Link className=\"prev-page\"\n                          to={path + \"start=\" + (((paged - 1) * count) > 0 ? ((paged - 2) * count) : 0) + \"&count=\" + count}>\n                        {\"<\"}\n                    </Link>\n                </li>\n            );\n        }\n        //if it isn't the last page, print the next-page link\n        if (paged < totalPage) {\n            next = (\n                <li>\n                    <Link className=\"next-page\" to={path + \"start=\" + (paged * count) + \"&count=\" + count}>\n                        {\">\"}\n                    </Link>\n                </li>\n            );\n        }\n\n        //if the first page  isn't include by regular listPage, print the first-page link\n        if (paged > paginationLength + 2) {\n            firstPage = (\n                <>\n                    <li>\n                        <Link className=\"first-page\" to={path + \"start=0&count=\" + count}>\n                            {\"1\"}\n                        </Link>\n                    </li>\n                    <li>\n                        <span>{separator}</span>\n                    </li>\n                </>\n            );\n        }\n\n        //if the last page  isn't include by regular listPage, print the last-page link\n        if (paged < totalPage - (paginationLength + 1)) {\n            lastPage = (\n                <>\n                    <li>\n                        <span>{separator}</span>\n                    </li>\n                    <li>\n                        <Link style={{display: \"inline-block\"}} className=\"last-page\"\n                              to={path + \"start=\" + ((totalPage - 1) * count) + \"&count=\" + count}>\n                            {totalPage}\n                        </Link>\n                    </li>\n                </>\n            );\n        }\n\n        //print the range of page link, the center is current paged\n        for (let i = paged - paginationLength; i <= paged + paginationLength; i++) {\n\n            //print only the i has a valid value\n            if (i > 0 && i <= totalPage) {\n\n                //if i isn't current page, print link\n                if (i !== paged) {\n\n                    listPage.push((\n                            <Link className=\"normal-page\" to={path + \"start=\" + ((i-1) * count) + \"&count=\" + count}>\n                                {i}\n                            </Link>\n                    ));\n                }\n                //if i is current page, print only text\n                else {\n                    listPage.push((\n                            <span className=\"current-page\">{paged}</span>\n                    ));\n                }\n\n            }\n        }\n\n\n    }\n\n    let output = (\n        <ul className=\"pagination\">\n            {prev}\n            {firstPage}\n            {listPage.map((element,index)=><li style={{display: \"inline-block\", margin: 10}} key={index}>{element}</li>)}\n            {lastPage}\n            {next}\n        </ul>\n    );\n    return output;\n};\n\n\n/**\n * internal function to prepare the path link for pagination\n * @param path\n * @return {*}\n */\n\nfunction setStartAndCountInUrl(path){\n\n    let url = window.location.href;\n    //get the queryString from url\n    let queryString = url.split(\"?\")[1];\n    //if it exists\n    if(queryString) {\n        //remove the part after # if it exists\n        queryString = queryString.split(\"#\")[0];\n\n        let newQueryString = \"\";\n        //split queryString in array of string\n        let arryQuery = queryString.split(\"&\");\n        for (let i = 0; i < arryQuery.length; i++) {\n            //check each queryElement\n            let parameterName = arryQuery[i].split(\"=\")[0];\n            //if it isn't start and count\n            if (parameterName !== \"start\" && parameterName !== \"count\") {\n                //add to the new queryString\n                newQueryString += arryQuery[i]+\"&\";\n            }\n        }\n        //create a new path whiteout start and count\n        path = path+\"?\"+newQueryString;\n    }\n    //if path doesn't contain any queryString\n    else {\n        path = path+\"?\";\n    }\n\n\n    return path;\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default Pagination;","//need to parse query string of url\nimport queryString from 'query-string';\n\n//here are the common support function\n\n/**\n * compares two arrays of objects\n */\nfunction arrayOfObjectsEquals(a, b) {\n\n    if (a == null || b == null) {\n        return false;\n    }\n    if (a.length != b.length) {\n        return false;\n    }\n\n    a.sort();\n    b.sort();\n\n\n    for (var i = 0; i < a.length; ++i) {\n        if (JSON.stringify(a[i]) !== JSON.stringify(b[i])) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * checks if B is contained in A, using a key to check the inclusion\n * @param {array} a\n * @param {array} b\n * @param {string} key (object field)\n */\nfunction arrayOfObjectsContains(a, b, key) {\n\n    if (a == null || b == null) {\n        return false;\n    }\n    if (a.length == 0 || b.length == 0) {\n        return false;\n    }\n\n    //iterate over all elements of B and check if A contains it \n    //by checking wether and element in A has the same key as the selected B element(b[i])\n    for (let i = 0; i < b.length; ++i) {\n        //if doesn't contain the given element then it meand that the vector A doesn't include the vector B\n        if (!a.some(e => e[key] === b[i][key])) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * converts the checkboxes object of the search form into parameters for the url\n */\nfunction searchCheckboxesToParams(checkboxes) {\n    var params = \"\";\n    Object.keys(checkboxes).forEach(key => {//I iterate over each field of the object\n        if (key !== \"years\") {//if it's not an year\n            if (checkboxes[key]) {//if it's a true flag\n                console.log(key)\n                params += \"&\" + key + \"=\" + checkboxes[key];\n            }\n        }\n        else {//if it's a year\n            if (checkboxes.years.length !== 0) {//if there are some years selected\n                params += \"&\" + queryString.stringify({\"years\": checkboxes.years}, {arrayFormat: 'comma'});\n            }\n        }\n    });\n    return params;\n}\n\n/**\n * this is  function to manipolate 2 url string\n * if first string ends with \"/\", removes \"/\".\n * then concate wite second string and return new string\n */\nfunction join(base, path) {\n    let newPath;\n    //if the last element is \"/\"\n    if (base.charAt(base.length - 1) === '/') {\n        newPath = base.slice(0, -1) + path;\n    }\n    else {\n        newPath = base + path;\n    }\n\n    return newPath;\n\n}\n\n/**\n *\n *\n * function to create string of query by queryObject\n * @param queryData query object\n * @return {string} query string\n */\nfunction createQueryStringFromObject(queryData) {\n\n    let queryString = \"?\";\n    //create a array of keys\n    let keys = Object.keys(queryData);\n    //concatenate the object.property\n    for (let i = 0; i < keys.length; i++) {\n        //I don't need to sort for the recently added sorting\n        if (queryData[\"orderBy\"] !== \"date_created\" || keys[i] !== \"sort\") {\n            queryString += keys[i] + \"=\" + encodeURIComponent(queryData[keys[i]]);\n            //if it isn't the last element, add symbol \"&\"\n            if (i !== (keys.length - 1)) {\n                queryString += \"&\";\n            }\n        }\n    }\n    return queryString;\n\n}\n\n\n/**\n * get element index of a object array by [key, value]\n * @param array to find\n * @param key to find\n * @param value to find\n * @return {number} index of element, -1 if didn't find\n */\nfunction getIndexOfObjectArrayByKeyAndValue(array, key, value) {\n    let index = -1;\n    for (let i = 0; i < array.length; i++) {\n        if (array[i][key] === value) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n\n\nexport {\n    arrayOfObjectsEquals,\n    arrayOfObjectsContains,\n    searchCheckboxesToParams,\n    join,\n    createQueryStringFromObject,\n    getIndexOfObjectArrayByKeyAndValue,\n\n};","import React, {useContext} from \"react\";\n\n\n\n/**\n * component for covering the page\n */\nconst Cover = function ({cls, handler}) {\n    //get data from global context\n    return (\n        <div className={\"cover \" + cls} onClick={(e) => {handler(false)}}></div>\n    );\n};\n\nexport default Cover;","import React from \"react\";\n\n/**\n * component svg options menu button\n */\nconst DeleteButton = function (props) {\n\n    return (\n\n        <svg version=\"1.1\" id=\"options-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t        viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M214,482.1\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"250\" x2=\"500\" y2=\"250\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"500\" x2=\"500\" y2=\"500\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"750\" x2=\"500\" y2=\"750\"/>\n        </svg>\n\n    );\n};\n\nexport default DeleteButton;","import React,{useState} from \"react\";\n\nimport OptionsButton from 'components/svg/optionsButton';\n\n/**\n * component side options\n * it needs a class for the styling,\n * an array of options,\n * the function that will handle the click on the option\n * and, if necessary, a target for the handler function\n */\nconst SideOptions = function ({cls, options, handler, target}) {\n\n    //this is used to display or hide the options of the menu\n    const [focused, setFocused] = useState(false)\n\n\n    return (\n        <div className={cls}>\n            <button type=\"button\" \n                    onBlur={(e) => \n                        //if the element is blurred then I hide it\n                        {if(focused){setFocused(false)}}} \n                    onMouseDown={(e) => //onMouseDown fires before onBlur\n                        //immediately after the button is clicked I toggle the menu\n                        {setFocused(!focused)}}>\n                <OptionsButton/>\n            </button>\n            <div style={{fontSize: (focused) ? \"12px\" : \"0px\", padding: (focused) ? \"2px\" : \"0px\", border: (focused) ? \"solid 1px #e8e8e8\" : \"solid 0px #e8e8e8\"}} className=\"options-list\">\n                \n                {options.map((element, index) => \n                    <div key={index} onMouseDown={(e) => handler(target, element)} className=\"option\">{element}</div>\n                )}\n                \n            </div>\n        </div>\n    );\n}\n\nexport default SideOptions;","import React, {useState, useEffect, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\nimport queryString from 'query-string';\n\n\nimport {projectsDao} from 'dao/projects.dao';\nimport LoadIcon from 'components/svg/loadIcon';\nimport ProjectForm from 'components/forms/projectForm';\nimport Pagination from 'components/modules/pagination';\nimport {join} from 'utils/index';\nimport Cover from 'components/modules/cover';\nimport SideOptions from 'components/modules/sideOptions';\n\nimport {AppContext} from \"components/providers/appProvider\";\n\n/**\n *this component will show a projects list page\n */\n\nconst ProjectsList = function (props) {\n\n\n    //fetch data\n    const [projectsList, setProjectsList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //bool to control the visualization of input form\n    const [toggleform, setToggleForm] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(props.location.search);\n\n\n    //set title when component mounts\n    useEffect(() => {\n        appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">PROJECTS</h2> </div>);\n        //I remove any old project name that was previously saved\n        appConsumer.setProjectName(\"\");\n    },[]); //run on component mount\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let mounted = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //hide the page\n            setDisplay(false);\n\n            //call the dao\n            const res = await projectsDao.getProjectsList({orderBy: \"date_last_modified\", ...queryData});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mounted && res && res.message === \"Not Found\") {\n                setProjectsList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mounted && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mounted && res) {\n                //update state\n\n                //I put even first and then odd ones so I can display 2 columns with left-right flow \n                var even_projs = [];\n                even_projs = res.results.filter(function(element, index){ if( index % 2 ) return element;});\n                var odd_projs = [];\n                odd_projs = res.results.filter(function(element, index){ if( !(index % 2) ) return element;});\n\n                setProjectsList(odd_projs.concat(even_projs));\n                setTotalResults(res.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n        };\n\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mounted = false;\n        };\n    }, [queryData.start, queryData.count]); //re-execute when these variables change\n\n\n    //handle to delete project\n    async function handleDelete(id){\n\n        console.log(\"deleting \" + id);\n        //call the dao\n        let res = await projectsDao.deleteProject(id);\n        //error checking\n        //if is other error\n        if (res && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);  \n        }\n        //if res isn't null\n        else if (res && res !== null) {\n            //create a new array without the project deleted\n            let newProjectsList = projectsList.filter((project)=>project.id !== id);\n            //update project list state\n            setProjectsList(newProjectsList);\n\n            alert(\"DELETED SUCCESSFULLY!\");\n        }\n    }\n\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print svg image\n        output = <LoadIcon/>;\n    }\n\n    else {\n\n        output = (\n            <div>\n                <Cover cls={toggleform ? \"full-screen\" : \"\"} handler={setToggleForm}/>\n                {/*print list of projects*/}\n                <PrintList projectsList={projectsList} path={props.match.url} handleDelete={handleDelete}/>\n                {/*set listId and continues value*/}\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={props.match.url}/>\n\n                {/*print the input form to create/update the projects*/}\n                <ProjectForm visibility={toggleform} setVisibility={setToggleForm} history={props.history}/>\n                {/*button to show input form*/}\n                <button className=\"bottom-left-btn add-project-btn\" type=\"button\" value=\"toggle-insert-form\" \n                onClick={(e) => {\n                    setToggleForm(!toggleform);\n                }}>\n                    <div className=\"btn-title\">Add Project</div><div className=\"btn-icon\"> </div>\n                </button>\n            </div>\n        );\n\n    }\n\n    return output;\n\n\n};\n\n\n/**\n *  internal component only to print the list\n * @param projectsList projects list data\n * @param path current page url\n * @param handleDelete function to delete the project\n * */\nconst PrintList = function ({projectsList, path, handleDelete}) {\n\n    let sideOptions= [\"delete\"];\n\n    let maps;\n    //if list is empty, print a notice message\n    if (projectsList.length === 0) {\n        maps = (\n            <div>there aren't projects</div>\n        );\n    }\n    //if list isn't empty, print list of projects\n    else {\n        maps = (projectsList.map((element, index) =>\n                <div key={element.id} className=\"light-modal project-card\">\n                    <SideOptions options={sideOptions} handler={handleDelete} target={element.id} cls=\"card-options project-card-options\"/>\n                    <Link to={join(path, \"/\" + element.id)}>\n                        <h3>{element.data.name}</h3>\n                        <p className=\"description\">{element.data.description}</p>\n                        <div className=\"project-dates\">\n                            <p>{/*created on <i>{element.date_created.slice(0, 10)}</i>*/}</p>\n                            <p>last modified on <i>{element.date_last_modified.slice(0, 10)}</i></p> \n                        </div>\n                    </Link>\n                </div>\n        ));\n    }\n\n    let output =  (\n        <div className=\"project-cards-holder\">\n            {maps}\n        </div>\n    );\n\n    return output;\n\n};\n\n/**\n * internal function to prepare a object of queryData\n * @param query\n * @return object of queryData for the fetch\n */\nfunction createQueryData(query){\n\n    //set query params from queryString of url\n    let params = queryString.parse( query);\n    let count = params.count || 10;\n    let start = params.start || 0;\n\n    //if \"before\" is defined by query then insert it in object, else insert \"after\" in object\n    let queryData = {start, count};\n    return queryData;\n\n}\n\n\n\n\n\nexport default ProjectsList;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to search local papers\n * @param queryData\n * @return {array[objects]}\n */\nasync function search(queryData){\n    let url = config.home+config.search;\n\n        const res = await http.get(url, queryData);\n        return res;\n\n}\n\n/**\n * get a specific paper\n */\nasync function selectById(id){\n    let url = config.home + config.papers + \"/\" + id;\n\n    const res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to search similar papers\n * @param bodyData\n * @return {array[objects]}\n */\nasync function searchSimilar(bodyData){\n    let url = config.home+config.search_similar;\n\n    console.log(bodyData);\n\n    const res = await http.post(url, bodyData);\n    \n    \n    return res;\n\n}\n\nconst paperDao = {\n    search,\n    selectById,\n    searchSimilar,\n    \"abortRequest\" : http.abortRequest\n}\n\n\n\nexport {paperDao};","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to get a list of paper associated with a project\n * @param queryData\n * @return {array[objects]}\n */\nasync function getPapersList(queryData) {\n    let url = config.home + config.papers\n    const res = await http.get(url, queryData);\n    return res;\n\n}\n\n/**\n * dao to get a paper\n * @param paper_id\n * @return {Object} paper requested\n */\nasync function getPaper(paper_id) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.get(url);\n}\n\n/**\n * dao to post a new paper\n * @param bodyData\n * @return {Object} project created\n */\nasync function postPaperIntoProject(bodyData) {\n    let url = config.home + config.papers;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to post a new custom paper\n * @param bodyData\n * @return {Object} project created\n */\nasync function postCustomPaperIntoProject(bodyData) {\n    let url = config.home + config.customPapers;\n    return await http.post(url, bodyData);\n}\n\n\n/**\n * dao to put a old paper\n * @param paper_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putPaper(paper_id, bodyData) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a paper\n * @param paper_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function deletePaper(paper_id) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.delete(url);\n}\n\n\nconst projectPapersDao = {\n    getPapersList,\n    getPaper,\n    postPaperIntoProject,\n    postCustomPaperIntoProject,\n    putPaper,\n    deletePaper,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {projectPapersDao};","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst SelectTick = function (props) {\n\n    return (\n        <svg id=\"select-tick\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st-tick\" points=\"918,192.3 389.3,807.7 82,450 \">\n                <animate attributeName=\"points\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\"\n                    from=\"500,600 400,700 200,750\"\n                    to=\"918,192.3 389.3,807.7 82,450 \"\n                />\n            </polyline>\n        </svg>\n    );\n};\n\nexport default SelectTick;\n","import React, {useState, useEffect} from \"react\";\n\nimport SelectTick from 'components/svg/selectTick';\n\nconst CheckBox = function ({ val, name, label, isChecked, handler }) {\n\n    let output = \"\";\n    const [tick, setTick] = useState(<></>);\n    useEffect(() => {\n        if(isChecked){\n            setTick(<SelectTick/>);\n        }else{\n            setTick(<></>)\n        }\n    }, [isChecked])\n\n    \n    output = (\n        <label className=\"checkbox-container\">\n            <input type=\"checkbox\" value={val} name={name} checked={isChecked} onChange={(e) => {console.log(\"clickekdkdkdkd\"); handler(e)}} />\n            <span className=\"checkmark\">{tick}</span>\n            <span className=\"name\">{label}</span>\n        </label>\n    );\n    return output;\n}\n\nexport default CheckBox;","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst RadioTick = function (props) {\n\n    return (\n        <svg id=\"radio-tick\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t        viewBox=\"0 0 1000 1000\">\n            <circle className=\"st-circle\" cx=\"500\" cy=\"500\" r=\"375\">\n                <animate attributeName=\"r\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\"\n                                from=\"0\"\n                                to=\"375\"\n                />\n            </circle>\n        </svg>\n    );\n};\n\nexport default RadioTick;\n","import React, {useState, useEffect} from \"react\";\n\nimport RadioTick from 'components/svg/radioTick';\n\nconst RadioBox = function ({ label, name, val, isChecked , handler}) {\n\n    let output = \"\";\n    const [tick, setTick] = useState(<></>);\n    useEffect(() => {\n        if(isChecked){\n            setTick(<RadioTick/>);\n        }else{\n            setTick(<></>)\n        }\n    }, [isChecked])\n\n    output= (\n        <label className=\"radiobox-container\">\n        <input type=\"radio\" value={val} name={name} checked={isChecked} onChange={handler}/>\n        <span className=\"radiomark\">{tick}</span>\n        <span>{label}</span>\n        </label>\n    );\n    return output;\n}\n\nexport default RadioBox;","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst SearchButton = function (props) {\n\n    return (\n        <svg id=\"search-icon\" xmlns=\"http://www.w3.org/2000/svg\"\n             xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M626.9,644.3c-73.5,0-142.6-28.6-194.6-80.6s-80.6-121.1-80.6-194.6s28.6-142.6,80.6-194.6\n                c52-52,121.1-80.6,194.6-80.6c73.5,0,142.6,28.6,194.6,80.6c52,52,80.6,121.1,80.6,194.6s-28.6,142.6-80.6,194.6\n                S700.4,644.3,626.9,644.3z\"/>\n            <line className=\"st1\" x1=\"145.2\" y1=\"850.8\" x2=\"431.7\" y2=\"564.3\"/>\n        </svg>\n    );\n};\n\nexport default SearchButton;\n","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst SearchSimilarButton = function (props) {\n\n    return (\n        <svg id=\"similar-paper-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" \n            xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st0-sps\" points=\"795.8,214 734.8,214 736.8,146 \t\t\"/>\n            <polyline className=\"st0-sps\" points=\"842.8,214 842.8,875.8 262.8,875.8 262.8,106 734.8,106 \t\t\"/>\n            <line className=\"st0-sps\" x1=\"842.8\" y1=\"214\" x2=\"734.8\" y2=\"106\"/>\n            <line className=\"st1-sps\" x1=\"350.8\" y1=\"198.9\" x2=\"644.8\" y2=\"198.9\"/>\n            <line className=\"st2-sps\" x1=\"346.8\" y1=\"385.4\" x2=\"752.8\" y2=\"385.4\"/>\n            <line className=\"st2-sps\" x1=\"544\" y1=\"485.9\" x2=\"752.8\" y2=\"485.9\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"485.9\" x2=\"544\" y2=\"485.9\"/>\n            <line className=\"st2-sps\" x1=\"575.9\" y1=\"586.4\" x2=\"752.8\" y2=\"586.4\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"586.4\" x2=\"575.9\" y2=\"586.4\"/>\n            <line className=\"st2-sps\" x1=\"555.5\" y1=\"686.9\" x2=\"752.8\" y2=\"686.9\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"686.9\" x2=\"555.5\" y2=\"686.9\"/>\n            <circle className=\"st4-sps\" cx=\"410.8\" cy=\"594.3\" r=\"171.7\"/>\n            <line className=\"st4-sps\" x1=\"111.2\" y1=\"894\" x2=\"289.4\" y2=\"715.7\"/>\n        </svg>\n        \n    );\n};\n\nexport default SearchSimilarButton;\n","import React, {useContext, useState} from \"react\";\nimport ClampLines from 'react-clamp-lines';\nimport {Link} from 'react-router-dom';\n\nimport CheckBox from \"components/forms/checkbox\";\nimport SideOptions from 'components/modules/sideOptions';\nimport {projectPapersDao} from 'dao/projectPapers.dao';\nimport {AppContext} from 'components/providers/appProvider'\n/**\n * prints the papers list of a local search on the fake database\n */\n/*\nconst PrintLocalSearchList = function ({papersList, handlePaperSelection}) {\n\n    let output = papersList.map((element, index) =>\n        <div key={element.id} className=\"paper-card\">\n            <CheckBox name={\"\"} label={\"\"} val={element.eid}  handler={handlePaperSelection}/>\n            <Link to={\"#\"}><h3>{element.data && element.data.title}</h3></Link>\n            <ClampLines\n                text={element.data && element.data.abstract}\n                lines={4}\n                ellipsis=\"...\"\n                moreText=\"Expand\"\n                lessText=\"Collapse\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    );\n    return output;\n\n};\n*/\n\n/**\n * prints the results of a search on scopus\n */\nconst PrintScoupusSearchList = function ({papersList, handlePaperSelection, selectedEidList}) {\n\n    //side options\n    let sideOptions= [\"search similar\"];\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //handle for the side options\n    async function handleSideOptions(id, name){\n        if(name === \"delete\"){\n            console.log(\"deleting \" + id);\n            //call the dao\n            let res = await projectPapersDao.deletePaper(id);\n            //error checking\n            //if is other error\n            if (res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res !== null) {\n\n                alert(\"DELETED SUCCESSFULLY!\");\n\n            }\n        }\n    }\n\n    let output = papersList.map((element, index) =>\n        <div key={index} className=\"paper-card\">\n            <CheckBox name={element.title} label={\"\"} val={element.eid}  isChecked ={selectedEidList.includes(element.eid)} handler={handlePaperSelection}/>\n            <SideOptions options={sideOptions} handler={handleSideOptions} target={element.id} cls=\"card-options paper-card-options\"/>\n            <Link to={\"#\"}><h3>{element.title}</h3></Link>\n            <div className=\"extra-info\">\n                <p className=\"authors\">{element.authors}</p>\n                <p className=\"eid\">{element.eid}</p>\n                <p className=\"date\">{element.year}</p>\n            </div>\n            <ClampLines\n                text={element.abstract}\n                lines={4}\n                ellipsis=\"...\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    );\n    return output;\n\n};\n\n/**\n * prints a list of papers and handles their removal from the project\n */\n\nconst PrintPapersList = function ({papersList, location, history}) {\n\n    const [localPaperList, setLocalPaperList] = useState(papersList);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //side options\n    let sideOptions= [\"delete\", \"search similar\"];\n\n    //handle for the side options\n    async function handleSideOptions(id, name){\n        if(name === \"delete\"){\n            console.log(\"deleting \" + id);\n            //call the dao\n            let res = await projectPapersDao.deletePaper(id);\n            //error checking\n            //if is other error\n            if (res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res !== null) {\n\n                alert(\"DELETED SUCCESSFULLY!\");\n                let newPapersList = localPaperList.filter((paper)=>paper.id !== id);\n                setLocalPaperList(newPapersList);\n            }\n        }\n    }\n\n    let output;\n    //if list is empty, print a notice message\n    if (localPaperList.length === 0) {\n        output = (\n            <div>there are no papers here, you can add new ones by searching</div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else {\n        output = (\n            localPaperList.map((element) =>\n                <div key={element.id} className=\"paper-card\">\n                    <SideOptions options={sideOptions} handler={handleSideOptions} target={element.id} cls=\"card-options paper-card-options\"/>\n                    <Link to={\"#\"}>\n                        <h3>{element.data.title}</h3>\n                    </Link>\n                    <div className=\"extra-info\">\n                        <p className=\"authors\">{element.data.authors}</p>\n                        <p className=\"eid\">{element.data.eid || element.data.doi}</p>\n                        <p className=\"date\">{element.data.year}</p>\n                    </div>\n                    <ClampLines\n                        text={element.data.abstract}\n                        lines={4}\n                        ellipsis=\"...\"\n                        className=\"paragraph\"\n                        moreText=\"more\"\n                        lessText=\"less\"\n                    />\n                </div>\n            )\n        );\n    }\n    return output;\n\n\n};\n\nexport  {PrintPapersList, PrintScoupusSearchList};","import React from \"react\";\n\n/**\n * component svg select arrow\n * 'focused' is a flag used for displaying a different shape\n */\nconst SelectArrow= function ({focused}) {\n    var from=\"\";\n    var to=\"\";\n    //I check if the upper component is focused and then I animate\n    if(focused){\n        from=\"90,295.5 500,704.5 910,295.5 \";\n        to=\"90,704.5 500,295.5 910,704.5 \";;\n    }else{\n        from=\"90,704.5 500,295.5 910,704.5 \";;\n        to=\"90,295.5 500,704.5 910,295.5 \";\n    }\n    return (\n    <svg version=\"1.1\" id=\"arrow-select\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n        viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st-arrow-select\" points={from}>\n            <animate attributeType=\"XML\" id=\"ani-select-arrow\" attributeName=\"points\" from={from} to={to} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n            </polyline>\n        </svg>\n    );\n};\n\nexport default SelectArrow;\n\n","import React, {useState} from \"react\";\nimport SelectArrow from 'components/svg/selectArrow';\n\n\n/**\n * this component acts as an html <select>\n * it needs an array of options, the index of the selected one and the hadler to change the status of the upper component calling this one\n */\nconst Select = ({ options, selected, handler }) => {\n    \n    //this is useful for the animation\n    const [focused, setFocused] = useState(false);\n\n\n\n    function handleFocus(e){\n        //handle arrow animation and focus of menu\n        document.getElementById(\"ani-select-arrow\").beginElement();//trigger svg animation\n        setFocused(!focused);\n    }\n\n    var output = (\n        <div className=\"custom-select\">\n            <div className=\"selected\" tabIndex={-2} onBlur={handleFocus} onFocus={handleFocus}>{options[selected].label} <div className=\"arrow\"><SelectArrow focused={focused}/></div></div>\n            <div className=\"options-holder\" style={{fontSize: (!focused) ? '0px' : '15px', borderBottom: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderLeft: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderRight: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderTop:\"none\"}}>\n                {options.map((element, index) => (\n                <div key={index} data-value={index} className=\"option\" style={{padding: (!focused) ? '0px' : '2px' }} onMouseDown={handler}>\n                    {element.label}\n                </div>))}\n            </div>\n        </div>\n    );\n    return output;\n}\n\nexport default Select;","import React, {useState, useEffect} from \"react\";\n\n/**\n * component svg order arrow button\n@param {string} up [ASC or DESC]\n */\nconst OrderArrow= function ({display, up}) {\n\n    let output = \"\";\n\n    let from=\"\";\n    let to=\"\";\n\n    //I check where the arrow should point to(up or down) checking the 'up' flag passed by the parent component\n    if(up ===\"ASC\"){\n        from=\"371.7,293 500,165 628.3,293 \";\n        to=\"371.7,491.9 500,619.9 628.3,491.9 \";\n    }else{\n        from=\"371.7,491.9 500,619.9 628.3,491.9 \";\n        to=\"371.7,293 500,165 628.3,293 \";\n    }\n\n    const [destination, setDestination] = useState(to);\n\n    useEffect(() => {\n      setDestination(to);\n    }, [to])\n\n    if(display){\n        output = (\n            <svg version=\"1.1\" id=\"order-arrow\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\" >\n                <polyline className=\"st-order-arrow-head\" points=\"371.7,293 500,165 628.3,293 \" transform=\"matrix(1.5303008,0,0,1.5303008,-279.47582,-105.57059)\">\n                    <animate attributeType=\"XML\" id=\"ani-order-arrow\" attributeName=\"points\" from={from} to={destination} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n                </polyline>\n                <line className=\"st-order-arrow\" x1=\"485.67453\" y1=\"145.09268\" x2=\"485.67453\" y2=\"827.75989\"/>\n            </svg>\n        );\n    }\n    \n    return output;\n};\n\nexport default OrderArrow;","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst RemoveButton = function (props) {\n\n    return (\n        <svg id=\"remove-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <line className=\"rb\" x1=\"134\" y1=\"866\" x2=\"866\" y2=\"134\"/>\n        <line className=\"rb\" x1=\"134\" y1=\"134\" x2=\"866\" y2=\"866\"/>\n        </svg>\n    );\n};\n\nexport default RemoveButton;\n","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Link} from 'react-router-dom'\nimport ClampLines from 'react-clamp-lines';\nimport queryString from \"query-string\";\n\n\nimport {paperDao} from 'dao/paper.dao';\nimport {projectPapersDao} from 'dao/projectPapers.dao'\n\nimport CheckBox from \"components/forms/checkbox\";\nimport RadioBox from \"components/forms/radiobox\";\nimport LoadIcon from 'components/svg/loadIcon';\nimport SearchButton from 'components/svg/searchButton';\nimport SearchSimilarButton from 'components/svg/searchSimilarButton';\nimport {PrintScoupusSearchList} from 'components/papers/printPapersList';\nimport Select from 'components/forms/select';\nimport OrderArrow from 'components/svg/orderArrow';\nimport Pagination from \"components/modules/pagination\";\nimport CloseButton from 'components/svg/closeButton';\nimport RemoveButton from 'components/svg/removeButton';\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue, arrayOfObjectsContains, join} from 'utils/index';\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//order options\nconst orderByOptions = [\n    {label: 'Title', value: 'title'},\n    {label: 'Date', value: 'date'}\n];\n\n//search by  options\nconst searchByOptions = [\n    {label: 'all', value: 'all'},\n    {label: 'author', value: 'author'},\n    {label: 'content', value: 'content'},\n    {label: 'adv. query', value: 'advanced'}\n];\n\n//year options\nconst startYear = 2017;\nconst endYear = new Date().getFullYear() + 2;\n//create a int array from startYear to endYear, then convert it to string array, after this concatenate with \"all\"\nconst yearOptions = [\"all\", ...(_.range(startYear, endYear).map(String))];\n\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst SearchForm = function ({project_id, location, match, history}) {\n\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(true);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n\n    //set query params from url\n    let queryData = createQueryData(location.search);\n    //console.log(queryData);\n\n    //get the localStorage object\n    const storage = window.localStorage;\n    let selectedPapersListFromStorage;\n    if (!window.localStorage) {\n        console.log(\"the browser must be support localStorage\");\n    }\n    //if exists already this attribute in the local storage\n    if (storage.getItem(\"selectedPapersList\")) {\n        selectedPapersListFromStorage = JSON.parse(storage.getItem(\"selectedPapersList\"));\n    }\n    //if not exists, we create a new array\n    else {\n        selectedPapersListFromStorage = [];\n    }\n\n    // list of selected papers\n    const [selectedPapersList, setSelectedPapersList] = useState(selectedPapersListFromStorage);\n\n    //state for search form\n    const [keywords, setKeyWords] = useState(\"_\");\n    const [source, setSource] = useState({\"scopus\": true, \"googleScholar\": false, \"arXiv\": false});\n    const [searchBy, setSearchBy] = useState(\"all\");\n    const [year, setYear] = useState(\"all\");\n\n    //state for sorting arrow animation\n    const [up, setUp] = useState(queryData.sort);\n\n\n    useEffect(() => {\n        //flag that represents the state of component\n        let mounted = true;\n\n        //if the sorting parameter changes I update the status and trigger the SVG animation\n        if (up !== queryData.sort) {\n            setUp(queryData.sort);\n            if(document.getElementById(\"ani-order-arrow\")){\n                document.getElementById(\"ani-order-arrow\").beginElement();\n            }\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //update the values of state from url\n            setKeyWords(queryData.query);\n            setSource({\"scopus\": queryData.scopus, \"googleScholar\": queryData.googleScholar, \"arXiv\": queryData.arXiv});\n            setSearchBy(queryData.searchBy);\n            setYear(queryData.year);\n\n            //if there is queryString from URL\n            if (queryData.query !== \"\") {\n\n                setDisplay(false);\n\n                //always call the dao to search on scopus\n                let res = await paperDao.search(queryData);\n\n                //error checking\n                //if the component is still mounted and  is 404 error\n                if (mounted && res && res.message === \"Not Found\") {\n                    setPapersList([]);\n                    setTotalResults(0);\n                    //show the page\n                    setDisplay(true);\n                }\n                //if the component is still mounted and  there are some other errors\n                else if (mounted && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }\n                //if the component is still mounted and  res isn't null\n                else if (mounted && res) {\n                    //update state\n                    setPapersList(res.results);\n                    setTotalResults(res.totalResults);\n                    //show the page\n                    setDisplay(true);\n                }\n            }\n        };\n\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mounted = false;\n        };\n\n    }, [project_id, queryData.query, queryData.orderBy, queryData.searchBy, queryData.sort, queryData.year, queryData.start, queryData.count, queryData.scopus, queryData.googleScholar, queryData.arXiv]);  //re-execute when these variables change\n\n\n    /*\n     START OF 'RESULT PAPERS HANDLING' ########################################################\n     */\n\n    //handler for sort selection\n    function handleSelection(e) {\n        //get index\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.orderBy = orderByOptions[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e) {\n\n        if (queryData.sort === \"ASC\") {\n            queryData.sort = \"DESC\";\n        }\n        else {\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n    /*function to insert and remove the paper id from selected list*/\n    function handlePaperSelection(event) {\n\n        let newList;\n        //get eid\n        let eid = event.target.value;\n        //get ttitle\n        let title = event.target.name;\n        //if id is not included in the list yet\n        if (getIndexOfObjectArrayByKeyAndValue(selectedPapersList, \"eid\", eid) === -1) {\n            //create a copy of array\n            newList = [...selectedPapersList];\n            //insert into array\n            newList.push({\"eid\": eid, \"title\": title});\n\n        }\n        //if id already exists in the list\n        else {\n            //remove the  target paper from array\n            newList = selectedPapersList.filter(function (element) {\n                return element.eid !== eid;\n            });\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*function to select all papers*/\n    function selectAllPapers(event) {\n\n        let newList;\n\n        //if not all papers are selected yet\n        if (!arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")) {\n\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {\n                return {\"eid\": paper.eid, \"title\": paper.title}\n            });\n            //and merge them with the previously selected ones\n            let tmpList = [...allPapersInPage, ...selectedPapersList];\n            newList = _.uniqBy(tmpList, 'eid');\n\n        }\n        //if all papers are selected, we need to remove them\n        else {\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {\n                return {\"eid\": paper.eid, \"title\": paper.title}\n            });\n            //I filter the selectedPapersList by removing the papers that are in the current page\n            newList = selectedPapersList.filter(x => !allPapersInPage.some(paper => paper.eid === x.eid));\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n\n    /*function to add the post in the project*/\n    async function handleAddPapers(event) {\n\n        event.preventDefault();\n\n        if (selectedPapersList.length === 0) {\n            alert(\"the list is empty!\");\n        }\n        else {\n\n            //create a eidList from the list of selected paper\n            let arrayEid = selectedPapersList.map(element => element.eid);\n            //call dao\n            let res = await projectPapersDao.postPaperIntoProject({\n                \"arrayEid\": arrayEid, \"project_id\": project_id\n            });\n            //if there is the error\n            if (res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n                return null;\n            }\n\n            //empties the state\n            setSelectedPapersList([]);\n            //update the storage\n            storage.removeItem(\"selectedPapersList\");\n            alert(\"insert completed\");\n        }\n\n    }\n\n    /*\n     END OF 'RESULT PAPERS HANDLING' ########################################################\n     */\n\n\n    /*function to send the query*/\n    async function handleSendSearch(event) {\n\n        event.preventDefault();\n\n        //if query input is empty\n        if (keywords === \"\") {\n            alert(\"search string is empty\")\n        }\n        else {\n            //synchronize the query data from react state hooks\n            queryData.query = keywords;\n            queryData.scopus = source.scopus;\n            queryData.googleScholar = source.googleScholar;\n            queryData.arXiv = source.arXiv;\n            queryData.searchBy = searchBy;\n            queryData.year = year;\n\n            //send query url\n            let queryString = createQueryStringFromObject(queryData);\n            //launch to search\n            history.push(queryString);\n\n        }\n\n    }\n\n    /**\n     *handle to update hook state by input change\n     */\n    function handleOnInputChange(event) {\n\n        let newSource;\n\n        switch (event.target.name) {\n            case \"query\":\n                setKeyWords(event.target.value);\n                break;\n            case \"scopus\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.scopus = !source.scopus;\n                setSource(newSource);\n                break;\n\n            case \"googleScholar\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.googleScholar = !source.googleScholar;\n                setSource(newSource);\n                break;\n            case \"arXiv\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.arXiv = !source.arXiv;\n                setSource(newSource);\n                break;\n            case \"searchBy\":\n                setSearchBy(event.target.value);\n                break;\n            case \"year\":\n                setYear(event.target.value);\n                break;\n            default:\n                break;\n        }\n\n\n    }\n\n    /*\n     #######################################\n     need to  create a new child component for the part of <form>, when we have more information on search options\n     ######################################\n     */\n    let formPart = (\n        <>{}\n            <form className={(queryData.query === \"\") ? 'search-form' : 'search-form small'}\n                  onSubmit={handleSendSearch}>\n                {/*search form*/}\n                <div style={{position: 'relative'}}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"search\"\n                        name=\"query\"\n                        value={keywords}\n                        onChange={handleOnInputChange}\n                    />\n                    <button className=\"go-search\" type=\"submit\" value=\"Submit\">\n                        <SearchButton/>\n                    </button>\n                    <Link to={\"/projects/\" + project_id + \"/searchsimilar\"}>\n                        <button className=\"go-similar\" type=\"button\">\n                            <SearchSimilarButton/>\n                        </button>\n                    </Link>\n                </div>\n\n                <div className=\"option-holder\">\n                    <label>Source:</label><br/>\n\n                    <div className=\"checkboxes-holder\">\n                        <CheckBox label=\"Scopus\" name=\"scopus\" val=\"\" isChecked={source.scopus}\n                                  handler={handleOnInputChange}/>\n                        <CheckBox label=\"Google Scholar\" name=\"googleScholar\" val=\"\" isChecked={source.googleScholar}\n                                  handler={handleOnInputChange}/>\n                        <CheckBox label=\"arXiv\" name=\"arXiv\" val=\"\" isChecked={source.arXiv}\n                                  handler={handleOnInputChange}/>\n                    </div>\n\n                    <label>Search by:</label><br/>\n\n                    <div className=\"checkboxes-holder\">\n                        <RadioBox label={searchByOptions[0].label} name=\"searchBy\" val={searchByOptions[0].value}\n                                  isChecked={searchBy === searchByOptions[0].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[1].label} name=\"searchBy\" val={searchByOptions[1].value}\n                                  isChecked={searchBy === searchByOptions[1].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[2].label} name=\"searchBy\" val={searchByOptions[2].value}\n                                  isChecked={searchBy === searchByOptions[2].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[3].label} name=\"searchBy\" val={searchByOptions[3].value}\n                                  isChecked={searchBy === searchByOptions[3].value} handler={handleOnInputChange}/>\n                    </div>\n\n                    <label>Year:</label><br/>\n                    <div className=\"checkboxes-holder\">\n                        {\n                            yearOptions.map((singleYear, index) =>\n                                <RadioBox key={index} label={singleYear} name=\"year\" val={singleYear}\n                                          isChecked={year === singleYear} handler={handleOnInputChange}/>\n                            )\n                        }\n                    </div>\n                </div>\n\n            </form>\n        </>);\n\n\n    let resultPart = \"\";\n\n    //if is loading\n    if (display === false) {\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\"\n                     style={{pointerEvents: \"none\"}}>{/* this way the user cannot sort while loading the results */}\n                    <div className=\"select-all\">\n                        <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={false}\n                                  handler={selectAllPapers}/>\n                    </div>\n                    <div className=\"order\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions}\n                                selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/>\n                        </button>\n                    </div>\n                </div>\n                <SelectedPapersListBox selectedPapersList={selectedPapersList}/>\n                <div className=\"search-loading-holder\">\n                    <LoadIcon class={\"small\"}/>\n                </div>\n            </div>);\n    }\n\n    //if the search results list is empty\n    else if (papersList.length === 0 && queryData.query !== \"\") {\n        //the class is used only to workaround a small bug that display not found just as the search start before the loading icon\n        resultPart = (\n            <div className=\"not-found\"> not found :( </div>\n        );\n    }\n    else if (papersList.length > 0 && queryData.query !== \"\") {\n\n        //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\">\n                    <div className=\"select-all\">\n                        <CheckBox label=\"Select All\" name=\"select_all\" val=\"\"\n                                  isChecked={arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")}\n                                  handler={selectAllPapers}/>\n                    </div>\n                    <div className=\"order\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions}\n                                selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/>\n                        </button>\n                    </div>\n                </div>\n                <SelectedPapersListBox selectedPapersList={selectedPapersList}\n                                       handlePaperSelection={handlePaperSelection}/>\n\n                <PrintScoupusSearchList papersList={papersList} handlePaperSelection={handlePaperSelection}\n                                        selectedEidList={arrayEid}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults}\n                            path={match.url}/>\n            </div>\n        );\n    }\n\n\n    let output = (\n        <>\n            {formPart}\n            <form className=\"search-results\" onSubmit={handleAddPapers}>\n                {resultPart}\n            </form>\n        </>\n    );\n\n    return output;\n};\n\n\n/**\n * internal component to print the box of list of selected paper\n */\nconst SelectedPapersListBox = function ({selectedPapersList, handlePaperSelection}) {\n\n    let output = \"\";\n    output = (\n        <div className=\"selected-papers-list\" style={{\n            opacity: (selectedPapersList.length > 0) ? \"1.0\" : \"0.0\",\n            pointerEvents: (selectedPapersList.length > 0) ? \"auto\" : \"none\"\n        }}>\n            <h3>\n                {\"SELECTED PAPERS\"} <br/><span>(total : {selectedPapersList.length})</span>\n            </h3>\n            <div className=\"submission-wrapper\">\n                <div className=\"papers-wrapper\" style={{border: (selectedPapersList.length > 0) ? \"\" : \"0px\"}}>\n                    <div className=\"papers-flex\" style={{padding: (selectedPapersList.length > 0) ? \"\" : \"0px\"}}>\n                        {selectedPapersList.map((element, index) =>\n                            <p key={index}>\n                                <span>{element.title}</span>\n                                <button type=\"button\" className=\"remove-btn\" name={element.title}\n                                        value={element.eid} //name and value don't work on the button event for some reasons\n                                        onClick={(e) => {\n                                            handlePaperSelection({target: {name: element.title, value: element.eid}})\n                                        }}>\n                                    <RemoveButton/>\n                                </button>\n                            </p>\n                        )}\n                    </div>\n                </div>\n                <button style={{\n                    border: (selectedPapersList.length > 0) ? \"\" : \"0px\",\n                    margin: (selectedPapersList.length > 0) ? \"\" : \"0px\",\n                    height: (selectedPapersList.length > 0) ? \"\" : \"0px\",\n                    pointerEvents: (selectedPapersList.length > 0) ? \"auto\" : \"none\"\n                }} className=\"ti-btn add-resultpaper-btn\" type=\"submit\" value=\"Submit\">\n                    <div className=\"btn-title\">Add Selected Paper</div>\n                    <div className=\"btn-icon\"></div>\n                </button>\n            </div>\n        </div>\n    );\n\n    return output;\n\n};\n\n\n/**\n * internal function to prepare a object of queryData\n * @param queryUrl\n * @return object of queryData for the fetch\n */\nfunction createQueryData(queryUrl) {\n\n\n    //set query params from queryString of url\n    let params = queryString.parse(queryUrl);\n    let query = params.query || \"\";\n\n    let searchBy = params.searchBy || \"all\";\n    let orderBy = params.orderBy || \"title\";\n    let sort = params.sort || \"ASC\";\n    let start = params.start || 0;\n    let count = params.count || 10;\n\n\n    let scopus;\n    if (params.scopus === undefined) {\n        scopus = true;\n    }\n    else {\n        scopus = (params.scopus === \"true\");\n    }\n\n    let googleScholar = (params.googleScholar === \"true\");\n    let arXiv = (params.arXiv === \"true\");\n\n    let year = params.year || \"all\";\n\n    let queryData = {query, searchBy, orderBy, sort, scopus, googleScholar, arXiv, year, start, count};\n\n    return queryData;\n\n}\n\n\nexport default SearchForm;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to post the file pdf to backend\n * @param data the file data\n * @return {objects}\n */\nasync function updatePdf(data) {\n    let url = config.home +config.pdf_parse_server;\n\n    let res = await http.postFile(url, data);\n    return res;\n\n}\n\n\nconst updateFileDao = {\n    updatePdf,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {updateFileDao};","import React from \"react\";\n\n/**\n * component svg go-btn\n */\nconst GoButton = function (props) {\n\n    return (\n        <svg id=\"go-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 1000 1000\">\n\n            <polyline\n            className=\"st1-go\"\n            points=\"371.7,481.9 500,609.9 628.3,481.9 \"\n            transform=\"matrix(0,-1.4834458,1.4856134,0,-92.453824,1228.1491)\"/>\n            <line\n            className=\"st0-go\"\n            x1=\"810.69312\"\n            y1=\"486.42624\"\n            x2=\"206.34099\"\n            y2=\"486.42624\"/>\n\n        </svg>\n    );\n};\n\nexport default GoButton;\n","import React, {useRef, useState} from \"react\";\nimport ClampLines from 'react-clamp-lines';\nimport {Link} from 'react-router-dom';\n\nimport CloseButton from 'components/svg/closeButton';\nimport GoButton from \"components/svg/goButton\";\nimport LoadIcon from \"components/svg/loadIcon\";\n\n/**\n * the search form component used for inserting the data relative to the paper we are searching for similar ones\n */\nconst SearchSimilarPapers = ({close, //the setter for closing the form when it's visible(sets the visibility to false)\n                                style, //style of the component\n                                project_id,\n                                input, //the string input\n                                handler, //handler for the string input\n                                paperInfo, //the data of the retrieved paper(should match the paper we are searching similarities for)\n                                fetching, //flag to control when the component is fetching the data related to the paper we are searching similarities for\n                                setPaperInfo, //sets the info of the paper we are searching similarites for\n                                setPaperFile, //handles the input of a file(when we upload a file instead os specifying the paper by a string)\n                                history\n                            }) => {\n    \n    let output = \"\";\n    let content = \"\";\n    let topRightButton = \"\";\n\n    //reference for the input file field\n    const inputElement = useRef(null);\n\n\n    //clicking the button will trigger the input file\n    const onButtonClick = () => {\n        inputElement.current.click();\n    };\n\n    async function handleSubmission(){\n        //if the user submits a paper I set the paperFile variable to its content so the main form can work with it\n        if(inputElement.current.files[0]){\n            setPaperFile(inputElement.current.files[0]);\n        }\n    }\n\n    //output\n    if(fetching){\n        content = (<div className=\"load-icon-similar-paper\"><LoadIcon/></div>);\n    }else if(paperInfo && paperInfo.title){\n        content = (\n            <>\n            <h3 className=\"similar-paper-title\">{paperInfo.title}</h3>\n            <ClampLines\n                text={paperInfo.abstract}\n                lines={4}\n                ellipsis=\"...\"\n                className=\"similar-paper-paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n            </>\n        );\n    }else{\n        content = (\n            <>\n                <p className=\"similar-description\">Search for Similar Papers</p>\n                <div className=\"DOI-holder\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"type DOI, EID, or paper title\"\n                        value={input}\n                        onChange={handler}\n                        name=\"query\"\n                    />\n                    <button className=\"go-search-similar DOI-btn\" type=\"submit\" value=\"Submit\">\n                        <GoButton/>\n                    </button>\n                </div>\n                <p className=\"or\">or</p>\n                <div className=\"file-input-container\">\n                    <input type=\"file\" id=\"real-input\" ref={inputElement} onChange={handleSubmission}/>\n                    <button type=\"button\" className=\"browse-btn\" onClick={onButtonClick}>\n                        Upload a Paper\n                    </button>\n                </div>\n            </>\n        );\n    }\n    if(paperInfo){\n        topRightButton = (\n            <button type=\"button\" className={\"close-btn red-x\"} onClick={(e) => {\n                setPaperInfo(undefined);//I delete the similar paper info\n                setPaperFile(undefined);//I delete its file\n                history.push({});\n            }}><CloseButton/></button>\n        );\n    }else{\n        topRightButton = (\n            <Link to={\"/projects/\"+ project_id + \"/search\"} ><button type=\"button\" className={\"close-btn\"}><CloseButton/></button></Link>\n        );\n    }\n    output = (\n        <div style={{...style}} className=\"light-modal similar-search-paper-upload\">\n            {topRightButton}\n            {content}\n        </div>\n    );\n    return output;\n}\n\nexport default SearchSimilarPapers;","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Link} from 'react-router-dom'\nimport ClampLines from 'react-clamp-lines';\nimport queryString from \"query-string\";\n\n\nimport {paperDao} from 'dao/paper.dao';\nimport {projectPapersDao} from 'dao/projectPapers.dao';\nimport {updateFileDao} from \"dao/updateFile.dao\";\n\nimport CheckBox from \"components/forms/checkbox\";\nimport RadioBox from \"components/forms/radiobox\";\nimport {PrintScoupusSearchList} from 'components/papers/printPapersList';\nimport Select from 'components/forms/select';\nimport Pagination from \"components/modules/pagination\";\nimport SearchSimilarPapers from \"components/forms/searchSimilarPapers\";\n\nimport OrderArrow from 'components/svg/orderArrow';\nimport LoadIcon from 'components/svg/loadIcon';\nimport SearchButton from 'components/svg/searchButton';\nimport RemoveButton from 'components/svg/removeButton';\nimport SearchSimilarButton from 'components/svg/searchSimilarButton';\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue, arrayOfObjectsContains} from 'utils/index';\n\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//order options\nconst orderByOptions = [\n    {label: 'Title', value: 'title'},\n    {label: 'Date', value: 'date'}\n];\n\n\n//year options\nconst startYear = 2017;\nconst endYear = new Date().getFullYear() + 2;;\n//create a int array from startYear to endYear, then convert it to string array, after this concatenate with \"all\"\nconst yearOptions = [\"all\", ...(_.range(startYear, endYear).map(String))];\n\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst SearchSimilarForm = function ({project_id, location, match, history}) {\n\n\n    //list of result papers data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to control the visualization of the results when fetching results data\n    const [display, setDisplay] = useState(true);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n\n    //set query params from url\n    let queryData = createQueryData(location.search);\n    //console.log(queryData);\n\n    //get the localStorage object\n    const storage = window.localStorage;\n    let selectedPapersListFromStorage;\n    let similarPaperDataFromStorage;\n    if (!window.localStorage) {\n        console.log(\"the browser must be support localStorage\");\n    }\n    \n    //if exists already this attribute in the local storage\n    if (storage.getItem(\"selectedPapersList\")) {\n        selectedPapersListFromStorage = JSON.parse(storage.getItem(\"selectedPapersList\"));\n    }\n    //if not exists, we create a new array\n    else {\n        selectedPapersListFromStorage = [];\n    }\n\n    //if exists already this attribute in the local storage\n    if (storage.getItem(\"similarPaperData\")) {\n        similarPaperDataFromStorage = JSON.parse(storage.getItem(\"similarPaperData\"));\n    }\n    //if not exists, we create a new array\n    else {\n        similarPaperDataFromStorage = null;\n    }\n\n    // list of selected papers\n    const [selectedPapersList, setSelectedPapersList] = useState(selectedPapersListFromStorage);\n\n    //state for search form\n    const [keywords, setKeyWords] = useState(\"\");\n    const [source, setSource] = useState({\"scopus\": true, \"googleScholar\": false, \"arXiv\": false});\n    const [year, setYear] = useState(\"all\");\n    const [similarPaperData, setSimilarPaperData] = useState(similarPaperDataFromStorage); //the data of the paper to search similarities for\n    const [similarPaperFile, setSimilarPaperFile] = useState(undefined); //the file of the paper to search similarities for\n\n    //state for sorting arrow animation\n    const [up, setUp] = useState(queryData.sort);\n\n    //state for 'similar papers search' form\n    const [similarFormVisibility, setSimilarFormVisibility] = useState(false);\n\n    //bool for target similar paper fetching\n    const [similarPaperFetch, setSimilarPaperFetch] = useState(false);\n\n\n    /*\n        START OF USEEFFECT FOR HANDLING QUERY PARAMETERS ###################################################\n    */\n\n    //effect for query parameters input\n    useEffect(() => {\n\n        let mounted = true;\n\n        console.log(queryData);\n        //if the sorting parameter changes I update the status and trigger the SVG animation\n        if(up !== queryData.sort){\n            setUp(queryData.sort);\n            if(document.getElementById(\"ani-order-arrow\")){\n                document.getElementById(\"ani-order-arrow\").beginElement();\n            }\n        }\n\n\n        //fetches data when searching for similarities\n        const fetchDataSimilarity = async () => {\n\n            let res = undefined;\n\n            //standard options parameters\n            setKeyWords(queryData.query);\n            setSource({\"scopus\": queryData.scopus, \"googleScholar\": queryData.googleScholar, \"arXiv\": queryData.arXiv});\n            setYear(queryData.year);\n\n            //if there's some data in storage(it means I'm probaly fetching a second page of results)\n            if(similarPaperData){\n                //open flag of loading\n                setDisplay(false);\n                \n                //I call the dao for searching for similar papers based on the data\n                //this will be the call for the similarity search\n                res = await paperDao.searchSimilar({\"query\": \"Trento\", \"start\" : queryData.start, \"count\" : queryData.count});\n                setPapersList(res.results);\n                \n                //close flag of loading\n                setDisplay(true);\n\n            }//if there's a file I can do an api call to search for papers similar to the file\n            else if(similarPaperFile){\n                \n                console.log(\"FILE NAME : \" + similarPaperFile.name)\n\n                //check file extension and its mine type\n                if(!/\\.(pdf|PDF)$/.test(similarPaperFile.name) || similarPaperFile.type.indexOf(\"application/pdf\") === -1){\n                    alert(\"the file must be a pdf\");\n                }\n                else{\n                    //open flag of loading\n                    setDisplay(false);\n                    setSimilarPaperFetch(true);\n                    console.log(\"FETCHING PARSE PDF\")\n                    //prepare the form data for post\n                    let formData = new FormData();\n                    formData.append('file', similarPaperFile);\n\n                    //call the dao\n                    console.log(\"CALLING THE PAPER PARSER SERVICE\")\n                    res = await updateFileDao.updatePdf(formData);\n    \n                    //if there is a error\n                    if (res && res.message) {\n                        //pass error object to global context\n                        alert(\"Error during parsing file\");\n                        setDisplay(true);\n                        setSimilarPaperFetch(false);\n                    }\n                    else{\n                        console.log(res);\n                        //set paperdata\n                        setSimilarPaperData(res);\n                        //display the paper data\n                        setSimilarPaperFetch(false);\n                    }\n    \n                    //I call the dao for searching for similar papers based on the data\n                    //this will be the call for the similarity search\n                    res = await paperDao.searchSimilar({\"query\" : \"Trento\", \"start\" : queryData.start, \"count\" : queryData.count});\n                    setPapersList(res.results);\n                    \n                    //close flag of loading\n                    setDisplay(true);\n\n                }\n            }//if there's a query I can retrieve similar papers based on the query\n            else if (queryData.query !== \"\") {\n\n                setDisplay(false);\n                \n                setSimilarPaperFetch(true);\n                //this will be the call to the service identifying a specific paper\n                let paperData = await paperDao.search({\"query\": \"Torino\"});\n                setSimilarPaperData(paperData.results[0]);\n                setSimilarPaperFetch(false);\n\n\n                //I call the dao for searching for similar papers based on similarPaperString\n                //this will be the call for the similarity search\n                let res = await paperDao.searchSimilar({\"query\" : \"Trento\", \"start\" : queryData.start, \"count\" : queryData.count});\n                console.log(res);\n\n                //error checking\n                //if is 404 error\n                if (res && res.message === \"Not Found\") {\n                    setPapersList([]);\n                    setTotalResults(0);\n                    //show the page\n                    setDisplay(true);\n                }\n                //if is other error\n                else if (res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }\n                //if res isn't null\n                else if (res !== null) {\n                    //update state\n                    setPapersList(res.results);\n                    setTotalResults(res.totalResults);\n                    //show the page\n                    setDisplay(true);\n                }\n            }else{\n                console.log(\"no file (& no similarPaperString)\");\n            }\n\n        };\n\n\n        fetchDataSimilarity();\n\n        //when the component will unmount\n        return () => {\n            localStorage.removeItem(\"similarPaperData\");\n            mounted = false;\n        };\n\n    }, [project_id, similarPaperFile, queryData.query, queryData.orderBy, queryData.sort, queryData.year, queryData.start, queryData.count, queryData.scopus, queryData.googleScholar, queryData.arXiv]);  //re-execute when these variables change\n\n\n    /*\n        END OF USEEFFECT FOR HANDLING QUERY PARAMETERS #######################################################\n    */\n\n\n    //update local storage every time the similar paper data changes\n    useEffect(() => {\n        console.log(\"effecting\");\n        if(similarPaperData){\n            storage.setItem(\"similarPaperData\", JSON.stringify(similarPaperData));\n        }else{\n            storage.removeItem(\"similarPaperData\");\n        }\n    }, [similarPaperData])\n\n    /*handles the submission of a search */\n    function handleSendSearch(event) {\n\n        console.log(\"SUBMITTING SEARCH\");\n        if(event){\n            event.preventDefault();\n        }\n\n        console.log(\"similarity search was called\");\n        //if query input is empty\n        if (keywords === \"\" && !similarPaperFile) {\n            alert(\"similar paper string is empty\")\n        }\n        else {\n            //synchronize the query data from react state hooks\n            //if there isn't any file I search with the string\n            if(!similarPaperFile){\n                console.log(\"there isn't a file\")\n                queryData.query = keywords;\n            }else{\n                console.log(\"there's a file\")\n                queryData.query = \"\";\n            }\n            queryData.scopus = source.scopus;\n            queryData.googleScholar = source.googleScholar;\n            queryData.arXiv = source.arXiv;\n            queryData.year = year;\n\n            //send query url\n            let queryString = createQueryStringFromObject(queryData);\n            //launch to search\n            history.push(queryString);//this allows pushing the same data and refreshing the page with the hash router\n\n        }\n\n\n    }\n\n    /**\n     *handle to update hook state by input change on the form fields\n     */\n    function handleOnInputChange(event) {\n\n        let newSource;\n\n        switch (event.target.name) {\n            case \"query\":\n                setKeyWords(event.target.value);\n                break;\n            case \"scopus\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.scopus = !source.scopus;\n                setSource(newSource);\n                break;\n\n            case \"googleScholar\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.googleScholar = !source.googleScholar;\n                setSource(newSource);\n                break;\n            case \"arXiv\":\n                //copy the old source\n                newSource = {...source};\n                //switch between true and false\n                newSource.arXiv = !source.arXiv;\n                setSource(newSource);\n                break;\n            case \"year\":\n                setYear(event.target.value);\n                break;\n            default:\n                break;\n        }\n\n\n    }\n\n    /*\n     #######################################\n     need to  create a new child component for the part of <form>, when we have more information on search options\n     ######################################\n     */\n    let formPart = (\n        <>\n            <form className={(queryData.query === \"\" && !similarPaperFile && !similarPaperData) ? 'search-form' : 'search-form small'}\n                    style={{marginTop: (similarFormVisibility) ? \"30px\" : \"60px\"}}\n                    onSubmit={handleSendSearch}>\n                {/*search form*/}\n                \n                <SearchSimilarPapers style={{boxShadow: \"0px 0px 3px -1px rgba(0, 0, 0, 0.25)\"}}\n                    project_id={project_id}\n                    close={setSimilarFormVisibility} handler={handleOnInputChange} \n                    input={keywords} paperInfo={similarPaperData}\n                    fetching={similarPaperFetch} setPaperInfo={setSimilarPaperData}\n                    setPaperFile={setSimilarPaperFile}\n                    history={history}/>\n                \n                <div className=\"option-holder\">\n                    <label>Source:</label><br/>\n\n                    <div className=\"checkboxes-holder\">\n                        <CheckBox label=\"Scopus\" name=\"scopus\" val=\"\" isChecked={source.scopus}\n                                  handler={handleOnInputChange}/>\n                        <CheckBox label=\"Google Scholar\" name=\"googleScholar\" val=\"\" isChecked={source.googleScholar}\n                                  handler={handleOnInputChange}/>\n                        <CheckBox label=\"arXiv\" name=\"arXiv\" val=\"\" isChecked={source.arXiv}\n                                  handler={handleOnInputChange}/>\n                    </div>\n\n                    <label>Year:</label><br/>\n                    <div className=\"checkboxes-holder\" >\n                        {\n                            yearOptions.map((singleYear, index) =>\n                                <RadioBox key={index} label={singleYear} name=\"year\" val={singleYear}\n                                          isChecked={year === singleYear} handler={handleOnInputChange}/>\n                            )\n                        }\n                    </div>\n                </div>\n            </form>\n        </>);\n\n\n    let resultPart = \"\";\n\n     /*\n        START OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //handler for sort selection\n    function handleSelection(e) {\n        //get index\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.orderBy = orderByOptions[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e) {\n\n        if (queryData.sort === \"ASC\") {\n            queryData.sort = \"DESC\";\n        }\n        else {\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n    /*function to insert and remove the paper id from selected list*/\n    function handlePaperSelection(event) {\n        let newList;\n        //get eid\n        let eid = event.target.value;\n        //get ttitle\n        let title = event.target.name;\n        //if id is not included in the list yet\n        if (getIndexOfObjectArrayByKeyAndValue(selectedPapersList, \"eid\", eid) === -1) {\n           //create a copy of array\n            newList = [...selectedPapersList];\n            //insert into array\n            newList.push({\"eid\": eid, \"title\": title});\n\n        }\n        //if id already exists in the list\n        else {\n            //remove the  target paper from array\n            newList = selectedPapersList.filter(function (element) {\n                return element.eid !== eid;\n            });\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*function to select all papers*/\n    function selectAllPapers(event) {\n        \n        let newList;\n        \n        //if not all papers are selected yet\n        if(!arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")){\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //and merge them with the previously selected ones\n            let tmpList = [...allPapersInPage, ...selectedPapersList];\n            newList = _.uniqBy(tmpList, 'eid');\n        }else{//otherwise\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //I filter the selectedPapersList by removing the papers that are in the current page\n            newList = selectedPapersList.filter(x => !allPapersInPage.some(paper => paper.eid === x.eid));\n        }\n        \n        setSelectedPapersList(newList);\n\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*function to add the post in the project*/\n    async function handleAddPapers(event) {\n\n        event.preventDefault();\n        //console.log(selectedPapersList);\n\n       //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n        //call dao\n        let res = await projectPapersDao.postPaperIntoProject({\n            \"arrayEid\": arrayEid, \"project_id\": project_id\n        });\n        //if there is the error\n        if (res && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);\n            return null;\n        }\n\n        //empties the state\n        setSelectedPapersList([]);\n\n        //update the storage\n        storage.removeItem(\"selectedPapersList\");\n\n        alert(\"insert completed\");\n\n    }\n\n    /*\n        END OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //if is loading\n    if (display === false) {\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\" style={{pointerEvents: \"none\"}}>{/* this way the user cannot sort while loading the results */}\n                    <div className=\"select-all\">\n                    <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={false} handler={selectAllPapers}/>\n                    </div>\n                    <div className=\"order\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions}\n                                selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/></button>\n                    </div>\n                </div>\n                <SelectedPapersListBox selectedPapersList={selectedPapersList}/>\n                <div className=\"search-loading-holder\">\n                    <LoadIcon class={\"small\"}/>\n                </div>\n            </div>);\n    }\n\n    //if the search results list is empty\n    else if (papersList.length === 0 && (queryData.query !== \"\" || similarPaperFile || similarPaperData)) {\n        //the class is used only to workaround a small bug that display not found just as the search start before the loading icon\n        resultPart = (\n            <div className=\"not-found\"> not found :( </div>\n        );\n    }\n    else if (papersList.length > 0 && (queryData.query !== \"\" || similarPaperFile || similarPaperData)) {\n\n        //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n\n        resultPart = (\n            <div className=\"paper-card-holder\">\n                <div className=\"paper-card-holder-head\">\n                    <div className=\"select-all\">\n                    <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")} handler={selectAllPapers}/>\n                    </div>\n                    <div className=\"order\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions}\n                                selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/></button>\n                    </div>\n                </div>\n                <SelectedPapersListBox selectedPapersList={selectedPapersList} handlePaperSelection={handlePaperSelection}/>\n\n                <PrintScoupusSearchList papersList={papersList} handlePaperSelection={handlePaperSelection} selectedEidList={arrayEid}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </div>\n        );\n    }\n\n\n    let output = (\n        <>\n            {formPart}\n            <form className=\"search-results\" onSubmit={handleAddPapers}>\n                {resultPart}\n            </form>\n        </>\n    );\n\n    return output;\n};\n\n\n/**\n * internal component to print the box of list of selected paper\n */\nconst SelectedPapersListBox = function ({selectedPapersList, handlePaperSelection}){\n\n    let output = \"\";\n    output = (\n        <div className=\"selected-papers-list\" style={{opacity: (selectedPapersList.length>0) ? \"1.0\" : \"0.0\", pointerEvents: (selectedPapersList.length>0) ? \"auto\" : \"none\"}}>\n            <h3>\n                {\"SELECTED PAPERS\"} <br/><span>(total : {selectedPapersList.length})</span>\n            </h3>\n            <div className=\"submission-wrapper\">\n                <div className=\"papers-wrapper\" style={{border: (selectedPapersList.length>0) ? \"\" : \"0px\"}}>\n                    <div className=\"papers-flex\" style={{padding: (selectedPapersList.length>0) ? \"\" : \"0px\"}}>\n                        {selectedPapersList.map((element, index) =>\n                            <p key={index}>\n                                <span>{element.title}</span> \n                                <button type=\"button\" className=\"remove-btn\" name={element.title} value={element.eid} //name and value don't work on the button event for some reasons\n                                    onClick={(e) => {handlePaperSelection({target: {name: element.title, value:element.eid}})}}>\n                                    <RemoveButton/>\n                                </button>\n                            </p>\n                        )}\n                    </div>\n                </div>\n                <button style={{border: (selectedPapersList.length>0) ? \"\" : \"0px\", margin: (selectedPapersList.length>0) ? \"\" : \"0px\", height: (selectedPapersList.length>0) ? \"\" : \"0px\", pointerEvents: (selectedPapersList.length>0) ? \"auto\" : \"none\"}} className=\"ti-btn add-resultpaper-btn\" type=\"submit\" value=\"Submit\">\n                    <div className=\"btn-title\">Add Selected Paper</div><div className=\"btn-icon\"> </div>\n                </button>\n            </div>\n        </div>\n    );\n\n    return output;\n\n};\n\n\n/**\n * internal function to prepare a object of queryData\n * @param queryUrl\n * @return object of queryData for the fetch\n */\nfunction createQueryData(queryUrl) {\n\n\n    //set query params from queryString of url\n    let params = queryString.parse(queryUrl);\n    let query = params.query || \"\";\n\n    let orderBy = params.orderBy || \"title\";\n    let sort = params.sort || \"ASC\";\n    let start = params.start || 0;\n    let count = params.count || 10;\n\n\n    let scopus;\n    if (params.scopus === undefined) {\n        scopus = true;\n    }\n    else {\n        scopus = (params.scopus === \"true\");\n    }\n\n    let googleScholar = (params.googleScholar === \"true\");\n    let arXiv = (params.arXiv === \"true\");\n\n    let year = params.year || \"all\";\n\n    let queryData = {query, orderBy, sort, scopus, googleScholar, arXiv, year, start, count};\n\n    return queryData;\n\n}\n\n\nexport default SearchSimilarForm;","import React, {useState, useEffect, useContext} from \"react\";\nimport queryString from \"query-string\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport {PrintPapersList} from 'components/papers/printPapersList';\nimport Select from 'components/forms/select';\nimport OrderArrow from 'components/svg/orderArrow';\nimport Pagination from \"components/modules/pagination\";\nimport {createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue} from 'utils/index';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n\n\n//order options\nconst orderByOptions = [\n    { value: 'date_created', label: 'Recently Added' },\n    { value: 'title', label: 'Title' },\n    { value: 'authors', label: 'Authors' }\n  ];\n\n/**\n * the local component that shows the papers list of a project\n */\nconst PapersList = ({project_id, location, match, history}) => {\n\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(location.search);\n\n    const [up, setUp] = useState(queryData.sort);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let  mounted = true;\n\n        if(queryData.orderBy !== \"date_created\" && up !== queryData.sort){\n            setUp(queryData.sort);\n            document.getElementById(\"ani-order-arrow\").beginElement();\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setDisplay(false);\n\n            //call the dao\n            let res = await projectPapersDao.getPapersList({project_id, ...queryData});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mounted && res && res.message === \"Not Found\") {\n                setPapersList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mounted && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mounted && res) {\n\n                //update state\n                setPapersList(res.results);\n                setTotalResults(res.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n\n        };\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mounted = false;\n        };\n    }, [queryData.start, queryData.count, queryData.sort, queryData.orderBy]); //re-execute when these variables change\n\n\n    //handler for sort selection\n    function handleSelection(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n\n        //if I previously ordered by 'most recent' then I sort the next order by ASC\n        if(queryData.orderBy === \"date_created\"){\n            queryData.sort = \"ASC\";\n        }\n        queryData.orderBy=orderByOptions[index].value;\n\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e){\n        //trigger svg animation\n        if(queryData.sort === \"ASC\"){\n            queryData.sort = \"DESC\";\n        }\n        else{\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print loading image\n        output = (\n            <div className=\"paper-card-holder\">\n                <div className=\"order\" style={{pointerEvents: \"none\"}}>{/* this way the user cannot sort while loading the results */}\n                    <label>sort by:</label>\n                    <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\",queryData.orderBy)} handler={handleSelection}/>\n                    <button type=\"button\" onClick={handelOrder}><OrderArrow display={queryData.orderBy !== \"date_created\"} up={up}/></button>\n                </div>\n                <LoadIcon class={\"small\"}/>\n            </div> );\n    }\n    else {\n\n        output = (\n            <div className=\"paper-card-holder\">\n                <div className=\"order\">\n                    <label>sort by:</label>\n                    <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)} handler={handleSelection}/>\n                    <button type=\"button\" onClick={handelOrder}><OrderArrow display={queryData.orderBy !== \"date_created\"} up={up}/></button>\n                </div>\n                <PrintPapersList papersList={papersList} location={location} history={history}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </div>\n        );\n    }\n\n    output = (\n        <div className=\"papers-list\">\n            {output}\n        </div>\n    );\n\n    return output;\n\n};\n\n\n\n\n/**\n * internal function to prepare a object of queryData\n * @param query\n * @return object of queryData for the fetch\n */\nfunction createQueryData(query){\n\n    //set query params from queryString of url\n    let params = queryString.parse( query);\n    let count = params.count || 10;\n    let start = params.start || 0;\n    let orderBy = params.orderBy || \"date_created\";\n    let sort = params.sort || \"ASC\";\n\n    if(orderBy === \"date_created\"){\n        sort = \"DESC\";\n    }\n\n    //if \"before\" is defined by query then insert it in object, else insert \"after\" in object\n    let queryData = {orderBy, sort, start, count };\n    return queryData;\n\n}\n\n\n\nexport default PapersList;","import React, {useState, useEffect} from \"react\";\nimport SelectArrow from 'components/svg/selectArrow';\n\n\n/**\n * this component acts as an html <select>\n * it needs an array of options, the index of the selected one and the hadler to change the status of the upper component calling this one\n */\nconst Select = ({ options, form, name }) => {\n    \n\n    //this is useful for the animation\n    const [focused, setFocused] = useState(false);\n\n    //this keeps the selected option\n    const [selected, setSelected] = useState(0)\n\n    //this handle the selection setting the index of the selected option\n    function handler(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n        setSelected(index);\n    }\n\n    //this updates the field value for formik\n    useEffect(() => {\n        form.setFieldValue(name, options[selected].value);\n    }, [selected])\n\n    function handleFocus(e){\n        //handle arrow animation and focus of menu\n        document.getElementById(\"ani-select-arrow\").beginElement();//trigger svg animation\n        setFocused(!focused);\n    }\n\n    var output = (\n        <div className=\"custom-select\">\n            <div className=\"selected\" tabIndex={-2} onBlur={handleFocus} onFocus={handleFocus}>{options[selected].label} <div className=\"arrow\"><SelectArrow focused={focused}/></div></div>\n            <div className=\"options-holder\" style={{fontSize: (!focused) ? '0px' : '15px', borderBottom: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderLeft: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderRight: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderTop:\"none\"}}>\n                {options.map((element, index) => (\n                <div key={index} data-value={index} className=\"option\" style={{padding: (!focused) ? '0px' : '2px' }} onMouseDown={handler}>\n                    {element.label}\n                </div>))}\n            </div>\n        </div>\n    );\n    return output;\n}\n\nexport default Select;","import React, {useEffect, useState, useContext} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao'\n\nimport Select from 'components/forms/selectformik';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n//order options\nconst paperType = [\n    { value: 'article', label: 'Article' },\n    { value: 'book_chapter', label: 'Book Chapter' },\n    { value: 'conf_publication', label: 'Conf. Publication' }\n  ];\n\n/**\n * this is the form for create or edit the paper\n * @param props.projectId  relative project where we will insert the paper\n */\nfunction PaperForm(props) {\n\n    let yup = require('yup');\n    const uuid = require(\"uuid\");\n\n    //validation schema for form\n    const paperValidationSchema = yup.object().shape({\n        title: yup.string().required('please enter a title'),\n        authors: yup.string().required('please enter an author'),\n        year: yup.number().required('please enter a year').min(1000).max(new Date().getFullYear() + 1).integer(),\n        //document_type: yup.string().required('please enter a paper type'),\n        abstract: yup.string().required('please enter the abstract')\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    return (\n        <>\n        <Formik\n            initialValues={{\n                title: (props.customPaper && props.customPaper.title) || '',\n                authors: (props.customPaper && props.customPaper.authors) || '',\n                year: (props.customPaper && props.customPaper.year) || '',\n                abstract: (props.customPaper && props.customPaper.abstract) || '',\n                //it is not present in pdf parse service\n                document_type: (props.customPaper && props.customPaper.document_type) || '',\n                doi: (props.customPaper && props.customPaper.doi) || \"\"\n            }}\n            validationSchema={paperValidationSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                //if doi is not specified I set it as empty string\n                if(values.doi === undefined){\n                    values.doi = \"\";\n                }\n                const paperData = {...values, \n                    year: values.year.toString(), \n                    source_title: values.title, \n                    link: \"custom_paper\", \n                    source: \"slr_custom_papers\", \n                    abstract_structured: \"0\",\n                    filter_oa_include: \"0\",\n                    filter_study_include: \"0\",\n                    notes: \"\",\n                    //data necessary for identifying custom papers\n                    manual: \"true\"}\n                console.log(paperData);\n                \n                let res = await projectPapersDao.postCustomPaperIntoProject({\n                    paper: paperData, project_id: props.projectId\n                });\n                //error checking\n                if (res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }else{\n                    props.history.push(props.url);\n                }\n                setSubmitting(false);\n            }}\n            validateOnBlur={false}\n        >\n        {({ errors, touched, isSubmitting }) => (\n            <Form className=\"new-paper-form\">\n                <Field\n                    style={{borderBottom: (errors.title && touched.title) ? \"1px solid #d81e1e\" : \"\"}}\n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\" \n                    placeholder=\"Paper Title\"/>\n                <div className=\"new-paper-form-ad\">\n                    <div className=\"author-year\">\n                        <Field\n                            style={{borderBottom: (errors.authors && touched.authors) ? \"1px solid #d81e1e\" : \"\"}}\n                            name=\"authors\"\n                            type=\"text\" \n                            placeholder=\"paper author\"/>\n                        <Field \n                            style={{borderBottom: (errors.year && touched.year) ? \"1px solid #d81e1e\" : \"\"}}\n                            name=\"year\"\n                            type=\"number\"\n                            placeholder=\"year\"/>\n                    </div>\n                    <div className=\"type-doi\">\n                        <Field\n                            name=\"document_type\"\n                            render={({ field, form }) => (\n                                    <Select options={paperType} {...field} form={form}/>\n                            )}\n                        />\n                        <Field \n                            name=\"doi\"\n                            type=\"text\"\n                            placeholder=\"DOI(optional)\"/>\n                    </div>\n                </div>\n                <Field\n                    style={{borderBottom: (errors.abstract && touched.abstract) ? \"1px solid #d81e1e\" : \"\"}}\n                    name=\"abstract\"\n                    placeholder=\"Paper Abstract\"\n                    component=\"textarea\"/>\n                <button type=\"submit\" disabled={isSubmitting ||\n                    (errors.title && touched.title) ||\n                    (errors.authors && touched.authors) ||\n                    (errors.year && touched.year) ||\n                    (errors.abstract && touched.abstract)\n                }>Add paper</button>\n            </Form>\n        )}\n        </Formik>\n        </>\n    );\n\n\n}\n\n\nexport default PaperForm;","import React, {useEffect, useState, useRef} from \"react\";\nimport PaperForm from 'components/forms/custompaper';\nimport LoadIcon from \"components/svg/loadIcon\";\n\nimport {updateFileDao} from \"dao/updateFile.dao\";\n\nfunction CustomPaperPage({projectId, url, history}) {\n\n\n    const [paperDataFetch, setPaperDataFetch] = useState(false);\n    const [paperData, setPaperData] = useState(undefined);\n    const [displayForm, setDisplayForm] = useState(false);\n\n    //reference for the input file field\n    const inputElement = useRef(null);\n\n    async function handleSubmission(){\n\n        //get the file object\n        let file = inputElement.current.files[0];\n        //if this file exist\n        if(file){\n\n            //check file extension and its mine type\n            if(!/\\.(pdf|PDF)$/.test(file.name) || file.type.indexOf(\"application/pdf\") === -1){\n                alert(\"the file must be a pdf\");\n            }\n            else{\n                //open flag of loading\n                setPaperDataFetch(true);\n\n                //prepare the form data for post\n                let formData = new FormData();\n                formData.append('file', file);\n\n                //call the dao\n               let res = await updateFileDao.updatePdf(formData);\n\n               //if there is a error\n                if (res && res.message) {\n                    //pass error object to global context\n                    alert(\"Error during parsing file\");\n                   \n                }\n                else{\n                    //set paperdata\n                    setPaperData(res);\n                    //display the form\n                    setDisplayForm(true);\n                }\n\n                //close flag of loading\n                setPaperDataFetch(false);\n\n            }\n        }\n    }\n\n    let output = \"\";\n\n    if(!displayForm && !paperDataFetch){\n        output = (\n            <div className=\"new-paper-page-wrapper\">\n                <div>\n                    <div className=\"file-input-container\">\n                        <input type=\"file\"name =\"file\" id=\"real-input\" ref={inputElement} onChange={handleSubmission}/>\n                        <button type=\"button\" className=\"browse-btn\" onClick={() => {inputElement.current.click();}}>\n                            Upload a Paper\n                        </button>\n                    </div>\n                        or<br/>\n                    <button type=\"button\"\n                        onClick={() => {setDisplayForm(true)}}\n                    >insert data manually</button>\n                </div>\n            </div>\n        );\n    }else if(paperDataFetch){\n        output = (\n            <div className=\"new-paper-page-wrapper\">\n                <div className=\"file-input-container\">\n                    <input type=\"file\" id=\"real-input\"/>\n                    <button type=\"button\" className=\"browse-btn\">\n                        <LoadIcon/>\n                    </button>\n                </div>\n                    or<br/>\n                <button type=\"button\"\n                    onClick={() => {/* reset connection to api if necessary */ setPaperDataFetch(false); setDisplayForm(true);}}\n                >abort and insert data manually</button>\n            </div>\n        );\n    }else{\n        output = (\n            <PaperForm projectId={projectId} url={url} history={history} customPaper={paperData}/>\n        );\n    }\n\n    return output;\n\n}\n\n\nexport default CustomPaperPage;","import React, {useState} from \"react\";\n\nimport {AppContext} from \"components/providers/appProvider\";\nimport EditButton from \"components/svg/editButton\";\n\n/**\n * this is the description component for the project page\n */\n\n\nconst ProjectDescription = function({description, update, date_last_modified, date_created}){\n\n\n    //this is used as a toggle for checking if the user is trying to edit the name of the project\n    const [editing, setEditing] = useState(false);\n\n    //handles the click on the edit/confirm button\n    function handleEditRequest(e){\n        console.log(\"CLICK\");\n        if(!editing){//if the user was not editing I allow him to edit\n            setTimeout(//I wait for the button event to fire before blurring out the textarea\n                function(){\n                    document.getElementById(\"edit-project-description-input\").focus();\n                },100);\n            \n            setEditing(true);\n            console.log(editing)\n        }else{//if the user was editing I submit its changes\n            update();\n        }\n    }\n\n    //format the date string\n    function formatDate(date){\n        return <span className=\"date\">{date.slice(0,10)} at {date.slice(11,19)}</span>\n    }\n\n\n    return (\n        <div className={(!editing) ? \"project-description hidden-form-description\" : \"project-description\"}>\n            <h2>Description:</h2>\n            <p style={{fontSize: (editing) ? \"0px\" : \"15px\"}}> {description}</p>\n            <form className=\"edit-project-description\" style={{height:(editing) ? \"\" : \"0px\"}}>\n                    <textarea id=\"edit-project-description-input\"  defaultValue={description} style={{width: (editing) ? \"100%\" : \"0%\", padding: (editing) ? \"\" : \"0px\", height:(editing) ? \"\" : \"0px\"}}\n                    onBlur={(e) => {\n                                    console.log(\"blurring\");\n                                    setEditing(false);\n                                }}\n                    />\n                    <button className=\"edit-button\" onMouseDown={handleEditRequest} type=\"button\">\n                        <EditButton confirm={editing}/>\n                    </button>\n            </form>\n            <h2>Additional info:</h2>\n            <p className=\"project-date-info\"> <span>Created</span> {formatDate(date_created)} </p>\n            <p className=\"project-date-info\"> <span>Last edited</span> {formatDate(date_last_modified)} </p>\n        </div>\n    );\n}\n\nexport default ProjectDescription;","import React, {useContext,useState,useEffect} from \"react\";\n\nimport EditButton from \"components/svg/editButton\";\n\n/**\n * this is the head component of page\n * @param \"menu_elements\" contains the list of menu-items\n */\n\n\nconst ProjectName = function({name, update}){\n\n    //this is used as a toggle for checking if the user is trying to edit the name of the project\n    const [editing, setEditing] = useState(false);\n\n    //checks if there's an edit request\n    function handleEditRequest(e){\n        if(!editing){//if the user is not editing the name yet(the check is useful because handleEditRequest and handleConfirm fire at the same time)\n            document.getElementById(\"edit-project-name-input\").focus();\n            setEditing(!editing);\n        }\n    }\n\n    //checks if the user wants to confirm the change\n    function handleConfirm(e){\n        if(editing){//if the user was editing I confirm its request and call the api(the check is useful because handleEditRequest and handleConfirm fire at the same time)\n            update();\n            setEditing(!editing);\n        }\n    }\n\n    return(\n        <div className={(editing) ? \"nav-elements\" : \"nav-elements hidden-form\"}> <h2 style={{fontSize: (editing) ? \"0px\" : \"21px\"}}>{name}</h2> \n            {/*clicking on the div containing the title will allow the user to access the form for editing the project name*/}\n            <form className=\"edit-project-name\"  onClick={handleEditRequest} onSubmit={(e) => {e.preventDefault()}}>\n                <input type=\"text\" id=\"edit-project-name-input\" defaultValue={name} style={{width: (editing) ? \"\" : \"0px\", padding: (editing) ? \"\" : \"0px\"}}\n                    onBlur={(e) => {setEditing(false)}}\n                />\n                <button className=\"edit-button\" onMouseDown={handleConfirm} type=\"button\"><EditButton confirm={editing}/></button>\n                {/*clicking on the button will confirm the new name*/}\n            </form>\n        </div>\n    );\n}\n\nexport default ProjectName;","import React, {useState, useEffect, useContext} from \"react\";\nimport {Route, Link, Switch} from 'react-router-dom';\nimport {Flipper, Flipped} from 'react-flip-toolkit';\n\nimport SearchForm from 'components/forms/searchform';\nimport SearchSimilarForm from 'components/forms/searchSimilarForm';\nimport PapersList from 'components/papers/papersList';\nimport CustomPaperPage from 'components/papers/customPaperPage';\nimport {projectsDao} from 'dao/projects.dao';\nimport LoadIcon from 'components/svg/loadIcon';\nimport ProjectDescription from 'components/projects/projectDescription';\nimport ProjectName from 'components/projects/projectName';\nimport {join} from 'utils/index';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n/**\n *this component will show a projects page\n */\nconst ProjectPage = (props) => {\n\n    //project object of page\n    const [project, setProject] = useState({data: {name: \"loading...\"}});\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //notFound state for hiding the navbar\n    const [notFound, setNotFound] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    const project_id = props.match.params.id;\n\n    //set the project title\n    useEffect(() => {\n        if(project.data.name === \"loading...\"){\n            appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">{project.data.name}</h2> </div>);//I set the page title\n        }else{\n            appConsumer.setTitle(<ProjectName name={project.data.name} update={updateProject}/>);\n            appConsumer.setProjectName(project.data.name);\n        }\n    \n    }, [project]);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let mounted = true;\n\n        setDisplay(false);\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            console.log(\"fetch project page\");\n\n            //call the dao\n            let res = await projectsDao.getProject(project_id);\n\n            //error checking\n            //if the component is still mounted and there is some other errors\n            if (mounted && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and res isn't null\n            else if (mounted && res ) {\n                //update state\n                setProject(res);\n                //show the page\n                setDisplay(true);\n            }\n        };\n        fetchData();\n        //when the component will unmount\n        return () => {\n\n            //set flag as unmounted\n            mounted = false;\n        };\n    }, [project_id]); //re-execute when these variables change\n    \n\n    //function for updating the description and name\n    async function updateProject(){\n\n        let new_name = document.getElementById(\"edit-project-name-input\").value;\n        let new_desc = document.getElementById(\"edit-project-description-input\").value;\n\n\n        //if the new name o description are difference from the old name o description\n        if(new_name !== project.data.name || new_desc !== project.data.description){\n\n            //call the dao\n            let res = await projectsDao.putProject(project_id, {name: new_name, description : new_desc});\n\n            //error checking\n            //if is other error\n            if (res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (res && res !== null) {\n                console.log(\"UPDATED SUCCESSFULLY!\");\n                window.location.reload();\n            }\n\n\n        }\n    }\n\n\n    let output;\n\n    //if the page is loading\n    if (display === false) {\n        //print svg image\n        output = <LoadIcon/>;\n    }\n    else {\n        output = (\n            <div className=\"project-wrapper\">\n                <ProjectPageHead match={props.match} notFound={notFound}/>\n\n                {/*route the papers list*/}\n                <Switch>\n                    <Route exact  path={props.match.url} render={function(props){\n                        setNotFound(false);\n                        return (\n                            <>\n                                <ProjectDescription description={project.data.description} update={updateProject} date_last_modified={project.date_last_modified} date_created={project.date_created}/>\n                                <PapersList project_id={project_id} location={props.location} match={props.match} history={props.history}/>\n                                <Link to={join(props.match.url,\"/addpaper\")}>\n                                    <button className=\"bottom-left-btn add-custompaper-btn\">\n                                        <div className=\"btn-title\">Add Custom Paper</div><div className=\"btn-icon\"> </div>\n                                    </button>\n                                </Link>\n\n                            </>\n                        );\n                    }}/>\n\n                    {/*route the form of search*/}\n                    <Route exact path={props.match.url + \"/search\"} render={function(props){\n                        setNotFound(false);\n                        return (<SearchForm project_id={project_id} {...props} />);\n                    }}/>\n\n                    <Route exact path={props.match.url + \"/searchsimilar\"} render={function(props){\n                        setNotFound(false);\n                        return (<SearchSimilarForm project_id={project_id} {...props} />);\n                    }}/>\n\n                    <Route path = {props.match.url + \"/addpaper\"} render={() =>\n                        <>\n                            <Link className=\"back\" to={props.match.url}>  </Link>\n                            <CustomPaperPage projectId={project.id} url={props.match.url} history={props.history}/>\n                        </>\n                    } />\n                </Switch>\n\n            </div>\n        );\n    }\n\n    return output;\n};\n\n/**\n * this is the local component to print head of project page\n */\nconst ProjectPageHead = function ({match, notFound}) {\n    const lc = window.location.hash.substr(window.location.hash.length - 9);\n    const slider = (((\"#\" + match.url) === window.location.hash.split(\"?\")[0]) || (lc === \"/addpaper\" || lc === \"addpaper/\"));\n    let output = (\n        <>\n            <div className=\"project-nav-link-wrapper\" style={{display: (notFound || (lc === \"/addpaper\" || lc === \"addpaper/\")) ? \"none\" : \"\"}}>\n                <div className=\"nav-link\">\n                    <Link to={match.url}>papers</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/search\")}>search</Link>\n                </div>\n                <Flipper flipKey={slider}>\n                    <Flipped flipId=\"underline\">\n                        <div className={slider ? \"underline underline-to-left\" : \"underline underline-to-right\"}/>\n                    </Flipped>\n                </Flipper>\n            </div>\n        </>\n    );\n    return output;\n\n};\n\n\nexport default ProjectPage;","import React, {useContext} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n\nimport {AppContext} from 'components/providers/appProvider';\n\nimport Home from 'components/home';\nimport ProjectsList from 'components/projects/projectsList';\nimport ProjectPage from 'components/projects/projectPage';\nimport LoadIcon from 'components/svg/loadIcon';\n\n/**\n * compotent main of page\n */\nconst Main = function(props){\n\n    let output = \"\";\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    console.log(typeof appConsumer.userFetch);\n\n    console.log(appConsumer.userFetch);\n\n    console.log(appConsumer.user);\n\n    //If I'm fecthing the user I dispay a loading icon\n    if(appConsumer.userFetch){\n        output = (<LoadIcon/>);\n    }\n    //I render routes only if the user is logged\n    else if(appConsumer.user){\n        output = (\n            <Switch>\n                <Route exact path=\"/\" render={() => <Home/> }/>\n                <Route exact path=\"/projects\" render={(props) => <ProjectsList {...props} />}/>\n                <Route path=\"/projects/:id\" render={(props) => <ProjectPage {...props} />}/>\n                <Route render={(props) => <div>404</div>}/>\n            </Switch>\n        );\n    }\n    else{\n        output = (<Home/>);\n    }\n\n    return (\n        <div className=\"main-wrapper\">\n            {output}\n        </div>\n    );\n};\n\nexport default Main;","import React, {useContext} from \"react\";\nimport { AppContext } from 'components/providers/appProvider'\n\n/*\n* this is the component that visualize user information box\n* */\nconst UserInfo = function(props){\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n\n    //not logged in as default\n    let output = (\n        <div className=\"user\">\n            <h3>you're not logged in</h3>\n        </div>\n    );\n\n    //if user is logged in I load his data\n    if(appConsumer.user){\n        output = (\n            <div className=\"user\" >\n                <img className=\"face\" alt=\"profile\" src={appConsumer.user.image}/>\n                <div className=\"user-info\">\n                    {appConsumer.user.name}\n                    <br/>\n                    {appConsumer.user.surname}\n                </div>\n            </div>\n        );\n    }\n\n    return output;\n\n};\n\nexport  default  UserInfo;","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst MenuButton = function (props) {\n\n    return (\n\n        <svg id=\"menu-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n             x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M214,482.1\"/>\n            <line className=\"st-t\" x1=\"172\" y1=\"482.1\" x2=\"172\" y2=\"482.1\"/>\n            <line className=\"st-m\" x1=\"500\" y1=\"482.1\" x2=\"500\" y2=\"482.1\"/>\n            <line className=\"st-b\" x1=\"828\" y1=\"482.1\" x2=\"828\" y2=\"482.1\"/>\n        </svg>\n    );\n};\n\nexport default MenuButton;\n","import React, {useState, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\n\nimport { AppContext } from 'components/providers/appProvider'\n\nimport UserInfo from 'components/navigation/userInfo';\nimport config from 'config/index';\nimport MenuButton from 'components/svg/menuButton';\nimport Cover from 'components/modules/cover';\n\n/**\n *this is the side menu component\n */\nconst SideMenu = function (props) {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //bool to control the visualization of menu\n    const [shown, setShown] = useState(false);\n    const [firstTime, setFirstTime] = useState(true);\n\n\n    //function to open/close the menu\n    function handleToggleMenuButton() {\n        setShown(!shown);\n        setFirstTime(false);\n    }\n\n    //function to close the menu\n    function handleMenuBlur(e) {\n        setShown(false);\n    }\n\n    //change the class of element by menu state\n    var clsidemenu = \"modal side-menu up\";\n    var clsbutton = \"button-wrapper close\";\n\n    if (firstTime) {\n        clsidemenu = \"modal side-menu\"\n    }\n    if (shown) {\n        clsbutton = \"button-wrapper open\"\n        clsidemenu = \"modal side-menu down\"\n    }\n\n    if(appConsumer.user){\n        return (\n            <div className=\"menu\">\n                <Cover cls={(shown) ? \"full-screen-transparent\" : \"\"} handler={handleMenuBlur}/>\n                <div className={clsbutton} onClick={handleToggleMenuButton}>\n                    <MenuButton/>\n                </div>\n\n                <div className={clsidemenu} tabIndex={-1}>\n\n                    {/*user info box*/}\n                    <UserInfo/>\n                    <PrintMenu handleMenuBlur={handleMenuBlur}/>\n\n                </div>\n            </div>\n        );\n    }else if(appConsumer.userFetch){\n        return (\n            <div className=\"menu\">\n                <Cover cls={(shown) ? \"full-screen-transparent\" : \"\"} handler={handleMenuBlur}/>\n                <div className={clsbutton} onClick={handleToggleMenuButton}>\n                    <MenuButton/>\n                </div>\n\n                <div className={clsidemenu} tabIndex={-1}>\n                    <h3 className=\"not-logged\">logging in...</h3>\n\n                </div>\n            </div>\n        );\n    }else{\n        return (\n            <div className=\"menu\">\n                <Cover cls={(shown) ? \"full-screen-transparent\" : \"\"} handler={handleMenuBlur}/>\n                <div className={clsbutton} onClick={handleToggleMenuButton}>\n                    <MenuButton/>\n                </div>\n\n                <div className={clsidemenu} tabIndex={-1}>\n                    <h3 className=\"not-logged\">You're not logged in</h3>\n\n                </div>\n            </div>\n        );\n    }\n};\n\n/**\n *internal component that is used only for print menu items\n */\nconst PrintMenu = function (props) {\n\n    let output = (\n        config.menu_list.map((element, index) => (\n                <div key={index}>\n                    <Link to={element.link} className=\"menu-option\"\n                          onMouseUp={props.handleMenuBlur}>{element.content}</Link>\n                </div>\n            )\n        )\n    );\n    return output;\n\n\n}\n\n\nexport default SideMenu;","import React, {useContext} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {AppContext} from 'components/providers/appProvider';\n\n\nconst BreadCrumbs = function(props) {\n\n    //I split the pathname by '/' and remove empty strings\n    let path = props.location.pathname.split('/').filter(x => x);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //will contain the partial url\n    let href= \"/\";\n    //will contain the link element\n    let link;\n    //array of JSX elements containing the links\n    let bc = [];\n\n    //I don't print ' > ' at the end if there's only one link\n    if(path.length === 0){\n        link = (<div key={0}></div>);\n    }else{\n        link = (<Link key={0} to={href}>Home<span> > </span></Link>);\n    }\n\n    //I push the initial breadcrumb (</> if we are in the home)\n    bc.push(link);\n\n    //I iterate over the paths taking care of links\n    for(let i = 0; i < path.length; i++){\n\n        //avoids the path '/' and the trailing slash\n        if(href === \"/\"){\n            href += path[i];//I update the partial url\n        }else{\n            href += (\"/\" + path[i]);//I update the partial url\n        }\n        \n        //I check whether is the ID of a project \n        if(path[i-1] && path[i-1] === \"projects\"){\n            //I retrieve the project title from the context\n            link = (<Link key={i+1} to={href}>{appConsumer.projectName}</Link>);\n        }else{\n            switch (path[i]) {\n                case \"projects\":\n                    link = (<Link key={i+1} to={href}>My Projects</Link>);\n                    break;\n                case \"searchsimilar\":\n                    link = (<Link key={i+1} to={href}>Search for similar papers</Link>);\n                    break;\n                case \"search\":\n                    link = (<Link key={i+1} to={href}>Search</Link>);\n                    break;\n                default:\n                    link = (<Link key={i+1} to={href}>{path[i]}</Link>);\n                    break;\n            }\n        }\n\n        //I push the link into the list of breadcrumbs\n        bc.push(link);\n\n        //I put ' > ' at the end\n        if(i < (path.length - 1)){\n            bc.push(<span key={i+9999}>{\" > \"}</span>);\n        }\n        \n    }\n    \n\n    return (\n        <div className=\"breadcrumbs\">{bc}</div>\n    );\n\n}\n\nexport default BreadCrumbs;\n","import React, {useContext} from 'react';\nimport {GoogleLogin} from 'react-google-login';\n\nimport config from 'config/index'\n\nimport {usersDao} from 'dao/users.dao'\n\nimport {AppContext} from 'components/providers/appProvider';\n\n\n/**\n * this component handles the google login and logout from the platform\n */\nconst UsersLoginLogout = function (props) {\n\n    //output var\n    let output = \"\";\n\n    //userToken\n    let userToken = undefined;\n\n    //get the localStorage object\n    const storage = window.localStorage;\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    /**\n     * google response handler function\n     */\n    async function responseGoogle  (response){\n\n        //if the google login is succeeded\n        if (response.tokenId) {\n\n            let userLoginData = {\"tokenId\": response.tokenId};\n\n            appConsumer.setUserFetch(true);\n\n            //call dao for verfying the user and logging him in\n            let res = await usersDao.postTokenId(userLoginData);\n\n            //error checking\n            if (res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if success\n            else if (res) {\n\n\n                // set the user data in context provider\n                appConsumer.setUser(res.user);\n                //and save the token as string in localStorage\n                storage.setItem(\"userToken\", res.token);\n\n\n                //redirect to home page\n                props.history.push(\"/\");\n            }\n            \n            appConsumer.setUserFetch(false);\n        }\n    }\n\n    /**\n     * logout handler function\n     */\n    async function logout (e){\n        console.log(\"logging out\");\n\n        appConsumer.setUserFetch(true);\n\n        //call dao for logging user out\n        let res = await usersDao.logoutUser();\n\n        //error checking\n        if (res && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);\n        }\n        //if success\n        else if (res) {\n\n            //remove token from storage\n            localStorage.removeItem(\"userToken\");\n            //remove user info from context\n            appConsumer.setUser(null);\n            //redirect to home page\n            props.history.push(\"/\");\n\n        }\n\n        appConsumer.setUserFetch(false);\n\n    }\n\n    //part of visualization-----------------------------\n\n    //if user is logged, so exists already this attribute in the local storage\n    if (storage.getItem(\"userToken\")) {\n\n        //userToken = JSON.parse(storage.getItem(\"userToken\")).token;\n        //if there's token it means the user is logged and I print the logout option\n        output = (\n            <div className=\"logout-holder\">\n                <button type=\"button\" onClick={logout}>Log out</button>\n            </div>\n        );\n    }\n    //otherwise I print the login button\n    else {\n\n        output = (\n            <div className=\"login-holder\">\n                <GoogleLogin\n                    clientId={config.google_login_client_id}\n                    buttonText=\"Login\"\n                    onSuccess={responseGoogle}\n                    onFailure={responseGoogle}\n                    cookiePolicy={'single_host_origin'}\n                />\n            </div>\n        );\n    }\n    return output;\n\n}\n\nexport default UsersLoginLogout;\n","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\n\n\n\nimport Main from 'components/main';\n\nimport NavBar from 'components/navigation/navBar';\nimport SideMenu from 'components/navigation/sideMenu';\nimport BreadCrumbs from 'components/breadCrumbs';\n\nimport UsersLoginLogout from 'components/usersLoginLogout';\n\n\nimport  {AppProvider} from 'components/providers/appProvider';\n\n\n/**\n *this is the start point of application\n */\n\nconst App = function(props) {\n\n\n        return (\n            <Router>\n                <div className=\"app\">\n\n                    {/*mount a root context object*/}\n                    <AppProvider>\n\n                        <NavBar>\n                            {/*component menu*/}\n                            <SideMenu/>\n                        </NavBar>\n                        <Switch>\n                            {/* this route will always be rendered*/}\n                            <Route render={(props) => <div className=\"relative-header\"><BreadCrumbs {...props}/><UsersLoginLogout {...props}/></div>}/>\n                        </Switch> \n\n                        <Main/>\n                    \n                    </AppProvider>\n                </div>\n            </Router>\n        );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport * as serviceWorker from 'serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}