{"version":3,"sources":["utils/conn.js","config/index.js","dao/users.dao.js","components/modules/error.js","components/providers/appProvider.js","components/home.js","dao/projects.dao.js","components/svg/loadIcon.js","components/svg/closeButton.js","components/projects_page/projectForm.js","components/modules/pagination.js","components/modules/cover.js","components/svg/emptyFolder.js","utils/index.js","components/svg/optionsButton.js","components/modules/sideOptions.js","components/projects_page/projectCard.js","components/projects_page/projectsList.js","dao/paper.dao.js","components/svg/selectTick.js","components/forms_elements/checkbox.js","dao/projectPapers.dao.js","components/svg/noImage.js","components/svg/noProfileImage.js","components/modules/image.js","components/svg/noPapers.js","components/svg/infoIcon.js","components/modules/infoTooltip.js","components/projects_page/search_tab/search_automated/paperConfidence.js","components/projects_page/papers_tab/projectPaperCard.js","components/modules/printPapersList.js","components/svg/selectArrow.js","components/forms_elements/select.js","components/svg/removeButton.js","components/projects_page/search_tab/selectedPapersListBox.js","components/svg/orderArrow.js","components/svg/noSearchResults.js","components/svg/radioTick.js","components/forms_elements/radiobox.js","components/svg/searchButton.js","components/svg/searchSimilarButton.js","components/projects_page/search_tab/search_standard/searchStandardForm.js","components/svg/robot.js","components/projects_page/search_tab/search_standard/searchStandardManager.js","dao/updateFile.dao.js","components/svg/goButton.js","components/projects_page/search_tab/search_similar/targetPaper.js","components/projects_page/search_tab/search_similar/searchSimilarForm.js","components/projects_page/search_tab/search_similar/searchSimilarManager.js","components/forms_elements/selectformik.js","components/projects_page/papers_tab/forms/customPaperForm.js","components/svg/hLoad.js","components/projects_page/papers_tab/customPaperPage.js","components/svg/editButton.js","components/projects_page/projectName.js","components/svg/forbidden.js","components/svg/ghost.js","components/modules/pageNotFound.js","components/projects_page/papers_tab/papersList.js","components/projects_page/papers_tab/projectDescription.js","components/projects_page/papers_tab/forms/papersCsvForm.js","components/projects_page/papers_tab/papersTab.js","dao/projectFilters.dao.js","components/projects_page/filters_tab/forms/insertFilterForm.js","components/projects_page/filters_tab/forms/updateFilterForm.js","components/projects_page/filters_tab/filterCard.js","components/svg/noFilters.js","components/projects_page/filters_tab/printFiltersList.js","components/projects_page/filters_tab/filtersTab.js","components/projects_page/screening_tab/backlog_subtab/backlogPapers.js","dao/projectScreening.dao.js","components/projects_page/screening_tab/backlog_subtab/forms/autoScreeningForm.js","components/forms_elements/radioboxFormik.js","components/projects_page/screening_tab/backlog_subtab/forms/userCheckboxFormik.js","components/projects_page/screening_tab/backlog_subtab/forms/manualScreeningForm.js","components/svg/manualScreningIcon.js","components/svg/autoScreeningIcon.js","components/svg/crowdScreeningIcon.js","components/projects_page/screening_tab/backlog_subtab/screeningBacklog.js","components/projects_page/screening_tab/manual_subtab/manualResults.js","components/projects_page/screening_tab/screened_subtab/screenedPapers.js","components/projects_page/screening_tab/screeningTab.js","components/projects_page/search_tab/search_automated/searchAutomatedDescription.js","components/projects_page/search_tab/search_automated/searchAutomatedManager.js","components/projects_page/projectPage.js","components/screenings_page/screeningsList.js","components/svg/plusIcon.js","components/modules/filtersAccordion.js","components/modules/paperTags.js","components/svg/removeHighlights.js","components/modules/highlighter.js","components/svg/positiveAnswer.js","components/svg/negativeAnswer.js","components/svg/undecidedAnswer.js","components/screenings_page/singlePredicate.js","components/screenings_page/multiPredicateForm.js","components/screenings_page/multiPredicate.js","components/screenings_page/screeningPage.js","components/main.js","components/navigation/navBar.js","components/navigation/userInfo.js","components/svg/menuButton.js","components/navigation/sideMenu.js","components/navigation/breadCrumbs.js","components/modules/notification.js","components/modules/usersLogin.js","App.js","AppRouter.js","serviceWorker.js","index.js"],"names":["abortController","abortRequestType","config","id","content","link","timeOutTime","localStorage","window","request","url","options","a","AbortController","signal","requestOptions","Object","assign","timer","setTimeout","abort","fetch","response","clearTimeout","parseResponseData","data","checkResponseStatus","timeOutError","Error","name","queryData","query","key","encodeURIComponent","slice","length","jsonHeaders","Headers","append","getItem","bodyData","body","JSON","stringify","customTimeOutTime","status","error","statusText","payload","contentType","headers","get","indexOf","text","formData","blob","json","http","post","put","postFile","abortRequest","console","log","home","userLogin","id_token","userInfo","userLogout","usersDao","postTokenId","getUserByTokenId","logoutUser","withRouter","props","useState","firstTime","setFirstTime","appConsumer","useContext","AppContext","history","location","useEffect","setError","pathname","statusCode","message","storage","getUserData","res","removeItem","setUser","goBack","e","output","className","style","textAlign","type","onClick","React","createContext","AppProvider","user","userFetch","setUserFetch","title","setTitle","undefined","notificationMessage","setNotificationMessage","projectName","setProjectName","contextObject","email","given_name","family_name","picture","testing","Provider","value","children","push","fontSize","fontWeight","projects","project_id","delete","collaborator_id","projectsDao","getProjectsList","getProject","postProject","putProject","deleteProject","getProjectCollaborators","getProjectScreeners","postProjectManualScreeningData","putProjectManualScreeningData","removeProjectCollaborator","addProjectCollaborator","LoadIcon","class","xmlns","xmlnsXlink","x","y","viewBox","d","CloseButton","x1","y1","x2","y2","ProjectForm","mountRef","useRef","yup","require","projectValidationSchema","object","shape","string","required","description","current","initialValues","validationSchema","onSubmit","values","setSubmitting","validateOnBlur","errors","touched","isSubmitting","isValid","validateField","setErrors","handleChange","visibility","setVisibility","borderBottom","placeholder","onChange","component","disabled","Pagination","start","count","totalResults","path","max_total_number_for_results","queryString","href","split","newQueryString","arryQuery","i","parameterName","setStartAndCountInUrl","prev","next","firstPage","lastPage","listPage","paged","Math","floor","totalPage","ceil","to","paginationLength","display","map","element","index","margin","Cover","cls","handler","EmptyFolder","version","arrayOfObjectsContains","b","some","join","base","charAt","createQueryStringFromObject","keys","getIndexOfObjectArrayByKeyAndValue","array","createQueryData","queryUrl","fields","params","parse","default","label","orderBy","sort","DeleteButton","SideOptions","target","focused","setFocused","onBlur","onMouseDown","padding","border","ProjectCard","callDelete","project","setDisabled","date_last_modified","queryParams","PrintList","maps","projectsList","handleDelete","ProjectsList","setProjectsList","setTotalResults","setDisplay","toggleform","setToggleForm","search","newProjectsList","filter","mnt","even_projs","results","odd_projs","concat","fetchData","match","papers","search_similar","search_automated","paperDao","selectById","searchSimilar","searchAutomated","SelectTick","points","stroke","color","attributeName","dur","repeatCount","fill","from","CheckBox","val","isChecked","tick","setTick","checked","paper_id","customPapers","projectPapersDao","getPapersList","getPaper","postPaperIntoProject","postCustomPaperIntoProject","putPaper","deletePaper","NoImage","cx","cy","rx","ry","NoProfileImage","r","Image","alt","src","fetchError","setFetchError","mount","onError","NoPapers","InfoIcon","InfoTooltip","PaperConfidence","filtersList","confidence","localConfidenceArray","setLocalConfidenceArray","confArray","filterArray","pairArray","min_length","predicate","filterValue","correctFilter","find","pairCoupleArray","filters","tooltip","toFixed","parseFloat","ProjectPaperCard","callOptions","paper","authors","eid","year","abstract","lines","ellipsis","moreText","lessText","PrintPapersList","papersList","localPaperList","setLocalPaperList","handleSideOptions","newPapersList","setItem","PrintScreenedPapersList","metadata","automatedScreening","screening","source","parseInt","result","votes","v","answer","elementx","PrintManuallyScreenedPapersList","PrintScoupusSearchList","handlePaperSelection","selectedEidList","setTargetPaperData","sideOptions","substring","goSimilar","includes","PrintSearchAutomatedList","automatedSearch","PrintBacklogPapersList","SelectArrow","code","attributeType","isNaN","begin","Select","selected","handleFocus","document","getElementById","beginElement","tabIndex","borderLeft","borderRight","borderTop","data-value","RemoveButton","SelectedPapersListBox","selectedPapersList","setSelectedPapersList","mounted","event","papersToAdd","arrayEid","opacity","pointerEvents","height","OrderArrow","up","destination","setDestination","transform","NoSearchResults","RadioTick","RadioBox","SearchButton","SearchSimilarButton","_","searchByOptions","endYear","Date","getFullYear","yearOptions","range","String","SearchStandardForm","keywords","setKeyWords","scopus","googleScholar","arXiv","setSource","searchBy","setSearchBy","setYear","handleOnInputChange","preventDefault","position","singleYear","Robot","orderByOptions","SearchStandardManager","selectedPapersListFromStorage","setPapersList","setUp","newList","resultPart","allPapersInPage","tmpList","uniqBy","getAttribute","pdf_parse_server","csv_parse_server","updateFileDao","updatePdf","uploadCsv","GoButton","TargetPaper","close","input","paperInfo","fetching","setPaperInfo","setPaperFile","topRightButton","inputElement","files","ref","click","SearchSimilarForm","targetPaperData","similarFormVisibility","setSimilarFormVisibility","similarPaperFetch","setSimilarPaperFetch","targetPaperFile","setTargetPaperFile","fetchMainPaper","test","FormData","resx","marginTop","boxShadow","SearchSimilarManager","onbeforeunload","similarPaperDataFromStorage","fetchSimilarPapers","form","setSelected","setFieldValue","paperType","CustomPaperForm","paperValidationSchema","number","min","max","integer","customPaper","document_type","doi","resetForm","paperData","toString","source_title","abstract_structured","filter_oa_include","filter_study_include","notes","manual","projectId","render","field","HLoad","calcMode","keySplines","CustomPaperPage","paperDataFetch","setPaperDataFetch","setPaperData","displayForm","setDisplayForm","file","EditButton","confirm","ProjectName","setProject","editing","setEditing","setName","newProject","focus","width","updateProject","Forbidden","Ghost","PageNotFound","PapersList","forcePapersFetch","ProjectDescription","collaborators","setCollaborators","setDescription","setInput","loadIconDisplay","setLoadIconDisplay","formatDate","date","collaborator","newCollabs","callApi","date_created","removeCollaborator","PapersCsvForm","setAbstract","setAuthors","setId","csvUpload","setCsvUpload","setForcePapersFetch","PapersTab","displayCsvForm","setDisplayCsvForm","filter_id","projectFiltersDao","getFiltersList","postFilterIntoProject","deleteFilter","putFilter","InsertFilterForm","predicateValidationSchema","inclusion_description","exclusion_description","setFiltersList","UpdateFilterForm","setFilter","FilterCard","localFilter","setLocalFilter","NoFilters","PrintFiltersList","newFiltersList","FiltersTab","filtersFetch","setFiltersFetch","confidenceValues","minConfidenceValues","maxConfidenceValues","resultOutput","c","min_confidence","max_confidence","auto_screening","screening_id","screenings","projectScreeningDao","startAutoScreening","getAutoScreeningStatus","getScreening","getProjectPaperToScreen","getProjectsToScreen","submitVote","AutoScreeningForm","threshold","setAutoScreeningFlag","UserCheckbox","alreadyScreeners","screeners","image","surname","_array","ManualScreeningForm","collaboratorsFetch","setCollaboratorsFetch","isMpAvailable","setIsMpAvailable","resz","screening_mode","array_user_ids","manual_screening_type","setManualStarted","union","overflow","ManualScreeningIcon","AutoScreeningIcon","CrowdScreeningIcon","ScreeningBacklog","displayManualForm","setDisplayManualForm","displayAutoForm","setDisplayAutoForm","autoScreeningFlag","checkStatus","poll","clearInterval","setInterval","screeningStrategy","strokeWidth","strokeDasharray","strokeDashoffset","transition","totalPapers","setTotalPapers","ScreeningPageNavigation","notFound","lc","hash","slider","paddingRight","setNotFound","exact","SearchAutomatedDescription","SearchAutomatedManager","fetchPapers","ProjectPageHead","left","ProjectPage","unauthorized","setUnauthorized","substr","screeningsList","project_data","progress","screenedPapers","setScreeningsList","PlusIcon","FilterElement","isOpen","setIsOpen","localOpen","maxHeight","FiltersAccordion","Tags","selectedTags","setSelectedTags","availableTags","suggestionTimeout","tagSuggestions","setTagSuggestions","addTag","tag","tagx","removeTag","localInput","toLowerCase","selectionLength","tog","handleInputChange","RemoveHighlights","HighLighter","highlightedData","setHighlightedData","startingBlock","endingBlock","selectingInterval","clicking","onMouseUp","onMouseLeave","end","dataChunk","onMouseEnter","onDoubleClick","getSelection","empty","onEnd","selection","anchorNode","nodeName","selectionStart","anchorOffset","selectionEnd","focusOffset","tmp","firstSubBlock","midSubBlock","lastSubBlock","newLocalData","splice","firstSubBlockx","midSubBlockx","newBlock","PositiveAnswer","NegativeAnswer","UndecidedAnswer","SinglePredicateScreening","paperHeight","setPaperHeight","decision","setDecision","tags","nextPaper","setNextPaper","voteSubmission","setVoteSubmission","screeningData","project_paper_id","vote","highlights","outcome","handleKey","activeElement","sendSubmission","getElementsByClassName","clientHeight","paperToDisplay","formPart","backgroundColor","handleKeys","handleFocusableElements","onKeyEvent","FilterScreen","filterHighlights","setFilterHighlights","filterVotes","setFilterVotes","currentOutcome","setCurrentOutcome","currentIndex","findIndex","filterx","localOutcome","arraySubmission","localHighlight","filter_predicate","MultiPredicateForm","tagsData","clearHighlights","displayedFilter","setDisplayedFilter","underlineOffset","setUnderlineOffset","underlineWidth","setUnderlineWidth","dataToSend","filterVote","btnWidth","btnOffset","childNodes","getBoundingClientRect","MultiPredicateScreening","setScreening","fetchProjectData","Main","NavBar","UserInfo","MenuButton","PrintMenu","menu_list","handleMenuBlur","SideMenu","shown","setShown","clsidemenu","clsbutton","bcPath","bc","toUpperCase","createBreadCrumbs","Notification","notificationTimeout","UsersLogin","responseGoogle","tokenId","profileObj","givenName","familyName","imageUrl","clientId","google_login_client_id","buttonText","onSuccess","onFailure","cookiePolicy","App","AppRouter","basename","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9d841d86.chunk.js","sourcesContent":["/*this is the file to communicate with backend by fetch request*/\nimport config from 'config/index';\n\n//signal to abort the request\nlet abortController;\n//int to know abort error type\nlet abortRequestType;\n//10seconds for timeout\nlet timeOutTime = 10 * 1000;\n\n//get the localStorage object\nconst localStorage = window.localStorage;\n\n/**\n * abort all request in progeress by user\n */\nfunction abortRequest() {\n    abortController.abort();\n    abortRequestType = 1;\n    console.log(\"abort\")\n\n}\n\n/**\n * abort all request if timeout\n */\nfunction timeOut() {\n\n    abortController.abort();\n    abortRequestType = 2;\n}\n\n/**\n * create a basic fetch request\n * @param url\n * @param options request config\n * @param {int} timeOutTime\n * @return {object} response data\n\n */\nasync function request(url, options, timeOutTime) {\n    try {\n\n        //create a new abortController for this request\n        abortController = new AbortController();\n        let signal = abortController.signal;\n        //initialize as 0 for every request\n        abortRequestType = 0;\n\n        let requestOptions = Object.assign(\n            {\n                //enable the  sending of cookie\n                //credentials: (url.includes(config.userInfo)) ? 'omit' : 'include', //if it's a google user api request I don't need credentials\n                \"mode\": 'cors',\n                \"signal\": signal\n            },\n            options\n        );\n\n        //set timeout clock\n        let timer = setTimeout(() => timeOut(), timeOutTime);\n\n        let response = await fetch(url, requestOptions);\n\n        //clear timeout clock\n        clearTimeout(timer);\n\n\n        //parse response data\n        let data = await parseResponseData(response);\n        //response error check\n        checkResponseStatus(response,data);\n        return  data;\n\n    }\n    catch (error) {\n\n        //console.dir(error);\n\n        //if abort error is caused by timeout\n        if (abortRequestType === 2) {\n            //create a custom error for timeout\n            let timeOutError = new Error(\"Error: Time out to get response from backend\");\n            timeOutError.name = \"timeout\";\n            return  timeOutError;\n        }\n        //if is a abort error  caused by user\n        else if (abortRequestType === 1) {\n            return null;\n        }\n\n        return error;\n\n\n    }\n}\n\n/**\n * get method\n * @param url\n * @param queryData quey string\n * @return {object} response data\n */\nasync function get(url, queryData = \"\") {\n    let query = \"\";\n    if (queryData !== \"\") {\n        query = \"?\";\n        for (let key in queryData) {\n            query += key + \"=\" + encodeURIComponent(queryData[key]) + \"&\";\n        }\n        //delete the last &\n        query = query.slice(0, query.length - 1);\n    }\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let options = {\n        \"method\": 'GET',\n        \"headers\": jsonHeaders,\n    };\n\n    return await request(url + query, options, timeOutTime);\n}\n\n/**\n * delete method\n * @param url\n */\nasync function deletes(url) {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let options = {\n        \"method\": 'DELETE',\n        \"headers\": jsonHeaders,\n    };\n\n    return await request(url, options, timeOutTime);\n}\n\n/**\n * post method\n * @param url\n * @param bodyData\n * @return {object } response data\n */\nasync function post(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'POST',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options, timeOutTime);\n}\n\n/**\n * post file method\n * @param url\n * @param bodyData\n * @return {object} response data\n */\nasync function postFile(url, bodyData = \"\") {\n\n    //custom timeout for request\n    let customTimeOutTime= 10 * 1000;\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n   // jsonHeaders.append('Content-Type', 'multipart/form-data');\n    let options = {\n        \"method\": 'POST',\n        \"headers\": jsonHeaders,\n        \"body\": bodyData\n    };\n\n    return await request(url, options, customTimeOutTime);\n}\n\n\n/**\n * put method\n * @param url\n * @param bodyData\n */\nasync function put(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    jsonHeaders.append('Authorization', localStorage.getItem(\"userToken\"));\n\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'PUT',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options,timeOutTime);\n}\n\n\n/**\n *  * check resposonse status\n * @param response to check\n * @param data data received\n * @throws {Error} if  status code < 200 or status code >= 300\n */\nfunction checkResponseStatus(response, data) {\n\n    if (response.status < 200 || response.status >= 300) {\n        const error = new Error(response.statusText);\n        error.data = response;\n        if(data.payload){\n            error.payload = data.payload;\n        }\n        throw error;\n    }\n\n}\n\n/**\n * parse the response of  http request\n * @param response response object\n * @return {object} data parsed\n */\nasync function parseResponseData(response) {\n    //get response data type\n    const contentType = response.headers.get('Content-Type');\n    let data = null;\n    //parse the data by its type\n    if (contentType != null) {\n        if (contentType.indexOf('text') > -1) {\n            data = await response.text()\n        }\n        if (contentType.indexOf('form') > -1) {\n            data = await response.formData();\n        }\n        if (contentType.indexOf('video') > -1) {\n            data = await response.blob();\n        }\n        if (contentType.indexOf('json') > -1) {\n            data = await response.json();\n        }\n    }\n    else if (response != null) {\n        data = await response.text();\n    }\n    return data;\n}\n\n\n\n//object to export\nconst http = {\n    get,\n    post,\n    \"delete\" : deletes,\n    put,\n    postFile,\n    abortRequest,\n};\n\nexport default http;","/**\n * this is the config file\n */\n\n\nconst config = {\n    \"home\": \"https://crowdai-slr-api-dev.herokuapp.com/\",\n    //\"home\": \"http://localhost:3001/\",\n    \"search\": \"search\",\n    \"scopus_search\": \"search-scopus\",\n    \"search_similar\": \"search/similar\",\n    \"search_automated\": \"search/automated\",\n    \"projects\": \"projects\",\n    \"papers\": \"papers\",\n    \"customPapers\": \"customPapers\",\n    \"filters\": \"filters\",\n    \"auto_screening\": \"screenings/automated\",\n    \"screenings\": \"screenings\",\n    \"votes\": \"votes\",\n    \"userLogin\": \"auth/login\",\n    \"userInfo\": \"https://www.googleapis.com/oauth2/v3/tokeninfo\",\n    \"userLogout\": \"auth/logout\",\n    \"menu_list\": [\n        {id: 4, content: \"Home\", link: \"/\"},\n        {id: 5, content: \"My Projects\", link: \"/projects\"},\n        {id: 6, content: \"My Screenings\", link: \"/screenings\"}\n    ],\n    \"max_total_number_for_results\": 5000,\n    \"pdf_parse_server\": \"upload/pdf\",\n    \"csv_parse_server\": \"upload/csv\",\n    \"google_login_client_id\": \"282160526683-84sdnoqh3bc1obojfpepcbonnfg3uks4.apps.googleusercontent.com\",\n\n\n\n\n\n};\n\nexport default config;\n","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to post validation token\n * @param bodyData\n * @return {Object} Google user data\n */\nasync function postTokenId(bodyData) {\n    let url = config.home + config.userLogin;\n    return await http.post(url, bodyData);\n}\n\n/**\n * get user by token\n * @return {Object} user data\n */\nasync function getUserByTokenId(id_token) {\n    let url = config.userInfo;\n    return await http.get(url, {id_token});\n}\n\n/**\n * logout user\n * @return {Object} user data\n */\nasync function logoutUser() {\n    let url = config.home + config.userLogout;\n    return await http.get(url);\n}\n\nconst usersDao = {\n    postTokenId,\n    getUserByTokenId,\n    logoutUser\n}\n\n\nexport {usersDao};","import React, {useContext, useState, useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nimport {AppContext} from \"components/providers/appProvider\";\nimport {usersDao} from \"dao/users.dao\";\n\nconst Error = function (props) {\n\n    //this avoids setting the error to null on mount\n    const [firstTime, setFirstTime] = useState(true);\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //useful router stuff\n    const { history, location } = props;\n\n    //if the pathname changes(and it's not the first time) I remove the error\n    //because it means the user manually changed the path\n    useEffect(() => {\n        \n        if(firstTime){\n            console.log(\"error mountes\")\n            setFirstTime(false);\n        }else{\n            appConsumer.setError(null);\n        }\n\n    }, [location.pathname])\n\n    useEffect(() => {\n        try{\n            console.log(appConsumer.error.payload.statusCode);\n\n            //once the component is mounted I go immediately back if error is 401\n            if(appConsumer.error.payload.statusCode === 401 || appConsumer.error.payload.message === \"the token does not match any user!\"){\n                console.log(\"unauth call\")\n                //once I get unauthorized error I check whether the user token is expired\n                const storage = window.localStorage;\n                if (storage.getItem(\"userToken\")) {\n                    async function getUserData(){\n                        let res = await usersDao.getUserByTokenId(storage.getItem(\"userToken\"));\n                        //If the token is expired I remove it and I logout the user\n                        if(res && res.message){\n                            console.log(\"INVALID TOKEN\");\n                            storage.removeItem(\"userToken\");\n                            appConsumer.setUser(null);\n                        }else{\n                            console.log(\"VALID TOKEN\");\n                        }\n                        \n                    }\n                    console.log(\"checking token\")\n                    getUserData();\n                }\n                //then I go back\n                console.log(\"pushing back\")\n                history.goBack();\n            }\n        }catch (e){\n            console.log(\"YOU MAY NEED TO CHANGE THE HOME URL PARAMETER FROM 'config/index.js'\");\n        }\n        return () => {\n            //delete the error, so app can resume its work\n            appConsumer.setError(null);\n        }\n\n    }, []);\n    \n\n    //function to delete the error object in context\n    function handleOnRefresh(){\n        appConsumer.setError(null);\n    }\n    //function to return to previous page\n    function handleOnGoBack(){\n        history.goBack();\n        appConsumer.setError(null);\n    }\n\n    //console.dir(appConsumer.error);\n    let output = <></>;\n\n    //is a error from backend\n    if (appConsumer.error.payload) {\n        output = (\n            <>\n                <p>Error code:</p>\n                <p>{appConsumer.error.payload.statusCode}</p>\n                <p>Error name:</p>\n                <p>{appConsumer.error.payload.error}</p>\n                <p>Error message</p>\n                <p>{appConsumer.error.payload.message}</p>\n            </>\n        );\n    }\n\n    //is a error of other type\n    else {\n        output = (\n            <>\n                <p>Error name:</p>\n                <p>{appConsumer.error.name}</p>\n                <p>Error message</p>\n                <p>{appConsumer.error.message}</p>\n            </>\n        );\n    }\n\n    output = (\n        <div className=\"error-wrapper\" style={{textAlign: \"center\"}}>\n            {output}\n            <br/>\n            <button type=\"button\" onClick={handleOnGoBack}><u>return to previous page</u></button>\n            <br/>\n            <p>or</p>\n            <br/>\n            <button type=\"button\" onClick={handleOnRefresh}><u>refresh</u></button>\n\n        </div>\n    );\n\n    return output;\n\n}\n\n\nexport default withRouter(Error);","import React, {useState, useEffect} from 'react';\n\nimport Error from 'components/modules/error';\n\nimport {usersDao} from 'dao/users.dao';\n\n//create a context object\nconst AppContext = React.createContext();\n\n/**\n * this is the component that include a context object that it can be access by all its children component\n */\nconst AppProvider = function (props) {\n\n    //user data\n    const [user, setUser] = useState(null);\n\n    //user data fetch flag\n    const [userFetch, setUserFetch] = useState(true);\n\n    //error\n    const [error, setError] = useState(null);\n\n    //title\n    const [title, setTitle] = useState(<div className=\"nav-elements\"> <h2 className=\"static-title\">HOME</h2> </div>);\n\n    //notification message\n    const [notificationMessage, setNotificationMessage] = useState(undefined);\n\n    const [projectName, setProjectName] = useState(\"\");\n\n    //preparate an object to be insertd into context\n    const contextObject ={\n        user,\n        setUser,\n        userFetch,\n        setUserFetch,\n        error,\n        setError,\n        title,\n        setTitle,\n        notificationMessage,\n        setNotificationMessage,\n        projectName,\n        setProjectName\n    };\n\n\n    //effect on context mount to fetch user data if he's logged\n    useEffect(() => {\n        //get the localStorage object\n        const storage = window.localStorage;\n\n        if (storage.getItem(\"userToken\")) {\n            async function getUserData(){\n                let res = await usersDao.getUserByTokenId(storage.getItem(\"userToken\"));\n\n                //if I receive an error I remove the deprecated token\n                if((res && res.message) || !res.email){\n                    storage.removeItem(\"userToken\");\n                }else{\n                    let user = {\"email\": res.email, \n                                \"name\": res.given_name, \n                                \"surname\": res.family_name, \n                                \"image\": res.picture};\n                    setUser(user);\n                }\n\n                setUserFetch(false);\n            }\n            getUserData();\n        }else if(props.testing){ //data setup for testing\n            setUser({\n                \"email\": \"gmail@gmail\", \n                \"name\": \"bob\", \n                \"surname\": \"man\", \n                \"image\": \"invalid\"});\n            setNotificationMessage(\"this is a test!\");\n            setUserFetch(false);\n        }else{\n            setUserFetch(false);\n        }\n\n        \n    }, [])\n\n    //if there isn't error\n    if (!error) {\n\n        return (\n            //*set the values of contenxt*\n            <AppContext.Provider value={contextObject}>\n\n                {/*mount all components children*/}\n                {props.children}\n\n            </AppContext.Provider>\n        );\n    }\n    //if there is a error\n    else {\n        return (\n            //*set the values of contenxt*\n            <AppContext.Provider value={contextObject}>\n\n                    <Error/>\n\n            </AppContext.Provider>\n        )\n    }\n\n\n}\n\nexport {AppContext, AppProvider};","import React, {useContext, useEffect} from \"react\";\n\nimport {withRouter} from 'react-router-dom';\n\nimport {AppContext} from \"components/providers/appProvider\";\n\n/**\n * this is home component\n */\nconst Home = function (props) {\n\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set title when component mounts\n    useEffect(() => {\n        appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">HOME</h2> </div>);\n    },[])//run on component mount\n\n    const { history, location } = props;\n\n    useEffect(() => {\n        //if user is not logged it I redirect to homepage\n        if(!appConsumer.user){\n            history.push(\"/\");\n        }\n    }, [location.pathname]) //every time location changes\n\n    return (\n        <>\n            <h1>\n                Systematic Literature Review manager\n            </h1>\n            <h2 style={{fontSize: 22, fontWeight: \"normal\"}}>the system right now allows you to</h2>\n            <ul style={{fontSize: 18, fontWeight: \"lighter\"}}>\n                <li>browse and manage a list of prjects</li>\n                <li>browse the list of papers on a project</li>\n                <li>search(from Scopus or arXiv) and add papers to a project</li>\n                <li>add custom papers based on a file or form data</li>\n                <li>'fake search' similar papers or relevant papers</li>\n                <li>select collaborators and screeners</li>\n                <li>browse and manage a list of screenings</li>\n                <li>screen project papers</li>\n            </ul>\n            <h2 style={{fontSize: 22, fontWeight: \"normal\"}}>notes</h2>\n            <ul style={{fontSize: 18, fontWeight: \"lighter\"}}>\n                <li><i>the scopus search works partially(can't retrieve the description)</i>\n                    <ul><li style={{fontSize: 16}}><i>from Elsevier developer portal : \"The data available depends on your institutional subscriptions, and only when you're making calls from within your institutional network are you considered a subscriber\"</i></li></ul>\n                </li>\n                <li><i>the options don't affect the search, for now</i></li>\n            </ul>\n        </>\n    );\n\n\n\n\n};\n\n\nexport default withRouter(Home); //I export passing router componets to the Home so it can access history and location","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to get a projects list\n * @param queryData\n * @return {array[objects]}\n */\nasync function getProjectsList(queryData = \"\") {\n    let url = config.home + config.projects\n    let res = await http.get(url, queryData);\n    return res;\n\n\n}\n\n/**\n * dao to get a project\n * @param project_id\n * @return {Object} project requested\n */\nasync function getProject(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    let res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to get project collaborators\n * @param project_id\n * @return {array[objects]} array of collaborators\n */\nasync function getProjectCollaborators(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id + \"/collaborators\";\n    let res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to get project screeners\n * @param project_id\n * @return {array[objects]} array of screeners\n */\nasync function getProjectScreeners(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id + \"/screeners\";\n    let res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to add project manual screenning\n * @param project_id\n * @param bodyData\n * @return {Object} screening data\n */\nasync function postProjectManualScreeningData(project_id, bodyData) {\n    let url = config.home + config.projects + \"/\" + project_id + \"/screeners\";\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to update project manual screenning\n * @param project_id\n * @param bodyData\n * @return {Object} screening data\n */\nasync function putProjectManualScreeningData(project_id, bodyData) {\n    let url = config.home + config.projects + \"/\" + project_id + \"/screeners\";\n    return await http.put(url, bodyData);\n}\n\n\n\n/**\n * dao to post a new project\n * @param bodyData\n * @return {Object} project created\n */\nasync function postProject(bodyData) {\n    let url = config.home + config.projects;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to post a new collaborator\n * @param project_id\n * @param bodyData email of collaborator\n * @return {String} empty string\n */\nasync function addProjectCollaborator(project_id, bodyData) {\n    let url = config.home + config.projects + \"/\" + project_id + \"/collaborators\";\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to put a old project\n * @param project_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putProject(project_id, bodyData) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    return await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a project\n * @param project_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function deleteProject(project_id) {\n    let url = config.home + config.projects + \"/\" + project_id;\n    let res = await http.delete(url);\n    return res;\n}\n\n/**\n * dao to remove collaborator\n * @param project_id\n * @param collaborator_id the mail of the collaborator\n * @return {String} empty string\n */\nasync function removeProjectCollaborator(project_id, collaborator_id) {\n    let url = config.home + config.projects + \"/\" + project_id + \"/collaborators/\" + collaborator_id;\n    let res = await http.delete(url);\n    return res;\n}\n\n\nconst projectsDao = {\n    getProjectsList,\n    getProject,\n    postProject,\n    putProject,\n    deleteProject,\n    \"abortRequest\": http.abortRequest,\n    getProjectCollaborators,\n    getProjectScreeners,\n    postProjectManualScreeningData,\n    putProjectManualScreeningData,\n    removeProjectCollaborator,\n    addProjectCollaborator\n}\n\n\nexport {projectsDao};","import React from \"react\";\n\n/**\n * component svg loading-icon\n */\nconst LoadIcon = function (props) {\n\n    return (\n\n        <svg id=\"loading-icon\" className={props.class} xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n             y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <g>\n                <path id=\"loading-circle1\" d=\"\n                  M 500, 500\n                  m -160, 0\n                  a 160,160 0 1,0 320,0\n                  a 160,160 0 1,0 -320,0\n          \"/>\n                <path id=\"loading-circle2\" d=\"\n                  M 500, 500\n                  m -305, 0\n                  a 305,305 0 1,0 610,0\n                  a 305,305 0 1,0 -610,0\n          \"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default LoadIcon;\n","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst CloseButton = function (props) {\n\n    return (\n        <svg id=\"close-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <line className=\"ln\" x1=\"134\" y1=\"866\" x2=\"866\" y2=\"134\"/>\n        <line className=\"ln\" x1=\"134\" y1=\"134\" x2=\"866\" y2=\"866\"/>\n        </svg>\n    );\n};\n\nexport default CloseButton;\n","import React, {useEffect, useContext, useRef} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectsDao} from 'dao/projects.dao'\n\nimport CloseButton from 'components/svg/closeButton';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n/**\n * this is the form for create or edit the project\n * @param props.project  project object if we want to update a old project\n * @param null if we want to create a new project\n */\nfunction ProjectForm(props) {\n\n    const mountRef = useRef(false);\n    \n    let yup = require('yup');\n\n    const projectValidationSchema = yup.object().shape({\n        name: yup.string().required('please enter a title'),\n        description: yup.string().required('please enter a description')\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    return (\n        <>\n        <Formik\n            initialValues={{ name: '', description:''}}\n            validationSchema={projectValidationSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                let bodyData = {name: values.name, description: values.description};\n                //call dao\n                let res = await projectsDao.postProject(bodyData);\n\n                //error checking\n                if(mountRef.current && res.message){\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }else if(mountRef.current){\n                    props.history.push(\"/projects/\" + res.id);\n                }\n                if(mountRef.current){\n                    setSubmitting(false);\n                }\n            }}\n            validateOnBlur={false}\n        >\n        {function ({ errors, touched, isSubmitting, isValid, setErrors, validateField, handleChange }) {\n            let output = \"\";\n            output = (<Form className=\"modal floating-form add-project\" style={{visibility: (!props.visibility) ? 'hidden' : '' }}>\n                <button type=\"button\" className=\"close-btn\" onClick={(e) => {\n                    props.setVisibility(!props.visibility);\n                }}><CloseButton/></button>\n                <Field\n                    style={{borderBottom : (errors.name && touched.name) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"name\"\n                    type=\"text\" \n                    placeholder=\"Please enter a project title\"\n                    onChange={(e) => {handleChange(e); validateField('name')}}/>\n                <br/>\n                <Field\n                    style={{borderBottom : (errors.description && touched.description) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"description\"\n                    component=\"textarea\"\n                    placeholder=\"Please describe the topic and focus of this new project\"/>\n                <br/>\n                <button type=\"submit\" disabled={isSubmitting || !isValid}>Add Project</button>\n            </Form>\n            );\n            return output;\n        }}\n        </Formik>\n\n       \n        </>\n    );\n\n\n}\n\n\nexport default ProjectForm;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport config from 'config/index';\n\n/**\n * this is the component for pagination\n * @param start offset of results\n * @param count number of element for page\n * @param totalResults the total number of results\n * @param path the path of current page\n * @return {*}\n * @constructor\n */\n\nconst Pagination = function({start, count, totalResults, path}) {\n\n    //set limit max of start\n    if(totalResults >config.max_total_number_for_results){\n        totalResults= config.max_total_number_for_results;\n    }\n    //prepare the correct link path for pagination\n    path = setStartAndCountInUrl(path);\n\n    let prev = \"\", next = \"\", firstPage = \"\", lastPage = \"\";\n    let listPage = [] ;\n    let separator = \"...\";\n    //number*2 of element in pagination\n    let paginationLength = 4;\n    //the page count start by 1.\n    let paged = Math.floor(start / count) + 1;\n    //get total page number\n    let totalPage = Math.ceil(totalResults / count);\n\n\n    //we need the pagination only the totalPage is major than 1\n    if (totalPage > 1) {\n\n        //if it isn't the first page, print the prev-page link\n        if (paged > 1) {\n            prev = (\n                <li>\n                    <Link className=\"prev-page\"\n                          to={path + \"start=\" + (((paged - 1) * count) > 0 ? ((paged - 2) * count) : 0) + \"&count=\" + count}>\n                        {\"<\"}\n                    </Link>\n                </li>\n            );\n        }\n        //if it isn't the last page, print the next-page link\n        if (paged < totalPage) {\n            next = (\n                <li>\n                    <Link className=\"next-page\" to={path + \"start=\" + (paged * count) + \"&count=\" + count}>\n                        {\">\"}\n                    </Link>\n                </li>\n            );\n        }\n\n        //if the first page  isn't include by regular listPage, print the first-page link\n        if (paged > paginationLength + 2) {\n            firstPage = (\n                <>\n                    <li>\n                        <Link className=\"first-page\" to={path + \"start=0&count=\" + count}>\n                            {\"1\"}\n                        </Link>\n                    </li>\n                    <li>\n                        <span>{separator}</span>\n                    </li>\n                </>\n            );\n        }\n\n        //if the last page  isn't include by regular listPage, print the last-page link\n        if (paged < totalPage - (paginationLength + 1)) {\n            lastPage = (\n                <>\n                    <li>\n                        <span>{separator}</span>\n                    </li>\n                    <li>\n                        <Link style={{display: \"inline-block\"}} className=\"last-page\"\n                              to={path + \"start=\" + ((totalPage - 1) * count) + \"&count=\" + count}>\n                            {totalPage}\n                        </Link>\n                    </li>\n                </>\n            );\n        }\n\n        //print the range of page link, the center is current paged\n        for (let i = paged - paginationLength; i <= paged + paginationLength; i++) {\n\n            //print only the i has a valid value\n            if (i > 0 && i <= totalPage) {\n\n                //if i isn't current page, print link\n                if (i !== paged) {\n\n                    listPage.push((\n                            <Link className=\"normal-page\" to={path + \"start=\" + ((i-1) * count) + \"&count=\" + count}>\n                                {i}\n                            </Link>\n                    ));\n                }\n                //if i is current page, print only text\n                else {\n                    listPage.push((\n                            <span className=\"current-page\">{paged}</span>\n                    ));\n                }\n\n            }\n        }\n\n\n    }\n\n    let output = (\n        <ul className=\"pagination\">\n            {prev}\n            {firstPage}\n            {listPage.map((element,index)=><li style={{display: \"inline-block\", margin: 10}} key={index}>{element}</li>)}\n            {lastPage}\n            {next}\n        </ul>\n    );\n    return output;\n};\n\n\n/**\n * internal function to prepare the path link for pagination\n * @param path\n * @return {*}\n */\n\nfunction setStartAndCountInUrl(path){\n\n    let url = window.location.href;\n    //get the queryString from url\n    let queryString = url.split(\"?\")[1];\n    //if it exists\n    if(queryString) {\n        //remove the part after # if it exists\n        queryString = queryString.split(\"#\")[0];\n\n        let newQueryString = \"\";\n        //split queryString in array of string\n        let arryQuery = queryString.split(\"&\");\n        for (let i = 0; i < arryQuery.length; i++) {\n            //check each queryElement\n            let parameterName = arryQuery[i].split(\"=\")[0];\n            //if it isn't start and count\n            if (parameterName !== \"start\" && parameterName !== \"count\") {\n                //add to the new queryString\n                newQueryString += arryQuery[i]+\"&\";\n            }\n        }\n        //create a new path whiteout start and count\n        path = path+\"?\"+newQueryString;\n    }\n    //if path doesn't contain any queryString\n    else {\n        path = path+\"?\";\n    }\n\n\n    return path;\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default Pagination;","import React from \"react\";\n\n\n\n/**\n * component for covering the page\n */\nconst Cover = function ({cls, handler}) {\n    //get data from global context\n    return (\n        <div className={\"cover \" + cls} onClick={(e) => {handler(false)}}></div>\n    );\n};\n\nexport default Cover;","import React from \"react\";\n\n/**\n * component svg \n */\nconst EmptyFolder = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"empty-folder\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <g>\n                <g>\n                    <path className=\"st0-empty-folder\" d=\"M967.9,448.6v260c0,15.1-12.2,27.3-27.3,27.3H59.4c-15.1,0-27.3-12.2-27.3-27.3v-260c0-0.3,0-0.7,0-1\n                        c0-0.2,0-0.4,0.1-0.6c0-0.2,0-0.4,0.1-0.7c0-0.2,0.1-0.4,0.1-0.6c0-0.3,0.1-0.6,0.2-1c0.6-2.4,1.7-4.7,3.5-6.8l141.3-168.3\n                        c2.9-3.4,7.1-5.4,11.6-5.4h89.1c8.5,0,15.9,5.4,18.5,13.5l11.4,35.1c6.3,19.3,24.3,32.4,44.7,32.4h294.4\n                        c20.3,0,38.4-13.1,44.7-32.4l11.4-35.1c2.6-8,10.1-13.5,18.5-13.5h89.1c4.5,0,8.8,2,11.6,5.4l141.3,168.3c1.8,2.1,2.9,4.4,3.5,6.8\n                        c0.1,0.3,0.2,0.6,0.2,1c0,0.2,0.1,0.4,0.1,0.6s0.1,0.5,0.1,0.7s0.1,0.4,0.1,0.6C967.8,447.9,967.9,448.2,967.9,448.6z\"/>\n                    <path d=\"M974.9,448.6c0.1,31-0.8,62-1.4,93c-0.2,7.8-0.3,15.5-0.4,23.3c-0.1,7.8-0.1,15.5-0.2,23.3v46.5v46.5v23.3v2.9\n                        c0,0.5,0,0.9,0,1.5l-0.1,1.7c0,1.1-0.2,2.3-0.4,3.4c-0.1,1.1-0.5,2.2-0.7,3.4c-1.2,4.4-3.4,8.6-6.4,12.1s-6.7,6.4-10.8,8.3\n                        c-4.1,2-8.7,3.1-13.3,3.1l-23.3,0.1l-46.5,0.1l-372.1,1.1L127,742.9L80.5,743H68.9h-5.8h-2.9h-0.7h-0.9l-1.8-0.1\n                        c-4.9-0.4-9.7-1.8-14-4.2s-8-5.7-11-9.6c-2.9-3.9-5-8.5-6.1-13.3c-0.3-1.2-0.4-2.4-0.6-3.6c-0.1-1.2-0.1-2.4-0.2-3.7v-5.8v-23.3\n                        L24.8,633v-93l0.2-46.5l0.1-23.3l0.1-11.6v-5.8v-2.9c0-0.5,0-0.9,0-1.5v-0.9c0,0,0-0.6,0.1-0.9c0-0.3,0.1-0.7,0.1-1l-0.1,1.4\n                        c0-0.5,0.1-1,0.1-1.5l0.1-0.6l0.1-0.6l-0.1,0.5l0.2-1c0.1-0.3,0.2-0.7,0.2-1c0.1-0.5,0.3-1.1,0.5-1.6c0.4-1.1,0.8-2.1,1.3-3.1\n                        s1.1-1.9,1.7-2.8c0.3-0.4,0.6-0.9,1-1.3l0.9-1l6.1-7.1l12.1-14.3L73.6,383l48.4-57l48.5-56.9l1.5-1.8l0.8-0.9l0.4-0.5l0.5-0.6\n                        c1.4-1.6,3.1-2.9,5-4c1.8-1.1,3.9-1.8,5.9-2.3c1-0.2,2.1-0.4,3.2-0.4c0.3,0,0.5,0,0.8,0h0.7h1.2l18.7,0.1l37.4,0.3l18.7,0.1\n                        l9.4,0.1h2.3h1.2l1.4,0.1c1.9,0.1,3.9,0.4,5.7,1c3.7,1.1,7.1,3.2,9.9,6c1.4,1.4,2.6,2.9,3.6,4.6s1.8,3.4,2.4,5.3l5.7,17.8\n                        l5.7,17.8c1.8,5.3,4.6,10.3,8.3,14.6c7.4,8.5,18.3,13.9,29.7,14.5l2.1,0.1h2.3h4.7h9.4l18.7,0.1l37.4,0.1l74.8,0.1l74.8-0.1\n                        l37.4-0.1l18.7-0.1h9.4h4.7h2.3l2.1-0.1c11.3-0.5,22.2-6,29.6-14.5c3.7-4.2,6.5-9.2,8.3-14.5l5.7-17.8l5.6-17.8\n                        c0.6-1.9,1.4-3.6,2.4-5.3c1-1.7,2.3-3.2,3.6-4.6c2.8-2.8,6.2-4.9,10-6c1.9-0.6,3.8-0.9,5.8-1.1l1.5-0.1h1.2h2.3l9.4-0.1l18.7-0.1\n                        l37.4-0.3l18.7-0.1h1.2h0.7c0.3,0,0.5,0,0.8,0c1.1,0.1,2.2,0.2,3.2,0.4c2.1,0.5,4.2,1.2,6,2.3c1.9,1.1,3.6,2.4,5.1,4l0.5,0.6\n                        l0.4,0.5l0.8,0.9l1.5,1.8l48.5,56.9l48.4,57.1l24.1,28.6l12.1,14.3l6,7.1l0.9,1.1c0.3,0.4,0.7,0.9,1,1.3c0.6,0.9,1.2,1.8,1.7,2.8\n                        s0.9,2,1.3,3.1c0.2,0.5,0.3,1.1,0.5,1.6c0.1,0.2,0.1,0.6,0.2,1l0.2,1l-0.1-0.5l0.1,0.6l0.1,0.6c0.1,0.5,0.1,1,0.1,1.5l-0.1-1.4\n                        c0.1,0.4,0.1,0.8,0.2,1.2v0.6v0.3L974.9,448.6z M960.8,448.6v-0.7v-0.2c0,0.1,0,0.1,0,0.2s0,0.2,0.1,0.4l-0.1-1.4\n                        c0,0.1,0,0.2,0,0.2l0,0V447l-0.1-0.5l0,0v-0.1c0,0,0,0,0-0.2c-0.1-0.3-0.1-0.4-0.2-0.6c-0.1-0.4-0.3-0.8-0.5-1.2\n                        c-0.2-0.4-0.4-0.8-0.7-1.2c-0.1-0.2-0.3-0.4-0.4-0.6l-0.6-0.7l-6-7.2l-12-14.4l-24-28.7l-47.8-57.5l-47.7-57.6l-2.8-3.4\n                        c-0.6-0.7-1.4-1.3-2.2-1.8s-1.7-0.8-2.6-1.1c-0.5-0.1-0.9-0.2-1.4-0.2c-0.1,0-0.2,0-0.4,0c-0.1,0-0.2,0-0.4,0h-1.2l-18.7-0.1\n                        l-37.4-0.3l-18.7-0.1l-9.4-0.1h-2.3h-1.2h-0.9c-1.1,0.1-2.3,0.2-3.4,0.6c-4.4,1.3-8.1,4.8-9.6,9.2l-5.9,17.8l-5.9,17.8\n                        c-2.3,6.5-5.7,12.5-10.3,17.6c-9.1,10.2-22.4,16.6-36,17.2L500,349.2l-149.8,0.2c-13.6-0.6-26.9-6.9-35.9-17.2\n                        c-4.6-5.1-8-11.1-10.3-17.6l-5.9-17.8l-5.9-17.8c-1.5-4.5-5.2-8.1-9.7-9.4c-1.1-0.4-2.3-0.5-3.4-0.6h-0.9H277h-2.3l-9.4,0.1\n                        l-18.7,0.1l-37.4,0.3l-18.7,0.1h-1.2c-0.2,0-0.3,0-0.5,0c-0.1,0-0.2,0-0.4,0c-0.5,0-1,0.1-1.5,0.2c-1,0.2-1.9,0.6-2.7,1.1\n                        c-0.9,0.5-1.6,1.1-2.3,1.9l-2.8,3.4l-47.7,57.6l-47.8,57.6l-23.9,28.8l-11.9,14.4l-6,7.2l-0.6,0.8c-0.1,0.2-0.3,0.4-0.4,0.6\n                        c-0.3,0.4-0.5,0.8-0.7,1.2c-0.2,0.4-0.4,0.8-0.5,1.2c-0.1,0.2-0.1,0.4-0.2,0.6c0,0.2,0,0.1,0,0.2v0.1v0.1l-0.1,0.5v0.1\n                        c0,0,0,0.1,0,0s0-0.2,0-0.2l-0.1,1.4c0-0.1,0.1-0.2,0.1-0.3c0-0.1,0-0.3,0-0.2v0.6c0,0.4,0,0.9,0,1.4v2.9v5.8l0.1,11.6l0.1,23.3\n                        l0.2,46.5v93l-0.1,46.5v23.3v5.8l0.1,2.1c0.1,0.7,0.2,1.4,0.3,2.1c0.6,2.8,1.8,5.4,3.5,7.7s3.9,4.2,6.4,5.6\n                        c2.5,1.4,5.3,2.2,8.1,2.4l1.1,0.1h0.5h0.7h2.9H69h11.6l46.5,0.1l372.1,0.8l372.1,1.1l46.5,0.1H941c6.3-0.1,12.5-3,16.6-7.9\n                        c2.1-2.4,3.5-5.3,4.4-8.3c0.2-0.8,0.4-1.5,0.5-2.3s0.3-1.6,0.3-2.4l0.1-1.2c0-0.4,0-0.9,0-1.4v-2.9V681v-46.5V588\n                        c0-7.8-0.1-15.5-0.2-23.3c-0.1-7.8-0.2-15.5-0.4-23.3C961.6,510.6,960.7,479.6,960.8,448.6z\"/>\n                </g>\n                <g>\n                    <path className=\"st1-empty-folder\" d=\"M952.8,686.4l-120.7-220l-9.8-17.9c-2.7-4.8-7.7-7.8-13.2-7.8H190.9c-5.5,0-10.6,3-13.2,7.8l-9.8,17.9\n                        L50,681.3\"/>\n                    <path className=\"st2-empty-folder\" d=\"M951.1,687.4L915,622.6l-36-64.9l-35.8-65l-17.9-32.5l-4.5-8.1l-1.1-2c-0.3-0.6-0.6-1.1-1-1.6\n                        c-0.8-1-1.7-1.8-2.7-2.6c-2-1.4-4.5-2.2-7-2.2h-9.3l-296.8,0.2l-296.8-0.2h-9.3h-4.6H191h-0.9c-0.6,0.1-1.2,0.1-1.8,0.3\n                        c-2.4,0.5-4.6,1.8-6.3,3.7c-0.4,0.5-0.8,1-1.1,1.5c-0.2,0.3-0.3,0.5-0.5,0.8l-0.6,1l-2.2,4.1l-17.9,32.5l-35.8,65l-36,64.9\n                        l-36.1,64.8l-3.5-1.9L83.5,615l35.4-65.2l35.6-65.1l17.8-32.6l2.2-4.1l0.6-1c0.2-0.4,0.5-0.8,0.7-1.2c0.5-0.8,1.1-1.5,1.7-2.2\n                        c2.5-2.8,5.8-4.7,9.5-5.6c0.9-0.2,1.8-0.3,2.8-0.4h1.4h1.2h4.6h9.3l296.8-0.2l296.8,0.2h9.3c3.7,0,7.4,1.2,10.5,3.3\n                        c1.5,1.1,2.9,2.4,4,3.8c0.6,0.7,1.1,1.5,1.5,2.3l1.1,2l4.5,8.1l17.8,32.6l35.6,65.1l35.4,65.2l35.3,65.3L951.1,687.4z\"/>\n                </g>\n                <path className=\"st3-empty-folder\" d=\"M967.9,448.6v260c0,15.1-12.2,27.3-27.3,27.3H59.4c-15.1,0-27.3-12.2-27.3-27.3v-260c0,8.7,6.8,16.9,16.8,16.9\n                    h111.4c12.9,0,24.4,8.3,28.3,20.6l17.4,53.8c9.6,29.6,37.2,49.7,68.4,49.7h451c31.2,0,58.8-20.1,68.4-49.7l17.4-53.8\n                    c4-12.3,15.4-20.6,28.3-20.6H951C961.1,465.5,967.9,457.3,967.9,448.6z\"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default EmptyFolder;","//need to parse query string of url\nimport queryString from 'query-string';\n\n//here are the common support function\n\n/**\n * compares two arrays of objects\n */\nfunction arrayOfObjectsEquals(a, b) {\n\n    if (a === null || b === null) {\n        return false;\n    }\n    if (a.length !== b.length) {\n        return false;\n    }\n\n    a.sort();\n    b.sort();\n\n\n    for (var i = 0; i < a.length; ++i) {\n        if (JSON.stringify(a[i]) !== JSON.stringify(b[i])) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * checks if B is contained in A, using a key to check the inclusion\n * @param {array} a\n * @param {array} b\n * @param {string} key (object field)\n */\nfunction arrayOfObjectsContains(a, b, key) {\n\n    if (a === null || b === null) {\n        return false;\n    }\n    if (a.length === 0 || b.length === 0) {\n        return false;\n    }\n\n    //iterate over all elements of B and check if A contains it \n    //by checking wether and element in A has the same key as the selected B element(b[i])\n    for (let i = 0; i < b.length; ++i) {\n        //if doesn't contain the given element then it meand that the vector A doesn't include the vector B\n        if (!a.some(e => e[key] === b[i][key])) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * converts the checkboxes object of the search form into parameters for the url\n */\nfunction searchCheckboxesToParams(checkboxes) {\n    var params = \"\";\n    Object.keys(checkboxes).forEach(key => {//I iterate over each field of the object\n        if (key !== \"years\") {//if it's not an year\n            if (checkboxes[key]) {//if it's a true flag\n                console.log(key)\n                params += \"&\" + key + \"=\" + checkboxes[key];\n            }\n        }\n        else {//if it's a year\n            if (checkboxes.years.length !== 0) {//if there are some years selected\n                params += \"&\" + queryString.stringify({\"years\": checkboxes.years}, {arrayFormat: 'comma'});\n            }\n        }\n    });\n    return params;\n}\n\n/**\n * this is  function to manipolate 2 url string\n * if first string ends with \"/\", removes \"/\".\n * then concate wite second string and return new string\n */\nfunction join(base, path) {\n    let newPath;\n    //if the last element is \"/\"\n    if (base.charAt(base.length - 1) === '/') {\n        newPath = base.slice(0, -1) + path;\n    }\n    else {\n        newPath = base + path;\n    }\n\n    return newPath;\n\n}\n\n/**\n *\n *\n * function to create string of query by queryObject\n * @param queryData query object\n * @return {string} query string\n */\nfunction createQueryStringFromObject(queryData) {\n\n    let queryString = \"?\";\n    //create a array of keys\n    let keys = Object.keys(queryData);\n    //concatenate the object.property\n    for (let i = 0; i < keys.length; i++) {\n        //I don't need to sort for the recently added sorting\n        if (queryData[\"orderBy\"] !== \"date_created\" || keys[i] !== \"sort\") {\n            queryString += keys[i] + \"=\" + encodeURIComponent(queryData[keys[i]]);\n            //if it isn't the last element, add symbol \"&\"\n            if (i !== (keys.length - 1)) {\n                queryString += \"&\";\n            }\n        }\n    }\n    return queryString;\n\n}\n\n\n/**\n * get element index of a object array by [key, value]\n * @param array to find\n * @param key to find\n * @param value to find\n * @return {number} index of element, -1 if didn't find\n */\nfunction getIndexOfObjectArrayByKeyAndValue(array, key, value) {\n    let index = -1;\n    for (let i = 0; i < array.length; i++) {\n        if (array[i][key] === value) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n\n/**\n * function to prepare a object of queryData\n * @param queryUrl\n * @param fields[] fields array\n * @return object of queryData for the fetch\n */\nfunction createQueryData(queryUrl, fields) {\n    \n    //set query params from queryString of url\n    let params = queryString.parse(queryUrl);\n    let queryData = {};\n    for(let i = 0; i < fields.length; i++){\n        if(typeof fields[i].default === \"boolean\"){\n            if(params[fields[i].label] === \"true\"){\n                queryData[fields[i].label] = true;\n            }else if(params[fields[i].label] === \"false\"){\n                queryData[fields[i].label] = false;\n            }else{\n                queryData[fields[i].label] = fields[i].default;\n            }\n        }else{\n            queryData[fields[i].label] = params[fields[i].label] || fields[i].default;\n        }\n    };\n\n    //date_created is used for sorting the most recently added so it makes sense only DESC sort\n    if(queryData && queryData.orderBy === \"date_created\"){\n        queryData.sort = \"DESC\";\n    }\n    \n    return queryData;\n\n}\n\nexport {\n    arrayOfObjectsEquals,\n    arrayOfObjectsContains,\n    searchCheckboxesToParams,\n    join,\n    createQueryStringFromObject,\n    getIndexOfObjectArrayByKeyAndValue,\n    createQueryData\n\n};","import React from \"react\";\n\n/**\n * component svg options menu button\n */\nconst DeleteButton = function (props) {\n\n    return (\n\n        <svg version=\"1.1\" id=\"options-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t        viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M214,482.1\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"250\" x2=\"500\" y2=\"250\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"500\" x2=\"500\" y2=\"500\"/>\n            <line className=\"st-options\" x1=\"500\" y1=\"750\" x2=\"500\" y2=\"750\"/>\n        </svg>\n\n    );\n};\n\nexport default DeleteButton;","import React,{useState} from \"react\";\n\nimport OptionsButton from 'components/svg/optionsButton';\n\n/**\n * component side options\n * it needs a class for the styling,\n * an array of options,\n * the function that will handle the click on the option\n * and, if necessary, a target for the handler function\n */\nconst SideOptions = function ({cls, options, handler, target, data}) {\n\n    //this is used to display or hide the options of the menu\n    const [focused, setFocused] = useState(false)\n\n\n    return (\n        <div className={cls}>\n            <button type=\"button\" \n                    onBlur={(e) => \n                        //if the element is blurred then I hide it\n                        {if(focused){setFocused(false)}}} \n                    onMouseDown={(e) => //onMouseDown fires before onBlur\n                        //immediately after the button is clicked I toggle the menu\n                        {setFocused(!focused)}}>\n                <OptionsButton/>\n            </button>\n            <div style={{fontSize: (focused) ? \"12px\" : \"0px\", padding: (focused) ? \"2px\" : \"0px\", border: (focused) ? \"solid 1px #e8e8e8\" : \"solid 0px #e8e8e800\"}} className=\"options-list\">\n                \n                {options.map((element, index) => \n                    <div key={index} onMouseDown={(e) => handler(target, element, data)} className=\"option\">{element}</div>\n                )}\n                \n            </div>\n        </div>\n    );\n}\n\nexport default SideOptions;","import React, {useState} from \"react\";\nimport {Link} from 'react-router-dom';\n\nimport SideOptions from 'components/modules/sideOptions';\nimport {join} from 'utils';\n\n\nconst ProjectCard = function ({callDelete, path, project}) {\n\n    const [disabled, setDisabled] = useState(false);\n\n    //side options\n    let sideOptions= [\"delete\"];\n\n    //handle for the side options\n    function handleSideOptions(id, name){\n        if(name === \"delete\"){\n            setDisabled(true);\n            callDelete(id);\n        }\n    }\n    return(\n        <div className={(disabled) ? \"disabled\" : \"\"}>\n            <SideOptions options={sideOptions} handler={handleSideOptions} target={project.id} cls=\"card-options project-card-options\"/>\n                <Link to={join(path, \"/\" + project.id)}>\n                    <h3>{project.data.name}</h3>\n                    <p className=\"description\">{project.data.description}</p>\n                    <div className=\"project-dates\">\n                        <p>{/*created on <i>{project.date_created.slice(0, 10)}</i>*/}</p>\n                        <p>last modified on <i>{project.date_last_modified.slice(0, 10)}</i></p> \n                    </div>\n                </Link>\n        </div>\n    )\n}\n\nexport default ProjectCard;","import React, {useState, useEffect, useContext, useRef} from \"react\";\n\nimport {projectsDao} from 'dao/projects.dao';\nimport LoadIcon from 'components/svg/loadIcon';\nimport ProjectForm from 'components/projects_page/projectForm';\nimport Pagination from 'components/modules/pagination';\nimport Cover from 'components/modules/cover';\n\nimport {AppContext} from \"components/providers/appProvider\";\nimport EmptyFolder from \"components/svg/emptyFolder\";\n\nimport {createQueryData} from 'utils/index';\nimport ProjectCard from \"./projectCard\";\n\nconst queryParams = [\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n]\n\n/**\n *this component will show a projects list page\n */\n\nconst ProjectsList = function (props) {\n\n    const mountRef = useRef(false);\n\n    //fetch data\n    const [projectsList, setProjectsList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //bool to control the visualization of input form\n    const [toggleform, setToggleForm] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(props.location.search, queryParams);\n\n\n    //set title when component mounts\n    useEffect(() => {\n        mountRef.current = true;\n\n        appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">PROJECTS</h2> </div>);\n        //I remove any old project name that was previously saved\n        appConsumer.setProjectName(\"\");\n\n        return () => {\n            mountRef.current = false;\n        };\n    },[]); //run on component mount\n\n    useEffect(() => {\n\n        let mnt = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //hide the page\n            setDisplay(false);\n            console.log(queryData);\n            //call the dao\n            const res = await projectsDao.getProjectsList({orderBy: \"date_last_modified\", ...queryData});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setProjectsList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n                //update state\n\n                //I put even first and then odd ones so I can display 2 columns with left-right flow \n                var even_projs = [];\n                even_projs = res.results.filter(function(element, index){ if( index % 2 ) return element;});\n                var odd_projs = [];\n                odd_projs = res.results.filter(function(element, index){ if( !(index % 2) ) return element;});\n\n                setProjectsList(odd_projs.concat(even_projs));\n                setTotalResults(res.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n        };\n\n        fetchData();\n\n        //when the component will unmount or this useEffect will stop\n        return () => {\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count]); //re-execute when these variables change\n\n\n    //handle to delete project\n    async function handleDelete(id){\n\n        console.log(\"deleting \" + id);\n        //call the dao\n        let res = await projectsDao.deleteProject(id);\n\n        //empty string is the response from the dao layer in case of success(rember that empty string is a falsy value)\n        if(mountRef.current && res === \"\"){\n            //create a new array without the project deleted\n            let newProjectsList = projectsList.filter((project)=>project.id !== id);\n            //update project list state\n            setProjectsList(newProjectsList);\n\n            appConsumer.setNotificationMessage(\"Successfully deleted\");\n        }\n        //error checking\n        //if is other error\n        else if (mountRef.current && res && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);  \n        }\n    }\n\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print svg image\n        output = <LoadIcon/>;\n    }\n\n    else {\n\n        output = (\n            <div>\n                <Cover cls={toggleform ? \"full-screen\" : \"\"} handler={setToggleForm}/>\n                {/*print list of projects*/}\n                <PrintList projectsList={projectsList} path={props.match.url} handleDelete={handleDelete}/>\n                {/*set listId and continues value*/}\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={props.match.url}/>\n\n                {/*print the input form to create/update the projects*/}\n                <ProjectForm visibility={toggleform} setVisibility={setToggleForm} history={props.history}/>\n                {/*button to show input form*/}\n                <div className=\"bottom-right-button-holder\">\n                    <button className=\"bottom-right-btn add-project-btn\" type=\"button\" value=\"toggle-insert-form\" \n                    onClick={(e) => {\n                        setToggleForm(!toggleform);\n                    }}>\n                        <div className=\"btn-title\">Add Project</div><div className=\"btn-icon\"> </div>\n                    </button>\n                </div>\n            </div>\n        );\n\n    }\n\n    return output;\n\n\n};\n\n\n/**\n *  internal component only to print the list\n * @param projectsList projects list data\n * @param path current page url\n * @param handleDelete function to delete the project\n * */\nconst PrintList = function ({projectsList, path, handleDelete}) {\n\n    let maps;\n    //if list is empty, print a notice message\n    if (projectsList.length === 0) {\n        maps = (\n            <div className=\"empty-folder-wrapper\"> <EmptyFolder/> <p className=\"empty-folder-description\"> You don't have any projects yet </p></div>\n        );\n    }\n    //if list isn't empty, print list of projects\n    else {\n        maps = (projectsList.map((element, index) =>\n                <div key={element.id} className=\"light-modal project-card\">\n                    <ProjectCard callDelete={handleDelete} path={path} project={element}/>\n                </div>\n        ));\n    }\n\n    let output =  (\n        <div className={(projectsList.length === 0) ? \"project-cards-holder-empty\" : \"project-cards-holder\"}>\n            {maps}\n        </div>\n    );\n\n    return output;\n\n};\n\nexport default ProjectsList;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to search local papers\n * @param queryData\n * @return {array[objects]}\n */\nasync function search(queryData){\n    let url = config.home+config.search;\n\n        const res = await http.get(url, queryData);\n        return res;\n\n}\n\n/**\n * get a specific paper\n */\nasync function selectById(id){\n    let url = config.home + config.papers + \"/\" + id;\n\n    const res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to search similar papers\n * @param bodyData\n * @return {array[objects]}\n */\nasync function searchSimilar(bodyData){\n    let url = config.home+config.search_similar;\n\n    const res = await http.post(url, bodyData);\n\n    \n    return res;\n\n}\n\n/**\n * dao to automated search\n * @param bodyData\n * @return {array[objects]}\n */\nasync function searchAutomated(bodyData){\n    let url = config.home+config.search_automated;\n\n    const res = await http.post(url, bodyData);\n\n    \n    return res;\n\n}\n\nconst paperDao = {\n    search,\n    selectById,\n    searchSimilar,\n    searchAutomated,\n    \"abortRequest\" : http.abortRequest\n}\n\n\n\nexport {paperDao};","import React from \"react\";\n\n/**\n * component svg\n */\nconst SelectTick = function (props) {\n\n    return (\n        <svg id=\"select-tick\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st-tick\" points=\"918,192.3 389.3,807.7 82,450 \" style={{stroke: (props.color) ? props.color : \"\"}}>\n                <animate attributeName=\"points\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\"\n                    from=\"500,600 400,700 200,750\"\n                    to=\"918,192.3 389.3,807.7 82,450 \"\n                />\n            </polyline>\n        </svg>\n    );\n};\n\nexport default SelectTick;\n","import React, {useState, useEffect} from \"react\";\n\nimport SelectTick from 'components/svg/selectTick';\n\nconst CheckBox = function ({ val, name, label, isChecked, handler }) {\n\n    let output = \"\";\n    const [tick, setTick] = useState(<></>);\n    useEffect(() => {\n        if(isChecked){\n            setTick(<SelectTick/>);\n        }else{\n            setTick(<></>)\n        }\n    }, [isChecked])\n\n    \n    output = (\n        <label className=\"checkbox-container\">\n            <input type=\"checkbox\" value={val} name={name} checked={isChecked} onChange={(e) => {handler(e)}} />\n            <span className=\"checkmark\">{tick}</span>\n            <span className=\"name\">{label}</span>\n        </label>\n    );\n    return output;\n}\n\nexport default CheckBox;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to get a list of paper associated with a project\n * @param queryData\n * @return {array[objects]}\n */\nasync function getPapersList(queryData) {\n    let url = config.home + config.papers\n    const res = await http.get(url, queryData);\n    return res;\n\n}\n\n/**\n * dao to get a paper\n * @param paper_id\n * @return {Object} paper requested\n */\nasync function getPaper(paper_id) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.get(url);\n}\n\n/**\n * dao to post a new paper\n * @param bodyData\n * @return {Object} project created\n */\nasync function postPaperIntoProject(bodyData) {\n    let url = config.home + config.papers;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to post a new custom paper\n * @param bodyData\n * @return {Object} project created\n */\nasync function postCustomPaperIntoProject(bodyData) {\n    let url = config.home + config.customPapers;\n    return await http.post(url, bodyData);\n}\n\n\n/**\n * dao to put a old paper\n * @param paper_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putPaper(paper_id, bodyData) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a paper\n * @param paper_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function deletePaper(paper_id) {\n    let url = config.home + config.papers + \"/\" + paper_id;\n    return await http.delete(url);\n}\n\n\nconst projectPapersDao = {\n    getPapersList,\n    getPaper,\n    postPaperIntoProject,\n    postCustomPaperIntoProject,\n    putPaper,\n    deletePaper,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {projectPapersDao};","import React from \"react\";\n\n/**\n * component svg \n */\nconst NoImage = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"no-image\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <g>\n                <path className=\"st5-image-error\" d=\"M276.4,541.4c0-20.6,83.9-32.6,187.4-32.6s187.4,12,187.4,32.6\"/>\n                <path className=\"st1-image-error\" d=\"M339.2,554.9c32.4-5.1,76.5-7.9,125.1-7.9c48.2,0,92,2.7,124.3,7.7\"/>\n                <path className=\"st5-image-error\" d=\"M651.9,560.8v52.8l-0.7,0.1c0,20.6-83.9,31-187.4,31s-187.4-10.5-187.4-31l-0.6-0.1v-52.8\"/>\n                <path className=\"st5-image-error\" d=\"M290.4,643.2l43,257.2l0.4-0.2c0,13.7,56,20.7,125.1,20.7s125.1-7,125.1-20.7l53.5-257.1\"/>\n                <g>\n                    <path className=\"st2-image-error\" d=\"M473.9,527.7c-8-4.4,135.3-110.1,166.8-164.5C560.3,392.4,503.6,455.5,473.9,527.7\"/>\n                    <path className=\"st2-image-error\" d=\"M570.5,245.9C545.3,276,474.1,487.5,464.9,574\"/>\n                </g>\n                <g>\n                    <path className=\"st3-image-error\" d=\"M684.6,229.2c1.7-6.1,2.8-12.3,3.2-18.5l36.3-13.4c-1.4-24-9.6-47.7-24.2-67.6L663.6,143\n                        c-2.1-2.2-4.4-4.4-6.8-6.4c-2.4-2-4.9-3.9-7.4-5.7l6.7-38.5c-22-11.2-46.4-15.3-70-12.5l-6.7,38.5c-6,1.5-11.9,3.6-17.5,6.4\n                        l-29.6-25.2c-9.8,6.5-18.9,14.6-26.8,24.2c-7.9,9.6-14.2,20-18.9,30.9l29.6,25.2c-1.7,6.1-2.8,12.3-3.2,18.5l-36.3,13.4\n                        c1.4,24,9.6,47.7,24.2,67.6l36.4-13.4c2.1,2.2,4.4,4.4,6.8,6.4c2.4,2,4.9,3.9,7.4,5.7l-6.7,38.5c22,11.2,46.4,15.3,70,12.5\n                        l6.7-38.5c6-1.5,11.9-3.6,17.5-6.4l29.6,25.2c9.8-6.5,18.9-14.6,26.8-24.2c7.9-9.6,14.2-20,18.9-30.9L684.6,229.2z\"/>\n                    <ellipse className=\"st4-image-error\" cx=\"600.4\" cy=\"204.5\" rx=\"41.9\" ry=\"42.4\"/>\n                </g>\n                <path className=\"st5-image-error\" d=\"M651.2,541.4c0,20.6-83.9,31-187.4,31s-187.4-10.5-187.4-31\"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default NoImage;","import React from \"react\";\n\n/**\n * component svg \n */\nconst NoProfileImage = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"no-profile-image\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <g>\n                <circle class=\"st0-npi\" cx=\"500\" cy=\"272.4\" r=\"228.4\"/>\n                <path class=\"st0-npi\" d=\"M873,956c37.3,0,66.2-33.3,60.3-70.5C904.9,700.4,764.6,507.5,500,507.5S95,700.2,66.6,885.3\n                    c-5.5,36.9,22.9,70.5,60.3,70.5L873,956L873,956z\"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default NoProfileImage;","import React, {useState, useEffect} from \"react\";\nimport NoImage from \"components/svg/noImage\";\nimport NoProfileImage from \"components/svg/noProfileImage\";\n\n/*\n* image component which deals with fetching error\n* */\nconst Image = function({className, alt, src, style, type}){\n\n    //profile image fetch error\n    const [fetchError, setFetchError] = useState(false);\n\n    useEffect(() => {\n        let mount = true;\n        if(mount && !src){\n            setFetchError(true);\n        }\n        return () => {\n            mount = false;\n        };\n    }, [])\n\n    let img = <></>;\n\n    if(fetchError){\n        if(type === \"profile-pic\"){\n            img = <div className={className} alt=\"error loading image\" style={style}><NoProfileImage/></div>\n        }else{\n            img = <div className={className} alt=\"error loading image\" style={style}><NoImage/></div>\n        }\n    }else{\n        img = <img className={className} alt={alt} title={alt} src={src} onError={() => {setFetchError(true)}} style={style}/>\n    }\n\n    return img;\n\n};\n\nexport  default  Image;","import React from \"react\";\n\n/**\n * component svg \n */\nconst NoPapers = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"no-papers\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <line className=\"st0-no-papers\" x1=\"790\" y1=\"223.1\" x2=\"790\" y2=\"255.6\"/>\n            <line className=\"st1-no-papers\" x1=\"790\" y1=\"357.8\" x2=\"790\" y2=\"801.3\"/>\n            <polyline className=\"st0-no-papers\" points=\"790,852.4 790,884.9 757.5,884.9 \t\t\"/>\n            <line className=\"st2-no-papers\" x1=\"635.6\" y1=\"884.9\" x2=\"303.4\" y2=\"884.9\"/>\n            <polyline className=\"st0-no-papers\" points=\"242.5,884.9 210,884.9 210,852.4 \t\t\"/>\n            <line className=\"st3-no-papers\" x1=\"210\" y1=\"757.8\" x2=\"210\" y2=\"194.9\"/>\n            <polyline className=\"st0-no-papers\" points=\"210,147.6 210,115.1 242.5,115.1 \t\t\"/>\n            <polyline className=\"st4-no-papers\" points=\"338.4,115.1 682,115.1 733.1,166.2 \t\t\"/>\n            <polyline className=\"st0-no-papers\" points=\"767,200.1 790,223.1 757.5,223.1 \t\t\"/>\n            <polyline className=\"st0-no-papers\" points=\"714.5,223.1 682,223.1 682,190.6 \t\t\"/>\n            <line className=\"st0-no-papers\" x1=\"682\" y1=\"147.6\" x2=\"682\" y2=\"115.1\"/>\n        </svg>\n    );\n};\n\nexport default NoPapers;","import React from \"react\";\n\n/**\n * component svg\n */\nconst InfoIcon = function (props) {\n    return(\n        <svg version=\"1.1\" id=\"info\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <line className=\"st0-info\" x1=\"500\" y1=\"369\" x2=\"500\" y2=\"817\"/>\n            <circle className=\"st1-info\" cx=\"500\" cy=\"198\" r=\"48\"/>\n        </svg>\n    );\n}\n\nexport default InfoIcon;","import React from \"react\";\nimport InfoIcon from \"components/svg/infoIcon\";\n\n\nconst InfoTooltip = function ({className, children}) {\n\n    return (\n        <div className={(className) ? \"top-right-anchor \" + className : \"top-right-anchor\"}>\n            <div className=\"information-holder\">\n                <div className=\"info-button-icon\"><InfoIcon/></div>\n                <div className={(className) ? \"information-content-wrapper \" + className : \"information-content-wrapper\"}>\n                    <div className=\"information-content\">\n                        {children}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\nexport default InfoTooltip;","import React, {useEffect, useState} from \"react\";\nimport InfoTooltip from \"components/modules/infoTooltip\";\n\n\nconst PaperConfidence = function ({filtersList, confidence}) {\n\n    const [localConfidenceArray, setLocalConfidenceArray] = useState([]);\n\n    useEffect(() => {\n        let mnt = true;\n\n        //I combine two arrays in an array of pairs: from [a,b,c] and [1,2,3] to [{a,1}, {b,2}, {c,3}]\n        function pairCoupleArray(confArray,filterArray){\n            let pairArray = [];\n            let min_length = (confArray.length < filterArray.length) ? confArray.length : filterArray.length;\n            for(let i = 0; i < min_length; i++){\n                //in case the 2 array filters are in the same order\n                if(confArray[i].id === filterArray[i].id){\n                    pairArray.push({\"label\" : filterArray[i].data.name, \"tooltip\" : filterArray[i].data.predicate, \"value\" : confArray[i].filterValue});\n                }\n                //otherwise I need to search for the correct pair\n                else{\n                    let correctFilter = filterArray.find(filter => filter.id === confArray[i].id);\n                    if(correctFilter && correctFilter.data){\n                        pairArray.push({\"label\" : correctFilter.data.name, \"tooltip\" : correctFilter.data.predicate, \"value\" : confArray[i].filterValue});\n                    }\n                }\n            }\n            return pairArray;\n        }\n\n        console.log(confidence);\n\n        if(filtersList.length !== 0 && confidence !== undefined){\n            setLocalConfidenceArray(pairCoupleArray(confidence.filters, filtersList));\n        }\n\n        return () => {\n            mnt = false;\n        };\n    }, [])\n\n    \n\n    let output = <p>add filters in order to check partial confidence of each filter</p>;\n\n    if(localConfidenceArray.length !== 0){\n        output = (\n            <>\n                {localConfidenceArray.map((element, index) => \n                    <p key={index} title={element.tooltip}>\n                        <span>{element.label}</span> <span className=\"side-detail\">{(element.value) ? element.value.toFixed(2) : \"−.−−\"}</span>\n                    </p>\n                )}\n            </>\n        );\n    }else{\n        output = (<>This paper has not received any confidence score yet</>);\n    }\n\n    return (\n        <div className=\"side-info-wrapper\">\n        <div className=\"side-info\">\n                <div className=\"confidence\">\n                    {(confidence) ? parseFloat(confidence.value).toFixed(2) : \"−.−−\"}\n                </div>\n                <InfoTooltip className={\"filters-confidence\"}>\n                    {output}\n                </InfoTooltip>\n                \n            </div>\n        </div>\n    );\n\n};\n\nexport default PaperConfidence;","import React, {useState} from \"react\";\nimport ClampLines from 'react-clamp-lines';\nimport {Link} from 'react-router-dom';\n\nimport SideOptions from 'components/modules/sideOptions';\n\nconst ProjectPaperCard = function({callOptions, paper}){\n    const [disabled, setDisabled] = useState(false);\n\n    //side options\n    let sideOptions= [\"delete\", \"search similar\"];\n\n    //handle for the side options\n    function handleSideOptions(id, name, data){\n        if(name === \"delete\"){\n            setDisabled(true);\n        }\n        callOptions(id, name, data);\n    }\n\n    return(\n        <div className={(disabled) ? \"disabled\" : \"\"}>\n            <SideOptions options={sideOptions} handler={handleSideOptions} target={paper.id} data={paper.data} cls=\"card-options\"/>\n            <Link to={\"#\"}><h3>{(paper.data.title) ? paper.data.title : \"[MISSING TITLE]\"}</h3></Link>\n            <div className=\"extra-info\">\n                <p className=\"authors\">{(paper.data.authors) ? paper.data.authors : \"[MISSING AUTHORS]\"}</p>\n                <p className=\"eid\">{(paper.data.eid) ? paper.data.eid : \"[MISSING EID]\"}</p>\n                <p className=\"date\">{(paper.data.year) ? paper.data.year : \"[MISSING YEAR]\"}</p>\n            </div>\n            <ClampLines\n                text={(paper.data.abstract) ? paper.data.abstract : \"[MISSING ABSTRACT]\"}\n                lines={4}\n                ellipsis=\"...\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    )\n}\n\nexport default ProjectPaperCard;","import React, {useContext, useState, useEffect, useRef} from \"react\";\nimport ClampLines from 'react-clamp-lines';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport CheckBox from \"components/forms_elements/checkbox\";\nimport SideOptions from 'components/modules/sideOptions';\nimport {projectPapersDao} from 'dao/projectPapers.dao';\nimport {AppContext} from 'components/providers/appProvider'\nimport Image from 'components/modules/image';\nimport NoPapers from \"components/svg/noPapers\";\n\nimport {join} from 'utils/index';\nimport PaperConfidence from \"components/projects_page/search_tab/search_automated/paperConfidence\";\nimport ProjectPaperCard from \"components/projects_page/papers_tab/projectPaperCard\";\n/**\n * prints the papers list of a local search on the fake database\n */\n/*\nconst PrintLocalSearchList = function ({papersList, handlePaperSelection}) {\n\n    let output = papersList.map((element, index) =>\n        <div key={element.id} className=\"paper-card\">\n            <CheckBox name={\"\"} label={\"\"} val={element.eid}  handler={handlePaperSelection}/>\n            <Link to={\"#\"}><h3>{element.data && element.data.title}</h3></Link>\n            <ClampLines\n                text={element.data && element.data.abstract}\n                lines={4}\n                ellipsis=\"...\"\n                moreText=\"Expand\"\n                lessText=\"Collapse\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    );\n    return output;\n\n};\n*/\n\n/**\n * prints the results of a search on scopus\n */\nconst PrintScoupusSearchList_w = function ({papersList, handlePaperSelection, selectedEidList, history, match, setTargetPaperData}) {\n\n    //side options\n    let sideOptions= [\"search similar\"];\n\n    //handle for the side options\n    async function handleSideOptions(id, name, data){\n        if(name === \"search similar\"){\n            console.log(\"here you want to search for a similar paper\");\n            console.log(data);\n\n            //I extract the path to check if I'm on /search or /searchsimilar\n            let path = (match.path[match.path.length - 1] === \"/\") ? match.path.substring(0, match.path.length - 1) : match.path;\n            let goSimilar = path;\n            if(path[path.length - 1] === \"h\"){\n                goSimilar = path + \"similar\";\n                //I set the paper in the storage before switching page\n                const storage = window.localStorage;\n                storage.setItem(\"targetPaperData\", JSON.stringify(data));\n                history.push(goSimilar);\n            }else{\n                setTargetPaperData(data);\n            }\n\n        }\n    }\n\n    let output = papersList.map((element, index) =>\n        <div key={index} className=\"generic-card paper-card\">\n            <CheckBox name={element.title} label={\"\"} val={element.eid}  isChecked ={selectedEidList.includes(element.eid)} handler={handlePaperSelection}/>\n            <SideOptions options={sideOptions} handler={handleSideOptions} target={element.id} data={element} cls=\"card-options\"/>\n            <Link to={\"#\"}><h3>{(element.title) ? element.title : \"[MISSING TITLE]\"}</h3></Link>\n            <div className=\"extra-info\">\n                <p className=\"authors\">{(element.authors) ? element.authors : \"[MISSING AUTHORS]\"}</p>\n                <p className=\"eid\">{(element.eid) ? element.eid : \"[MISSING EID]\"}</p>\n                <p className=\"date\">{(element.year) ? element.year : \"[MISSING YEAR]\"}</p>\n            </div>\n            <ClampLines\n                text={(element.abstract) ? element.abstract : \"[MISSING ABSTRACT]\"}\n                lines={4}\n                ellipsis=\"...\"\n                className=\"paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n        </div>\n    );\n    return output;\n\n};\n\n/**\n * prints a list of papers and handles their removal from the project\n */\n\nconst PrintPapersList_w = function ({papersList, location, history}) {\n\n    const mountRef = useRef(false);\n\n    const [localPaperList, setLocalPaperList] = useState(papersList);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //side options\n    let sideOptions= [\"delete\", \"search similar\"];\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //handle for the side options\n    async function handleSideOptions(id, name, data){\n        if(name === \"delete\"){\n            console.log(\"deleting \" + id);\n            //call the dao\n            let res = await projectPapersDao.deletePaper(id);\n            //error checking\n            //if is other error\n            if (mountRef.current && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if res isn't null\n            else if (mountRef.current && res !== null) {\n\n                appConsumer.setNotificationMessage(\"Successfully deleted\");\n                let newPapersList = localPaperList.filter((paper)=>paper.id !== id);\n                setLocalPaperList(newPapersList);\n            }\n        }else if(name === \"search similar\"){\n            console.log(\"here you want to search for a similar paper\");\n            console.log(location);\n\n            const storage = window.localStorage;\n            storage.setItem(\"targetPaperData\", JSON.stringify(data));\n            history.push(join(location.pathname, \"/searchsimilar\"));\n        }\n    }\n\n    let output;\n    //if list is empty, print a notice message\n    if (localPaperList.length === 0) {\n        output = (\n            <div className=\"empty-list-wrapper\"> <NoPapers/> <p className=\"empty-list-description\"> There are no papers here, you can add new ones by searching </p></div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else {\n        output = (\n            localPaperList.map((element) =>\n                <div key={element.id} className=\"generic-card paper-card\">\n                    <ProjectPaperCard callOptions={handleSideOptions} paper={element}/>\n                </div>\n            )\n        );\n    }\n    return output;\n\n\n};\n\n/**\n * prints a list of screened papers\n */\n\nconst PrintScreenedPapersList_w = function ({papersList}) {\n    \n    let output;\n    //if list is empty, print a notice message\n    if (papersList.length === 0) {\n        output = (\n            <div className=\"empty-list-wrapper\"> <NoPapers/> <p className=\"empty-list-description\"> No papers  have been screened yet</p></div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else {\n        output = (\n            papersList.map((element) =>\n                <div key={element.id} className=\"generic-card paper-card screened\">\n                    <Link to={\"#\"}><h3>{(element.data.title) ? element.data.title : \"[MISSING TITLE]\"}</h3></Link>\n                    <div className=\"screened-label\" \n                        title={(element.data.metadata.automatedScreening) ? element.data.metadata.automatedScreening.value : undefined}>\n                        <div className=\"type\">\n                            {(element.data.metadata.screening.source === \"automated screening\") ? \"Auto\" : \n                              (element.data.metadata.screening.source === \"manual screening\") ? \"Manual\" : \"Crowd\"}\n                        </div>\n                        <div className=\"in-out\">\n                            {(parseInt(element.data.metadata.screening.result) === 1) ? \"IN\" : \"OUT\"}\n                        </div>\n                    </div>\n                    <div className=\"extra-info\">\n                        <p className=\"authors\">{(element.data.authors) ? element.data.authors : \"[MISSING AUTHORS]\"}</p>\n                        <p className=\"eid\">{(element.data.eid) ? element.data.eid : \"[MISSING EID]\"}</p>\n                        <p className=\"date\">{(element.data.year) ? element.data.year : \"[MISSING YEAR]\"}</p>\n                    </div>\n                    <ClampLines\n                        text={(element.data.abstract) ? element.data.abstract : \"[MISSING ABSTRACT]\"}\n                        lines={4}\n                        ellipsis=\"...\"\n                        className=\"paragraph\"\n                        moreText=\"more\"\n                        lessText=\"less\"\n                    />\n                    <div className=\"users-votes\">\n                        <div className=\"votes\">\n                            {element.data.metadata.votes.filter(v => v.answer === \"1\").map((elementx, index) => (\n                                <Image key={index} className=\"user-vote-image in-vote\" alt={elementx.user.name + \" voted: in\"} src={elementx.user.picture}/>\n                            ))}\n                        </div>\n                        <div className=\"votes\">\n                            {element.data.metadata.votes.filter(v => v.answer === \"0\").map((elementx, index) => (\n                                <Image key={index} className=\"user-vote-image out-vote\" alt={elementx.user.name + \" voted: out\"} src={elementx.user.picture}/>\n                            ))}\n                        </div>\n                        <div className=\"votes\">\n                            {element.data.metadata.votes.filter(v => v.answer === \"2\").map((elementx, index) => (\n                                <Image key={index} className=\"user-vote-image und-vote\" alt={elementx.user.name + \" is undecided\"} src={elementx.user.picture}/>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            )\n        );\n    }\n    return output;\n\n\n};\n\n/**\n * prints a list of partially manual screened paper\n */\n\nconst PrintManuallyScreenedPapersList_w = function ({papersList}) {\n    let output;\n    //if list is empty, print a notice message\n    if (papersList.length === 0) {\n        output = (\n            <div className=\"empty-list-wrapper\"> <NoPapers/> <p className=\"empty-list-description\"> No papers have been manually screened yet</p></div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else {\n        output = (\n            papersList.map((element) => {\n                return(\n                    <div key={element.id} className=\"generic-card paper-card manual\">\n                        <Link to={\"#\"}><h3>{(element.data.title) ? element.data.title : \"[MISSING TITLE]\"}</h3></Link>\n                        <div className=\"extra-info\">\n                            <p className=\"authors\">{(element.data.authors) ? element.data.authors : \"[MISSING AUTHORS]\"}</p>\n                            <p className=\"eid\">{(element.data.eid) ? element.data.eid : \"[MISSING EID]\"}</p>\n                            <p className=\"date\">{(element.data.year) ? element.data.year : \"[MISSING YEAR]\"}</p>\n                        </div>\n                        <ClampLines\n                            text={(element.data.abstract) ? element.data.abstract : \"[MISSING ABSTRACT]\"}\n                            lines={4}\n                            ellipsis=\"...\"\n                            className=\"paragraph\"\n                            moreText=\"more\"\n                            lessText=\"less\"\n                        />\n                        <div className=\"users-votes\">\n                            <div className=\"votes\">\n                                {element.data.metadata.votes.filter(v => v.answer === \"1\").map((elementx, index) => (\n                                    <Image key={index} className=\"user-vote-image in-vote\" alt={elementx.user.name + \" voted: in\"} src={elementx.user.picture}/>\n                                ))}\n                            </div>\n                            <div className=\"votes\">\n                                {element.data.metadata.votes.filter(v => v.answer === \"0\").map((elementx, index) => (\n                                    <Image key={index} className=\"user-vote-image out-vote\" alt={elementx.user.name + \" voted: out\"} src={elementx.user.picture}/>\n                                ))}\n                            </div>\n                            <div className=\"votes\">\n                                {element.data.metadata.votes.filter(v => v.answer === \"2\").map((elementx, index) => (\n                                    <Image key={index} className=\"user-vote-image und-vote\" alt={elementx.user.name + \" is undecided\"} src={elementx.user.picture}/>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                );\n            })\n        );\n    }\n    return output;\n\n\n};\n\nconst PrintSearchAutomatedList_w = function ({papersList, filtersList, handlePaperSelection, selectedEidList}) {\n\n    let output = \"\";\n    //if list is empty, print a notice message\n    if (papersList.length === 0) {\n        output = (\n            <div className=\"empty-list-wrapper\"> <NoPapers/> <p className=\"empty-list-description\"> There are no papers here</p></div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else {\n        output = papersList.map((element, index) =>\n            <div key={index} className=\"generic-card paper-card\">\n                <CheckBox name={element.title} label={\"\"} val={element.eid}  isChecked ={selectedEidList.includes(element.eid)} handler={handlePaperSelection}/>\n                <PaperConfidence filtersList={filtersList}\n                    confidence={element.metadata.automatedSearch}/>\n                <Link to={\"#\"}><h3 className=\"auto-paper-title\">{element.title}</h3></Link>\n                <div className=\"extra-info\">\n                    <p className=\"authors\">{element.authors}</p>\n                    <p className=\"eid\">{element.eid}</p>\n                    <p className=\"date\">{element.year}</p>\n                </div>\n                <ClampLines\n                    text={element.abstract}\n                    lines={4}\n                    ellipsis=\"...\"\n                    className=\"paragraph\"\n                    moreText=\"more\"\n                    lessText=\"less\"\n                />\n            </div>\n        );\n    }\n    return output;\n\n};\n\nconst PrintBacklogPapersList_w = function ({papersList, filtersList}) {\n\n    let output = \"\";\n    //if list is empty, print a notice message\n    if (papersList.length === 0) {\n        output = (\n            <div className=\"empty-list-wrapper\"> <NoPapers/> <p className=\"empty-list-description\"> There are no papers here</p></div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else {\n        output = papersList.map((element, index) =>\n            <div key={index} className=\"generic-card paper-card\">\n                <PaperConfidence filtersList={filtersList}\n                    confidence={element.data.metadata && element.data.metadata.automatedScreening}/>\n                <Link to={\"#\"}><h3 className=\"auto-paper-title\">{element.data.title}</h3></Link>\n                <div className=\"extra-info\">\n                    <p className=\"authors\">{element.data.authors}</p>\n                    <p className=\"eid\">{element.data.eid}</p>\n                    <p className=\"date\">{element.data.year}</p>\n                </div>\n                <ClampLines\n                    text={element.data.abstract}\n                    lines={4}\n                    ellipsis=\"...\"\n                    className=\"paragraph\"\n                    moreText=\"more\"\n                    lessText=\"less\"\n                />\n            </div>\n        );\n    }\n    return output;\n\n};\n\nexport const PrintPapersList = PrintPapersList_w;\nexport const PrintScreenedPapersList = PrintScreenedPapersList_w;\nexport const PrintManuallyScreenedPapersList = PrintManuallyScreenedPapersList_w;\nexport const PrintScoupusSearchList = withRouter(PrintScoupusSearchList_w);\nexport const PrintSearchAutomatedList = withRouter(PrintSearchAutomatedList_w);\nexport const PrintBacklogPapersList = PrintBacklogPapersList_w;","import React from \"react\";\n\n/**\n * component svg select arrow\n * 'focused' is a flag used for displaying a different shape\n */\nconst SelectArrow= function ({focused, code}) {\n    var from=\"\";\n    var to=\"\";\n    //I check if the upper component is focused and then I animate\n    if(focused){\n        from=\"90,295.5 500,704.5 910,295.5 \";\n        to=\"90,704.5 500,295.5 910,704.5 \";;\n    }else{\n        from=\"90,704.5 500,295.5 910,704.5 \";;\n        to=\"90,295.5 500,704.5 910,295.5 \";\n    }\n    return (\n    <svg version=\"1.1\" id=\"arrow-select\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n        viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st-arrow-select\" points={from}>\n            <animate attributeType=\"XML\" id={(isNaN(code)) ? \"ani-select-arrow\" : \"ani-select-arrow\" + code} attributeName=\"points\" from={from} to={to} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n            </polyline>\n        </svg>\n    );\n};\n\nexport default SelectArrow;\n\n","import React, {useState} from \"react\";\nimport SelectArrow from 'components/svg/selectArrow';\n\n\n/**\n * this component acts as an html <select>\n * it needs an array of options, the index of the selected one and the hadler to change the status of the upper component calling this one\n */\nconst Select = ({ options, selected, handler, type, code }) => {\n    \n    //this is useful for the animation\n    const [focused, setFocused] = useState(false);\n\n\n    function handleFocus(type){\n        //handle arrow animation and focus of menu\n        if(type === \"click\"){\n            document.getElementById((isNaN(code)) ? \"ani-select-arrow\" : \"ani-select-arrow\" + code).beginElement();//trigger svg animation\n            setFocused(!focused);\n        }else if(focused){\n            document.getElementById((isNaN(code)) ? \"ani-select-arrow\" : \"ani-select-arrow\" + code).beginElement();//trigger svg animation\n            setFocused(false);\n        }\n    }\n\n    var output = (\n        <div className={(type) ? \"custom-select \" + type: \"custom-select\"}>\n            <div className=\"selected\" tabIndex={-2} onBlur={() => {handleFocus(\"blur\")}} onClick={() => {handleFocus(\"click\")}}>{(options[selected]) ? options[selected].label : \"[!]\"} <div className=\"arrow\">\n                <SelectArrow focused={focused} code={code}/>\n            </div></div>\n            <div className=\"options-holder\" style={{fontSize: (!focused) ? '0px' : '15px', borderBottom: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderLeft: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderRight: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderTop:\"none\"}}>\n                {options.map((element, index) => (\n                <div key={index} data-value={index} className=\"option\" style={{padding: (!focused) ? '0px' : '2px' }} onMouseDown={handler}>\n                    {element.label}\n                </div>))}\n            </div>\n        </div>\n    );\n    return output;\n}\n\nexport default Select;","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst RemoveButton = function (props) {\n\n    return (\n        <svg id=\"remove-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <line className=\"rb\" x1=\"134\" y1=\"866\" x2=\"866\" y2=\"134\"/>\n        <line className=\"rb\" x1=\"134\" y1=\"134\" x2=\"866\" y2=\"866\"/>\n        </svg>\n    );\n};\n\nexport default RemoveButton;\n","import React, {useEffect, useContext, useState} from \"react\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao';\n\nimport RemoveButton from 'components/svg/removeButton';\nimport InfoTooltip from \"components/modules/infoTooltip\";\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n\n/**\n * component to print the box of list of selected paper\n */\nconst SelectedPapersListBox = function ({project_id, selectedPapersList, setSelectedPapersList, handlePaperSelection, mounted}){\n\n    //get the localStorage object (used for saving selected papers)\n    const storage = window.localStorage;\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        //if exists already this attribute in the local storage\n        if (storage.getItem(\"selectedPapersList\")) {\n            setSelectedPapersList(JSON.parse(storage.getItem(\"selectedPapersList\")));\n        } \n\n    }, [])\n\n    /*function to post selected papers in the project*/\n    async function handleAddPapers(event) {\n\n        let papersToAdd = selectedPapersList;\n        //empties the state\n        setSelectedPapersList([]);\n        //update the storage\n        storage.removeItem(\"selectedPapersList\");\n\n        //create a eidList from the list of selected paper\n        let arrayEid = papersToAdd.map(element => element.eid);\n\n        console.log(\"ADDING\");\n        console.log(arrayEid);\n\n        //call dao\n        let res = await projectPapersDao.postPaperIntoProject({\n            \"arrayEid\": arrayEid, \"project_id\": project_id\n        });\n\n        //if there is the error\n        if (mounted.current && res && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);\n            return null;\n        }\n\n        if(mounted.current){\n            //empties the state\n            setSelectedPapersList([]);\n\n            //update the storage\n            storage.removeItem(\"selectedPapersList\");\n\n            appConsumer.setNotificationMessage(\"Insert completed\");\n        }\n\n    }\n\n    let output = \"\";\n    output = (\n        <div className=\"selected-papers-list\" style={{opacity: (selectedPapersList.length>0) ? \"1.0\" : \"0.0\", pointerEvents: (selectedPapersList.length>0) ? \"auto\" : \"none\"}}>\n            <InfoTooltip className={\"selected-papers\"}>\n                <p>this box contains the complete list of papers you currently selected in this browser</p>\n            </InfoTooltip>\n            <h3>\n                SELECTED PAPERS <br/><span>(total : {selectedPapersList.length})</span>\n            </h3>\n            <div className=\"submission-wrapper\">\n                <div className=\"papers-wrapper\" style={{border: (selectedPapersList.length>0) ? \"\" : \"0px\"}}>\n                    <div className=\"papers-flex\" style={{padding: (selectedPapersList.length>0) ? \"\" : \"0px\"}}>\n                        {selectedPapersList.map((element, index) =>\n                            <p key={index}>\n                                <span>{element.title}</span> \n                                <button type=\"button\" className=\"remove-btn\" name={element.title} value={element.eid} //name and value don't work on the button event for some reasons\n                                    onClick={(e) => {handlePaperSelection({target: {name: element.title, value:element.eid}})}}>\n                                    <RemoveButton/>\n                                </button>\n                            </p>\n                        )}\n                    </div>\n                </div>\n                <button style={{border: (selectedPapersList.length>0) ? \"\" : \"0px\", margin: (selectedPapersList.length>0) ? \"\" : \"0px\", height: (selectedPapersList.length>0) ? \"\" : \"0px\", pointerEvents: (selectedPapersList.length>0) ? \"auto\" : \"none\"}} \n                    className=\"ti-btn add-resultpaper-btn\" type=\"button\" value=\"Submit\" onClick={handleAddPapers}>\n                    <div className=\"btn-title\">Add Selected Paper</div><div className=\"btn-icon\"> </div>\n                </button>\n            </div>\n        </div>\n    );\n\n    return output;\n\n};\n\n\nexport default SelectedPapersListBox;","import React, {useState, useEffect} from \"react\";\n\n/**\n * component svg order arrow button\n@param {string} up [ASC or DESC]\n */\nconst OrderArrow= function ({up}) {\n\n    let output = \"\";\n\n    let from=\"\";\n    let to=\"\";\n\n    //I check where the arrow should point to(up or down) checking the 'up' flag passed by the parent component\n    if(up ===\"ASC\"){\n        from=\"371.7,293 500,165 628.3,293 \";\n        to=\"371.7,491.9 500,619.9 628.3,491.9 \";\n    }else{\n        from=\"371.7,491.9 500,619.9 628.3,491.9 \";\n        to=\"371.7,293 500,165 628.3,293 \";\n    }\n\n    const [destination, setDestination] = useState(to);\n\n    useEffect(() => {\n      setDestination(to);\n    }, [to])\n\n    output = (\n        <svg version=\"1.1\" id=\"order-arrow\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n        viewBox=\"0 0 1000 1000\" >\n            <polyline className=\"st-order-arrow-head\" points=\"371.7,293 500,165 628.3,293 \" transform=\"matrix(1.5303008,0,0,1.5303008,-279.47582,-105.57059)\">\n                <animate attributeType=\"XML\" id=\"ani-order-arrow\" attributeName=\"points\" from={from} to={destination} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n            </polyline>\n            <line className=\"st-order-arrow\" x1=\"485.67453\" y1=\"145.09268\" x2=\"485.67453\" y2=\"827.75989\"/>\n        </svg>\n    );\n    \n    return output;\n};\n\nexport default OrderArrow;","import React from \"react\";\n\n/**\n * component svg \n */\nconst NoSearchResults = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"no-results\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <circle className=\"st0-no-results\" cx=\"585.3\" cy=\"419.7\" r=\"271.7\"/>\n            <line className=\"st3-no-results\" x1=\"111.2\" y1=\"894\" x2=\"393.2\" y2=\"611.8\"/>\n            <path className=\"st1-no-results\" d=\"M460.6,533c83.1-20,166.2-20,249.4,0\"/>\n            <line className=\"st2-no-results\" x1=\"683.8\" y1=\"329\" x2=\"683.8\" y2=\"337\"/>\n            <line className=\"st2-no-results\" x1=\"512.8\" y1=\"329\" x2=\"512.8\" y2=\"337\"/>\n        </svg>\n    );\n};\n\nexport default NoSearchResults;","import React from \"react\";\n\n/**\n * component svg close-btn\n */\nconst RadioTick = function (props) {\n\n    return (\n        <svg id=\"radio-tick\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t        viewBox=\"0 0 1000 1000\">\n            <circle className=\"st-circle\" cx=\"500\" cy=\"500\" r=\"375\">\n                <animate attributeName=\"r\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\"\n                                from=\"0\"\n                                to=\"375\"\n                />\n            </circle>\n        </svg>\n    );\n};\n\nexport default RadioTick;\n","import React, {useState, useEffect} from \"react\";\n\nimport RadioTick from 'components/svg/radioTick';\n\nconst RadioBox = function ({ label, name, val, isChecked , handler}) {\n\n    let output = \"\";\n    const [tick, setTick] = useState(<></>);\n    useEffect(() => {\n        if(isChecked){\n            setTick(<RadioTick/>);\n        }else{\n            setTick(<></>)\n        }\n    }, [isChecked])\n\n    output= (\n        <label className=\"radiobox-container\">\n        <input type=\"radio\" value={val} name={name} checked={isChecked} onChange={handler}/>\n        <span className=\"radiomark\">{tick}</span>\n        <span>{label}</span>\n        </label>\n    );\n    return output;\n}\n\nexport default RadioBox;","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst SearchButton = function (props) {\n\n    return (\n        <svg id=\"search-icon\" xmlns=\"http://www.w3.org/2000/svg\"\n             xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M626.9,644.3c-73.5,0-142.6-28.6-194.6-80.6s-80.6-121.1-80.6-194.6s28.6-142.6,80.6-194.6\n                c52-52,121.1-80.6,194.6-80.6c73.5,0,142.6,28.6,194.6,80.6c52,52,80.6,121.1,80.6,194.6s-28.6,142.6-80.6,194.6\n                S700.4,644.3,626.9,644.3z\"/>\n            <line className=\"st1\" x1=\"145.2\" y1=\"850.8\" x2=\"431.7\" y2=\"564.3\"/>\n        </svg>\n    );\n};\n\nexport default SearchButton;\n","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst SearchSimilarButton = function (props) {\n\n    return (\n        <svg id=\"similar-paper-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" \n            xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st0-sps\" points=\"795.8,214 734.8,214 736.8,146 \t\t\"/>\n            <polyline className=\"st0-sps\" points=\"842.8,214 842.8,875.8 262.8,875.8 262.8,106 734.8,106 \t\t\"/>\n            <line className=\"st0-sps\" x1=\"842.8\" y1=\"214\" x2=\"734.8\" y2=\"106\"/>\n            <line className=\"st1-sps\" x1=\"350.8\" y1=\"198.9\" x2=\"644.8\" y2=\"198.9\"/>\n            <line className=\"st2-sps\" x1=\"346.8\" y1=\"385.4\" x2=\"752.8\" y2=\"385.4\"/>\n            <line className=\"st2-sps\" x1=\"544\" y1=\"485.9\" x2=\"752.8\" y2=\"485.9\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"485.9\" x2=\"544\" y2=\"485.9\"/>\n            <line className=\"st2-sps\" x1=\"575.9\" y1=\"586.4\" x2=\"752.8\" y2=\"586.4\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"586.4\" x2=\"575.9\" y2=\"586.4\"/>\n            <line className=\"st2-sps\" x1=\"555.5\" y1=\"686.9\" x2=\"752.8\" y2=\"686.9\"/>\n            <line className=\"st3-sps\" x1=\"346.8\" y1=\"686.9\" x2=\"555.5\" y2=\"686.9\"/>\n            <circle className=\"st4-sps\" cx=\"410.8\" cy=\"594.3\" r=\"171.7\"/>\n            <line className=\"st4-sps\" x1=\"111.2\" y1=\"894\" x2=\"289.4\" y2=\"715.7\"/>\n        </svg>\n        \n    );\n};\n\nexport default SearchSimilarButton;\n","import React, {useState, useEffect, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\nimport { Range } from 'react-range';\n\nimport RadioBox from \"components/forms_elements/radiobox\";\n\nimport SearchButton from 'components/svg/searchButton';\nimport SearchSimilarButton from 'components/svg/searchSimilarButton';\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject} from 'utils/index';\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//search by  options\nconst searchByOptions = [\n    {label: 'all', value: 'all'},\n    {label: 'author', value: 'author'},\n    {label: 'content', value: 'content'},\n    {label: 'adv. query', value: 'advanced'}\n];\n\n//year options\nconst startYear = 2017;\nconst endYear = new Date().getFullYear() + 2;\n//create a int array from startYear to endYear, then convert it to string array, after this concatenate with \"all\"\nconst yearOptions = [\"all\", ...(_.range(startYear, endYear).map(String))];\n\n/**\n * standard search form component\n */\nconst SearchStandardForm = function ({history, queryData, project_id}){\n\n    //state for search form\n    const [keywords, setKeyWords] = useState(queryData.query);\n    const [source, setSource] = useState({\"scopus\": queryData.scopus, \"googleScholar\": queryData.googleScholar, \"arXiv\": queryData.arXiv});\n    const [searchBy, setSearchBy] = useState(queryData.searchBy);\n    const [year, setYear] = useState(queryData.year);\n\n    //state for year slider (not currently used)\n    const [values, setValues] = useState([1900, endYear]);\n\n    //I update the state every time the query data changes\n    useEffect(() => {\n        console.log(\"query data change effect\");\n        //we can't allow multiple sources yet\n        if((queryData.scopus && queryData.arXiv && queryData.googleScholar) || !(queryData.scopus ^ queryData.arXiv ^ queryData.googleScholar)){\n            queryData.arXiv = false;\n            queryData.scopus = true;\n            queryData.googleScholar = false;\n        }\n        setSource({\"scopus\": queryData.scopus, \"googleScholar\": queryData.googleScholar, \"arXiv\": queryData.arXiv});\n        setSearchBy(queryData.searchBy);\n        setYear(queryData.year);\n    }, [queryData])\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    /**\n     *handle to update hook state by input change\n     */\n    function handleOnInputChange(event) {\n\n        let newSource;\n\n        switch (event.target.name) {\n            case \"query\":\n                setKeyWords(event.target.value);\n                break;\n            case \"scopus\":\n                //switch between true and false\n                queryData.scopus = true;\n                queryData.googleScholar = false;\n                queryData.arXiv = false;\n                break;\n\n            case \"googleScholar\":\n                //switch between true and false\n                queryData.scopus = false;\n                queryData.googleScholar = true;\n                queryData.arXiv = false;\n                break;\n            case \"arXiv\":\n                //switch between true and false\n                queryData.scopus = false;\n                queryData.googleScholar = false;\n                queryData.arXiv = true;\n                break;\n            case \"searchBy\":\n                queryData.searchBy = event.target.value;\n                break;\n            case \"year\":\n                queryData.year = event.target.value;\n                break;\n            default:\n                break;\n        }\n        \n        if(event.target.name !== \"query\" && queryData.query && keywords){\n            queryData.query = keywords;\n            history.push(createQueryStringFromObject(queryData));\n        }else{\n            setSource({\"scopus\": queryData.scopus, \"googleScholar\": queryData.googleScholar, \"arXiv\": queryData.arXiv});\n            setSearchBy(queryData.searchBy);\n            setYear(queryData.year);\n        }\n\n    }\n\n    /*function to send the query*/\n    async function handleSendSearch(event) {\n\n        event.preventDefault();\n\n        //if query input is empty\n        if (keywords === \"\") {\n            appConsumer.setNotificationMessage(\"Search string is empty\")\n        }\n        else {\n            //synchronize the query data from react state hooks\n            queryData.query = keywords;\n            queryData.scopus = source.scopus;\n            queryData.googleScholar = source.googleScholar;\n            queryData.arXiv = source.arXiv;\n            queryData.searchBy = searchBy;\n            queryData.year = year;\n\n            //send query url\n            let queryString = createQueryStringFromObject(queryData);\n            //launch to search\n            history.push(queryString);\n\n        }\n\n    }\n\n    return (\n        <>\n            <form className={(queryData.query === \"\") ? 'search-form' : 'search-form small'}\n                  onSubmit={handleSendSearch}>\n                {/*search form*/}\n                <div style={{position: 'relative'}}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"search\"\n                        name=\"query\"\n                        value={keywords}\n                        onChange={handleOnInputChange}\n                    />\n                    <Link to={\"/projects/\" + project_id + \"/searchsimilar\"}>\n                        <button className=\"go-similar\" type=\"button\">\n                            <SearchSimilarButton/>\n                        </button>\n                    </Link>\n                    <button className=\"go-search\" type=\"submit\" value=\"Submit\">\n                        <SearchButton/>\n                    </button>\n                </div>\n\n                <div className=\"option-holder\">\n                    <label>Source:</label><br/>\n\n                    <div className=\"checkboxes-holder\">\n                        <RadioBox label=\"Scopus\" name=\"scopus\" val=\"\" isChecked={source.scopus}\n                                  handler={handleOnInputChange}/>\n                        <RadioBox label=\"Google Scholar\" name=\"googleScholar\" val=\"\" isChecked={source.googleScholar}\n                                  handler={handleOnInputChange}/>\n                        <RadioBox label=\"arXiv\" name=\"arXiv\" val=\"\" isChecked={source.arXiv}\n                                  handler={handleOnInputChange}/>\n                    </div>\n\n                    <label>Search by:</label><br/>\n\n                    <div className=\"checkboxes-holder\">\n                        <RadioBox label={searchByOptions[0].label} name=\"searchBy\" val={searchByOptions[0].value}\n                                  isChecked={searchBy === searchByOptions[0].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[1].label} name=\"searchBy\" val={searchByOptions[1].value}\n                                  isChecked={searchBy === searchByOptions[1].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[2].label} name=\"searchBy\" val={searchByOptions[2].value}\n                                  isChecked={searchBy === searchByOptions[2].value} handler={handleOnInputChange}/>\n                        <RadioBox label={searchByOptions[3].label} name=\"searchBy\" val={searchByOptions[3].value}\n                                  isChecked={searchBy === searchByOptions[3].value} handler={handleOnInputChange}/>\n                    </div>\n\n                    <label>Year:</label><br/>\n                    <div className=\"checkboxes-holder\">\n                        {\n                            yearOptions.map((singleYear, index) =>\n                                <RadioBox key={index} label={singleYear} name=\"year\" val={singleYear}\n                                          isChecked={year === singleYear} handler={handleOnInputChange}/>\n                            )\n                        }\n                    </div>\n                    {/* (year slider, not currently used)\n                    <div className=\"year-slider-holder\">\n                        <Range\n                            step={1}\n                            min={1900}\n                            max={endYear}\n                            values={values}\n                            onChange={values => setValues(values)}\n                            renderTrack={({ props, children }) => (\n                            <div\n                                {...props}\n                                className={\"range-slider\"}\n                                style={{\n                                ...props.style\n                                }}\n                            >\n                                {children}\n                            </div>\n                            )}\n                            renderThumb={({ props }) => (\n                            <div\n                                {...props}\n                                className={\"range-thumb\"}\n                                style={{\n                                ...props.style,\n                                height: '20px',\n                                width: '20px',\n                                backgroundColor: 'white'\n                                }}\n                            />\n                            )}\n                        />\n                        <p className=\"year-range\">{values[0]} to {values[1]}</p>\n                    </div>\n                    */}\n                </div>\n\n            </form>\n        </>\n    );\n\n};\n\n\nexport default SearchStandardForm;","import React from \"react\";\n\n/**\n * component svg \n */\nconst Robot = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"robot\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <path className=\"st0-robot\" d=\"M406.3,576.3c-46.8,3.4-95,5.9-144.5,7.2c-69.2,1.9-127.2-52.1-130.5-121.3l-3.2-66.9\n                c-3.3-70.2,50.9-129.9,121.2-133.2l139.1-6.6c54.8-2.6,101.3,39.7,103.9,94.6l5.8,122.4C500.7,526.3,460,572.3,406.3,576.3z\"/>\n            <path className=\"st1-robot\" d=\"M407.4,528.8l-124.1,5.9c-9.8,0.5-18.1-7.1-18.6-16.9l-0.1-3.1c-0.2-4.1,3-7.6,7.1-7.8l144.7-6.8\n                c4.1-0.2,7.6,3,7.8,7.1l0.1,3.1C424.8,520,417.2,528.3,407.4,528.8z\"/>\n            <path className=\"st2-robot\" d=\"M263.1,415.9L263.1,415.9c-13.1-0.6-23.5-11.2-24.2-24.5l-1.9-39.8c-0.6-13,8.5-24.4,21.1-26.6h0\n                c14.9-2.5,28.7,8.8,29.4,24.2l1.9,39.8C290.2,404.2,278,416.6,263.1,415.9z\"/>\n            <path className=\"st2-robot\" d=\"M418.4,408.8L418.4,408.8c-14.2,2.2-27.2-9.1-27.9-24.4l-1.9-40.1c-0.7-15.5,11.5-28.2,26.1-26.9h0\n                c12.2,1.1,21.7,11.6,22.4,24.6l1.9,40.1C439.5,395.4,430.7,406.9,418.4,408.8z\"/>\n            <path className=\"st0-robot\" d=\"M133.6,610.9c126.4,12.4,246,15.2,357.6,6.4c47.7-3.8,87.3,39.8,84.4,92.5l-32.5,594.5\n                c-3.9,23.4-99,39-120.6,38.7l-229.1-3.5c-47.1-0.7-86.2-40-91.4-91.7L48.1,707.4C42.6,652.6,84,606.1,133.6,610.9z\"/>\n            {/*<polyline className=\"st3-robot\" points=\"598,721 765,627 765.5,459.7 \"/>\n            <ellipse className=\"st4-robot\" cx=\"765.6\" cy=\"404.8\" rx=\"167.2\" ry=\"25.7\"/>\n            <ellipse className=\"st5-robot\" cx=\"765.6\" cy=\"411.7\" rx=\"107.2\" ry=\"12.5\"/>\n            <path className=\"st6-robot\" d=\"M865,427.3c-69.6,13.7-141.5,13.3-212.7-3\"/>*/}\n            <ellipse transform=\"matrix(0.9989 -4.710610e-02 4.710610e-02 0.9989 -19.9378 7.7157)\" className=\"st5-robot\" cx=\"153.7\" cy=\"426.9\" rx=\"13.6\" ry=\"70\"/>\n            <path className=\"st7-robot\" d=\"M451.3,736.2c-0.4,30.4-52.1,65.7-114.8,64.8c-62.7-0.9-113.2-36.2-112.8-66.6s51.6-44.3,114.3-43.4\n                C400.8,691.9,451.8,705.8,451.3,736.2z\"/>\n            {/*<g>\n                <g>\n                    <polyline className=\"st8-robot\" points=\"841.2,211.2 841.2,359.7 711.1,359.7 711.1,187 817,187 \t\t\"/>\n                    <line className=\"st9-robot\" x1=\"730.8\" y1=\"207.8\" x2=\"796.8\" y2=\"207.8\"/>\n                    <line className=\"st10-robot\" x1=\"729.9\" y1=\"249.7\" x2=\"821\" y2=\"249.7\"/>\n                    <line className=\"st10-robot\" x1=\"729.9\" y1=\"272.2\" x2=\"821\" y2=\"272.2\"/>\n                    <line className=\"st10-robot\" x1=\"729.9\" y1=\"294.8\" x2=\"821\" y2=\"294.8\"/>\n                    <line className=\"st10-robot\" x1=\"729.9\" y1=\"317.3\" x2=\"821\" y2=\"317.3\"/>\n                    <polyline className=\"st2-robot\" points=\"841.2,211.2 817,211.2 817,187 \t\t\"/>\n                    <line className=\"st2-robot\" x1=\"841.2\" y1=\"211.2\" x2=\"817\" y2=\"187\"/>\n                </g>\n                <g>\n                    <polyline className=\"st8-robot\" points=\"829.1,223.4 829.1,371.8 699,371.8 699,199.1 804.9,199.1 \t\t\"/>\n                    <line className=\"st9-robot\" x1=\"718.7\" y1=\"220\" x2=\"784.7\" y2=\"220\"/>\n                    <line className=\"st10-robot\" x1=\"717.8\" y1=\"261.8\" x2=\"808.9\" y2=\"261.8\"/>\n                    <line className=\"st10-robot\" x1=\"717.8\" y1=\"284.4\" x2=\"808.9\" y2=\"284.4\"/>\n                    <line className=\"st10-robot\" x1=\"717.8\" y1=\"306.9\" x2=\"808.9\" y2=\"306.9\"/>\n                    <line className=\"st10-robot\" x1=\"717.8\" y1=\"329.5\" x2=\"808.9\" y2=\"329.5\"/>\n                    <polyline className=\"st2-robot\" points=\"829.1,223.4 804.9,223.4 804.9,199.1 \t\t\"/>\n                    <line className=\"st2-robot\" x1=\"829.1\" y1=\"223.4\" x2=\"804.9\" y2=\"199.1\"/>\n                </g>\n                <g>\n                    <polyline className=\"st8-robot\" points=\"817,235.5 817,384 686.9,384 686.9,211.2 792.8,211.2 \t\t\"/>\n                    <line className=\"st11-robot\" x1=\"706.6\" y1=\"232.1\" x2=\"772.6\" y2=\"232.1\"/>\n                    <line className=\"st12-robot\" x1=\"705.7\" y1=\"273.9\" x2=\"796.8\" y2=\"273.9\"/>\n                    <line className=\"st12-robot\" x1=\"705.7\" y1=\"296.5\" x2=\"796.8\" y2=\"296.5\"/>\n                    <line className=\"st12-robot\" x1=\"705.7\" y1=\"319\" x2=\"796.8\" y2=\"319\"/>\n                    <line className=\"st12-robot\" x1=\"705.7\" y1=\"341.6\" x2=\"796.8\" y2=\"341.6\"/>\n                    <polyline className=\"st2-robot\" points=\"817,235.5 792.8,235.5 792.8,211.2 \t\t\"/>\n                    <line className=\"st2-robot\" x1=\"817\" y1=\"235.5\" x2=\"792.8\" y2=\"211.2\"/>\n                </g>\n            </g>*/}\n            <g>\n                <path className=\"st13-robot\" d=\"M255,721c47.2,3.6,94.3,4,141.5,1.2\"/>\n                <path className=\"st13-robot\" d=\"M246,732c59,4,118,4,177,0\"/>\n                <path className=\"st13-robot\" d=\"M252,743c40.2,2.9,80.4,3.7,120.5,2.4\"/>\n                <path className=\"st13-robot\" d=\"M258,754c51,4,102,4,153,0\"/>\n                <path className=\"st13-robot\" d=\"M261,765c14.5,1.2,29,2,43.5,2.5\"/>\n            </g>\n        </svg>\n    );\n};\n\nexport default Robot;","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Link} from 'react-router-dom'\n\nimport {paperDao} from 'dao/paper.dao';\n\nimport CheckBox from \"components/forms_elements/checkbox\";\nimport {PrintScoupusSearchList} from 'components/modules/printPapersList';\nimport Select from 'components/forms_elements/select';\nimport Pagination from \"components/modules/pagination\";\nimport SelectedPapersListBox from \"components/projects_page/search_tab/selectedPapersListBox\";\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport OrderArrow from 'components/svg/orderArrow';\nimport NoSearchResults from \"components/svg/noSearchResults\";\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject, createQueryData, getIndexOfObjectArrayByKeyAndValue, arrayOfObjectsContains} from 'utils/index';\nimport SearchStandardForm from \"./searchStandardForm\";\nimport Robot from \"components/svg/robot\";\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//order options\nconst orderByOptions = [\n    {label: 'Title', value: 'title'},\n    {label: 'Date', value: 'date'}\n];\n\nconst queryParams = [\n    {label: \"arXiv\", default: false},\n    {label: \"googleScholar\", default: false},\n    {label: \"scopus\", default: true},\n    {label: \"query\", default: \"\"},\n    {label: \"searchBy\", default: \"all\"},\n    {label: \"orderBy\", default: \"title\"},\n    {label: \"sort\", default: \"ASC\"},\n    {label: \"year\", default: \"all\"},\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n]\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst SearchStandardManager = function ({project_id, location, match, history}) {\n\n    const mountRef = useRef(false);\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(true);\n\n    //total number of results (useful for pagination)\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    let queryData = createQueryData(location.search, queryParams);\n\n    //get the localStorage object\n    const storage = window.localStorage;\n    let selectedPapersListFromStorage;\n    if (!window.localStorage) {\n        console.log(\"the browser must be support localStorage\");\n    }\n    //if exists already this attribute in the local storage\n    if (storage.getItem(\"selectedPapersList\")) {\n        selectedPapersListFromStorage = JSON.parse(storage.getItem(\"selectedPapersList\"));\n    }\n    //if not exists, we create a new array\n    else {\n        selectedPapersListFromStorage = [];\n    }\n\n    // list of selected papers\n    const [selectedPapersList, setSelectedPapersList] = useState(selectedPapersListFromStorage);\n\n    //state for sorting arrow animation\n    const [up, setUp] = useState(queryData.sort);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //this will run on mount and every time the url params change\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let mnt = true;\n        //we can't allow multiple sources yet\n        if((queryData.scopus && queryData.arXiv && queryData.googleScholar) || !(queryData.scopus ^ queryData.arXiv ^ queryData.googleScholar)){\n            queryData.arXiv = false;\n            queryData.scopus = true;\n            queryData.googleScholar = false;\n        }\n\n        //if the sorting parameter changes I update the status and trigger the SVG animation\n        if (mnt && up !== queryData.sort) {\n            setUp(queryData.sort);\n            if(document.getElementById(\"ani-order-arrow\")){\n                document.getElementById(\"ani-order-arrow\").beginElement();\n            }\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n\n            //if there is queryString from URL\n            if (queryData.query !== \"\") {\n\n                setDisplay(false);\n\n                //always call the dao to search on scopus\n                let res = await paperDao.search(queryData);\n\n                //error checking\n                //if the component is still mounted and  is 404 error\n                if (mnt && res && res.message === \"Not Found\") {\n                    setPapersList([]);\n                    setTotalResults(0);\n                    //show the page\n                    setDisplay(true);\n                }\n                //if the component is still mounted and  there are some other errors\n                else if (mnt && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }\n                //if the component is still mounted and  res isn't null\n                else if (mnt && res) {\n                    //update state\n                    setPapersList(res.results);\n                    setTotalResults(res.totalResults);\n                    //show the page\n                    setDisplay(true);\n                }\n            }else{\n                setPapersList([]);\n                setTotalResults(0);\n            }\n        };\n\n\n        fetchData();\n        \n\n        //when the component will unmount or the useEffect will finish\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n\n    }, [project_id, queryData.query, queryData.orderBy, queryData.searchBy, queryData.sort, queryData.year, queryData.start, queryData.count, queryData.scopus, queryData.googleScholar, queryData.arXiv]);  //re-execute when these variables change\n\n\n    /*\n     START OF 'RESULT PAPERS HANDLING' ########################################################\n     */\n\n    //handler for sort selection\n    function handleSelection(e) {\n        //get index\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.orderBy = orderByOptions[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e) {\n\n        if (queryData.sort === \"ASC\") {\n            queryData.sort = \"DESC\";\n        }\n        else {\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n    /*function to insert and remove the paper id from selected list*/\n    function handlePaperSelection(event) {\n\n        let newList;\n        //get eid\n        let eid = event.target.value;\n        //get ttitle\n        let title = event.target.name;\n        //if id is not included in the list yet\n        if (getIndexOfObjectArrayByKeyAndValue(selectedPapersList, \"eid\", eid) === -1) {\n            //create a copy of array\n            newList = [...selectedPapersList];\n            //insert into array\n            newList.push({\"eid\": eid, \"title\": title});\n\n        }\n        //if id already exists in the list\n        else {\n            //remove the  target paper from array\n            newList = selectedPapersList.filter(function (element) {\n                return element.eid !== eid;\n            });\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*function to select all papers*/\n    function selectAllPapers(event) {\n\n        let newList;\n\n        //if not all papers are selected yet\n        if (!arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")) {\n\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {\n                return {\"eid\": paper.eid, \"title\": paper.title}\n            });\n            //and merge them with the previously selected ones\n            let tmpList = [...allPapersInPage, ...selectedPapersList];\n            newList = _.uniqBy(tmpList, 'eid');\n\n        }\n        //if all papers are selected, we need to remove them\n        else {\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {\n                return {\"eid\": paper.eid, \"title\": paper.title}\n            });\n            //I filter the selectedPapersList by removing the papers that are in the current page\n            newList = selectedPapersList.filter(x => !allPapersInPage.some(paper => paper.eid === x.eid));\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*\n     END OF 'RESULT PAPERS HANDLING' ########################################################\n     */\n\n\n    let resultPart = \"\";\n\n    //if is loading\n    if (display === false && queryData.query !== \"\") {\n\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project_id} selectedPapersList={selectedPapersList} setSelectedPapersList={setSelectedPapersList} \n                    handlePaperSelection={handlePaperSelection} mounted={mountRef}/>\n                <div className=\"search-loading-holder\">\n                    <LoadIcon class={\"small\"}/>\n                </div>\n            </>\n        );\n    }\n\n    //if the search results list is empty\n    else if (papersList.length === 0 && queryData.query !== \"\") {\n        //the class is used only to workaround a small bug that display not found just as the search start before the loading icon\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project_id} selectedPapersList={selectedPapersList} setSelectedPapersList={setSelectedPapersList} \n                    handlePaperSelection={handlePaperSelection} mounted={mountRef}/>\n                <div className=\"no-results\"> <NoSearchResults/> <p className=\"not-found-description\"> Nothing was found </p> </div>\n            </>\n        );\n    }\n    else if (papersList.length > 0 && queryData.query !== \"\") {\n\n        //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project_id} selectedPapersList={selectedPapersList} setSelectedPapersList={setSelectedPapersList} \n                    handlePaperSelection={handlePaperSelection} mounted={mountRef}/>\n                    \n                <PrintScoupusSearchList papersList={papersList} handlePaperSelection={handlePaperSelection}\n                                        selectedEidList={arrayEid}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults}\n                            path={match.url}/>\n            </>\n        );\n    }\n\n\n    let output = (\n        <>\n            <SearchStandardForm\n                {...{history, queryData, project_id}}\n            />\n            <div className=\"search-automated-option\" \n                style={{display: (queryData.query === \"\") ? \"block\" : \"none\"}}\n                >\n                <p><i>or</i><br/>let an algorithm provide search results for you</p>\n                <Link to={\"/projects/\" + project_id + \"/searchautomated\"}>\n                    <Robot/>\n                </Link>\n            </div>\n            <div className=\"search-results\"\n                style={{display: (queryData.query !== \"\") ? \"block\" : \"none\"}}\n            >\n                <div className=\"paper-card-holder\">\n                    <div className=\"paper-card-holder-head\"\n                        style={{\n                            pointerEvents: (!display || papersList.length === 0) ? \"none\" : \"\",\n                            opacity: (papersList.length === 0) ? \"0.0\" : \"1.0\"\n                        }}\n                        >\n                        <div className=\"select-all\">\n                            <CheckBox label=\"Select All\" name=\"select_all\" val=\"\"\n                                    isChecked={arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")}\n                                    handler={selectAllPapers}/>\n                        </div>\n                        <div className=\"order\">\n                            <div className=\"order-flex-item\">\n                                <label>sort by:</label>\n                                <Select options={orderByOptions}\n                                        selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                        handler={handleSelection}/>\n                                <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                {resultPart}\n                </div>\n            </div>\n        </>\n    );\n\n    return output;\n};\n\n\nexport default SearchStandardManager;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * dao to post the file pdf to backend\n * @param data the file data\n * @return {objects}\n */\nasync function updatePdf(data) {\n    let url = config.home +config.pdf_parse_server;\n\n    let res = await http.postFile(url, data);\n    return res;\n\n}\n\n/**\n * dao to post the file csv to backend\n * @param data the file data\n * @return {objects}\n */\nasync function uploadCsv(data) {\n    let url = config.home +config.csv_parse_server;\n\n    let res = await http.postFile(url, data);\n    return res;\n\n}\n\n\nconst updateFileDao = {\n    updatePdf,\n    uploadCsv,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {updateFileDao};","import React from \"react\";\n\n/**\n * component svg go-btn\n */\nconst GoButton = function (props) {\n\n    return (\n        <svg id=\"go-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 1000 1000\">\n\n            <polyline\n            className=\"st1-go\"\n            points=\"371.7,481.9 500,609.9 628.3,481.9 \"\n            transform=\"matrix(0,-1.4834458,1.4856134,0,-92.453824,1228.1491)\"/>\n            <line\n            className=\"st0-go\"\n            x1=\"810.69312\"\n            y1=\"486.42624\"\n            x2=\"206.34099\"\n            y2=\"486.42624\"/>\n\n        </svg>\n    );\n};\n\nexport default GoButton;\n","import React, {useRef} from \"react\";\nimport ClampLines from 'react-clamp-lines';\n\nimport CloseButton from 'components/svg/closeButton';\nimport GoButton from \"components/svg/goButton\";\nimport LoadIcon from \"components/svg/loadIcon\";\n\n/**\n * the search form component used for inserting the data relative to the paper we are searching for similar ones\n */\nconst TargetPaper = ({close, //the setter for closing the form when it's visible(sets the visibility to false)\n                                style, //style of the component\n                                project_id,\n                                input, //the string input\n                                handler, //handler for the string input\n                                paperInfo, //the data of the retrieved paper(should match the paper we are searching similarities for)\n                                fetching, //flag to control when the component is fetching the data related to the paper we are searching similarities for\n                                setPaperInfo, //sets the info of the paper we are searching similarites for\n                                setPaperFile, //handles the input of a file(when we upload a file instead os specifying the paper by a string)\n                                history\n                            }) => {\n    \n    let output = \"\";\n    let content = \"\";\n    let topRightButton = \"\";\n\n    //reference for the input file field\n    const inputElement = useRef(null);\n\n\n    //clicking the button will trigger the input file\n    const onButtonClick = () => {\n        inputElement.current.click();\n    };\n\n    async function handleSubmission(){\n        //if the user submits a paper I set the paperFile variable to its content so the main form can work with it\n        if(inputElement.current.files[0]){\n            setPaperFile(inputElement.current.files[0]);\n        }\n    }\n\n    //output\n    if(fetching){\n        content = (<div className=\"load-icon-similar-paper\"><LoadIcon/></div>);\n    }else if(paperInfo && paperInfo.title){\n        content = (\n            <>\n            <h3 className=\"similar-paper-title\">{paperInfo.title}</h3>\n            <ClampLines\n                text={paperInfo.abstract || \"\"}\n                lines={4}\n                ellipsis=\"...\"\n                className=\"similar-paper-paragraph\"\n                moreText=\"more\"\n                lessText=\"less\"\n            />\n            </>\n        );\n    }else{\n        content = (\n            <>\n                <p className=\"similar-description\">Search for Similar Papers</p>\n                <div className=\"DOI-holder\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"type DOI, EID, or paper title\"\n                        value={input}\n                        onChange={handler}\n                        name=\"query\"\n                    />\n                    <button className=\"go-search-similar DOI-btn\" type=\"submit\" value=\"Submit\">\n                        <GoButton/>\n                    </button>\n                </div>\n                <p className=\"or\">or</p>\n                <div className=\"file-input-container\">\n                    <input type=\"file\" id=\"real-input\" ref={inputElement} onChange={handleSubmission}/>\n                    <button type=\"button\" className=\"browse-btn\" onClick={onButtonClick}>\n                        Upload a Paper\n                    </button>\n                </div>\n            </>\n        );\n    }\n    if(paperInfo){\n        topRightButton = (\n            <button type=\"button\" className={\"close-btn red-x\"} onClick={(e) => {\n                setPaperInfo(undefined);//I delete the similar paper info\n                setPaperFile(undefined);//I delete its file\n                history.push({});\n            }}><CloseButton/></button>\n        );\n    }else{\n        topRightButton = (\n            <></>\n        );\n    }\n    output = (\n        <div style={{...style}} className=\"light-modal similar-search-paper-upload\">\n            {topRightButton}\n            {content}\n        </div>\n    );\n    return output;\n}\n\nexport default TargetPaper;","import React, {useState, useEffect, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\n\nimport {paperDao} from 'dao/paper.dao';\nimport {updateFileDao} from \"dao/updateFile.dao\";\n\nimport TargetPaper from \"components/projects_page/search_tab/search_similar/targetPaper\";\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject} from 'utils/index';\n\n\n\n/**\n * standard search form component\n */\nconst SearchSimilarForm = function ({history, queryData, project_id, targetPaperData, setTargetPaperData}){\n\n    //state for 'similar papers search' form\n    const [similarFormVisibility, setSimilarFormVisibility] = useState(false);\n\n    //bool for target similar paper fetching\n    const [similarPaperFetch, setSimilarPaperFetch] = useState(false);\n\n    //state for the form\n    const [keywords, setKeyWords] = useState(queryData.query);\n    //const [year, setYear] = useState(queryData.year); //this is not used right now\n    const [targetPaperFile, setTargetPaperFile] = useState(undefined); //the file of the paper to search similarities for\n\n\n    //get the localStorage object\n    const storage = window.localStorage;\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n\n        let mnt = true;\n\n        console.log(\"FETCHING TARGET PAPER\")\n\n        console.log(queryData);\n\n        //fetches data when searching for similarities\n        const fetchMainPaper = async () => {\n\n            if(mnt){\n\n                //standard options parameters\n                setKeyWords(queryData.query);\n                //setYear(queryData.year);\n                setTargetPaperData(undefined);\n            }\n\n            \n            //if there's a file I can do an api call to parse it\n            if(targetPaperFile && queryData.query === \"\"){\n                \n                console.log(\"FILE NAME : \" + targetPaperFile.name);\n\n                //check file extension and its mine type\n                if(!/\\.(pdf|PDF)$/.test(targetPaperFile.name) || targetPaperFile.type.indexOf(\"application/pdf\") === -1){\n                    appConsumer.setNotificationMessage(\"The file must be a pdf!\");\n                }\n                else{\n                    //open flag of loading\n                    setSimilarPaperFetch(true);\n                    console.log(\"FETCHING PARSE PDF\")\n                    //prepare the form data for post\n                    let formData = new FormData();\n                    formData.append('file', targetPaperFile);\n\n                    //call the dao\n                    console.log(\"CALLING THE PAPER PARSER SERVICE\")\n                    let res = await updateFileDao.updatePdf(formData);\n    \n                    //if there is a error\n                    if (mnt && res && res.message) {\n                        //pass error object to global context\n                        appConsumer.setNotificationMessage(\"Error during parsing file\");\n                        setSimilarPaperFetch(false);\n                        setTargetPaperData(undefined);//I delete the similar paper info\n                        setTargetPaperFile(undefined);//I delete its file\n                    }\n                    else if(mnt){\n                        console.log(res);\n                        //set paperdata(which whill call the useEffect on the paperData)\n                        setTargetPaperData(res);\n                        //display the paper data\n                        setSimilarPaperFetch(false);\n                    }\n\n                }\n            }\n            //if there's a query I can retrieve similar papers based on the query\n            else if (queryData.query !== \"\") {\n                \n                setSimilarPaperFetch(true);\n                //this will be the call to the service identifying a specific paper\n                let resx = await paperDao.search({\"query\" : queryData.query, \"scopus\": true});\n\n                //if there is a error\n                //if is 404 error\n                if (mnt && resx && resx.message === \"Not Found\") {\n                    setTargetPaperData({title:\"unable to retrieve paper\"});\n                    //show the page\n                    setSimilarPaperFetch(false);\n                }\n                else if (mnt && resx && resx.message) {\n                    //pass error object to global context\n                    appConsumer.setError(resx);\n                }else if(mnt){\n                    //set paperdata(which whill call the useEffect on the paperData)\n                    console.log(\"setting target paper data\");\n                    setTargetPaperData(resx.results[0]);\n                    setSimilarPaperFetch(false);\n\n                }\n            }\n            else{\n                console.log(\"no file (& no similarPaperString)\");\n                setSimilarPaperFetch(false);\n            }\n\n        };\n\n        if(!targetPaperData || queryData.query !== keywords){\n            fetchMainPaper();\n        }\n        \n        //execute on unmount and every time the useEffect ends\n        return () => {\n            mnt = false;\n        };\n\n    }, [project_id, targetPaperFile, queryData.query]);  //re-execute when these variables change\n\n    \n    /**\n     * effect to handle live update on year change(not used)\n     */\n    /*\n    useEffect(() => {\n        queryData.year = year;\n\n        //send query url\n        let queryString = createQueryStringFromObject(queryData);\n        //launch to search\n        history.push(queryString);//this allows pushing the same data and refreshing the page with the hash router\n        \n    }, [year])\n    */\n\n    /**\n     *handle to update hook state by input change\n     */\n    function handleOnInputChange(event) {\n\n        switch (event.target.name) {\n            case \"query\":\n                setKeyWords(event.target.value);\n                break;\n            case \"year\":\n                //setYear(event.target.value); //not used\n                break;\n            default:\n                break;\n        }\n        \n\n    }\n\n    /*function to send the query*/\n    async function handleSendSearch(event) {\n\n        console.log(\"SUBMITTING SEARCH\");\n        if(event){\n            event.preventDefault();\n        }\n\n        console.log(\"similarity search was called\");\n        //if query input is empty\n        if (keywords === \"\" && !targetPaperFile) {\n            appConsumer.setNotificationMessage(\"Similar paper string is empty\")\n        }\n        else {\n            //synchronize the query data from react state hooks\n            //if there isn't any file I search with the string\n            if(!targetPaperFile){\n                console.log(\"there isn't a file\")\n                queryData.query = keywords;\n            }else{\n                console.log(\"there's a file\")\n                queryData.query = \"\";\n            }\n            //queryData.year = year; (not used)\n\n            //send query url\n            let queryString = createQueryStringFromObject(queryData);\n            //launch to search\n            history.push(queryString);//this allows pushing the same data and refreshing the page with the hash router\n\n        }\n\n\n    }\n\n    return (\n        <>\n            <form className={(queryData.query === \"\" && !targetPaperFile && !targetPaperData) ? 'search-form' : 'search-form small'}\n                    style={{marginTop: (similarFormVisibility) ? \"30px\" : \"60px\"}}\n                    onSubmit={handleSendSearch}>\n                {/*search form*/}\n                \n                <TargetPaper style={{boxShadow: \"0px 0px 3px -1px rgba(0, 0, 0, 0.25)\"}}\n                    project_id={project_id}\n                    close={setSimilarFormVisibility} handler={handleOnInputChange} \n                    input={keywords} paperInfo={targetPaperData}\n                    fetching={similarPaperFetch} setPaperInfo={setTargetPaperData}\n                    setPaperFile={setTargetPaperFile}\n                    history={history}/>\n                \n                {/*<div className=\"option-holder\">\n\n                    <label>Year:</label><br/>\n                    <div className=\"checkboxes-holder\" >\n                        {\n                            yearOptions.map((singleYear, index) =>\n                                <RadioBox key={index} label={singleYear} name=\"year\" val={singleYear}\n                                          isChecked={year === singleYear} handler={handleOnInputChange}/>\n                            )\n                        }\n                    </div>\n                </div>*/}\n            </form>\n            <div className={(similarPaperFetch || targetPaperData) ? \"top-right-side-wrapper search-similar-description-wrapper\" : \"center-side-wrapper search-similar-description-wrapper\"}>\n                <div className=\"search-similar-description\">\n                    <p>This searching mode leverages AI to find relevant papers based on the topic and focus of the given paper.</p>\n                    <Link to={\"/projects/\"+project_id+\"/search\"}>(Go back to a normal search)</Link>\n                </div>\n            </div>\n        </>\n    );\n\n};\n\n\n\n\nexport default SearchSimilarForm;","import React, {useState, useEffect, useContext, useRef} from \"react\";\n\n\nimport {paperDao} from 'dao/paper.dao';\n\nimport CheckBox from \"components/forms_elements/checkbox\";\nimport {PrintScoupusSearchList} from 'components/modules/printPapersList';\nimport Select from 'components/forms_elements/select';\nimport Pagination from \"components/modules/pagination\";\n\nimport OrderArrow from 'components/svg/orderArrow';\nimport LoadIcon from 'components/svg/loadIcon';\nimport NoSearchResults from \"components/svg/noSearchResults\";\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue, arrayOfObjectsContains, createQueryData} from 'utils/index';\nimport SelectedPapersListBox from \"components/projects_page/search_tab/selectedPapersListBox\";\nimport SearchSimilarForm from \"./searchSimilarForm\";\n\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//order options\nconst orderByOptions = [\n    {label: 'Title', value: 'title'},\n    {label: 'Date', value: 'date'}\n];\n\nconst queryParams = [\n        {label: \"query\", default: \"\"},\n        {label: \"orderBy\", default: \"title\"},\n        {label: \"sort\", default: \"ASC\"},\n        {label: \"start\", default: 0},\n        {label: \"count\", default: 10},\n];\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst SearchSimilarManager = function ({project_id, location, match, history}) {\n\n    const mountRef = useRef(false);\n\n    //remove similar paper data once the page is\n    window.onbeforeunload = function(e){\n        window.localStorage.removeItem(\"targetPaperData\");\n    }\n\n    //list of result papers data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to control the visualization of the results when fetching results data\n    const [display, setDisplay] = useState(true);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n\n    //set query params from url\n    let queryData = createQueryData(location.search, queryParams);\n    //console.log(queryData);\n\n    //get the localStorage object\n    const storage = window.localStorage;\n    let selectedPapersListFromStorage;\n    let similarPaperDataFromStorage;\n    if (!window.localStorage) {\n        console.log(\"the browser must be support localStorage\");\n    }\n    \n    //if exists already this attribute in the local storage\n    if (storage.getItem(\"selectedPapersList\")) {\n        selectedPapersListFromStorage = JSON.parse(storage.getItem(\"selectedPapersList\"));\n    }\n    //if not exists, we create a new array\n    else {\n        selectedPapersListFromStorage = [];\n    }\n\n    //if exists already this attribute in the local storage\n    if (storage.getItem(\"targetPaperData\")) {\n        similarPaperDataFromStorage = JSON.parse(storage.getItem(\"targetPaperData\"));\n    }\n    //if not exists, we create a new array\n    else {\n        similarPaperDataFromStorage = null;\n    }\n\n    // list of selected papers\n    const [selectedPapersList, setSelectedPapersList] = useState(selectedPapersListFromStorage);\n\n    const [targetPaperData, setTargetPaperData] = useState(similarPaperDataFromStorage); //the data of the paper to search similarities for\n\n    //state for sorting arrow animation\n    const [up, setUp] = useState(queryData.sort);\n\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //update local storage every time the similar paper data changes\n    useEffect(() => {\n\n        let mnt = true;\n\n        console.log(\"FETCHING RESULTS\");\n        console.log(targetPaperData);\n\n        //if the sorting parameter changes I update the status and trigger the SVG animation\n        if (up !== queryData.sort) {\n            setUp(queryData.sort);\n            if(document.getElementById(\"ani-order-arrow\")){\n                document.getElementById(\"ani-order-arrow\").beginElement();\n            }\n        }\n\n        if(targetPaperData && targetPaperData.title !== \"unable to retrieve paper\"){\n            //fetches for similar papers\n            const fetchSimilarPapers= async () => {\n                \n                setDisplay(false);\n                storage.setItem(\"targetPaperData\", JSON.stringify(targetPaperData));\n\n                //I call the dao for searching for similar papers based on similarPaperString\n                //this will be the call for the similarity search\n                let resx = await paperDao.searchSimilar({\"paperData\" : targetPaperData, \"start\" : queryData.start, \"count\" : queryData.count, \"scopus\": true});\n\n                //error checking\n                //if is 404 error\n                if (mnt && resx && resx.message === \"Not Found\") {\n                    setPapersList([]);\n                    setTotalResults(0);\n                    //show the page\n                    setDisplay(true);\n                }\n                //if is other error\n                else if (mnt && resx && resx.message) {\n                    //pass error object to global context\n                    appConsumer.setError(resx);\n                }\n                //if res isn't null\n                else if (mnt && (resx !== null)) {\n                    console.log(\"SETTING RESULTS\");\n                    //update state\n                    setPapersList(resx.results);\n                    setTotalResults(resx.totalResults);\n                    //show the page\n                    setDisplay(true);\n                }else{\n                    console.log(\"can't set enything\");\n                }\n            }\n\n            fetchSimilarPapers();\n        }else{\n            setPapersList([]);\n            setTotalResults(0);\n            storage.removeItem(\"targetPaperData\");\n        }\n\n        //execute on unmount and every time the useEffect ends\n        return () => {\n            mnt = false;\n        };\n\n    }, [targetPaperData, queryData.orderBy, queryData.sort, queryData.start, queryData.count])\n\n\n    let resultPart = \"\";\n\n     /*\n        START OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //handler for sort selection\n    function handleSelection(e) {\n        //get index\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.orderBy = orderByOptions[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e) {\n\n        if (queryData.sort === \"ASC\") {\n            queryData.sort = \"DESC\";\n        }\n        else {\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n    /*function to insert and remove the paper id from selected list*/\n    function handlePaperSelection(event) {\n        let newList;\n        //get eid\n        let eid = event.target.value;\n        //get ttitle\n        let title = event.target.name;\n        //if id is not included in the list yet\n        if (getIndexOfObjectArrayByKeyAndValue(selectedPapersList, \"eid\", eid) === -1) {\n           //create a copy of array\n            newList = [...selectedPapersList];\n            //insert into array\n            newList.push({\"eid\": eid, \"title\": title});\n\n        }\n        //if id already exists in the list\n        else {\n            //remove the  target paper from array\n            newList = selectedPapersList.filter(function (element) {\n                return element.eid !== eid;\n            });\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*function to select all papers*/\n    function selectAllPapers(event) {\n        \n        let newList;\n        \n        //if not all papers are selected yet\n        if(!arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")){\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //and merge them with the previously selected ones\n            let tmpList = [...allPapersInPage, ...selectedPapersList];\n            newList = _.uniqBy(tmpList, 'eid');\n        }else{//otherwise\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //I filter the selectedPapersList by removing the papers that are in the current page\n            newList = selectedPapersList.filter(x => !allPapersInPage.some(paper => paper.eid === x.eid));\n        }\n        \n        setSelectedPapersList(newList);\n\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n\n    /*\n        END OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //if is loading\n    if (display === false && targetPaperData) {\n\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project_id} selectedPapersList={selectedPapersList} \n                    setSelectedPapersList={setSelectedPapersList} handlePaperSelection={handlePaperSelection}\n                    mounted={mountRef}    \n                />\n                <div className=\"search-loading-holder\">\n                    <LoadIcon class={\"small\"}/>\n                </div>\n            </>\n        );\n    }\n\n    //if the search results list is empty\n    else if (papersList.length === 0 && targetPaperData) {\n        //the class is used only to workaround a small bug that display not found just as the search start before the loading icon\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project_id} selectedPapersList={selectedPapersList} \n                    setSelectedPapersList={setSelectedPapersList} handlePaperSelection={handlePaperSelection}\n                    mounted={mountRef}    \n                />\n                <div className=\"no-results\"> <NoSearchResults/> <p className=\"not-found-description\"> Nothing was found </p> </div>\n            </>\n        );\n    }\n    else if (papersList.length > 0 && targetPaperData) {\n\n        //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project_id} selectedPapersList={selectedPapersList} \n                    setSelectedPapersList={setSelectedPapersList} handlePaperSelection={handlePaperSelection}\n                    mounted={mountRef}    \n                />\n\n                <PrintScoupusSearchList papersList={papersList} handlePaperSelection={handlePaperSelection} selectedEidList={arrayEid} setTargetPaperData={setTargetPaperData}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </>\n        );\n    }\n\n\n    let output = (\n        <>\n            <SearchSimilarForm {...{history, queryData, project_id, targetPaperData, setTargetPaperData}}/>\n            <div className=\"search-results\">\n                <div className=\"paper-card-holder similar-holder\">\n                    <div className=\"paper-card-holder-head\" \n                        style={{\n                            pointerEvents: (!display || papersList.length === 0) ? \"none\" : \"\",\n                            opacity: (!targetPaperData || papersList.length === 0) ? \"0.0\" : \"1.0\"\n                        }}\n                        >\n                        <div className=\"select-all\">\n                        <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" \n                            isChecked={arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")} handler={selectAllPapers}\n                            />\n                        </div>\n                        <div className=\"order\">\n                            <div className=\"order-flex-item\">\n                                <label>sort by:</label>\n                                <Select options={orderByOptions}\n                                        selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)}\n                                        handler={handleSelection}/>\n                                <button type=\"button\" onClick={handelOrder}><OrderArrow display={true} up={(queryData.sort)}/></button>\n                            </div>\n                        </div>\n                    </div>\n                    {resultPart}\n                </div>\n            </div>\n        </>\n    );\n\n    return output;\n};\n\n\nexport default SearchSimilarManager;","import React, {useState, useEffect} from \"react\";\nimport SelectArrow from 'components/svg/selectArrow';\n\n\n/**\n * this component acts as an html <select> for Formik\n * it needs an array of options, the index of the selected one and the hadler to change the status of the upper component calling this one\n */\nconst Select = ({ options, form, name, type, code }) => {\n    \n\n    //this is useful for the animation\n    const [focused, setFocused] = useState(false);\n\n    //this keeps the selected option\n    const [selected, setSelected] = useState(0)\n\n    //this handle the selection setting the index of the selected option\n    function handler(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n        setSelected(index);\n    }\n\n    //this updates the field value for formik\n    useEffect(() => {\n        form.setFieldValue(name, options[selected].value);\n    }, [selected])\n\n    function handleFocus(type){\n        //handle arrow animation and focus of menu\n        if(type === \"click\"){\n            document.getElementById((isNaN(code)) ? \"ani-select-arrow\" : \"ani-select-arrow\" + code).beginElement();//trigger svg animation\n            setFocused(!focused);\n        }else if(focused){\n            document.getElementById((isNaN(code)) ? \"ani-select-arrow\" : \"ani-select-arrow\" + code).beginElement();//trigger svg animation\n            setFocused(false);\n        }\n    }\n\n    var output = (\n        <div className={(type) ? \"custom-select \" + type: \"custom-select\"}>\n            <div className=\"selected\" tabIndex={-2} onBlur={() => {handleFocus(\"blur\")}} onClick={() => {handleFocus(\"click\")}}>{options[selected].label} <div className=\"arrow\">\n                <SelectArrow focused={focused} code={code}/>\n            </div></div>\n            <div className=\"options-holder\" style={{fontSize: (!focused) ? '0px' : '15px', borderBottom: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderLeft: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderRight: (!focused) ? \"0px solid #d7d7d7\" : \"1px solid #d7d7d7\", borderTop:\"none\"}}>\n                {options.map((element, index) => (\n                <div key={index} data-value={index} className=\"option\" style={{padding: (!focused) ? '0px' : '2px' }} onMouseDown={handler}>\n                    {element.label}\n                </div>))}\n            </div>\n        </div>\n    );\n    return output;\n}\n\nexport default Select;","import React, {useContext, useEffect, useRef} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao'\n\nimport Select from 'components/forms_elements/selectformik';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n//order options\nconst paperType = [\n    { value: 'article', label: 'Article' },\n    { value: 'book_chapter', label: 'Book Chapter' },\n    { value: 'conf_publication', label: 'Conf. Publication' }\n  ];\n\n/**\n * this is the form for create or edit the paper\n * @param props.projectId  relative project where we will insert the paper\n */\nfunction CustomPaperForm(props) {\n\n    const mountRef = useRef(false);\n\n    let yup = require('yup');\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //validation schema for form\n    const paperValidationSchema = yup.object().shape({\n        title: yup.string().required('please enter a title'),\n        authors: yup.string().required('please enter an author'),\n        year: yup.number().required('please enter a year').min(1000).max(new Date().getFullYear() + 1).integer(),\n        //document_type: yup.string().required('please enter a paper type'),\n        abstract: yup.string().required('please enter the abstract')\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    return (\n        <>\n        <Formik\n            initialValues={{\n                title: (props.customPaper && props.customPaper.title) || '',\n                authors: (props.customPaper && props.customPaper.authors) || '',\n                year: (props.customPaper && props.customPaper.year) || '',\n                abstract: (props.customPaper && props.customPaper.abstract) || '',\n                //it is not present in pdf parse service\n                document_type: (props.customPaper && props.customPaper.document_type) || '',\n                doi: (props.customPaper && props.customPaper.doi) || \"\"\n            }}\n            validationSchema={paperValidationSchema}\n            onSubmit={async (values, { setSubmitting, resetForm }) => {\n                //if doi is not specified I set it as empty string\n                if(values.doi === undefined){\n                    values.doi = \"\";\n                }\n                const paperData = {...values, \n                    year: values.year.toString(), \n                    source_title: values.title, \n                    link: \"custom_paper\", \n                    source: \"slr_custom_papers\", \n                    abstract_structured: \"0\",\n                    filter_oa_include: \"0\",\n                    filter_study_include: \"0\",\n                    notes: \"\",\n                    //data necessary for identifying custom papers\n                    manual: \"true\"}\n                console.log(paperData);\n                \n                let res = await projectPapersDao.postCustomPaperIntoProject({\n                    paper: paperData, project_id: props.projectId\n                });\n                //error checking\n                if (mountRef.current && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }else if(mountRef.current){\n                    appConsumer.setNotificationMessage(\"Paper added successfully\");\n                    resetForm({\n                        title: '', authors: '', year: '', abstract: '',\n                        document_type:  '', doi: \"\"\n                    });\n                    setSubmitting(false);\n                    props.history.push(props.url);\n                }\n            }}\n            validateOnBlur={false}\n        >\n        {({ errors, touched, isValid, isSubmitting }) => (\n            <Form className=\"new-paper-form\">\n                <Field\n                    style={{borderBottom: (errors.title && touched.title) ? \"1px solid #d81e1e\" : \"\"}}\n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\" \n                    placeholder=\"Paper Title\"/>\n                <div className=\"new-paper-form-ad\">\n                    <div className=\"author-year\">\n                        <Field\n                            style={{borderBottom: (errors.authors && touched.authors) ? \"1px solid #d81e1e\" : \"\"}}\n                            name=\"authors\"\n                            type=\"text\" \n                            placeholder=\"paper author\"/>\n                        <Field \n                            style={{borderBottom: (errors.year && touched.year) ? \"1px solid #d81e1e\" : \"\"}}\n                            name=\"year\"\n                            type=\"number\"\n                            placeholder=\"year\"/>\n                    </div>\n                    <div className=\"type-doi\">\n                        <Field\n                            name=\"document_type\"\n                            render={({ field, form }) => (\n                                    <Select options={paperType} {...field} form={form}/>\n                            )}\n                        />\n                        <Field \n                            name=\"doi\"\n                            type=\"text\"\n                            placeholder=\"DOI(optional)\"/>\n                    </div>\n                </div>\n                <Field\n                    style={{borderBottom: (errors.abstract && touched.abstract) ? \"1px solid #d81e1e\" : \"\"}}\n                    name=\"abstract\"\n                    placeholder=\"Paper Abstract\"\n                    component=\"textarea\"/>\n                <button type=\"submit\" disabled={isSubmitting || !isValid}>Add paper</button>\n            </Form>\n        )}\n        </Formik>\n        </>\n    );\n\n\n}\n\n\nexport default CustomPaperForm;","import React from \"react\";\n\n/**\n * component svg\n */\nconst HLoad = function (props) {\n    return(\n        <svg version=\"1.1\" id=\"h-load\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 600 200\">\n                <g className={(props.className) ? \"st0-h-load-wrap \"+props.className : \"st0-h-load-wrap\"}>\n                    <circle className=\"st0-h-load\" cx=\"125\" cy=\"100\" r=\"40\">\n                        <animate id=\"one\" begin=\"0s; three.end-0.3s\" repeatCount=\"1\" attributeType=\"XML\" attributeName=\"r\"\n                        from=\"40\" to=\"40\"\n                    dur=\"0.8s\"\n                    calcMode=\"spline\"\n                        values=\"40; 60; 40\"\n                        keySplines=\"0.31896551724137934 0.05142857142857143 0.47413793103448276 0.9628571428571429;0.31896551724137934 0.05142857142857143 0.47413793103448276 0.9628571428571429\"\n                        fill=\"freeze\"/>\n                    </circle>\n                    <circle className=\"st0-h-load\" cx=\"300\" cy=\"100\" r=\"40\">\n                        <animate id=\"two\" begin=\"one.end-0.3s\" repeatCount=\"1\" attributeType=\"XML\" attributeName=\"r\"\n                        from=\"40\" to=\"40\"\n                    dur=\"0.8s\"\n                    calcMode=\"spline\"\n                        values=\"40; 60; 40\"\n                        keySplines=\"0.31896551724137934 0.05142857142857143 0.47413793103448276 0.9628571428571429;0.31896551724137934 0.05142857142857143 0.47413793103448276 0.9628571428571429\"\n                        fill=\"freeze\"/>\n                    </circle>\n                    <circle className=\"st0-h-load\" cx=\"475\" cy=\"100\" r=\"40\">\n                        <animate id=\"three\" begin=\"two.end-0.3s\" repeatCount=\"1\" attributeType=\"XML\" attributeName=\"r\"\n                        from=\"40\" to=\"40\"\n                    dur=\"0.8s\"\n                    calcMode=\"spline\"\n                        values=\"40; 60; 40\"\n                        keySplines=\"0.31896551724137934 0.05142857142857143 0.47413793103448276 0.9628571428571429;0.31896551724137934 0.05142857142857143 0.47413793103448276 0.9628571428571429\"\n                        fill=\"freeze\"/>\n                    </circle>\n                </g>\n        </svg>\n    );\n}\n\nexport default HLoad;","import React, {useEffect, useState, useRef, useContext} from \"react\";\nimport CustomPaperForm from 'components/projects_page/papers_tab/forms/customPaperForm';\nimport HLoad from \"components/svg/hLoad\";\n\nimport {updateFileDao} from \"dao/updateFile.dao\";\n\nimport {AppContext} from 'components/providers/appProvider';\n\nfunction CustomPaperPage({projectId, url, history}) {\n\n    const mountRef = useRef(false);\n\n    const [paperDataFetch, setPaperDataFetch] = useState(false);\n    const [paperData, setPaperData] = useState(undefined);\n    const [displayForm, setDisplayForm] = useState(false);\n\n    //reference for the input file field\n    const inputElement = useRef(null);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    async function handleSubmission(){\n\n        //get the file object\n        let file = inputElement.current.files[0];\n        //if this file exist\n        if(file){\n\n            //check file extension and its mine type\n            if(!/\\.(pdf|PDF)$/.test(file.name) || file.type.indexOf(\"application/pdf\") === -1){\n                appConsumer.setNotificationMessage(\"The file must be a pdf!\");\n            }\n            else{\n                //open flag of loading\n                setPaperDataFetch(true);\n\n                //prepare the form data for post\n                let formData = new FormData();\n                formData.append('file', file);\n\n                //call the dao\n               let res = await updateFileDao.updatePdf(formData);\n\n               //if there is a error\n                if (mountRef.current && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setNotificationMessage(\"Error during parsing file\");\n                   \n                }\n                else if(mountRef.current){\n                    //set paperdata\n                    setPaperData(res);\n                    //display the form\n                    setDisplayForm(true);\n                }\n                if(mountRef.current){\n                    //close flag of loading\n                    setPaperDataFetch(false);\n                }\n\n            }\n        }\n    }\n\n    let output = \"\";\n\n    if(!displayForm && !paperDataFetch){\n        output = (\n            <div className=\"new-paper-page-wrapper\">\n                <div>\n                    <div className=\"file-input-container\">\n                        <input type=\"file\"name =\"file\" id=\"real-input\" ref={inputElement} onChange={handleSubmission}/>\n                        <button type=\"button\" className=\"browse-btn\" onClick={() => {inputElement.current.click();}}>\n                            Upload a Paper\n                        </button>\n                    </div>\n                        or<br/>\n                    <button type=\"button\"\n                        onClick={() => {setDisplayForm(true)}}\n                    >insert data manually</button>\n                </div>\n            </div>\n        );\n    }else if(paperDataFetch){\n        output = (\n            <div className=\"new-paper-page-wrapper\">\n                <div className=\"file-input-container\">\n                    <input type=\"file\" id=\"real-input\"/>\n                    <button type=\"button\" className=\"browse-btn\" disabled=\"true\">\n                        <HLoad/>\n                    </button>\n                </div>\n                    or<br/>\n                <button type=\"button\"\n                    onClick={() => {/* reset connection to api if necessary */ setPaperDataFetch(false); setDisplayForm(true);}}\n                >abort and insert data manually</button>\n            </div>\n        );\n    }else{\n        output = (\n            <CustomPaperForm projectId={projectId} url={url} history={history} customPaper={paperData}/>\n        );\n    }\n\n    return output;\n\n}\n\n\nexport default CustomPaperPage;","import React from \"react\";\n\n/**\n * component svg edit button\n * based on the 'confirm' flag the icon will change\n */\nconst EditButton = function ({confirm}) {\n    var output = <></>;\n    if(!confirm){//if the user is not editing\n        output = (<svg version=\"1.1\" id=\"edit-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <path className=\"st-pencil\" d=\"M224,632.3l-81.6,225.3L367.7,776l0,0L833,310.7c39.4-39.4,39.9-103.3,0.7-142.9c-0.5-0.5-1-1-1.4-1.4\n            c-39.6-39.2-103.6-38.7-142.9,0.7L224,632.3L224,632.3z\"/>\n            <path className=\"st-pencil-border\" d=\"M367.7,776c-24-71.7-71.9-119.6-143.7-143.7\"/>\n            <path className=\"st-pencil\" d=\"M805.7,338c-24-71.7-71.9-119.6-143.7-143.7\"/>\n        </svg>);\n    }else{//if the user is editing\n        output = (\n            <svg version=\"1.1\" id=\"confirm-edit-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t            viewBox=\"0 0 1000 1000\">\n                <polyline className=\"st-confirm\" points=\"918,192.3 389.3,807.7 82,450 \"/>\n            </svg>\n        );\n    }\n    return output;\n};\n\nexport default EditButton;\n","import React, {useState,useContext,useEffect, useRef} from \"react\";\n\nimport {projectsDao} from 'dao/projects.dao';\nimport {AppContext} from 'components/providers/appProvider';\n\nimport EditButton from \"components/svg/editButton\";\n\n/**\n * this is the head component of page\n * @param \"menu_elements\" contains the list of menu-items\n */\n\n\nconst ProjectName = function({project, setProject}){\n\n    const mountRef = useRef(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //this is used as a toggle for checking if the user is trying to edit the name of the project\n    const [editing, setEditing] = useState(false);\n\n    //this is used as field value for the project name\n    const [name, setName] = useState(project.data.name);\n\n\n    //checks if there's an edit request\n    function handleEditRequest(e){\n        if(!editing){//if the user is not editing the name yet(the check is useful because handleEditRequest and handleConfirm fire at the same time)\n            document.getElementById(\"edit-project-name-input\").focus();\n            setEditing(!editing);\n        }\n    }\n\n    //function for updating the description and name\n    async function updateProject(){\n\n        //if the new name o description are difference from the old name o description\n        if(name !== project.data.name){\n\n            let res = await projectsDao.putProject(project.id, {name: name, description : project.data.description});\n\n            \n            //empty string is the response from the dao layer in case of success(rember that empty string is a falsy value)\n            if (mountRef.current && res === \"\") {\n                console.log(\"we got a success\");\n                let newProject = project;\n                newProject.data.name = name;\n                setProject({...newProject});\n            }\n            //error checking\n            //if is other error\n            else if (mountRef.current && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n\n        }\n    }\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n\n    //checks if the user wants to confirm the change\n    function handleConfirm(e){\n        if(editing){//if the user was editing I confirm its request and call the api(the check is useful because handleEditRequest and handleConfirm fire at the same time)\n            updateProject();\n            setEditing(!editing);\n        }\n    }\n\n    return(\n        <div className={(editing) ? \"nav-elements\" : \"nav-elements hidden-form\"}> \n            <h2 style={{fontSize: (editing) ? \"0px\" : \"21px\"}}>{project.data.name}</h2> \n            {/*clicking on the div containing the title will allow the user to access the form for editing the project name*/}\n            <form className=\"edit-project-name\"  onClick={handleEditRequest} onSubmit={(e) => {e.preventDefault()}}>\n                <input type=\"text\" id=\"edit-project-name-input\" value={name} style={{width: (editing) ? \"\" : \"0px\", padding: (editing) ? \"\" : \"0px\"}}\n                    onChange={(e) => setName(e.target.value)}\n                    onBlur={(e) => {setEditing(false)}}\n                />\n                <button className=\"edit-button\" onMouseDown={handleConfirm} type=\"button\"><EditButton confirm={editing}/></button>\n                {/*clicking on the button will confirm the new name*/}\n            </form>\n        </div>\n    );\n}\n\nexport default ProjectName;","import React from \"react\";\n\n/**\n * component svg\n */\nconst Forbidden = function (props) {\n    return(\n        <svg version=\"1.1\" id=\"forbidden\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n        <circle className=\"st0-forbidden\" cx=\"500\" cy=\"500\" r=\"397\"/>\n        <g>\n            <line className=\"st1-forbidden\" x1=\"780.2\" y1=\"780.2\" x2=\"218.8\" y2=\"218.8\"/>\n        </g>\n        </svg>\n    );\n}\n\nexport default Forbidden;","import React from \"react\";\n\n/**\n * component svg \n */\nconst Ghost = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"ghost\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <path className=\"st0-ghost\" d=\"M949.5,759c-34.3-97-89.7-188.9-98.5-293.2c0-0.3,0-0.6,0-0.9s-0.8-0.1-0.1-1c-5.7-99-58.2-209-174.7-205.1\n                C550.8,263,499.5,395.2,512,505.6c16.2,110.9,19.6,217.5,6.4,329\"/>\n            <ellipse transform=\"matrix(1.122617e-02 -0.9999 0.9999 1.122617e-02 200.0576 961.9827)\" cx=\"586.5\" cy=\"379.8\" rx=\"21.8\" ry=\"27.4\"/>\n            <ellipse transform=\"matrix(1.122617e-02 -0.9999 0.9999 1.122617e-02 329.3011 1095.6136)\" cx=\"718.6\" cy=\"381.3\" rx=\"21.8\" ry=\"29.1\"/>\n            <path d=\"M678.8,453.7c2.3,22-9.1,49.7-35.9,45.1c-26.8-4.6-21.4-27.8-21.6-47.3c-0.2-19.5-3-38.9,20.7-41.1S676.5,431.7,678.8,453.7\n                z\"/>\n            <path className=\"st1-ghost\" d=\"M407.8,331.6c31.9-17.6,51.3-40.8,51.3-66.3c0-55.2-91.5-100-204.3-100s-204.3,44.8-204.3,100\n                s91.5,100,204.3,100c33.7,0,65.5-4,93.6-11.1c21.9,31.4,51.9,40.2,98.4,39.6C417.6,378.1,408.1,355.2,407.8,331.6z\"/>\n            <text transform=\"matrix(1 0 0 1 159.4091 299.821)\" className=\"st2-ghost\">404</text>\n            <path className=\"st0-ghost\" d=\"M518.4,834.6l18.3-11.6c25.3-16.1,57.5-16.4,83.2-0.9l0,0c25.3,15.3,56.9,15.2,82.1-0.2l33.1-20.3\n                c34.3-21,76.8-23.7,113.5-7.1l0,0c37.7,17,82.1,1.4,100.8-35.5l0,0\"/>\n        </svg>\n    );\n};\n\nexport default Ghost;","import React from \"react\";\nimport Ghost from \"components/svg/ghost\";\n\n\n\n/**\n * 404 page\n */\nconst PageNotFound = function (props) {\n    //get data from global context\n    return (\n        <div className=\"page-not-found-wrapper\">\n            <Ghost/>\n        </div>\n    );\n};\n\nexport default PageNotFound;","import React, {useState, useEffect, useContext} from \"react\";\nimport queryString from \"query-string\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport {PrintPapersList} from 'components/modules/printPapersList';\nimport Select from 'components/forms_elements/select';\nimport OrderArrow from 'components/svg/orderArrow';\nimport Pagination from \"components/modules/pagination\";\nimport {createQueryData, createQueryStringFromObject, getIndexOfObjectArrayByKeyAndValue} from 'utils/index';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n\n\n//order options\nconst orderByOptions = [\n    { value: 'date_created', label: 'Recently Added' },\n    { value: 'title', label: 'Title' },\n    { value: 'authors', label: 'Authors' }\n  ];\n\nconst queryParams = [\n    {label: \"orderBy\", default: \"date_created\"},\n    {label: \"sort\", default: \"ASC\"},\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n]\n\n/**\n * the local component that shows the papers list of a project\n */\nconst PapersList = ({project_id, location, match, history, forcePapersFetch}) => {\n\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(location.search, queryParams);\n\n    const [up, setUp] = useState(queryData.sort);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let  mnt = true;\n        if(queryData.orderBy !== \"date_created\" && up !== queryData.sort){\n            setUp(queryData.sort);\n            document.getElementById(\"ani-order-arrow\").beginElement();\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setDisplay(false);\n\n            //call the dao\n            let res = await projectPapersDao.getPapersList({project_id, type: \"all\", ...queryData});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setPapersList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n\n                //update state\n                setPapersList(res.results);\n                setTotalResults(res.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n\n        };\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count, queryData.sort, queryData.orderBy, forcePapersFetch]); //re-execute when these variables change\n\n\n    //handler for sort selection\n    function handleSelection(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n\n        //if I previously ordered by 'most recent' then I sort the next order by ASC\n        if(queryData.orderBy === \"date_created\"){\n            queryData.sort = \"ASC\";\n        }\n        queryData.orderBy=orderByOptions[index].value;\n\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e){\n        //trigger svg animation\n        if(queryData.sort === \"ASC\"){\n            queryData.sort = \"DESC\";\n        }\n        else{\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print loading image\n        output = (\n            <>\n                <LoadIcon class={\"small\"}/>\n            </> );\n    }\n    else {\n\n        output = (\n            <>\n                <PrintPapersList papersList={papersList} location={location} history={history}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </>\n        );\n    }\n\n    output = (\n        <div className=\"left-side-wrapper\">\n            <div className=\"paper-card-holder\">\n                <div className=\"order\" \n                    style={{\n                        pointerEvents: (!display || papersList.length === 0) ? \"none\" : \"\",\n                        opacity: (papersList.length === 0) ? \"0.0\" : \"1.0\"\n                    }}>\n                    <div className=\"order-flex-item\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)} handler={handleSelection}/>\n                        <button type=\"button\" onClick={handelOrder} style={{display: (queryData.orderBy === \"date_created\") ? \"none\" : \"\"}}>\n                            <OrderArrow up={up}/>\n                        </button>\n                    </div>\n                </div>\n                {output}\n            </div>\n        </div>\n    );\n\n    return output;\n\n};\n\n\nexport default PapersList;","import React, {useState, useContext, useEffect, useRef} from \"react\";\n\nimport {projectsDao} from 'dao/projects.dao';\nimport {AppContext} from 'components/providers/appProvider'\n\nimport EditButton from \"components/svg/editButton\";\nimport RemoveButton from \"components/svg/removeButton\";\nimport LoadIcon from 'components/svg/loadIcon';\n\n/**\n * this is the description component for the project page\n */\n\n\nconst ProjectDescription = function({project, setProject, collaborators, setCollaborators}){\n\n    const mountRef = useRef(false); //in the future we should get ref from parent component because we also get to set its properties\n\n    //this is used as a toggle for checking if the user is trying to edit the name of the project\n    const [editing, setEditing] = useState(false);\n\n    //state form project description\n    const [description, setDescription] = useState(project.data.description);\n\n    //state form input collaborator\n    const [input, setInput] = useState(\"\");\n\n    //flag for collaborators loading\n    const [loadIconDisplay, setLoadIconDisplay] = useState(true);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    let output = <></>;\n\n    useEffect(() => {\n        mountRef.current = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //call the dao for getting collaborators\n            let res = await projectsDao.getProjectCollaborators(project.id);\n\n            //error checking\n            //if the component is still mounted and there is some other errors\n            if (mountRef.current && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and res isn't null\n            else if (mountRef.current &&  res) {\n                if(appConsumer.user){\n                    setCollaborators(res.filter(x => x.data.email !== appConsumer.user.email));\n                }\n                //show the page\n                setLoadIconDisplay(false);\n            }\n        }\n\n        fetchData();\n\n        return () => {\n            mountRef.current = false;\n        };\n    }, [])\n\n    //function for updating the description and name\n    async function updateProject(){\n\n        //if the new name o description are difference from the old name o description\n        if(description !== project.data.description){\n\n            //call the dao\n            let res = await projectsDao.putProject(project.id, {name: project.data.name, description : description});\n            console.log(res);\n\n            //empty string is the response from the dao layer in case of success(rember that empty string is a falsy value)\n            if (mountRef.current && res === \"\") {\n                console.log(\"scccc\");\n                let newProject = project;\n                newProject.data.description = description;\n                setProject({...newProject});\n                console.log(project);\n            }\n            //error checking\n            //if is other error\n            else if (mountRef.current && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n\n\n        }\n    }\n\n    //handles the click on the edit/confirm button\n    function handleEditRequest(e){\n        console.log(\"CLICK\");\n        if(!editing){//if the user was not editing I allow him to edit\n            setTimeout(//I wait for the button event to fire before blurring out the textarea\n                function(){\n                    document.getElementById(\"edit-project-description-input\").focus();\n                },100);\n            \n            setEditing(true);\n            console.log(editing)\n        }else{//if the user was editing I submit its changes\n            updateProject();\n        }\n    }\n\n    //format the date string\n    function formatDate(date){\n        return <span className=\"date\">{date.slice(0,10)} at {date.slice(11,19)}</span>\n    }\n\n    //function for removing collaborators\n    async function removeCollaborator(collaborator){\n        console.log(\"removing \" + collaborator + \" from \" + project.id);\n\n        const callApi = async () => {\n\n            //call the dao for getting collaborators\n            let res = await projectsDao.removeProjectCollaborator(project.id, collaborator);\n            //error checking\n            //there is some other errors\n            if (mountRef.current && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //didn't get an error\n            else{\n                let newCollabs = collaborators.filter(x => x.id !== collaborator);\n                console.log(newCollabs)\n                setCollaborators(newCollabs);\n            }\n        }\n        callApi();\n    }\n\n    //function for adding collaborator\n    async function addCollaborator(){\n        if(!collaborators.includes(input)){\n            console.log(\"adding \" + input);\n\n            const callApi = async () => {\n\n                //call the dao for getting collaborators\n                let res = await projectsDao.addProjectCollaborator(project.id, {\"email\": input});\n                //error checking\n                //there is some other errors\n                if (mountRef.current && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }\n                //didn't get an error\n                else if (res) {\n                    setInput(\"\");\n                    setCollaborators([...collaborators, res]);\n                }\n            }\n            callApi();\n        }\n    }\n\n\n    if(loadIconDisplay){\n        output = (\n            <div className=\"right-side-wrapper project-description hidden-form-description\">\n                <h2>Description:</h2>\n                <LoadIcon/>\n            </div>\n            );\n    }else{\n        output = (\n            <div className={(!editing) ? \"right-side-wrapper project-description hidden-form-description\" : \"right-side-wrapper project-description\"}>\n                <h2>Description:</h2>\n                <p style={{fontSize: (editing) ? \"0px\" : \"15px\"}}> {project.data.description}</p>\n                <form className=\"edit-project-description\" style={{height:(editing) ? \"\" : \"0px\"}}>\n                        <textarea id=\"edit-project-description-input\"  value={description} style={{width: (editing) ? \"100%\" : \"0%\", padding: (editing) ? \"\" : \"0px\", height:(editing) ? \"\" : \"0px\"}}\n                        onChange={(e) => setDescription(e.target.value)}\n                        onBlur={(e) => {\n                                        console.log(\"blurring\");\n                                        setEditing(false);\n                                    }}\n                        />\n                        <button className=\"edit-button\" onMouseDown={handleEditRequest} type=\"button\">\n                            <EditButton confirm={editing}/>\n                        </button>\n                </form>\n                <h2>Additional info:</h2>\n                <p className=\"project-date-info\"> <span>Created</span> {formatDate(project.date_created)} </p>\n                <p className=\"project-date-info\"> <span>Last edited</span> {formatDate(project.date_last_modified)} </p>\n                <h2>Collaborators:</h2>\n                {(!collaborators || collaborators.length === 0) ? \"You're not sharing this project with anyone\" : \"\"}\n                {(collaborators) ?\n                    collaborators.map((element, index) =>\n                    <div className=\"collaborator-wrapper\" key={index}>\n                        <p className=\"collaborator\">{element.data.email}</p>\n                        <button type=\"button\" className=\"remove-btn\" name={element.data.email}\n                            value={element.data.email} //name and value don't work on the button event for some reasons\n                            onClick={(e) => {\n                                removeCollaborator(element.id);\n                            }}>\n                            <RemoveButton/>\n                        </button>\n                    </div>)\n                    :\n                    <></>\n                }\n                <form className=\"add-collaborator\" onSubmit={addCollaborator}>\n                    <input type=\"text\" id=\"edit-project-description-input\" placeholder=\"add a collaborator\" value={input}\n                        onChange={(e) => {setInput(e.target.value);}}\n                    />\n                    <button className=\"add-collaborator-button\" disabled={(!input || input === \"\")}>\n                        \n                    </button>\n                </form>\n            </div>\n        );\n    }\n\n    return output;\n}\n\nexport default ProjectDescription;","import React, {useState, useContext, useRef, useEffect} from \"react\";\n\nimport {updateFileDao} from \"dao/updateFile.dao\";\n\nimport CloseButton from 'components/svg/closeButton';\n\nimport { AppContext } from 'components/providers/appProvider'\nimport LoadIcon from \"components/svg/loadIcon\";\n\n/**\n * this is the form for uploading a .csv of papers\n */\nfunction PapersCsvForm(props) {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //title field\n    const [title, setTitle] = useState(\"\")\n\n    //year field\n    const [year, setYear] = useState(\"\")\n\n    //abstract field\n    const [abstract, setAbstract] = useState(\"\")\n\n    //author field\n    const [authors, setAuthors] = useState(\"\")\n\n    //id(eid, doi) field\n    const [id, setId] = useState(\"\");\n\n    //flag for csv upload\n    const [csvUpload, setCsvUpload] = useState(false)\n\n    //reference for the input file field\n    const inputElement = useRef(null);\n\n    //function to handle file submission\n    async function handleSubmission(){\n\n        //get the file object\n        let file = inputElement.current.files[0];\n        console.log(file.name);\n        //if this file exists\n        if(file){\n\n            //check file extension\n            if(!/\\.(csv|CSV)$/.test(file.name)){\n                appConsumer.setNotificationMessage(\"The file must be a csv!\");\n            }\n            else{\n                //open flag of loading\n                setCsvUpload(true);\n\n                const map = {\n                    \"authors\" : (authors && authors !== \"\") ? authors : \"Authors\",\n                    \"title\" : (title && title !== \"\") ? title : \"Title\",\n                    \"year\" : (year && year !== \"\") ? year : \"Year\",\n                    \"date\" : \"\",\n                    \"source_title\" : \"\", //\"Source title\",\n                    \"link\" : \"\", //\"Link\",\n                    \"abstract\" : (abstract && abstract !== \"\") ? abstract : \"Abstract\",\n                    \"document_type\" : \"\", //\"Document Type\",\n                    \"source\" : \"\", //Source\",\n                    \"eid\" : (id && (id === \"eid\" || id === \"EID\")) ? id : ((!id) ? \"EID\" : \"\"), //EID\",\n                    \"abstract_structured\" : \"\", //abstract_structured\",\n                    \"filter_oa_include\" : \"\", //filter_OA_include\",\n                    \"filter_study_include\" : \"\", //filter_study_include\",\n                    \"notes\" : \"\", //notes\",\n                    \"manual\" : \"\", //manual\",\n                    \"doi\" : (id && (id === \"doi\" || id === \"DOI\")) ? id : \"\", //doi\"\n                    /*\n                    Authors,Title,Year,Source title,Link,Abstract,\n                    Document Type,Source,EID,abstract_structured,\n                    filter_OA_include,filter_study_include,notes\n                    */\n                }\n\n                //prepare the form data for post\n                let formData = new FormData();\n                formData.append('file', file);\n                formData.append('project_id', props.project_id);\n                formData.append('fields', JSON.stringify(map));\n\n\n                //call the dao\n               let res = await updateFileDao.uploadCsv(formData);\n               console.log(res);\n\n                \n                //if there is a error\n                if (res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setNotificationMessage(\"Error during parsing file\");\n                \n                }\n                else{\n                    //set paperdata\n                    //setPaperData(res);\n                    props.setForcePapersFetch(!props.forcePapersFetch);\n                    props.setVisibility(!props.visibility);\n                }\n\n\n               setTimeout(() => {\n                    //close flag of loading\n                    setCsvUpload(false);\n                }, 2000);\n\n\n            }\n        }\n    }\n\n\n    let output = \"\";\n\n    if(csvUpload){\n        output = (<LoadIcon/>);\n    }else{\n        output = (\n            <>\n            <button type=\"button\" className=\"close-btn\" onClick={(e) => {\n                props.setVisibility(!props.visibility);\n            }}><CloseButton/></button>\n\n            <h2>Upload papers CSV</h2>\n\n            <div className=\"field-names\">\n                <p>Field names<span>(leave empty for default values)</span></p>\n                <div className=\"field-input-row\">\n                    <div className=\"field-input-holder\">\n                        <label>Title : </label>\n                        <input\n                            name=\"name\"\n                            type=\"text\" \n                            placeholder=\"title\" \n                            value={title}\n                            onChange={(e) => {setTitle(e.target.value)}}    \n                        />\n                    </div>\n                    <div className=\"field-input-holder\">\n                        <label>Year : </label>\n                        <input\n                            name=\"name\"\n                            type=\"text\" \n                            placeholder=\"year\" \n                            value={year}\n                            onChange={(e) => {setYear(e.target.value)}}    \n                        />\n                    </div>\n                </div>\n                <div className=\"field-input-row\">\n                    <div className=\"field-input-holder\">\n                        <label>Abstract : </label>\n                        <input\n                            name=\"name\"\n                            type=\"text\" \n                            placeholder=\"abstract\" \n                            value={abstract}\n                            onChange={(e) => {setAbstract(e.target.value)}}    \n                        />\n                    </div>\n                    <div className=\"field-input-holder\">\n                        <label>Authors : </label>\n                        <input\n                            name=\"name\"\n                            type=\"text\" \n                            placeholder=\"authors\" \n                            value={authors}\n                            onChange={(e) => {setAuthors(e.target.value)}}    \n                        />\n                    </div>\n                </div>\n                <div className=\"field-input-row\">\n                    <div className=\"field-input-holder\">\n                        <label>ID : </label>\n                        <input\n                            name=\"name\"\n                            type=\"text\" \n                            placeholder=\"id, eid, doi, ...\" \n                            value={id}\n                            onChange={(e) => {setId(e.target.value)}}    \n                        />\n                    </div>\n                </div>\n            </div>\n            <input type=\"file\"name =\"file\" id=\"real-input\" ref={inputElement} onChange={handleSubmission}/>\n            <button className=\"file-input\" type=\"button\" onClick={() => {inputElement.current.click();}}>Uplaod .csv file</button>\n            </>\n        );\n    }\n    return (\n        <>\n            <form className=\"modal floating-form add-csv-papers\" style={{visibility: (!props.visibility) ? 'hidden' : '' }}>\n                {output}\n            </form>\n        </>\n    );\n\n\n}\n\n\nexport default PapersCsvForm;","import React, {useState} from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport PapersList from 'components/projects_page/papers_tab/papersList';\nimport ProjectDescription from 'components/projects_page/papers_tab/projectDescription';\nimport {join} from 'utils';\n\nimport Cover from \"components/modules/cover\";\nimport PapersCsvForm from \"components/projects_page/papers_tab/forms/papersCsvForm\";\n\n\n/**\n * this is the paper tab which will call the other components\n */\nconst PapersTab = function (props) {\n\n    //bool to control visualization of form\n    const [displayCsvForm, setDisplayCsvForm] = useState(false);\n\n    //paper fetch toggler (its value will be toggled and it will trigger the useEffect fetching papers)\n    const [forcePapersFetch, setForcePapersFetch] = useState(false);\n\n    return (\n        <>\n            <Cover cls={displayCsvForm ? \"full-screen\" : \"\"} handler={setDisplayCsvForm}/>\n            <PapersCsvForm visibility={displayCsvForm} setVisibility={setDisplayCsvForm} project_id={props.project_id}\n                forcePapersFetch={forcePapersFetch} setForcePapersFetch={setForcePapersFetch}\n            />\n            <ProjectDescription project={props.project} setProject={props.setProject} collaborators={props.collaborators} setCollaborators={props.setCollaborators}/>\n            <PapersList project_id={props.project_id} location={props.location} match={props.match} history={props.history}\n                forcePapersFetch={forcePapersFetch}\n            />\n            <div className=\"bottom-right-button-holder\">\n                <div>\n                    <button className=\"bottom-right-btn add-csv-papers-btn\" type=\"button\" value=\"toggle-insert-form\" \n                    onClick={(e) => {\n                        setDisplayCsvForm(!displayCsvForm);\n                    }}>\n                        <div className=\"btn-title\">Upload .csv papers</div><div className=\"btn-icon\"> </div>\n                    </button>\n                </div>\n                <div>\n                    <Link to={join(props.match.url,\"/addpaper\")}>\n                        <button className=\"bottom-right-btn add-custompaper-btn\">\n                            <div className=\"btn-title\">Add Custom Paper</div><div className=\"btn-icon\"> </div>\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default PapersTab;","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * get a specific filter\n */\nasync function selectById(id){\n    let url = config.home + config.filters + \"/\" + id;\n\n    const res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to get a list of filters associated with a project\n * @param queryData\n * @return {array[objects]}\n */\nasync function getFiltersList(queryData) {\n    let url = config.home + config.filters;\n    const res = await http.get(url, queryData);\n    return res;\n\n}\n\n/**\n * dao to post a new filter\n * @param bodyData\n * @return {Object} filter created\n */\nasync function postFilterIntoProject(bodyData) {\n    let url = config.home + config.filters;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to delete a filter\n * @param filter_id\n * @return {String} empty string\n */\nasync function deleteFilter(filter_id) {\n    let url = config.home + config.filters + \"/\" + filter_id;\n    return await http.delete(url);\n}\n\n/**\n * dao to update a filter\n * @param filter_id\n * @param bodyData\n * @return {String} empty string\n */\nasync function putFilter(filter_id, bodyData) {\n    let url = config.home + config.filters + \"/\" + filter_id;\n    return await http.put(url, bodyData);\n}\n\nconst projectFiltersDao = {\n    selectById,\n    getFiltersList,\n    postFilterIntoProject,\n    deleteFilter,\n    putFilter,\n    \"abortRequest\" : http.abortRequest\n}\n\n\n\nexport {projectFiltersDao};\n","import React, {useEffect, useContext, useRef} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n/**\n * this is the form for adding a new filter to a project\n */\n\n\nconst InsertFilterForm = function(props){\n\n    const mountRef = useRef(false);\n\n    let yup = require('yup');\n\n    const predicateValidationSchema = yup.object().shape({\n        predicate: yup.string().required('please enter a question'),\n        inclusion_description: yup.string(),\n        exclusion_description: yup.string()\n    });\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    let output = \"\";\n    output = (\n        <div className=\"right-side-wrapper form-filter-wrapper\">\n            <Formik\n                initialValues={{predicate: '', inclusion_description: '', exclusion_description: ''}}\n                validationSchema={predicateValidationSchema}\n                onSubmit={async (values, { setSubmitting, resetForm }) => {\n                    let bodyData = {project_id: props.project_id, \n                                    filter: {\n                                        predicate: values.predicate, \n                                        inclusion_description: values.inclusion_description, \n                                        exclusion_description: values.exclusion_description\n                                    }\n                                };\n\n                    //call dao\n                    let res = await projectFiltersDao.postFilterIntoProject(bodyData);\n\n                    //error checking\n                    if(mountRef.current && res.message){\n                        //pass error object to global context\n                        appConsumer.setError(res);\n                    }else if(mountRef.current && res){\n                        console.log(res);\n                        props.setFiltersList([res, ...(props.filtersList)])\n                    }\n                    if(mountRef.current){\n                        setSubmitting(false);\n                        resetForm({predicate: '', inclusion_description: '', exclusion_description: ''});\n                    }\n                }}\n                validateOnBlur={false}\n            >\n            {function ({ errors, touched, isSubmitting, isValid, setErrors, validateField, handleChange }) {\n                let output = \"\";\n                output = (\n                <Form className=\"add-filter\">\n                    <Field\n                        style={{borderBottom : (errors.predicate && touched.predicate) ? \"solid 1px #d81e1e\" : \"\"}}\n                        name=\"predicate\"\n                        type=\"text\" \n                        placeholder=\"Type a question, predicate, ...\"\n                        onChange={(e) => {handleChange(e); validateField('predicate')}}/>\n                    <Field\n                        style={{borderBottom : (errors.inclusion_description && touched.inclusion_description) ? \"solid 1px #d81e1e\" : \"\"}}\n                        name=\"inclusion_description\"\n                        component=\"textarea\"\n                        placeholder=\"Type what the answer should include (optional)\"/>\n                    <Field\n                        style={{borderBottom : (errors.exclusion_description && touched.exclusion_description) ? \"solid 1px #d81e1e\" : \"\"}}\n                        name=\"exclusion_description\"\n                        component=\"textarea\"\n                        placeholder=\"Type what the answer should not include (optional)\"/>\n                    <button type=\"submit\" disabled={isSubmitting || !isValid}>Add Filter</button>\n                </Form>\n            );\n            return output;\n        }}\n        </Formik>\n\n    </div>\n    );\n    return output;\n}\n\nexport default InsertFilterForm;\n","import React, {useContext, useEffect, useRef} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport CloseButton from 'components/svg/closeButton';\nimport {AppContext} from 'components/providers/appProvider';\n\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\n\nconst UpdateFilterForm = function ({project_id, filter, setFilter, yup, setEditing}) {\n\n    const mountRef = useRef(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //validation schema\n    const predicateValidationSchema = yup.object().shape({\n        predicate: yup.string().required('please enter a question'),\n        inclusion_description: yup.string(),\n        exclusion_description: yup.string()\n    });\n\n    return (\n        <Formik\n            initialValues={{predicate: filter.data.predicate, inclusion_description: filter.data.inclusion_description, exclusion_description: filter.data.exclusion_description}}\n            validationSchema={predicateValidationSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                let bodyData = {predicate: values.predicate, \n                                inclusion_description: values.inclusion_description, exclusion_description: values.exclusion_description};\n                \n                //call dao\n                let res = await projectFiltersDao.putFilter(filter.id, {project_id, ...bodyData});\n\n                //empty string is the response from the dao layer in case of success(rember that empty string is a falsy value)\n                if (mountRef.current && res === \"\") {\n                    setFilter({id: filter.id, data: {name: filter.data.name, ...bodyData}});\n                }\n                //error checking\n                //if is other error\n                else if (mountRef.current && res && res.message) {\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }\n                if(mountRef.current){\n                    setSubmitting(false);\n                    setEditing(false);\n                }\n            }}\n            validateOnBlur={false}\n        >\n        {function ({ errors, touched, isSubmitting, isValid, setErrors, validateField, handleChange }) {\n            let output = \"\";\n            output = (\n            <Form className=\"update-filter-card\">\n                <button type=\"button\" className=\"close-btn\" disabled={isSubmitting} onClick={(e) => {\n                    setEditing(false);\n                }}><CloseButton/></button>\n                <Field\n                    style={{borderBottom : (errors.predicate && touched.predicate) ? \"solid 1px #d81e1e\" : \"\"}}\n                    name=\"predicate\"\n                    type=\"text\" \n                    placeholder=\"Type a question, predicate, ...\"\n                    onChange={(e) => {handleChange(e); validateField('predicate')}}/>\n                <div className=\"textareas-description-wrapper\">\n                    <div>\n                        Positive answer\n                    </div>\n                    <div>\n                        Negative answer\n                    </div>\n                </div>\n                <div className=\"textareas-wrapper\">\n                    <Field\n                        style={{borderBottom : (errors.inclusion_description && touched.inclusion_description) ? \"solid 1px #d81e1e\" : \"\"}}\n                        name=\"inclusion_description\"\n                        component=\"textarea\"\n                        placeholder=\"Type what the answer should include (optional)\"/>\n                    <Field\n                        style={{borderBottom : (errors.exclusion_description && touched.exclusion_description) ? \"solid 1px #d81e1e\" : \"\"}}\n                        name=\"exclusion_description\"\n                        component=\"textarea\"\n                        placeholder=\"Type what the answer should not include (optional)\"/>\n                </div>\n                <button type=\"submit\" disabled={isSubmitting || !isValid}>Update Filter</button>\n            </Form>\n        );\n        return output;\n        }}\n        </Formik>\n    );\n\n};\n\nexport default UpdateFilterForm;","import React, {useState, useEffect} from \"react\";\n\nimport SideOptions from 'components/modules/sideOptions';\nimport UpdateFilterForm from \"./forms/updateFilterForm\";\n\n\n\nconst FilterCard = function ({project_id, filter, callDelete, yup}) {\n\n    //local copy of the filter to manage on the card and update form\n    const [localFilter, setLocalFilter] = useState(filter)\n\n    //bool to disable card while doing delete call\n    const [disabled, setDisabled] = useState(false);\n\n    //bool to display the edit form\n    const [editing, setEditing] = useState(false);\n\n    //side options\n    let sideOptions= [\"delete\", \"update\"];\n\n    //handle for the side options\n    function handleSideOptions(id, name){\n        if(name === \"delete\"){\n            setDisabled(true);\n            callDelete(id);\n        }\n        else if(name === \"update\"){\n            setEditing(true);\n        }\n    }\n\n    let output;\n\n    if(editing){\n        output = (\n            <UpdateFilterForm project_id={project_id} filter={localFilter} setFilter={setLocalFilter} yup={yup} setEditing={setEditing}/>\n        );\n    }\n    else{\n        output = (\n            <div className={(disabled) ? \"disabled\" : \"\"}>\n                <SideOptions options={sideOptions} handler={handleSideOptions} target={localFilter.id} cls=\"card-options\"/>\n                <h3><span className=\"filter-label\">{localFilter.data.name}</span> {localFilter.data.predicate}</h3>\n                <div className=\"answer\"><p><span><span>Include</span><span>:</span></span> {localFilter.data.inclusion_description || <i>empty criterion</i>}</p></div>\n                <div className=\"answer\"><p><span><span>Exclude</span><span>:</span></span> {localFilter.data.exclusion_description || <i>empty criterion</i>}</p></div>\n            </div>\n        );\n    }\n\n    return output;\n\n};\n\nexport default FilterCard;","import React from \"react\";\n\n/**\n * component svg \n */\nconst NoFilters = function (props) {\n\n    return (\n        <svg version=\"1.1\" id=\"no-filters\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t    viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st0-no-filters\" points=\"927.7,149.1 948.9,123.8 915.9,123.8 \t\t\"/>\n            <line className=\"st1-no-filters\" x1=\"806.2\" y1=\"123.8\" x2=\"138.9\" y2=\"123.8\"/>\n            <polyline className=\"st0-no-filters\" points=\"84.1,123.8 51.1,123.8 72.3,149.1 \t\t\"/>\n            <path className=\"st2-no-filters\" d=\"M136.4,225.6l260.1,310.2c11.4,13.6,17.7,30.8,17.7,48.6v271.2c0,37.9,30.8,68.7,68.7,68.7h34.3\n                c37.9,0,68.7-30.8,68.7-68.7V584.3c0-17.8,6.3-35,17.7-48.6l292.1-348.4\"/>\n        </svg>\n    );\n};\n\nexport default NoFilters;","import React, {useEffect, useContext, useRef} from \"react\";\n\nimport FilterCard from \"./filterCard\";\nimport NoFilters from \"components/svg/noFilters\";\n\nimport {AppContext} from 'components/providers/appProvider';\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\nconst PrintFiltersList = function ({filtersList, setFiltersList, project_id}) {\n\n    const mountRef = useRef(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    let yup = require('yup');\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n    \n    //function to delete filter and update the list\n    async function deleteFilter(id){\n        console.log(\"deleting \" + id);\n            \n        //call the dao\n        let res = await projectFiltersDao.deleteFilter(id);\n\n        //error checking\n        //if is other error\n        if (mountRef.current && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);\n        }\n        //if res isn't null\n        else if (mountRef.current && res !== null) {\n\n            appConsumer.setNotificationMessage(\"Successfully deleted\");\n            let newFiltersList = filtersList.filter((filter)=>filter.id !== id);\n            //update project list state\n            setFiltersList(newFiltersList);\n        }\n    }\n\n    let output = \"\";\n    //if list is empty, print a notice message\n    if (filtersList.length === 0) {\n        output = (\n            <div className=\"empty-list-wrapper empty-filters\"> <NoFilters/> \n            <p className=\"empty-list-description\"> There are no filters here, you can add new ones by filling the form to the right</p></div>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else{\n        output = (\n            <>\n            {filtersList.map((element) =>\n                <div key={element.id} className=\"generic-card filter-card\">\n                    <FilterCard project_id={project_id} filter={element} filtersList={filtersList} callDelete={deleteFilter} yup={yup}/>\n                </div>\n            )}\n            </>\n        );\n    }\n    return output;\n\n\n};\n\nexport default PrintFiltersList;","import React, {useState, useEffect, useContext} from \"react\";\n\nimport {createQueryData} from 'utils/index';\n\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\nimport InsertFilterForm from \"components/projects_page/filters_tab/forms/insertFilterForm\";\nimport PrintFiltersList from \"./printFiltersList\";\nimport Pagination from \"components/modules/pagination\";\n\nimport LoadIcon from 'components/svg/loadIcon';\n\nimport {AppContext} from 'components/providers/appProvider';\n\nconst queryParams = [\n    {label: \"orderBy\", default: \"date_created\"},\n    {label: \"sort\", default: \"ASC\"},\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n];\n\nconst FiltersTab = function (props) {\n\n    const [filtersList, setFiltersList] = useState([]);\n\n    //filters fetch flag\n    const [filtersFetch, setFiltersFetch] = useState(true);\n\n    //total number of fetched results (useful for the pagination component)\n    const [totalResults, setTotalResults] = useState(0);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(props.location.search, queryParams);\n\n    useEffect(() => {\n        let mnt = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setFiltersFetch(true);\n\n            //call the dao\n            let res = await projectFiltersDao.getFiltersList({\"project_id\" : props.project_id, ...queryData});\n\n            console.log(res);\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setFiltersList([]);\n                setTotalResults(0);\n                //show the page\n                setFiltersFetch(false);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n                //update state\n                setFiltersList(res.results);\n                setTotalResults(res.totalResults);\n                //show the page\n                setFiltersFetch(false);\n            }\n\n        };\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count, queryData.sort, queryData.orderBy]); //re-execute when these variables change\n\n    return (\n        <>\n            <InsertFilterForm project_id={props.project_id} start={queryData.start} filtersList={filtersList} setFiltersList={setFiltersList}/>\n            <div className=\"left-side-wrapper filters-wrapper\">\n                {(filtersFetch) ?\n                    (\n                        <LoadIcon class={\"small\"}/>\n                    ) :\n                    (\n                        <>\n                        <PrintFiltersList filtersList={filtersList} setFiltersList={setFiltersList} project_id={props.project_id}/>\n                        <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={props.match.url}/>\n                        </>\n                    )\n                }\n            </div>\n        </>\n    );\n}\n\n\nexport default FiltersTab;\n","import React, {useState, useEffect, useContext} from \"react\";\nimport {withRouter} from \"react-router-dom\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao';\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport Select from 'components/forms_elements/select';\nimport {PrintBacklogPapersList} from 'components/modules/printPapersList';\nimport OrderArrow from 'components/svg/orderArrow';\nimport Pagination from \"components/modules/pagination\";\nimport {createQueryStringFromObject, createQueryData, getIndexOfObjectArrayByKeyAndValue} from 'utils/index';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n//confidence value array\nconst confidenceValues = [\n    {label : \"0.00\", value: 0.0},\n    {label : \"0.10\", value: 0.1},\n    {label : \"0.20\", value: 0.2},\n    {label : \"0.30\", value: 0.3},\n    {label : \"0.40\", value: 0.4},\n    {label : \"0.50\", value: 0.5},\n    {label : \"0.60\", value: 0.6},\n    {label : \"0.70\", value: 0.7},\n    {label : \"0.80\", value: 0.8},\n    {label : \"0.90\", value: 0.9},\n    {label : \"1.00\", value: 1.0},\n];\n\n//will keep valid minimum values\nvar minConfidenceValues = [{label : \"0.00\", value: 0.0}];\n//will keep valid maximum values\nvar maxConfidenceValues = [{label : \"1.00\", value: 1.0}];\n\n//order options\nconst orderByOptions = [\n    { value: 'date_created', label: 'Recently Added' },\n    { value: 'title', label: 'Title' }\n];\n\nconst queryParams = [\n    {label: \"orderBy\", default: \"date_created\"},\n    {label: \"min_confidence\", default: 0.0},\n    {label: \"max_confidence\", default: 1.0},\n    {label: \"sort\", default: \"ASC\"},\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n];\n\n/**\n * the local component that manages the papers in the backlog of a project\n */\nconst BacklogPapers = ({project_id, totalResults, setTotalResults, match, location, history}) => {\n\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //filters\n    const [filtersList, setFiltersList] = useState([]);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(location.search, queryParams);\n\n    const [up, setUp] = useState(queryData.sort);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let  mnt = true;\n\n        //check sort parameter for animation\n        if(queryData.orderBy !== \"date_created\" && up !== queryData.sort){\n            setUp(queryData.sort);\n            //trigger animation when sorting changes\n            document.getElementById(\"ani-order-arrow\").beginElement();\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setDisplay(false);\n\n            //max confidence that can be selected must be above the min value\n            maxConfidenceValues = confidenceValues.filter(c => c.value > parseFloat(queryData.min_confidence));\n            //min confidence that can be selected must be below the max value\n            minConfidenceValues = confidenceValues.filter(c => c.value < parseFloat(queryData.max_confidence));\n\n            //call the dao for getting the filters, this way I can match the data with the filters confidence array\n            let res = await projectFiltersDao.getFiltersList({\"project_id\" : project_id});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setFiltersList([]);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n                //update state\n                setFiltersList(res.results);\n            }\n\n            //call the dao for getting the papers\n            let resx = await projectPapersDao.getPapersList({project_id, type: \"backlog\", ...queryData});\n\n            //error checking\n            //if is 404 error\n            if (mnt && resx && resx.message === \"Not Found\") {\n                setPapersList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if is other error\n            else if (mnt && resx && resx.message) {\n                //pass error object to global context\n                appConsumer.setError(resx);\n            }\n            //if res isn't null\n            else if (mnt && (resx !== null)) {\n                //update state\n                setPapersList(resx.results);\n                setTotalResults(resx.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n        }\n\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count, queryData.sort, queryData.orderBy, queryData.min_confidence, queryData.max_confidence]); //re-execute when these variables change\n\n\n    /*\n        START OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //handler for sort selection\n    function handleSelection(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n\n        //if I previously ordered by 'most recent' then I sort the next order by ASC\n        if(queryData.orderBy === \"date_created\"){\n            queryData.sort = \"ASC\";\n        }\n        queryData.orderBy=orderByOptions[index].value;\n\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e){\n        //trigger svg animation\n        if(queryData.sort === \"ASC\"){\n            queryData.sort = \"DESC\";\n        }\n        else{\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    //handler for min confidence selection\n    function handleMinConfidenceSelection(e) {\n        //get index value\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.min_confidence = minConfidenceValues[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for max confidence selection\n    function handleMaxConfidenceSelection(e) {\n        //get index value\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.max_confidence = maxConfidenceValues[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    /*\n        END OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n\n    let output;\n    let resultOutput;\n    //if the page is loading\n    if (display === false) {\n        //print loading image\n        resultOutput = (\n            <>\n                <LoadIcon class={\"small\"}/>\n            </>\n        );\n    }\n    else {\n        //print results\n        resultOutput = (\n            <>\n                <PrintBacklogPapersList papersList={papersList} filtersList={filtersList}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </>\n        );\n    }\n\n    output = (\n        <div className={(papersList.length === 0) ? \"center-side-wrapper\" :\"left-side-wrapper\"}>\n            <div className=\"paper-card-holder large\">\n                <div className=\"order\" style={{\n                        pointerEvents: (!display || papersList.length === 0) ? \"none\" : \"\",\n                        opacity: (papersList.length === 0) ? \"0.0\" : \"1.0\"\n                    }}>\n                    <div className=\"order-flex-item\">\n                        <label>sort by:</label>\n                        <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)} \n                            handler={handleSelection}\n                            type={\"medium\"}\n                            code={0}\n                            />\n                        <button type=\"button\" onClick={handelOrder} style={{display: (queryData.orderBy === \"date_created\") ? \"none\" : \"\"}}>\n                            <OrderArrow up={up}/>\n                        </button>\n                    </div>\n                    <div className=\"order-flex-item\">\n                        <label>min confidence:</label>\n                        <Select options={minConfidenceValues}\n                                selected={getIndexOfObjectArrayByKeyAndValue(minConfidenceValues, \"value\", parseFloat(queryData.min_confidence))}\n                                handler={handleMinConfidenceSelection}\n                                //optional fields\n                                type={\"mini\"} //displays select menu with a smaller width\n                                code={1} //you can put here a random number in case you have multiple selects on the same page\n                                            //this way you won't trigger the arrow animation for all the selects at the same time\n                                />\n                        <label>max confidence:</label>\n                        <Select options={maxConfidenceValues}\n                                selected={getIndexOfObjectArrayByKeyAndValue(maxConfidenceValues, \"value\", parseFloat(queryData.max_confidence))}\n                                handler={handleMaxConfidenceSelection}\n                                type={\"mini\"}\n                                code={2}/>\n                    </div>\n                </div>\n                {resultOutput}\n            </div>\n        </div>\n    );\n\n    return output;\n\n};\n\n\nexport default withRouter(BacklogPapers);","import http from 'utils/conn'\nimport config from 'config/index'\n\n/**\n * start auto screening\n */\nasync function startAutoScreening(bodyData){\n    let url = config.home + config.auto_screening;\n    return await http.post(url, bodyData)\n}\n\n/**\n * auto screening status\n * @param project_id\n * @return {Number} completion percentage\n */\nasync function getAutoScreeningStatus(project_id) {\n    let url = config.home + config.auto_screening;\n    const res = await http.get(url, project_id);\n    return res;\n\n}\n\n/**\n * dao to get a screening\n * @param screening_id\n * @return {Object} project requested\n */\nasync function getScreening(screening_id) {\n    let url = config.home + config.screenings + \"/\" + screening_id;\n    let res = await http.get(url);\n    return res;\n}\n\n/**\n * dao to get next paper to screen\n * @param screening_id\n * @return {array[objects]}\n */\nasync function getProjectPaperToScreen(screening_id) {\n    let url = config.home + config.screenings + \"/\" + screening_id + \"/next\";\n    let res = await http.get(url);\n    return res;\n\n\n}\n\n/**\n * dao to get next paper to screen in a project\n * @param queryData\n * @return {array[objects]}\n */\nasync function getProjectsToScreen(queryData = \"\") {\n    let url = config.home + config.screenings;\n    let res = await http.get(url, queryData);\n    return res;\n\n\n}\n\n/**\n * sumbit a vote\n */\nasync function submitVote(bodyData){\n    let url = config.home + config.votes;\n    return await http.post(url, bodyData)\n}\n\nconst projectScreeningDao = {\n    startAutoScreening,\n    getAutoScreeningStatus,\n    getScreening,\n    getProjectPaperToScreen,\n    getProjectsToScreen,\n    submitVote,\n    \"abortRequest\" : http.abortRequest\n}\n\n\n\nexport {projectScreeningDao};\n","import React, {useEffect, useContext, useRef} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport Select from 'components/forms_elements/selectformik';\n\nimport CloseButton from 'components/svg/closeButton';\n\nimport {projectScreeningDao} from 'dao/projectScreening.dao';\n\nimport { AppContext } from 'components/providers/appProvider'\n\n//confidence value array\nconst confidenceValues = [\n    {label : \"0.90\", value: 0.9},\n    {label : \"0.80\", value: 0.8},\n    {label : \"0.70\", value: 0.7},\n    {label : \"0.60\", value: 0.6},\n    {label : \"0.50\", value: 0.5},\n    {label : \"0.40\", value: 0.4},\n    {label : \"0.30\", value: 0.3},\n    {label : \"0.20\", value: 0.2},\n    {label : \"0.10\", value: 0.1},\n];\n\n/**\n * this is the form for starting the auto screening\n */\nfunction AutoScreeningForm(props) {\n\n    const mountRef = useRef(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    return (\n        <>\n        <Formik\n            initialValues={{threshold: 0.9}}\n            onSubmit={async (values, { setSubmitting }) => {\n                let bodyData = {project_id: props.project_id, threshold: values.threshold};\n\n                //call dao\n                let res = await projectScreeningDao.startAutoScreening(bodyData);\n\n                //error checking\n                if(mountRef.current && res.message){\n                    //pass error object to global context\n                    appConsumer.setError(res);\n                }else \n                if(mountRef.current){\n                    setSubmitting(false);\n                    props.setVisibility(!props.visibility);\n                    props.setAutoScreeningFlag(true);\n                }\n            }}\n            validateOnBlur={false}\n        >\n        {function ({ errors, touched, isSubmitting, isValid, setErrors, validateField, handleChange }) {\n            let output = \"\";\n            output = (<Form className=\"modal floating-form start-auto-screening\" style={{visibility: (!props.visibility) ? 'hidden' : '' }}>\n                <button type=\"button\" className=\"close-btn\" onClick={(e) => {\n                    props.setVisibility(!props.visibility);\n                }}><CloseButton/></button>\n\n                <h2>Start automated screening?</h2>\n\n                <p>\n                    The process will analyze the papers in the backlog and will\n                    assing a confidence score to each one, this may take a while.\n                    You can select a confidence threshold and, as the process is\n                    proceeding, all papers with a resulting confidence level above\n                    the threshold will be automatically set as screened (in). The\n                    remaining ones will be here in the backlog.\n                </p>\n\n                <Field\n                    name=\"threshold\"\n                    render={({ field, form }) => (\n                            <Select options={confidenceValues} {...field} form={form} type={\"mini\"}/>\n                    )}\n                />\n\n                <button className=\"start-btn\" type=\"submit\" disabled={isSubmitting}>Start Auto-screening</button>\n            </Form>\n            );\n            return output;\n        }}\n        </Formik>\n\n       \n        </>\n    );\n\n\n}\n\n\nexport default AutoScreeningForm;","import React, {useState, useEffect} from \"react\";\n\nimport RadioTick from 'components/svg/radioTick';\n\nconst RadioBox = function ({ label, name, val, isChecked, form, className, disabled}) {\n\n    let output = \"\";\n    const [tick, setTick] = useState(<></>);\n    useEffect(() => {\n        if(isChecked){\n            setTick(<RadioTick/>);\n        }else{\n            setTick(<></>)\n        }\n    }, [isChecked])\n\n    function radioHandler(){\n        form.setFieldValue(name, val);\n    }\n\n    output= (\n        <label className={(className) ? \"radiobox-container \" + className : \"radiobox-container\"}>\n        <input type=\"radio\" value={val} name={name} checked={isChecked} onChange={radioHandler} disabled={disabled}/>\n        <span className=\"radiomark\">{tick}</span>\n        <span>{label}</span>\n        </label>\n    );\n    return output;\n}\n\nexport default RadioBox;","import React from \"react\";\n\nimport Image from 'components/modules/image';\nimport SelectTick from 'components/svg/selectTick';\n\n/**\n * userCheckBox for Formik. It's a component, displaying the user data,\n * that acts like a checkbox\n */\nconst UserCheckbox = ({ user, alreadyScreeners, form, name }) => {\n\n    console.log(alreadyScreeners.current);\n\n    function selectHandler() {\n        if(!alreadyScreeners.current.includes(user.id)){\n            if(form.values.screeners.includes(user.id)){\n                form.setFieldValue(name, form.values.screeners.filter((id) => id !== user.id));\n            }else{\n                form.setFieldValue(name, [...(form.values.screeners), user.id]);\n            }\n        }\n    }\n\n    var output = (\n        <button type=\"button\" className=\"user-data\"\n            onClick={selectHandler}\n            disabled={alreadyScreeners.current.includes(user.id)}\n        >   \n        <div className=\"user-data-image-wrapper\">\n            <div className=\"img-wrapper-cover\" style={{opacity: (form.values.screeners.includes(user.id) || alreadyScreeners.current.includes(user.id)) ? \"0.9\" : \"0.0\"}}>\n                <SelectTick color={\"white\"}/>\n            </div>\n            <Image className=\"user-data-image\" alt={\"profile image\"} src={user.data.picture || user.data.image} type= {\"profile-pic\"}/>\n        </div>\n        <p className=\"user-data-names\">{user.data.name} {user.data.surname}</p>\n        </button>\n    );\n    return output;\n}\n\nexport default UserCheckbox;","import React, {useEffect, useContext, useRef, useState} from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport {projectsDao} from 'dao/projects.dao';\nimport {projectScreeningDao} from 'dao/projectScreening.dao';\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\nimport RadioBox from \"components/forms_elements/radioboxFormik\";\nimport UserCheckbox from 'components/projects_page/screening_tab/backlog_subtab/forms/userCheckboxFormik';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport CloseButton from 'components/svg/closeButton';\n\nimport { AppContext } from 'components/providers/appProvider';\n\nconst _array = require('lodash/array');\n\n/**\n * this is the form for starting the manual screening\n */\nfunction ManualScreeningForm(props) {\n\n    const mountRef = useRef(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //collaborators fetch state\n    const [collaboratorsFetch, setCollaboratorsFetch] = useState(true);\n\n    //collaborators list\n    const [collaborators, setCollaborators] = useState([]);\n\n    //screeners ref\n    const screeners = useRef([])\n\n    //bool for multi predicate option availability\n    const [isMpAvailable, setIsMpAvailable] = useState(false);\n\n    useEffect(() => {\n        mountRef.current = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //call the dao for getting collaborators\n            let res = await projectsDao.getProjectCollaborators(props.project_id);\n\n            //error checking\n            //if the component is still mounted and there is some other errors\n            if (mountRef.current && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and res isn't null\n            else if (mountRef.current && res) {\n                setCollaborators(res);\n\n                //call the dao for getting the filters(this way I know if the user can start multi predicate screening)\n                let resx = await projectFiltersDao.getFiltersList({\"project_id\" : props.project_id});\n                //error checking\n                //if the component is still mounted and  is 404 error it means that there are no filters\n                if (mountRef.current && resx && resx.message === \"Not Found\") {\n                    //so I set multi-predicate option availability to false\n                    setIsMpAvailable(false);\n                }\n                //if the component is still mounted and  there are some other errors\n                else if (mountRef.current && resx && resx.message) {\n                    //pass error object to global context\n                    appConsumer.setError(resx);\n                }\n                //if the component is still mounted and  res isn't null\n                else if (mountRef.current && resx) {\n                    //update state\n                    setIsMpAvailable(true);\n                }\n\n                let resz = await projectsDao.getProjectScreeners(props.project_id);\n                if(mountRef.current && resz && resz.message){\n                    //pass error object to global context\n                    appConsumer.setError(resz);\n                }else{\n                    screeners.current = resz.map((user) => user.id);\n                }\n                //show the list\n                setCollaboratorsFetch(false);\n            }\n        }\n            \n        fetchData();\n        \n\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    return (\n        <>\n        <Formik\n            initialValues={{screeners: [], screening_mode: \"single-predicate\"}}\n            onSubmit={async (values, { setSubmitting, resetForm }) => {\n\n                let bodyData = {array_user_ids: values.screeners, manual_screening_type: values.screening_mode};\n\n\n                if(values.screeners.length > 0){\n                    //If the project has not any screnners yet I do the POST\n                    let res;\n                    if(screeners.current.length === 0){\n                        res = await projectsDao.postProjectManualScreeningData(props.project_id, bodyData);\n                    }\n                    //otherwise I do the update\n                    else{\n                        res = await projectsDao.putProjectManualScreeningData(props.project_id, bodyData);\n                    }\n\n                    //error checking\n                    if(mountRef.current && res.message){\n                        //pass error object to global context\n                        appConsumer.setError(res);\n                    }else if(mountRef.current){\n                        setSubmitting(false);\n                        props.setVisibility(!props.visibility);\n                        props.setManualStarted(true);\n                        screeners.current = _array.union(values.screeners, screeners.current);\n                        resetForm({screeners: [], screening_mode: \"-\"});\n                    }\n                }\n\n            }}\n            validateOnBlur={false}\n        >\n        {function ({ errors, touched, isSubmitting, isValid, setErrors, validateField, handleChange, values }) {\n            let output = \"\";\n            let result = \"\";\n            if(collaboratorsFetch){\n                result = <LoadIcon class=\"small\" />;\n            }else{\n                result = (\n                    <>\n                    <p className=\"tip\">{(screeners.current.length === 0) ? \"Is a good practice to select at least two people for screening\" : \"\"}</p>\n                    <div className=\"users-list\">\n                        <Field\n                            name=\"screeners\"\n                            render={({ field, form }) => (\n                                <>\n                                    {collaborators.map(function (user) {\n                                        if(user.data.name !== \"\"){\n                                            return (\n                                                <div key={user.id}>\n                                                    <UserCheckbox user={user} alreadyScreeners={screeners} {...field} form={form}/>\n                                                </div>\n                                            );\n                                        }\n                                    })}\n                                </>\n                            )}\n                        />\n                    </div>\n                    <div className={(screeners.current.length !== 0) ? \"screening-type disabled\" : \"screening-type\"} \n                        style={{height: (screeners.current.length !== 0) ? \"0px\" : \"\", overflow: (screeners.current.length !== 0) ? \"hidden\" : \"\"}}>\n                        <label>Screening mode : </label>\n                        <Field\n                            name=\"screening_mode\"\n                            render={({ field, form }) => (\n                                <>\n                                    <RadioBox label={\"single-predicate\"} {...field} val={\"single-predicate\"} form={form}\n                                            isChecked={(values.screening_mode === \"single-predicate\")} \n                                            disabled={(screeners.current.length !== 0)}/>\n                                    <RadioBox className={(isMpAvailable) ? \"\" : \"disabled\"} label={\"multi-predicate\"} {...field} val={\"multi-predicate\"} form={form}\n                                            isChecked={(values.screening_mode === \"multi-predicate\")}\n                                            disabled={(screeners.current.length !== 0)}/>\n                                </>\n                            )}\n                        />\n                    </div>\n                    </>\n                );\n            }\n            output = (<Form className=\"modal floating-form start-manual-screening\" style={{visibility: (!props.visibility) ? 'hidden' : '' }}>\n                <button type=\"button\" className=\"close-btn\" onClick={(e) => {\n                    props.setVisibility(!props.visibility);\n                }}><CloseButton/></button>\n\n                <h2>Select screeners</h2>\n                {result}\n                <button className=\"start-btn\" type=\"submit\" style={{visibility: (collaboratorsFetch) ? 'hidden' : '' }} disabled={(values.screeners.length === 0 || isSubmitting)}>\n                    {(screeners.current.length === 0) ? \"Start Manual-screening\" : \"Add extra screeners\"}\n                </button>\n            </Form>\n            );\n            return output;\n        }}\n        </Formik>\n\n        </>\n    );\n\n}\n\n\nexport default ManualScreeningForm;","import React from \"react\";\n\n/**\n * component svg\n */\nconst ManualScreeningIcon = function (props) {\n\n    return (\n        <svg id=\"manual-screening\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <path className=\"st0-msi\" d=\"M327.9,827.9c0,0.1,0.1,0.3,0.1,0.4L97.5,911.8c-5.7,2.1-11.3-3.5-9.2-9.2l83.6-230.6c0.1,0,0.2,0.1,0.4,0.1\n                C250.7,698.5,301.7,749.5,327.9,827.9z\"/>\n            <path className=\"st0-msi\" d=\"M824.8,341.6L366.1,800.3c-4.2,4.2-11.4,2.8-13.6-2.8c-28.8-70.7-79.2-121-150-149.9c-5.5-2.3-7-9.4-2.8-13.6l458.7-458.7\n                c4.8-4.8,12-6.3,18.5-4c0,0,0.1,0,0.1,0C753.6,197,803.2,246.6,828.8,323c0,0,0,0.1,0,0.1C831.1,329.6,829.6,336.8,824.8,341.6z\"/>\n            <path className=\"st0-msi\" d=\"M882.5,283.9l-13.6,13.6c-29.9-80.4-85.8-136.3-166.4-166.4l13.6-13.6c45.6-45.6,119.7-46.2,165.5-0.7\n                c0.5,0.5,1.1,1.1,1.6,1.6C928.7,164.4,928.1,238.3,882.5,283.9z\"/>\n        </svg>\n    );\n};\n\nexport default ManualScreeningIcon;\n","import React from \"react\";\n\n/**\n * component svg\n */\nconst AutoScreeningIcon = function (props) {\n\n    return (\n        <svg id=\"auto-screening\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <path className=\"st0-asi\" d=\"M578.7,404.1c-17.9,11-35.8,22.3-53.5,33.7c-28.2-27.2-61.5-47.2-97-59.4c2.1-20.9,4-42.1,5.7-63\n                c-26.1-7.6-52.9-11.8-79.9-12.6c-4.8,20.6-9.5,41.1-13.9,61.7c-37.7,0.6-75.5,9.3-110.8,26.6c-13.3-16.4-26.8-32.3-40.5-48.5\n                c-12,6.5-23.4,13.7-34.4,21.7c-11,8-21.5,16.7-31.2,25.9c11,17.9,22.3,35.8,33.7,53.5c-27.2,28.2-47.2,61.5-59.4,97\n                c-20.9-2.1-42.1-4-63-5.7c-7.6,26.1-11.8,52.9-12.6,79.9c20.6,4.8,41.1,9.5,61.7,13.9c0.6,37.7,9.3,75.5,26.6,110.8\n                c-16.4,13.3-32.3,26.8-48.5,40.5c6.5,12,13.7,23.4,21.7,34.4c8.2,11,16.7,21.5,25.9,31.2c17.9-11,35.8-22.3,53.5-33.7\n                c28.2,27.2,61.5,47.2,97,59.4c-2.1,20.9-4,42.1-5.7,63c26.1,7.6,52.9,11.8,79.9,12.6c4.8-20.6,9.5-41.1,13.9-61.7\n                c37.7-0.6,75.5-9.3,110.8-26.6c13.3,16.4,26.8,32.3,40.5,48.5c11.8-6.5,23-13.7,34.3-21.9c11-8.2,21.5-16.7,31.2-25.9\n                c-11-17.9-22.3-35.8-33.7-53.5c27.2-28.2,47.2-61.5,59.4-97c20.9,2.1,42.1,4,63,5.7c7.6-26.1,11.8-52.9,12.6-79.9\n                c-20.6-4.8-41.1-9.5-61.7-13.9c-0.6-37.7-9.3-75.5-26.6-110.8c16.4-13.3,32.3-26.8,48.5-40.5c-6.5-11.8-13.7-23-21.9-34.3\n                C596.4,424.3,587.8,413.8,578.7,404.1z M487.3,608.7c2.9,26.1-1.1,52.3-12,76.1c-4.8,10.7-11,20.7-18.5,30.1\n                c-8,10.1-17.3,19-28.2,26.8c-10.8,7.8-22.3,14.1-34.3,18.5c-11.2,4.2-22.6,6.9-34.3,8.2c-26.1,2.9-52.3-1.1-76.1-12\n                c-10.7-4.8-20.7-11-30.1-18.5c-10.1-8-19-17.3-26.8-28.2c-7.8-10.8-14.1-22.3-18.5-34.3c-4.2-11.2-6.9-22.6-8.2-34.3\n                c-2.9-26.1,1.1-52.3,12-76.1c4.8-10.7,11-20.7,18.5-30.1c8-10.1,17.3-19,28.2-26.8c10.8-7.8,22.3-14.1,34.3-18.5\n                c11.2-4.2,22.6-6.9,34.3-8.2c26.1-2.9,52.3,1.1,76.1,12c10.7,4.8,20.7,11,30.1,18.5c10.1,8,19,17.3,26.8,28.2\n                c7.8,10.8,14.1,22.3,18.5,34.3C483.3,585.4,486.2,597,487.3,608.7z\"/>\n            <path className=\"st1-asi\" d=\"M976.6,328.2c-12.7-6.7-25.7-13.3-38.6-19.8c6.3-26.1,6.3-52.7,1.1-78c13.1-6.1,26.1-12.4,39-18.6\n                c-4.6-17.9-11.6-35.4-20.6-51.6c-13.7,4.4-27.6,8.8-41.3,13.3c-13.5-22.1-31.8-41.3-54.4-55.9c4.9-13.5,9.7-27.2,14.5-40.9\n                c-8-4.8-16.2-8.9-24.9-12.7c-8.6-3.8-17.3-6.9-26.3-9.3c-6.7,12.7-13.3,25.7-19.8,38.6c-26.1-6.3-52.7-6.3-78-1.1\n                c-6.1-13.1-12.4-26.1-18.6-39c-17.9,4.6-35.4,11.6-51.6,20.6c4.4,13.7,8.8,27.6,13.3,41.3c-22.1,13.5-41.3,31.8-55.9,54.4\n                c-13.5-4.9-27.2-9.7-40.9-14.5c-4.8,8-8.9,16.2-12.7,24.9c-3.8,8.8-6.9,17.3-9.3,26.3c12.7,6.7,25.7,13.3,38.6,19.8\n                c-6.3,26.1-6.3,52.7-1.1,78c-13.1,6.1-26.1,12.4-39,18.6c4.6,17.9,11.6,35.4,20.6,51.6c13.7-4.4,27.6-8.8,41.3-13.3\n                c13.5,22.1,31.8,41.3,54.4,55.9c-4.9,13.5-9.7,27.2-14.5,40.9c8,4.6,16.2,8.8,24.7,12.6s17.3,6.9,26.3,9.3\n                c6.7-12.7,13.3-25.7,19.8-38.6c26.1,6.3,52.7,6.3,78,1.1c6.1,13.1,12.4,26.1,18.6,39c17.9-4.6,35.4-11.6,51.6-20.6\n                c-4.4-13.7-8.8-27.6-13.3-41.3c22.1-13.5,41.3-31.8,55.9-54.4c13.5,4.9,27.2,9.7,40.9,14.5c4.6-8,8.8-16.2,12.6-24.7\n                C970.9,345.7,974.1,336.9,976.6,328.2z M824.2,345.9c-14.3,10.8-31.2,17.7-49.1,19.6c-8,1-16,0.8-24.2-0.4\n                c-8.8-1.1-17.3-3.6-25.7-7.2c-8.4-3.6-16-8.2-22.8-13.7c-6.3-5.1-12-11-16.9-17.3c-10.8-14.3-17.7-31.2-19.6-49.1\n                c-1-8-0.8-16,0.4-24.2c1.1-8.8,3.6-17.3,7.2-25.7c3.6-8.4,8.2-16,13.7-22.8c5.1-6.3,11-12,17.3-16.9c14.3-10.8,31.2-17.7,49.1-19.6\n                c8-1,16-0.8,24.2,0.4c8.8,1.1,17.3,3.6,25.7,7.2s16,8.2,22.8,13.7c6.3,5.1,12,11,16.9,17.3c10.8,14.3,17.7,31.2,19.6,49.1\n                c1,8,0.8,16-0.4,24.2c-1.1,8.8-3.6,17.3-7.2,25.7c-3.6,8.4-8.2,16-13.7,22.8C836.3,335.4,830.6,340.9,824.2,345.9z\"/>\n        </svg>\n    );\n};\n\nexport default AutoScreeningIcon;\n","import React from \"react\";\n\n/**\n * component svg\n */\nconst CrowdScreeningIcon = function (props) {\n\n    return (\n        <svg id=\"undecided-answer\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <g>\n                <circle className=\"st0-csi\" cx=\"253.1\" cy=\"277\" r=\"131.8\"/>\n                <path className=\"st0-csi\" d=\"M474.8,671.4c21.5,0,38.2-19.2,34.8-40.7c-16.4-106.8-97.2-218.1-250.1-218.1S25.8,523.9,9.4,630.7\n                    c-3.2,21.3,13.2,40.7,34.8,40.7H474.8z\"/>\n            </g>\n            <g>\n                <circle className=\"st0-csi\" cx=\"734.1\" cy=\"329\" r=\"131.8\"/>\n                <path className=\"st0-csi\" d=\"M955.8,723.2c21.5,0,38.2-19.2,34.8-40.7c-16.4-106.8-97.2-218.1-250.1-218.1S506.8,575.7,490.4,682.5\n                    c-3.2,21.3,13.2,40.7,34.8,40.7H955.8z\"/>\n            </g>\n            <g>\n                <circle className=\"st0-csi\" cx=\"449.2\" cy=\"460.3\" r=\"131.8\"/>\n                <path className=\"st0-csi\" d=\"M658.2,854.8c21.5,0,38.2-19.2,34.8-40.7c-16.4-106.8-97.4-218.1-250.1-218.1S209.2,707.2,192.8,814\n                    c-3.2,21.3,13.2,40.7,34.8,40.7L658.2,854.8L658.2,854.8z\"/>\n            </g>\n        </svg>\n    );\n    \n};\n\nexport default CrowdScreeningIcon;\n","import React, {useState, useEffect, useRef} from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport PapersList from 'components/projects_page/papers_tab/papersList';\nimport ProjectDescription from 'components/projects_page/papers_tab/projectDescription';\nimport {join} from 'utils';\n\nimport BacklogPapers from 'components/projects_page/screening_tab/backlog_subtab/backlogPapers';\n\nimport AutoScreeningForm from 'components/projects_page/screening_tab/backlog_subtab/forms/autoScreeningForm';\nimport ManualScreeningForm from 'components/projects_page/screening_tab/backlog_subtab/forms/manualScreeningForm';\nimport Cover from \"components/modules/cover\";\nimport ManualScreeningIcon from \"components/svg/manualScreningIcon\";\nimport AutoScreeningIcon from \"components/svg/autoScreeningIcon\";\nimport CrowdScreeningIcon from \"components/svg/crowdScreeningIcon\";\nimport { projectPapersDao } from \"dao/projectPapers.dao\";\nimport { projectScreeningDao } from \"dao/projectScreening.dao\";\n\n\n/**\n * this is the screening sub-tab\n */\nconst ScreeningBacklog = function ({project_id, project}) {\n\n    //bool to control visualization of form\n    const [displayManualForm, setDisplayManualForm] = useState(false);\n\n    //bool to control visualization of form\n    const [displayAutoForm, setDisplayAutoForm] = useState(false);\n\n    //autoScreening flag\n    const [autoScreeningFlag, setAutoScreeningFlag] = useState(false);\n\n    //number of papers hooks, used to check if there are papers\n    const [totalResults, setTotalResults] = useState(0);\n\n    //flag to check if manual screening was started successfully(in order to disable the button afterwards)\n    const [manualStarted, setManualStarted] = useState(false);\n\n    //effect on mount to check if auto-screening is running\n    useEffect(() => {\n        let mnt = true;\n        \n        async function checkStatus() {\n            let res = await projectScreeningDao.getAutoScreeningStatus({project_id});\n            if(res === false){\n                setAutoScreeningFlag(true);\n            }\n        }\n\n        //this is the first check we do when the component mounts\n        checkStatus();\n\n        return () => {\n            mnt = false;\n        };\n    },[]);\n\n    //effect that will start checking auto-screening status once I start it\n    useEffect(() => {\n        let mnt = true;\n        let poll = undefined;\n\n        if(autoScreeningFlag){\n            clearInterval(poll);\n            poll = setInterval(async () => {\n                let resx = await projectScreeningDao.getAutoScreeningStatus({project_id});\n                if(resx === true){\n                    setAutoScreeningFlag(false);\n                }\n\n            }, 1000);\n        }\n\n        return () => {\n            console.log(\"clearing polling\");\n            mnt = false;\n            clearInterval(poll);\n        };\n    },[autoScreeningFlag]);\n\n    let screeningStrategy = <></>;\n    if(totalResults !== 0){\n        screeningStrategy = (\n            <div className=\"bottom-right-screening-strategy-box\">\n                <h3>\n                    Screening strategy\n                </h3>\n                <div className=\"screening-strategy-buttons\">\n                    <div className=\"screening-strategy-btn-holder\">\n                        <button className=\"screening-strategy-btn manual\" type=\"button\"\n                            onClick={() => {setDisplayManualForm(true)}}\n                        > \n                        <ManualScreeningIcon/>\n                        </button>\n                        <div className=\"strategy-tooltip\">\n                            manual\n                        </div>\n                    </div>\n                    <div className=\"screening-strategy-btn-holder\">\n                        <svg id=\"circle-progress\"\n                            version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n                            viewBox=\"0 0 1000 1000\">\n                            <ellipse fill=\"none\" stroke=\"#0b8a42\" strokeWidth=\"30\" cx=\"500\" cy=\"500\" rx=\"480\" ry=\"480\"\n                                className=\"rotate-generic\"\n                                style={{strokeDasharray: \"3016\", opacity: (autoScreeningFlag) ? \"1.0\" : \"0.0\", strokeDashoffset: (autoScreeningFlag) ? \"2016\" : \"3016\", transition: \"all 0.2s\"}}\n                            />\n                        </svg>\n                        <button className=\"screening-strategy-btn auto\" type=\"button\"\n                            disabled={autoScreeningFlag}\n                            onClick={() => {setDisplayAutoForm(true)}}\n                        > \n                        <AutoScreeningIcon/>\n                        </button>\n                        <div className=\"strategy-tooltip\">\n                            automatic\n                        </div>\n                    </div>\n                    <div className=\"screening-strategy-btn-holder\">\n                        <button className=\"screening-strategy-btn crowdsource\" type=\"button\"> \n                        <CrowdScreeningIcon/>\n                        </button>\n                        <div className=\"strategy-tooltip\">\n                            crowdsourced\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <>\n\n            <Cover cls={displayManualForm ? \"full-screen\" : \"\"} handler={setDisplayManualForm}/>\n            <ManualScreeningForm visibility={displayManualForm} setManualStarted={setManualStarted}setVisibility={setDisplayManualForm} project_id={project_id}/>\n            \n            <Cover cls={displayAutoForm ? \"full-screen\" : \"\"} handler={setDisplayAutoForm}/>\n            <AutoScreeningForm visibility={displayAutoForm} setVisibility={setDisplayAutoForm} project_id={project_id} setAutoScreeningFlag={setAutoScreeningFlag}/>\n\n            <BacklogPapers project_id={project_id}\n                totalResults={totalResults} setTotalResults={setTotalResults} //I pass this hook so I will know how much papers are there\n            />\n            {screeningStrategy}\n        </>\n    );\n}\n\nexport default ScreeningBacklog;","import React, {useState, useEffect, useContext} from \"react\";\nimport {withRouter, Link} from \"react-router-dom\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport Select from 'components/forms_elements/select';\nimport {PrintManuallyScreenedPapersList} from 'components/modules/printPapersList';\nimport OrderArrow from 'components/svg/orderArrow';\nimport Pagination from \"components/modules/pagination\";\nimport {createQueryStringFromObject, createQueryData, getIndexOfObjectArrayByKeyAndValue} from 'utils/index';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n//order options\nconst orderByOptions = [\n    { value: 'date_created', label: 'Most Recent' },\n    { value: 'title', label: 'Title' }\n];\n\nconst queryParams = [\n    {label: \"orderBy\", default: \"date_created\"},\n    {label: \"sort\", default: \"ASC\"},\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n];\n\n/**\n * the local component that manages the papers which are partially screened in manual mode\n */\nconst ManualResults = ({project_id, match, location, history}) => {\n\n\n    //list of papers to display\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(location.search, queryParams);\n\n    //state for the sorting arrow animation\n    const [up, setUp] = useState(queryData.sort);\n\n    //effect for getting the list of papers on mount and query parameters changes\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let  mnt = true;\n\n        //check sort parameter for animation\n        if(queryData.orderBy !== \"date_created\" && up !== queryData.sort){\n            setUp(queryData.sort);\n            //trigger animation when sorting changes\n            document.getElementById(\"ani-order-arrow\").beginElement();\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setDisplay(false);\n\n            //call the dao for getting the papers\n            let resx = await projectPapersDao.getPapersList({project_id, type:\"manual\", ...queryData});\n\n            //error checking\n            //if is 404 error\n            if (mnt && resx && resx.message === \"Not Found\") {\n                setPapersList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if is other error\n            else if (mnt && resx && resx.message) {\n                //pass error object to global context\n                appConsumer.setError(resx);\n            }\n            //if res isn't null\n            else if (mnt && (resx !== null)) {\n                //update state\n                setPapersList(resx.results);\n                setTotalResults(resx.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n        }\n\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count, queryData.sort, queryData.orderBy]); //re-execute when these variables change\n\n\n    /*\n        START OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //handler for sort selection\n    function handleSelection(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n\n        //if I previously ordered by 'most recent' then I sort the next order by ASC\n        if(queryData.orderBy === \"date_created\"){\n            queryData.sort = \"ASC\";\n        }\n        queryData.orderBy=orderByOptions[index].value;\n\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e){\n\n        //trigger svg animation\n        if(queryData.sort === \"ASC\"){\n            queryData.sort = \"DESC\";\n        }\n        else{\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    /*\n        END OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print loading image\n        output = (\n            <>\n                <LoadIcon class={\"small\"}/>\n            </>\n        );\n    }\n    else {\n        //print results\n        output = (\n            <>\n                <PrintManuallyScreenedPapersList papersList={papersList}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </>\n        );\n    }\n\n    output = (\n        <>\n            <div className=\"right-side-wrapper manual\">\n                <div className=\"top-right-description\">\n                    <p className=\"manual-description\"> \n                    Here you can see the status of the manual\n                    screening process. Below each paper you can see the votes related to it<br/>\n                    <span className=\"color-code red-color\">RED </span> voted no<br/>\n                    <span className=\"color-code green-color\">GREEN </span> voted yes<br/>\n                    <span className=\"color-code blue-color\">BLUE </span> voted undecided<br/>\n                    </p>\n                    <Link to={\"/screenings/\"+project_id+\"/\"}>(start your manual screening session)</Link>\n                </div>\n            </div>\n            <div className=\"left-side-wrapper\">\n                <div className=\"paper-card-holder large\">\n                    <div className=\"order\"\n                    style={{\n                        pointerEvents: (!display || papersList.length === 0) ? \"none\" : \"\",\n                        opacity: (papersList.length === 0) ? \"0.0\" : \"1.0\"\n                    }}\n                    >\n                        <div className=\"order-flex-item\">\n                            <label>sort by:</label>\n                            <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)} \n                                handler={handleSelection}\n                                type={\"medium\"}\n                                code={0}\n                                />\n                            <button type=\"button\" onClick={handelOrder} style={{display: (queryData.orderBy === \"date_created\") ? \"none\" : \"\"}}>\n                                <OrderArrow up={up}/>\n                            </button>\n                        </div>\n                    </div>\n                    {output}\n                </div>\n            </div>\n        </>\n    );\n\n    return output;\n\n};\n\n\nexport default withRouter(ManualResults);","import React, {useState, useEffect, useContext} from \"react\";\nimport {withRouter} from \"react-router-dom\";\n\nimport {projectPapersDao} from 'dao/projectPapers.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport Select from 'components/forms_elements/select';\nimport {PrintScreenedPapersList} from 'components/modules/printPapersList';\nimport OrderArrow from 'components/svg/orderArrow';\nimport Pagination from \"components/modules/pagination\";\nimport {createQueryStringFromObject, createQueryData, getIndexOfObjectArrayByKeyAndValue} from 'utils/index';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\n//order options\nconst orderByOptions = [\n    { value: 'date_created', label: 'Recently Added' },\n    { value: 'title', label: 'Title' }\n];\n\nconst queryParams = [\n    {label: \"orderBy\", default: \"date_created\"},\n    {label: \"sort\", default: \"ASC\"},\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n];\n\n/**\n * the local component that manages the screened papers\n */\nconst ScreenedPapers = ({project_id, match, location, history}) => {\n\n\n    //fetch data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to show the pagination list (numbers of papers in the list)\n    const [totalResults, setTotalResults] = useState(0);\n\n    //number of total papers in the project\n    const [totalPapers, setTotalPapers] = useState(undefined);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(location.search, queryParams);\n\n    //state for the sorting arrow animation\n    const [up, setUp] = useState(queryData.sort);\n\n    //effect for getting the list of papers on mount and query parameters changes\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let  mnt = true;\n\n        //check sort parameter for animation\n        if(queryData.orderBy !== \"date_created\" && up !== queryData.sort){\n            setUp(queryData.sort);\n            //trigger animation when sorting changes\n            document.getElementById(\"ani-order-arrow\").beginElement();\n        }\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            //hide the page\n            setDisplay(false);\n\n            //call the dao for getting the papers\n            let resx = await projectPapersDao.getPapersList({project_id, type: \"screened\", ...queryData});\n\n            //error checking\n            //if is 404 error\n            if (mnt && resx && resx.message === \"Not Found\") {\n                setPapersList([]);\n                setTotalResults(0);\n                setTotalPapers(undefined);\n                //show the page\n                setDisplay(true);\n            }\n            //if is other error\n            else if (mnt && resx && resx.message) {\n                //pass error object to global context\n                appConsumer.setError(resx);\n            }\n            //if res isn't null\n            else if (mnt && (resx !== null)) {\n                //update state\n                setPapersList(resx.results);\n                setTotalResults(resx.totalResults);\n                setTotalPapers(resx.totalPapers);\n                //show the page\n                setDisplay(true);\n            }\n        }\n\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count, queryData.sort, queryData.orderBy]); //re-execute when these variables change\n\n\n    /*\n        START OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //handler for sort selection\n    function handleSelection(e){\n        let index = parseInt(e.target.getAttribute('data-value'));\n\n        //if I previously ordered by 'most recent' then I sort the next order by ASC\n        if(queryData.orderBy === \"date_created\"){\n            queryData.sort = \"ASC\";\n        }\n        queryData.orderBy=orderByOptions[index].value;\n\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    //handler for order selection(ASC|DESC)\n    function handelOrder(e){\n\n        //trigger svg animation\n        if(queryData.sort === \"ASC\"){\n            queryData.sort = \"DESC\";\n        }\n        else{\n            queryData.sort = \"ASC\";\n        }\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n    }\n\n    /*\n        END OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print loading image\n        output = (\n            <>\n                <LoadIcon class={\"small\"}/>\n            </>\n        );\n    }\n    else {\n        //print results\n        output = (\n            <>\n                <PrintScreenedPapersList papersList={papersList}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </>\n        );\n    }\n\n    output = (\n        <>\n            <div className=\"right-side-wrapper status\">\n                <h2 className=\"screened-status\"><span className=\"partial\">{totalResults} </span> \n                    {(totalPapers) ? \n                        <>out of <span className=\"total\">{totalPapers}</span> </>\n                       :\n                        <></>\n                    }\n                papers were screened</h2>\n            </div>\n            <div className=\"left-side-wrapper\">\n                <div className=\"paper-card-holder large\">\n                    <div className=\"order\"\n                        style={{\n                            pointerEvents: (!display || papersList.length === 0) ? \"none\" : \"\",\n                            opacity: (papersList.length === 0) ? \"0.0\" : \"1.0\"\n                        }}\n                        >\n                        <div className=\"order-flex-item\">\n                            <label>sort by:</label>\n                            <Select options={orderByOptions} selected={getIndexOfObjectArrayByKeyAndValue(orderByOptions, \"value\", queryData.orderBy)} \n                                handler={handleSelection}\n                                type={\"medium\"}\n                                code={0}\n                                />\n                            <button type=\"button\" onClick={handelOrder} style={{display: (queryData.orderBy === \"date_created\") ? \"none\" : \"\"}}>\n                                <OrderArrow up={up}/>\n                            </button>\n                        </div>\n                    </div>\n                    {output}\n                </div>\n            </div>\n        </>\n    );\n\n    return output;\n\n};\n\n\nexport default withRouter(ScreenedPapers);","import React from \"react\";\nimport {Route, Link, Switch, withRouter, Redirect} from 'react-router-dom';\n\nimport {join} from 'utils';\n\nimport PageNotFound from \"components/modules/pageNotFound\";\nimport ScreeningBacklog from 'components/projects_page/screening_tab/backlog_subtab/screeningBacklog';\nimport ManualResults from 'components/projects_page/screening_tab/manual_subtab/manualResults';\nimport ScreenedPapers from 'components/projects_page/screening_tab/screened_subtab/screenedPapers';\n\n\n/**\n *this component will manage the screening sub tabs\n */\nconst ScreeningTab = ({project_id, project, match, notFound, setNotFound}) => {\n\n    let output;\n\n    output = (\n        <>\n            <ScreeningPageNavigation notFound={notFound} match={match}/>\n            <Switch>\n                    <Route exact path={match.url} render={function(props){\n                        return (<Redirect to={join(match.url, '/backlog')} />);\n                    }}/>\n                    <Route exact path={match.url + \"/backlog\"} render={function(props){\n                        return (<ScreeningBacklog project_id={project_id} project={project}/>);\n                    }}/>\n                    <Route exact path={match.url + \"/manual\"} render={function(props){\n                        return (<ManualResults project_id={project_id}/>);\n                    }}/>\n\n                    <Route exact path={match.url + \"/crowdsource\"} render={function(props){\n                        return (<p>crowdsource</p>);\n                    }}/>\n\n                    <Route path={match.url + \"/screened\"} render={function(props){\n                        return (<ScreenedPapers project_id={project_id}/>);\n                    }}/>\n\n                    <Route render={(props) => {setNotFound(true);return <PageNotFound/>}}/>\n                </Switch>\n\n        </>\n    );\n\n    return output;\n};\n\n/**\n * this is the local component to print the navigation tabs of the screening page\n */\nconst ScreeningPageNavigation = function ({notFound, match}) {\n\n    const lc = window.location.hash.split(\"?\")[0];\n    var slider = \"hide\";\n    switch (true) {\n        case /#\\/projects\\/\\d+\\/screening\\/backlog\\/?/.test(lc): //backloag sub-tab\n            slider = \"4px\";\n            break;\n\n        case /#\\/projects\\/\\d+\\/screening\\/manual\\/?/.test(lc): //manual sub-tab\n            slider = \"28px\";\n            break;\n\n        case /#\\/projects\\/\\d+\\/screening\\/crowdsource\\/?/.test(lc): //crowdsource sub-tab\n            slider = \"52px\";\n            break;\n\n        case /#\\/projects\\/\\d+\\/screening\\/screened\\/?/.test(lc): //screened sub-tab\n            slider = \"76px\";\n            break;\n\n        default:\n            break;\n    }\n\n    let output = (\n        <>\n            <div className=\"screening-nav-link-wrapper\" style={{display: (notFound || slider === \"hide\") ? \"none\" : \"\"}}>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/backlog\")} style={{paddingRight: (slider === \"4px\") ? \"0px\" : \"\", color: (slider === \"4px\") ? \"black\" : \"\"}}>backlog</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/manual\")} style={{paddingRight: (slider === \"28px\") ? \"0px\" : \"\", color: (slider === \"28px\") ? \"black\" : \"\"}}>manual</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/crowdsource\")} style={{paddingRight: (slider === \"52px\") ? \"0px\" : \"\", color: (slider === \"52px\") ? \"black\" : \"\"}}>crowdsourcing</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/screened\")} style={{paddingRight: (slider === \"76px\") ? \"0px\" : \"\", color: (slider === \"76px\") ? \"black\" : \"\"}}>screened</Link>\n                </div>\n            </div>\n        </>\n    );\n\n   return output;\n\n};\n\n\nexport default withRouter(ScreeningTab);\n","import React, {useState, useEffect, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\nimport LoadIcon from \"components/svg/loadIcon\";\n\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\n\nimport {AppContext} from 'components/providers/appProvider'\n\nconst SearchAutomatedDescription = function ({project_id, filtersList, setFiltersList}) {\n\n    //shows the number of results\n    const [totalResults, setTotalResults] = useState(0);\n\n    //filters fetch flag\n    const [filtersFetch, setFiltersFetch] = useState(false)\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let  mnt = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n            setFiltersFetch(true);\n            //call the dao\n            let res = await projectFiltersDao.getFiltersList({\"project_id\" : project_id});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setFiltersList([]);\n                setTotalResults(0);\n                //show the page\n                setFiltersFetch(false);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n                //update state\n                setFiltersList(res.results);\n                setTotalResults(res.totalResults);\n                //show the page\n                setFiltersFetch(false);\n            }\n\n        };\n\n        fetchData();\n\n        //when the component will unmount\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, []);\n\n    let output = \"\";\n    if(filtersFetch){\n        output = <LoadIcon class={'small'}/>\n    }else{\n        if(totalResults !== 0){\n            output = (\n                <>\n                {filtersList.map((element) =>\n                    <p key={element.id} className=\"filter-predicate\">{element.data.predicate}</p>\n                )}\n                <Link to={\"/projects/\"+project_id+\"/filters\"}>Go to filters details</Link>\n                </>\n            );\n        }else{\n            output = (\n                <>\n                    <p className=\"filter-predicate\"><i>No filters yet in this project</i></p>\n                    <Link to={\"/projects/\"+project_id+\"/filters\"}>Add a new filter from filters tab</Link>\n                </>\n            );\n        }\n    }\n\n    return (\n        <div className=\"right-side-wrapper search-automated-right-wrapper\">\n            <div className=\"top-right-description\">\n                <p>This searching mode leverages NLP models to find relevant papers based on the topic and focus of your project and also considers the inclusion and exclusion criteria you defined.</p>\n                <Link to={\"/projects/\"+project_id+\"/search\"}>(Go back to a normal search)</Link>\n            </div>\n            <div className=\"filters-holder\">\n                <h2>Filters:</h2>\n                <div className=\"side-filters-wrapper\">\n                    {output}\n                </div>\n            </div>\n        </div>\n    );\n\n\n};\n\nexport default SearchAutomatedDescription;","import React, {useState, useEffect, useContext, useRef} from \"react\";\n\nimport {paperDao} from 'dao/paper.dao';\n\nimport CheckBox from \"components/forms_elements/checkbox\";\nimport {PrintSearchAutomatedList} from 'components/modules/printPapersList';\nimport Select from 'components/forms_elements/select';\nimport Pagination from \"components/modules/pagination\";\nimport SelectedPapersListBox from \"components/projects_page/search_tab/selectedPapersListBox\";\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport NoSearchResults from \"components/svg/noSearchResults\";\n\nimport {AppContext} from 'components/providers/appProvider'\n\nimport {createQueryStringFromObject, createQueryData, getIndexOfObjectArrayByKeyAndValue, arrayOfObjectsContains} from 'utils/index';\nimport SearchAutomatedDescription from \"components/projects_page/search_tab/search_automated/searchAutomatedDescription\";\n\n\n// Load the lodash build\nconst _ = require('lodash');\n\n//confidence value array\nconst confidenceValues = [\n    {label : \"0.00\", value: 0.0},\n    {label : \"0.10\", value: 0.1},\n    {label : \"0.20\", value: 0.2},\n    {label : \"0.30\", value: 0.3},\n    {label : \"0.40\", value: 0.4},\n    {label : \"0.50\", value: 0.5},\n    {label : \"0.60\", value: 0.6},\n    {label : \"0.70\", value: 0.7},\n    {label : \"0.80\", value: 0.8},\n    {label : \"0.90\", value: 0.9},\n    {label : \"1.00\", value: 1.0},\n];\n\n//will keep valid minimum values\nvar minConfidenceValues = [{label : \"0.00\", value: 0.0}];\n//will keep valid maximum values\nvar maxConfidenceValues = [{label : \"1.00\", value: 1.0}];\n\nconst queryParams = [\n    {label: \"min_confidence\", default: 0.0},\n    {label: \"max_confidence\", default: 1.0},\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n];\n/**\n * automated search component\n * */\n\nconst SearchAutomatedManager = function ({project, location, match, history}) {\n\n    const mountRef = useRef(false);\n\n    //list of result papers data\n    const [papersList, setPapersList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //filters\n    const [filtersList, setFiltersList] = useState([]);\n\n    //bool to control the visualization of the results when fetching results data\n    const [display, setDisplay] = useState(true);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    let queryData = createQueryData(location.search, queryParams);\n\n    //get the localStorage object (used for saving selected papers)\n    const storage = window.localStorage;\n    if (!window.localStorage) {\n        console.log(\"the browser must be support localStorage\");\n    }\n\n    // list of selected papers\n    const [selectedPapersList, setSelectedPapersList] = useState([]);\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    useEffect(() => {\n\n        let mnt = true;\n\n        const fetchPapers= async () => {\n            \n            setDisplay(false);\n            \n            //I call the dao for the automated search\n            let resx = undefined;\n\n            console.log(queryData);\n\n            //max confidence that can be selected must be above the min value\n            maxConfidenceValues = confidenceValues.filter(c => c.value > parseFloat(queryData.min_confidence));\n            //min confidence that can be selected must be below the max value\n            minConfidenceValues = confidenceValues.filter(c => c.value < parseFloat(queryData.max_confidence));\n\n            resx = await paperDao.searchAutomated({\"project_id\" : project.id, \"start\" : queryData.start, \"count\" : queryData.count,\n                                                    \"min_confidence\": queryData.min_confidence, \"max_confidence\": queryData.max_confidence});\n\n            console.log(resx);\n            //error checking\n            //if is 404 error\n            if (mnt && resx && resx.message === \"Not Found\") {\n                setPapersList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if is other error\n            else if (mnt && resx && resx.message) {\n                //pass error object to global context\n                appConsumer.setError(resx);\n            }\n            //if res isn't null\n            else if (mnt && (resx !== null)) {\n                //update state\n                setPapersList(resx.results);\n                setTotalResults(resx.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n        }\n\n        fetchPapers();\n\n        //execute when the component will unmount and everytime the useEffect will end\n        return () => {\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count, queryData.min_confidence, queryData.max_confidence])\n\n    let resultPart = \"\";\n\n     /*\n        START OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //handler for min confidence selection\n    function handleMinConfidenceSelection(e) {\n        //get index value\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.min_confidence = minConfidenceValues[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    //handler for max confidence selection\n    function handleMaxConfidenceSelection(e) {\n        //get index value\n        let index = parseInt(e.target.getAttribute('data-value'));\n        //get value by index\n        queryData.max_confidence = maxConfidenceValues[index].value;\n        //update url\n        let queryString = createQueryStringFromObject(queryData);\n        history.push(queryString);\n\n    }\n\n    /*function to insert and remove the paper id from selected list*/\n    function handlePaperSelection(event) {\n        let newList;\n        //get eid\n        let eid = event.target.value;\n        //get ttitle\n        let title = event.target.name;\n        //if id is not included in the list yet\n        if (getIndexOfObjectArrayByKeyAndValue(selectedPapersList, \"eid\", eid) === -1) {\n           //create a copy of array\n            newList = [...selectedPapersList];\n            //insert into array\n            newList.push({\"eid\": eid, \"title\": title});\n\n        }\n        //if id already exists in the list\n        else {\n            //remove the  target paper from array\n            newList = selectedPapersList.filter(function (element) {\n                return element.eid !== eid;\n            });\n        }\n\n        //update array\n        setSelectedPapersList(newList);\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*function to select all papers*/\n    function selectAllPapers(event) {\n        \n        let newList;\n        \n        //if not all papers are selected yet\n        if(!arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")){\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //and merge them with the previously selected ones\n            let tmpList = [...allPapersInPage, ...selectedPapersList];\n            newList = _.uniqBy(tmpList, 'eid');\n        }else{//otherwise\n            //I get the list of the papers in the current page\n            let allPapersInPage = papersList.map((paper) => {return {\"eid\" : paper.eid, \"title\" : paper.title}});\n            //I filter the selectedPapersList by removing the papers that are in the current page\n            newList = selectedPapersList.filter(x => !allPapersInPage.some(paper => paper.eid === x.eid));\n        }\n        \n        setSelectedPapersList(newList);\n\n        //update array in local storage\n        storage.setItem(\"selectedPapersList\", JSON.stringify(newList));\n    }\n\n    /*\n        END OF 'RESULT PAPERS HANDLING' ########################################################\n    */\n\n    //if is loading\n    if (display === false) {\n\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project.id} selectedPapersList={selectedPapersList} \n                        setSelectedPapersList={setSelectedPapersList} handlePaperSelection={handlePaperSelection}\n                        mounted={mountRef}\n                    />\n                <div className=\"search-loading-holder\">\n                    <LoadIcon class={\"small\"}/>\n                </div>\n            </>\n        );\n    }\n\n    //if the search results list is empty\n    else if (papersList.length === 0) {\n        //the 'no-results' class is used only to workaround a small bug that display not found just as the search start before the loading icon\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project.id} selectedPapersList={selectedPapersList} \n                    setSelectedPapersList={setSelectedPapersList} handlePaperSelection={handlePaperSelection}\n                    mounted={mountRef}\n                />\n                <div className=\"no-results\"> <NoSearchResults/> <p className=\"not-found-description\"> Nothing was found </p> </div>\n            </>\n        );\n    }\n    else if (papersList.length > 0) {\n\n        //create a eidList from the list of selected paper\n        let arrayEid = selectedPapersList.map(element => element.eid);\n\n        resultPart = (\n            <>\n                <SelectedPapersListBox project_id={project.id} selectedPapersList={selectedPapersList} \n                    setSelectedPapersList={setSelectedPapersList} handlePaperSelection={handlePaperSelection}\n                    mounted={mountRef}\n                />\n                \n                <PrintSearchAutomatedList papersList={papersList} filtersList={filtersList} \n                                        handlePaperSelection={handlePaperSelection} selectedEidList={arrayEid}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={match.url}/>\n            </>\n        );\n    }\n\n\n    let output = (\n        <>\n            <SearchAutomatedDescription project_id={project.id} filtersList={filtersList} setFiltersList={setFiltersList}/>\n            <div className=\"search-results auto\">\n                <div className=\"paper-card-holder\">\n                    <div className=\"paper-card-holder-head\"\n                        style={{\n                            pointerEvents: (!display || papersList.length === 0) ? \"none\" : \"\",\n                            opacity: (papersList.length === 0) ? \"0.0\" : \"1.0\"\n                        }}\n                        >\n                        <div className=\"select-all\">\n                        <CheckBox label=\"Select All\" name=\"select_all\" val=\"\" isChecked={arrayOfObjectsContains(selectedPapersList, papersList, \"eid\")} handler={selectAllPapers}/>\n                        </div>\n                        <div className=\"order\">\n                            <label>min confidence:</label>\n                            <Select options={minConfidenceValues}\n                                    selected={getIndexOfObjectArrayByKeyAndValue(minConfidenceValues, \"value\", parseFloat(queryData.min_confidence))}\n                                    handler={handleMinConfidenceSelection}\n                                    //optional fields\n                                    type={\"mini\"} //displays select menu with smaller width\n                                    code={0} //you can put here a random number in case you have multiple selects on the same page\n                                            //this way you won't trigger the arrow animation for all the selects at the same time\n                                    />\n                            <label>max confidence:</label>\n                            <Select options={maxConfidenceValues}\n                                    selected={getIndexOfObjectArrayByKeyAndValue(maxConfidenceValues, \"value\", parseFloat(queryData.max_confidence))}\n                                    handler={handleMaxConfidenceSelection}\n                                    type={\"mini\"}\n                                    code={1}/>\n                        </div>\n                    </div>\n                    {resultPart}\n                </div>\n            </div>\n        </>\n    );\n\n    return output;\n};\n\nexport default SearchAutomatedManager;","import React, {useState, useEffect, useContext} from \"react\";\nimport {Route, Link, Switch} from 'react-router-dom';\n\nimport SearchStandardManager from 'components/projects_page/search_tab/search_standard/searchStandardManager';\nimport SearchSimilarManager from 'components/projects_page/search_tab/search_similar/searchSimilarManager';\nimport CustomPaperPage from 'components/projects_page/papers_tab/customPaperPage';\nimport {projectsDao} from 'dao/projects.dao';\nimport ProjectName from 'components/projects_page/projectName';\nimport {join} from 'utils';\n\nimport LoadIcon from 'components/svg/loadIcon';\nimport Forbidden from 'components/svg/forbidden';\n\nimport {AppContext} from 'components/providers/appProvider';\nimport PageNotFound from \"components/modules/pageNotFound\";\nimport PapersTab from \"components/projects_page/papers_tab/papersTab\";\nimport FiltersTab from \"components/projects_page/filters_tab/filtersTab\";\nimport ScreeningTab from \"components/projects_page/screening_tab/screeningTab\";\nimport SearchAutomatedManager from \"components/projects_page/search_tab/search_automated/searchAutomatedManager\";\n\n\n/**\n *this component will show a projects page\n */\nconst ProjectPage = (props) => {\n\n    //project object of page\n    const [project, setProject] = useState({data: {name: \"loading...\"}});\n\n    //collaborators\n    const [collaborators, setCollaborators] = useState([]);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //notFound state for hiding the navbar\n    const [notFound, setNotFound] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //flag for unauthorized user\n    const [unauthorized, setUnauthorized] = useState(false);\n\n    const project_id = props.match.params.id;\n\n    //set the project title\n    useEffect(() => {\n        if(project.data.name === \"loading...\" || project.data.name === \"UNAUTHORIZED OR INEXISTENT PROJECTS\"){\n            appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">{project.data.name}</h2> </div>);//I set the page title\n        }else{\n            appConsumer.setTitle(<ProjectName project={project} setProject={setProject}/>);\n            appConsumer.setProjectName(project.data.name);\n        }\n\n    }, [project.data.name]);\n\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let mnt = true;\n\n        setDisplay(false);\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //call the dao for main project data\n            let res = await projectsDao.getProject(project_id);\n\n            //error checking\n            //if unauthorized user\n            if(mnt && res.payload && (res.payload.statusCode === 401 || res.payload.message === \"the token does not match any user!\" || res.payload.message === \"empty token id in header, the user must first login!\")){\n                setUnauthorized(true);\n                setDisplay(true);\n                setProject({data: {name: \"UNAUTHORIZED OR INEXISTENT PROJECTS\"}});\n            }\n            //if the component is still mounted and there is some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and res isn't null\n            else if (mnt && res ) {\n                setUnauthorized(false);\n                //update state\n                setProject(res);\n                //show the page\n                setDisplay(true);\n            }\n\n\n        };\n        fetchData();\n        //when the component will unmount\n        return () => {\n\n            //set flag as unmounted\n            mnt = false;\n        };\n    }, [project_id, appConsumer.user]); //re-execute when these variables change\n\n\n    let output;\n\n    //if the page is loading\n    if (display === false) {\n        //print svg image\n        output = <LoadIcon/>;\n    }\n    else if(unauthorized){\n        output = (\n            <div className=\"forbidden-wrapper\">\n                <Forbidden/>\n                <p>This project does not exist or maybe you are not allowed to see it</p>\n            </div>\n        )\n    }\n    else {\n        output = (\n            <div className=\"project-wrapper\">\n                {/*<div>\n                    {JSON.stringify(project)}\n                    <button style={{marginLeft: \"20px\"}} onClick={() => {\n                        let newProject = project;\n                        newProject.data.name = \"__°°__\";\n                        //setProject(newProject);\n                        setProject({...newProject});\n                        console.log(project)\n                    }}>i</button>\n                </div>*/}\n                <ProjectPageHead match={props.match} notFound={notFound}/>\n\n                {/*route the papers list*/}\n                <Switch>\n                    <Route exact  path={props.match.url} render={function(props){\n                        setNotFound(false);\n                        return (<PapersTab project_id={project_id} project={project} setProject={setProject} collaborators={collaborators} setCollaborators={setCollaborators} {...props}/>);\n                    }}/>\n\n                    {/*route the form of search*/}\n                    <Route exact path={props.match.url + \"/search\"} render={function(props){\n                        setNotFound(false);\n                        return (<SearchStandardManager project_id={project_id} {...props} />);\n                    }}/>\n\n                    <Route exact path={props.match.url + \"/filters\"} render={function(props){\n                        setNotFound(false);\n                        return (<FiltersTab project_id={project_id} project={project} {...props}/>);\n                    }}/>\n\n                    <Route path={props.match.url + \"/screening\"} render={function(props){\n                        setNotFound(false);\n                        return (<ScreeningTab project_id={project_id} project={project} notFound={notFound} setNotFound={setNotFound}/>);\n                    }}/>\n\n                    <Route exact path={props.match.url + \"/searchautomated\"} render={function(props){\n                        setNotFound(false);\n                        return (<SearchAutomatedManager project={project} {...props} />);\n                    }}/>\n\n                    <Route exact path={props.match.url + \"/searchsimilar\"} render={function(props){\n                        setNotFound(false);\n                        return (<SearchSimilarManager project_id={project_id} {...props} />);\n                    }}/>\n\n                    <Route path = {props.match.url + \"/addpaper\"} render={function(props){\n                        setNotFound(false);\n                        return (\n                            <>\n                                <Link className=\"back\" to={props.match.url.substr(0, props.match.url.length - 9 )}>  </Link>\n                                <CustomPaperPage projectId={project.id} url={props.match.url} history={props.history}/>\n                            </>\n                        );\n                    }} />\n                    <Route render={(props) => {setNotFound(true); return <PageNotFound/>}}/>\n                </Switch>\n\n            </div>\n        );\n    }\n\n    return output;\n};\n\n/**\n * this is the local component to print head of project page\n */\nconst ProjectPageHead = function ({match, notFound}) {\n    //hash  -> #/projects/6/search/ || #/projects/6/search/\n    const lc = window.location.hash.split(\"?\")[0];\n    var slider = \"hide\";\n    switch (true) {\n        case /^#\\/projects\\/\\d+\\/?$/.test(lc): //papers tab\n            slider = \"20px\";\n            break;\n\n        case /^#\\/projects\\/\\d+\\/filters\\/?$/.test(lc): //filters tab\n            slider = \"190px\";\n            break;\n\n        case /#\\/projects\\/\\d+\\/search\\/?/.test(lc): //search tab\n            slider = \"360px\";\n            break;\n\n        case /#\\/projects\\/\\d+\\/screening\\/?/.test(lc): //screening tab\n            slider = \"530px\";\n            break;\n\n        default:\n            console.log(\"no tab\");\n            break;\n    }\n    let output = (\n        <>\n            <div className=\"project-nav-link-wrapper\" style={{display: (notFound || slider === \"hide\") ? \"none\" : \"\"}}>\n                <div className=\"nav-link\">\n                    <Link to={match.url}>papers</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/filters\")}>filters</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/search\")}>search</Link>\n                </div>\n                <div className=\"nav-link\">\n                    <Link to={join(match.url, \"/screening/backlog\")}>screening</Link>\n                </div>\n                <div className=\"underline\" style={{left: slider}}/>\n            </div>\n        </>\n    );\n    return output;\n\n};\n\n\nexport default ProjectPage;\n","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Link, withRouter} from 'react-router-dom';\n\n\nimport {projectScreeningDao} from 'dao/projectScreening.dao';\nimport LoadIcon from 'components/svg/loadIcon';\nimport Pagination from 'components/modules/pagination';\nimport {join} from 'utils';\n\nimport {AppContext} from \"components/providers/appProvider\";\nimport EmptyFolder from \"components/svg/emptyFolder\";\n\nimport {createQueryData} from 'utils/index';\n\nconst queryParams = [\n    {label: \"start\", default: 0},\n    {label: \"count\", default: 10},\n]\n\n/**\n *this component will show the screenings list for a user\n */\n\nconst ScreeningsList = function (props) {\n\n    const mountRef = useRef(false);\n\n    //list of projects to screen\n    const [screeningsList, setScreeningsList] = useState([]);\n\n    //bool to show the pagination list\n    const [totalResults, setTotalResults] = useState(0);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //set query params from url\n    const queryData = createQueryData(props.location.search, queryParams);\n\n\n    //set title when component mounts\n    useEffect(() => {\n        mountRef.current = true;\n\n        appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">SCREENINGS</h2> </div>);\n        //I remove any old project name that was previously saved\n        appConsumer.setProjectName(\"\");\n\n        return () => {\n            mountRef.current = false;\n        };\n    },[]); //run on component mount\n\n    useEffect(() => {\n\n        let mnt = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //hide the page\n            setDisplay(false);\n\n            //call the dao\n            const res = await projectScreeningDao.getProjectsToScreen({orderBy: \"date_last_modified\", ...queryData});\n\n            //error checking\n            //if the component is still mounted and  is 404 error\n            if (mnt && res && res.message === \"Not Found\") {\n                setScreeningsList([]);\n                setTotalResults(0);\n                //show the page\n                setDisplay(true);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n                //update state\n\n                //I put even first and then odd ones so I can display 2 columns with left-right flow \n                var even_projs = [];\n                even_projs = res.results.filter(function(element, index){ if( index % 2 ) return element;});\n                var odd_projs = [];\n                odd_projs = res.results.filter(function(element, index){ if( !(index % 2) ) return element;});\n\n                setScreeningsList(odd_projs.concat(even_projs));\n                setTotalResults(res.totalResults);\n                //show the page\n                setDisplay(true);\n            }\n        };\n\n        fetchData();\n\n        //when the component will unmount or this useEffect will stop\n        return () => {\n            mnt = false;\n        };\n    }, [queryData.start, queryData.count]); //re-execute when these variables change\n\n\n    let output;\n    //if the page is loading\n    if (display === false) {\n        //print svg image\n        output = <LoadIcon/>;\n    }\n    //else print the list of screenings\n    else {\n\n        output = (\n            <div>\n\n                <PrintList screeningsList={screeningsList} path={props.match.url}/>\n                <Pagination start={queryData.start} count={queryData.count} totalResults={totalResults} path={props.match.url}/>\n\n            </div>\n        );\n\n    }\n\n    return output;\n\n\n};\n\n\n/**\n *  internal component only to print the list\n * @param screeningsList list data\n * @param path current page url\n * */\nconst PrintList = function ({screeningsList, path}) {\n\n    let maps;\n    //if list is empty, print a notice message\n    if (screeningsList.length === 0) {\n        maps = (\n            <div className=\"empty-folder-wrapper\"> <EmptyFolder/> <p className=\"empty-folder-description\"> You don't have any projects to screen yet </p></div>\n        );\n    }\n    //if list isn't empty, print list of screenings\n    else {\n        maps = (screeningsList.map((element, index) =>\n                <div key={element.id} className=\"light-modal project-card for-screening\">\n                    <Link to={join(path, \"/\" + element.id)}>\n                        <h3>{element.project_data.name}</h3>\n                        <p className=\"description\">{element.project_data.description}</p>\n                    </Link>\n                    <div className=\"screening-progress\">\n                        <span>{element.progress.screenedPapers} </span>\n                        <span> screened out of <i>{element.progress.totalPapers}</i></span> \n                    </div>\n                </div>\n        ));\n    }\n\n    let output =  (\n        <div className={(screeningsList.length === 0) ? \"project-cards-holder-empty\" : \"project-cards-holder\"}>\n            {maps}\n        </div>\n    );\n\n    return output;\n\n};\n\n\n\n\nexport default withRouter(ScreeningsList);","import React from \"react\";\n\n/**\n * component svg select arrow\n * 'focused' is a flag used for displaying a different shape\n */\nconst PlusIcon = function ({focused, code}) {\n    var from=\"\";\n    var to=\"\";\n    //I check if the upper component is focused and then I animate\n    if(focused){\n        from={y1: \"100\", y2: \"900\"};\n        to={y1: \"500\", y2: \"500\"};\n    }else{\n        from={y1: \"500\", y2: \"500\"};\n        to={y1: \"100\", y2: \"900\"};\n    }\n    return (\n    <svg version=\"1.1\" id=\"plus-icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n        viewBox=\"0 0 1000 1000\">\n            <line className=\"st0-plus\" x1=\"900\" y1=\"500\" x2=\"100\" y2=\"500\"/>\n            <line className=\"st0-plus\" x1=\"500\" y1=\"100\" x2=\"500\" y2=\"900\">\n            <animate attributeType=\"XML\" \n                id={(isNaN(code)) ? \"ani-plus-icon-y1\" : \"ani-plus-icon-y1\" + code} \n                attributeName=\"y1\" from={from.y1} to={to.y1} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n            <animate attributeType=\"XML\" \n                id={(isNaN(code)) ? \"ani-plus-icon-y2\" : \"ani-plus-icon-y2\" + code} \n                attributeName=\"y2\" from={from.y2} to={to.y2} begin=\"0s\" dur=\"0.2s\" repeatCount=\"1\" fill=\"freeze\" />\n            </line>\n        </svg>\n    );\n};\n\nexport default PlusIcon;\n\n","import React, {useState, useEffect} from \"react\";\nimport PlusIcon from \"components/svg/plusIcon\";\n\nconst FiltersAccordion = function ({filtersList}) {\n\n    const [isOpen, setIsOpen] = useState(filtersList.map((x) => (false)));\n\n    let output = \"\";\n    //if list is empty, print a notice message\n    if (filtersList.length === 0) {\n        output = (\n            <p className=\"empty-filters-list-description\"> There are no filters in this project</p>\n        );\n    }\n    //if list isn't empty, print list of papers\n    else{\n        output = (\n            <div className=\"filters-list\">\n                {filtersList.map((element, index) =>\n                    <div key={element.id} className=\"filter\">\n                        <FilterElement filter={element.data} code={parseInt(element.id)} isOpen={isOpen} setIsOpen={setIsOpen} index={index}/>\n                    </div>\n                )}\n            </div>\n        );\n    }\n    return output;\n\n\n};\n\nconst FilterElement = function({filter, code, isOpen, setIsOpen, index}) {\n\n    function handleFocus(){\n        //handle arrow animation and focus of menu\n        document.getElementById((isNaN(code)) ? \"ani-plus-icon-y1\" : \"ani-plus-icon-y1\" + code).beginElement();//trigger svg animation\n        document.getElementById((isNaN(code)) ? \"ani-plus-icon-y2\" : \"ani-plus-icon-y2\" + code).beginElement();//trigger svg animation\n    }\n    function handleFilterClick(){\n        handleFocus();\n        let localOpen = isOpen.map((x) => false);\n        localOpen[index] = !isOpen[index];\n        setIsOpen([...localOpen]);\n    }\n    return(\n        <>\n            <button className=\"filter-title\" onClick={handleFilterClick}>\n                <span>{filter.predicate}</span> <PlusIcon focused={isOpen[index]} code={code}/>\n            </button>\n            <div className=\"filter-data\" style={{maxHeight: (isOpen[index]) ? \"300px\" : \"0px\"}}>\n                <p className=\"criteria-type\">\n                    inclusion criteria:\n                </p>\n                <p className=\"criteria-description\">\n                    {filter.inclusion_description || <i>empty criterion</i>}\n                </p>\n                <p className=\"criteria-type\">\n                    exclusion criteria:\n                </p>\n                <p className=\"criteria-description\">\n                    {filter.exclusion_description || <i>empty criterion</i>}\n                </p>\n            </div>\n        </>\n    )\n};\n\nexport default FiltersAccordion;","import React, {useState, useEffect, useRef} from \"react\";\n\nimport RemoveButton from \"components/svg/removeButton\";\n\nconst Tags = function ({className, display, selectedTags, setSelectedTags, availableTags}) {\n\n    const mountRef = useRef(false);\n\n    const suggestionTimeout = useRef();\n\n    const [tagSuggestions, setTagSuggestions] = useState([]);\n\n    const [input, setInput] = useState(\"\");\n\n\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //function for adding tag\n    async function addTag(tag){\n        if(!selectedTags.includes(tag)){\n            console.log(\"adding \" + tag);\n\n            setInput(\"\");\n            setSelectedTags([...selectedTags, tag]);\n            availableTags.current = availableTags.current.filter((tagx) => tagx !== tag);\n            setTagSuggestions([]);\n        }\n    }\n\n    async function removeTag(tag){\n\n        console.log(\"deleting \" + tag);\n\n        setSelectedTags(selectedTags.filter((tagx)=>tagx !== tag));\n        availableTags.current = [...availableTags.current, tag];\n    }\n\n    function handleInputChange(e){\n        clearTimeout(suggestionTimeout.current);\n        setInput(e.target.value);\n        var localInput = e.target.value.toLowerCase();\n        if(localInput){\n            suggestionTimeout.current = setTimeout(() => {\n                setTagSuggestions(availableTags.current.map((tagx) => {\n                    console.log(\"checking '\" + tagx + \"'\");\n                    let index = tagx.toLowerCase().indexOf(localInput);\n                    if(index !== -1){\n                        return {content: tagx, index: index, selectionLength: localInput.length};\n                    }else{\n                        return -1;\n                    }\n                }).filter((tog) => tog !== -1));\n            }, 500);\n        }else{\n            setTagSuggestions([]);\n        }\n    }\n\n    let output = <></>;\n    output = (\n        <>\n            <div className={(className === \"right\") ? \"tags-wrapper to-right\" : \"tags-wrapper\"}\n                style={{opacity: (display) ? \"1.0\" : \"0.0\"}}\n            >\n                {selectedTags.map((tag, index)=>(\n                    <div key={index} className=\"tag\">\n                        {tag}\n                        <button type=\"button\" className=\"delete-tag\"\n                            onClick={() => {removeTag(tag)}}\n                        >\n                            <RemoveButton/>\n                        </button>\n                    </div>\n                ))}\n                <form className=\"add-tag\" onSubmit={() => {addTag(input)}}>\n                    <input type=\"text\" id=\"tag-name\" placeholder=\"add new tag...\" value={input}\n                        onChange={(e) => {handleInputChange(e)}}\n                    />\n                    <button className=\"add-tag-button\" disabled={(!input || input === \"\")}/>\n                    <div className=\"tag-suggestions\" style={{display: (tagSuggestions.length === 0) ? \"none\" : \"\"}}>\n                        {tagSuggestions.map((tag, index)=>(\n                            <button key={index} type=\"button\" className=\"tag-suggestion\"\n                                    onClick={() => {addTag(tag.content)}}\n                            >\n                                {tag.content.substring(0,tag.index)}\n                                <span className=\"match\">{tag.content.substring(tag.index, tag.index+tag.selectionLength)}</span>\n                                {tag.content.substring(tag.index+tag.selectionLength, tag.content.length)}\n                            </button>\n                        ))}\n                    </div>\n                </form>\n            </div>\n        </>\n    );\n    return output;\n}\n\n\nexport default Tags;\n","import React from \"react\";\n\n/**\n * component svg\n */\nconst RemoveHighlights = function (props) {\n\n    return (\n        <svg id=\"clear-hl\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <g>\n                <path className=\"st0-hl\" d=\"M475.2,858.4c-69.5-0.1-154.3,27.6-195.3,68.7\"/>\n                <path className=\"st1-hl\" d=\"M281.7,664.9l499.9-463.1c29.5,22.7,57.4,47.1,83.5,73.2c26.1,26.1,50.5,53.9,73.2,83.5L475.2,858.4\"/>\n                <path className=\"st0-hl\" d=\"M213,860.2c41.1-41,68.8-125.7,68.7-195.3\"/>\n                <path className=\"st2-hl\" d=\"M255.8,932.7l-20.9,20.9l-89.8-6.8l62.4-62.4\"/>\n                <path className=\"st3-hl\" d=\"M475.2,858.4c-58.6-70.5-123.1-135-193.6-193.6\"/>\n                <line className=\"st4-hl\" x1=\"205.4\" y1=\"867.9\" x2=\"272.3\" y2=\"934.8\"/>\n            </g>\n            <line className=\"st5-hl\" x1=\"75.7\" y1=\"96.6\" x2=\"411.4\" y2=\"432.2\"/>\n            <line className=\"st5-hl\" x1=\"75.7\" y1=\"432.2\" x2=\"411.4\" y2=\"96.6\"/>\n        </svg>\n    );\n};\n\nexport default RemoveHighlights;\n","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport RemoveHighlights from \"components/svg/removeHighlights\";\n\n/**\n * this is component form to search for the paper in project page\n * */\n\nconst HighLighter = function ({data, disabled, highlightedData, setHighlightedData, className}) {\n\n    const startingBlock = useRef(0);\n    const endingBlock = useRef(0);\n    const selectingInterval = useRef();\n    const clicking = useRef(false);\n\n    function selectingFunction(onEnd){\n        selectingInterval.current = setTimeout(() => {\n            const selection = document.getSelection();\n            //console.log(selection);\n            if(selection.anchorNode.nodeName === \"#text\"){\n                //data of the node\n                //var selectionData = selection.anchorNode.data;\n                //start of the selection\n                var selectionStart = selection.anchorOffset;\n                //end of the selection\n                var selectionEnd = selection.focusOffset;\n                if(onEnd){\n                    selectionEnd = highlightedData[highlightedData.length-1].end;\n                }\n\n\n                if(startingBlock.current == endingBlock.current && selectionStart > selectionEnd){\n                    let tmp = selectionStart;\n                    selectionStart = selectionEnd;\n                    selectionEnd = tmp;\n                }\n                if(startingBlock.current > endingBlock.current){\n                    let tmp = startingBlock.current;\n                    startingBlock.current = endingBlock.current;\n                    endingBlock.current = tmp;\n                    tmp = selectionStart;\n                    selectionStart = selectionEnd;\n                    selectionEnd = tmp;\n                }\n\n                console.log(selection);\n                console.log(\"startingBlock   > \" + startingBlock.current + \" | \" + highlightedData[startingBlock.current].type);\n                console.log(\"selection start   > \" + selectionStart);\n                console.log(\"endingBlock     > \" + endingBlock.current + \" | \" + highlightedData[endingBlock.current].type);\n                console.log(\"selection end     > \" + selectionEnd);\n                \n                if(startingBlock.current === endingBlock.current && highlightedData[startingBlock.current].type === \"not_highlighted\"){\n                    var firstSubBlock = {\n                        data: highlightedData[startingBlock.current].data.substring(0, selectionStart),\n                        start: highlightedData[startingBlock.current].start,\n                        end: highlightedData[startingBlock.current].start + selectionStart-1,\n                        type: \"not_highlighted\"\n                    }\n                    var midSubBlock = {\n                        data: highlightedData[startingBlock.current].data.substring(selectionStart, selectionEnd),\n                        start: highlightedData[startingBlock.current].start + selectionStart,\n                        end: highlightedData[startingBlock.current].start + selectionEnd-1,\n                        type: \"highlighted\"\n                    }\n                    var lastSubBlock = {\n                        data: highlightedData[startingBlock.current].data.substring(selectionEnd, highlightedData[startingBlock.current].end+1),\n                        start: highlightedData[startingBlock.current].start + selectionEnd,\n                        end: highlightedData[startingBlock.current].end,\n                        type: \"not_highlighted\"\n                    }\n                    var newLocalData = highlightedData;\n                    newLocalData.splice(startingBlock.current, 1, firstSubBlock, midSubBlock, lastSubBlock);\n\n                }else{\n                    var newLocalData = highlightedData;\n                    var firstSubBlock = {\n                        data: highlightedData[startingBlock.current].data.substring(0, selectionStart),\n                        start: highlightedData[startingBlock.current].start,\n                        end: highlightedData[startingBlock.current].start + selectionStart-1,\n                        type: highlightedData[startingBlock.current].type\n                    }\n                    var midSubBlock = {\n                        data: highlightedData[startingBlock.current].data.substring(selectionStart, highlightedData[startingBlock.current].data.length),\n                        start: highlightedData[startingBlock.current].start + selectionStart,\n                        end: highlightedData[startingBlock.current].end,\n                        type: \"highlighted\"\n                    }\n                    newLocalData.splice(startingBlock.current, 1, firstSubBlock, midSubBlock);\n\n\n                    for (let i = startingBlock.current+2; i<=endingBlock.current; i++){\n                        newLocalData[i].type=\"highlighted\";\n                    }\n\n                    var firstSubBlockx = {\n                        data: highlightedData[endingBlock.current+1].data.substring(0, selectionEnd),\n                        start: highlightedData[endingBlock.current+1].start,\n                        end: highlightedData[endingBlock.current+1].start + selectionEnd-1,\n                        type: \"highlighted\"\n                    }\n                    var midSubBlockx = {\n                        data: highlightedData[endingBlock.current+1].data.substring(selectionEnd, highlightedData[endingBlock.current+1].data.length),\n                        start: highlightedData[endingBlock.current+1].start + selectionEnd,\n                        end: highlightedData[endingBlock.current+1].end,\n                        type: highlightedData[endingBlock.current+1].type\n                    }\n                    newLocalData.splice(endingBlock.current+1, 1, firstSubBlockx, midSubBlockx);\n                }\n\n                newLocalData = newLocalData.filter((x) => x.start <= x.end);\n                    let i = 0;\n                    while(i<newLocalData.length){\n                        if(newLocalData[i+1] && newLocalData[i].type === newLocalData[i+1].type){\n                            let newBlock = {data: newLocalData[i].data + newLocalData[i+1].data, \n                                            start: newLocalData[i].start,\n                                            end: newLocalData[i+1].end,\n                                            type: newLocalData[i].type\n                                            }\n                            newLocalData.splice(i,2,newBlock);\n                        }else{\n                            i++;\n                        }\n                    }\n                    document.getSelection().empty();\n                    setHighlightedData([...newLocalData]);\n                /*\n                var newData = localData.slice(0, selectionStart) + \"<i>\" + localData.slice(selectionStart);\n                newData = newData.slice(0, selectionEnd) + \"</i>\" + newData.slice(selectionEnd)\n                setLocalData(newData);\n                */\n            }else{\n                //console.log(\"everything was selected\")\n            }\n        },10);\n    }\n\n    //useEffect(() => {console.log(\"local data change\"); console.log(localData)}, [localData])\n    let output = <></>;\n    console.log(disabled)\n    if(!disabled){\n        output = (\n            <div className={className}\n                onMouseDown={() => {\n                    clicking.current = true;\n                }}\n                onMouseUp={() => {\n                    clicking.current = false;\n                }}\n                onMouseLeave={() => {\n                    clicking.current = false;\n                }}\n            >\n                <div className={className+\"-head\"}>\n                    <button className=\"clear-highlight\" onClick={()=>{\n                            setHighlightedData([{data: data, start: 0, end: data.length-1, type:\"not_highlighted\"}]);\n                        }}\n                        style={{opacity: (highlightedData.length === 1 && (highlightedData[0].type === \"not_highlighted\" || highlightedData[0].type === \"disabled\")) ? \"0.0\" : \"1.0\",\n                                pointerEvents: (highlightedData.length === 1 && highlightedData[0].type === \"not_highlighted\") ? \"none\" : \"\"}}\n                    >\n                        <RemoveHighlights/> \n                    </button>\n                </div>\n                {highlightedData.map((dataChunk, index) => {\n                    if(dataChunk.type === \"disabled\"){\n                        return (\n                            <span className=\"not_highlighted disa\" key={index}>{dataChunk.data}</span>\n                        );\n                    }else{\n                        return (\n                            <span className={dataChunk.type} key={index}\n                                onMouseDown={() => {\n                                    startingBlock.current = index;\n                                    clearTimeout(selectingInterval.current)\n                                }}\n                                onMouseEnter={() => {\n                                    if(!clicking.current){\n                                        console.log(\"casual enter on -> \" + index)\n                                        clicking.current = true;\n                                        startingBlock.current = index;\n                                        clearTimeout(selectingInterval.current);\n                                    }\n                                }}\n                                onDoubleClick={(e) => {\n                                    //console.log(\"double\");\n                                    clearTimeout(selectingInterval.current);\n                                    document.getSelection().empty();}\n                                }\n                                onMouseUp={() => {\n                                    endingBlock.current=index; \n                                    selectingFunction();\n                                }}\n                            >{dataChunk.data}</span>\n                        );\n                    }\n                })}\n            </div>\n        );\n    }else{\n        output = (\n        <div className={className}>\n            {data}\n        </div>\n        );\n    }\n    return output;\n};\n\n\nexport default HighLighter;\n","import React from \"react\";\n\n/**\n * component svg\n */\nconst PositiveAnswer = function (props) {\n\n    return (\n        <svg id=\"positive-answer\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <polyline className=\"st-tick\" points=\"918,192.3 389.3,807.7 82,450 \" style={{stroke: (props.color) ? props.color : \"\"}}/>\n        </svg>\n    );\n};\n\nexport default PositiveAnswer;\n","import React from \"react\";\n\n/**\n * component svg\n */\nconst NegativeAnswer = function (props) {\n\n    return (\n        <svg id=\"negative-answer\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <line className=\"st-tick\" x1=\"181\" y1=\"181\" x2=\"819\" y2=\"819\" style={{stroke: (props.color) ? props.color : \"\"}}/>\n            <line className=\"st-tick\" x1=\"819\" y1=\"181\" x2=\"181\" y2=\"819\" style={{stroke: (props.color) ? props.color : \"\"}}/>\n        </svg>\n    );\n};\n\nexport default NegativeAnswer;\n","import React from \"react\";\n\n/**\n * component svg\n */\nconst UndecidedAnswer = function (props) {\n\n    return (\n        <svg id=\"undecided-answer\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <g>\n                <path className=\"st0-und\" \n                    d=\"M 500,661.78784 500,544.20058 C 954.19846,189.53532 376.85433,16.13961 335.29677,279.03194\"\n                    style={{stroke: (props.color) ? props.color : \"\"}}/>\n                <circle className=\"st1-und\" cx=\"500\" cy=\"853\" r=\"66\" style={{fill: (props.color) ? props.color : \"\"}}/>\n            </g>\n        </svg>\n    );\n};\n\nexport default UndecidedAnswer;\n","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Link} from 'react-router-dom';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nimport {projectScreeningDao} from 'dao/projectScreening.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\nimport FiltersAccordion from \"components/modules/filtersAccordion\";\nimport Tags from 'components/modules/paperTags';\nimport HighLighter from 'components/modules/highlighter';\nimport InfoTooltip from \"components/modules/infoTooltip\";\nimport PositiveAnswer from 'components/svg/positiveAnswer';\nimport NegativeAnswer from 'components/svg/negativeAnswer';\nimport UndecidedAnswer from 'components/svg/undecidedAnswer';\nimport HLoad from \"components/svg/hLoad\";\n\n\nconst _array = require('lodash/array');\n\n/**\n * single-predicate screening page\n * */\n\nconst SinglePredicateScreening = function ({screening, filtersList}) {\n\n    const mountRef = useRef(false);\n\n    //paper to screen\n    const [paperData, setPaperData] = useState(undefined);\n\n    //paper wrapper-height js animation\n    const [paperHeight, setPaperHeight] = useState(220)\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //decision variable\n    const [decision, setDecision] = useState(\"\");\n\n    //highlighted data\n    const [highlightedData, setHighlightedData] = useState(undefined);\n\n    //selected tags\n    const [selectedTags, setSelectedTags] = useState([]);\n\n    //available tags (there's no need to re-render the page when these changes because they're hidden, that's why I use useRef)\n    const availableTags = useRef(screening.data.tags);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //bool to trigger next paper fetch\n    const [nextPaper, setNextPaper] = useState(false);\n\n    //bool for vote submission\n    const [voteSubmission, setVoteSubmission] = useState(false);\n\n    //component lifecycle hook\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //this will run on mount and every time the user votes a paper so we ask for a new one to vote\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let mnt = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //I hide the page\n            setDisplay(false);\n\n            //I reset decision and selected tags\n            setDecision(\"\");\n            availableTags.current = _array.union(availableTags.current, selectedTags);\n            setSelectedTags([]);\n\n            //call dao for getting next paper\n            let res = await projectScreeningDao.getProjectPaperToScreen(screening.id);\n\n            //error checking\n            //if the component is still mounted and  is 404 error it means there are no more papers to screen\n            if (mnt && res && res.message === \"Not Found\") {\n\n                //I create a 'fake' paper data so the user knows he's done \n                setPaperData({data: {title:\"Finished!\", \n                    abstract:(\n                        <>There are no more papers to screen in this project<br/>\n                            <Link to={\"/screenings\"}>Go back to screenings list</Link>\n                        </>\n                        )}});\n                //show the page\n                setDisplay(true);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and  res isn't null\n            else if (mnt && res) {\n                //set paper data\n                setPaperData(res);\n                //set text to not be highlighted at first\n                setHighlightedData([{data: res.data.abstract, start: 0, end: res.data.abstract.length-1, type:\"not_highlighted\"}])\n\n                //show the page\n                setDisplay(true);\n                //submission flag set to false, once the page is displayed the user still needs to submit data\n                setVoteSubmission(false);\n            }\n\n        };\n\n\n        fetchData();\n        \n\n        //when the component will unmount or the useEffect will finish\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n\n    }, [screening, nextPaper]);  //re-execute when these variables change\n\n    //effect for updating the paper wrapper height once it's displayed\n    useEffect(() =>{\n        if(display){\n            setPaperHeight(document.getElementsByClassName('s-paper')[0].clientHeight+20);\n        }\n    }, [display])\n\n    //function for submitting the vote\n    async function sendSubmission(key) {\n\n        //I create the basic submission data with the highlights included\n        let screeningData = {\n            project_paper_id: paperData.id,\n            vote:{\n                metadata: {type: \"single-predicate\", highlights: [{highlightedData, outcome: \"0\"}], tags: selectedTags}\n            }\n        };\n\n        //switch-case for the vote\n        switch (key) {\n            case \"s\":\n                console.log(\"NO\");\n                setDecision(\"no\");\n                break;\n            case \"a\":\n                console.log(\"YES\");\n                setDecision(\"yes\");\n                screeningData.vote.metadata.highlights[0].outcome = \"1\";\n                break;\n            case \"d\":\n                console.log(\"UND\");\n                setDecision(\"und\");\n                screeningData.vote.metadata.highlights[0].outcome = \"2\";\n                break;\n            default:\n                break;\n        }\n        console.log(\"data to send _> \");\n        console.log(screeningData)\n        \n        //I update the flag for the vote submission\n        setVoteSubmission(true);\n        //call the dao\n        let res = await projectScreeningDao.submitVote(screeningData);\n        \n        //error checking\n        //if is other error\n        if (mountRef.current && res && res.message) {\n            //pass error object to global context\n            appConsumer.setError(res);  \n        }\n        //if no error        \n        else if(mountRef.current && res.data){\n            //I trigger the effect to get a new paper\n            setNextPaper(!nextPaper);\n        }   \n        \n    }\n    \n    //wrapper function for the vote submission in order to stop submission if necessary\n    function handleKey(key){\n        //I check if I'm not in a textfiled and display and voteSubmission flags\n        if(document.activeElement.type !== \"text\" && display && !voteSubmission){\n            sendSubmission(key);\n        }\n    }\n\n    //part of the page\n    let resultPart = <></>;\n    let paperToDisplay = <></>;\n    let formPart = <></>;\n\n    //if there's a paper to display\n    if(paperData && paperData.data && paperData.data.title!==\"Finished!\"){\n\n        //I create the form\n        formPart = (\n            <form className=\"light-modal screening-outcome\">\n\n                <InfoTooltip className={\"s-p-form\"}>\n                    You can cast your vote by using the keyboard:<br/>\n                    <b>A : </b> <i>yes</i><br/>\n                    <b>S : </b> <i>no</i><br/>\n                    <b>D : </b> <i>undecided</i><br/>\n                </InfoTooltip>\n                <h2 className=\"question\">Is the paper relevant to the review?</h2>\n                <p className=\"hl-tip\">Please highlight in the text the evidence that supports your answer</p>\n\n                <div className=\"vote-submission-load\">\n                    {(voteSubmission) ? <HLoad className={\"delayed\"}/> : <></>}\n                </div>\n\n                <div className=\"screening-choice\">\n                    <div className=\"yes-no-und\">\n                        <div className=\"btn-decision-holder\">\n                            <button className=\"yes\" style={{backgroundColor: (decision === \"yes\") ? \"#0b8a42\" : \"\"}}\n                                onClick={() => {handleKey(\"a\")}}\n                            >\n                                <PositiveAnswer color={(decision === \"yes\") ? \"white\" : \"#696969\"}/>\n                            </button>\n                            <div className=\"decision-tooltip\">yes</div>\n                        </div>\n                        <div className=\"btn-decision-holder\">\n                            <button className=\"no\" style={{backgroundColor: (decision === \"no\") ? \"#c31f1f\" : \"\"}}\n                                onClick={() => {handleKey(\"s\")}}\n                            >\n                                <NegativeAnswer color={(decision === \"no\") ? \"white\" : \"#696969\"}/>\n                            </button>\n                            <div className=\"decision-tooltip\">no</div>\n                        </div>\n                        <div className=\"btn-decision-holder\">\n                            <button className=\"und\" style={{backgroundColor: (decision === \"und\") ? \"#4242e1\" : \"\"}}\n                                onClick={() => {handleKey(\"d\")}}\n                            >\n                                <UndecidedAnswer color={(decision === \"und\") ? \"white\" : \"#696969\"}/>\n                            </button>\n                            <div className=\"decision-tooltip\">undecided</div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n\n    //if display is false (because I'm fetching data)\n    if(display === false){\n        //the paper to display will simply contain a loading icon\n        paperToDisplay = <LoadIcon class=\"small\"/>\n    }\n    //else if there's a paper\n    else if (paperData.data){\n        paperToDisplay = (\n            <>\n                <h2 className=\"paper-title\">{paperData.data.title}</h2>\n\n                <HighLighter data={paperData.data.abstract} disabled={paperData.data.title===\"Finished!\"} /* I disable the highlighter if the paper is the fake one telling the use he has finished*/\n                    className={\"paragraph\"} \n                    highlightedData={highlightedData} setHighlightedData={setHighlightedData}\n                />\n            </>\n        )\n    }\n\n    //I create the resulting page to display\n    resultPart = (\n        <>\n            {/*add keyboard handler to deal with keayboard commands */}\n            <KeyboardEventHandler handleKeys={['a', 's', 'd']}  handleFocusableElements onKeyEvent={(key) => handleKey(key)} />\n            <div className=\"right-side-wrapper filters\">\n                <h2>Filters:</h2>\n                <FiltersAccordion filtersList={filtersList}/>\n            </div>\n\n            {/*div wrapper to set height animation*/}\n            <div style={{height: paperHeight+\"px\",overflow:\"hidden\", transition: \"all 0.5s linear\"}}>\n                {/*content of the animated div*/}\n                <div className=\"left-side-wrapper s-paper\">\n                    {paperToDisplay}\n                </div>\n            </div>\n\n            <div style={{display: (paperData && paperData.data && paperData.data.title===\"Finished!\") ? \"none\" : \"\"}}>\n                <Tags display={display} selectedTags={selectedTags} setSelectedTags={setSelectedTags}\n                    availableTags={availableTags}\n                />\n            </div>\n\n            {formPart}\n        </>\n    );\n\n\n\n\n    let output = (\n        <>\n            <div className=\"single-predicate-screening-wrapper\">\n                {resultPart}\n            </div>\n        </>\n    );\n\n    return output;\n};\n\n\nexport default SinglePredicateScreening;","import React, {useState, useEffect, useRef, useContext} from \"react\";\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport InfoTooltip from \"components/modules/infoTooltip\";\n\nimport {projectScreeningDao} from 'dao/projectScreening.dao';\n\nimport {AppContext} from 'components/providers/appProvider';\n\nimport PositiveAnswer from 'components/svg/positiveAnswer';\nimport NegativeAnswer from 'components/svg/negativeAnswer';\nimport UndecidedAnswer from 'components/svg/undecidedAnswer';\n\n/**\n * form for the multi-predicate screening submission\n */\nconst MultiPredicateForm = function ({paperData, tagsData, filtersList, nextPaper, setNextPaper,\n                                      clearHighlights, highlightedData, setHighlightedData, display, mountRef}) {\n\n    //filter to display\n    const [displayedFilter, setDisplayedFilter] = useState(filtersList[0]);\n    \n    //array of votes per filter\n    const [filterVotes, setFilterVotes] = useState(filtersList.map((filter) => ({filter_id: filter.id, filter_predicate: filter.data.predicate, outcome: \"\"})));\n\n    //array of highlghts per filter\n    const [filterHighlights, setFilterHighlights] = useState(undefined);\n\n    //hooks for the underline animation (on the filters mini navbar)\n    const [underlineOffset, setUnderlineOffset] = useState(0);\n    const [underlineWidth, setUnderlineWidth] = useState(26);\n\n    //bool for vote submission\n    const [voteSubmission, setVoteSubmission] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //everytime display changes it means I'm fetching a new paper so I reset the highlights\n    useEffect(() => {\n        setFilterHighlights(filtersList.map(() => []));\n    }, [display])\n    \n    //everytime time the votes changes I search for the next filter which needs a vote\n    useEffect(() => {\n        \n        //index of the filter with no outcome yet\n        let index = filterVotes.findIndex((vote) => (vote.outcome === \"\"));\n\n        //if filter with no outcome exists\n        if(index >= 0){\n            //I wait a short timeout(this way the user can see its vote after casting it) and then I set the filter to display\n            setTimeout(() => {\n                if(mountRef.current){\n                    setDisplayedFilter(filtersList[index]);\n                }\n            }, 400);\n            \n        }\n        //otherwise\n        else{\n            //I go to the summary tab\n            setTimeout(() => {\n                if(mountRef.current){\n                    setDisplayedFilter(\"summary\");\n                }\n            }, 400);\n        }\n    },[filterVotes]);\n\n    //effect for updating the mini-navbar slider and setting the filter highlights\n    useEffect(() => {\n\n        //I get the index of the display filter(the highlights of the filter will have this same index)\n        let index = filtersList.findIndex((filter) => (filter.id === displayedFilter.id));\n\n        //slider width and offset\n        let btnWidth = undefined;\n        let btnOffset = 0;\n\n        //if the navbar is rendered\n        if(document.getElementsByClassName(\"filters-nav\")[0]) {\n            //I calculate offset and width\n            if(index >= 0){\n                btnWidth =  document.getElementsByClassName(\"filters-nav\")[0].childNodes[index];\n                for(let i = 0; i < index; i++){\n                    btnOffset = btnOffset + document.getElementsByClassName(\"filters-nav\")[0].childNodes[i].getBoundingClientRect().width;\n                }\n            }else{\n                btnWidth =  document.getElementsByClassName(\"filters-nav\")[0].childNodes[filterVotes.length];\n                for(let i = 0; i < filterVotes.length; i++){\n                    btnOffset = btnOffset + document.getElementsByClassName(\"filters-nav\")[0].childNodes[i].getBoundingClientRect().width;\n                }\n            }\n            btnWidth = btnWidth.getBoundingClientRect().width;\n            setUnderlineWidth(btnWidth-4);\n        }\n\n        //if there's a displayed filter\n        if(index >= 0){\n\n            //if there are already highlights for the filter\n            if(filterHighlights && filterHighlights[index].length !== 0){\n                //I set them in the hook\n                setHighlightedData(filterHighlights[index]);\n            }\n            //otherwise I simply clear the highlights of the previous filter\n            else{\n                clearHighlights();\n            }\n\n            setUnderlineOffset(btnOffset + 2);\n        }\n        //otherwise I'm into the summary tab and I disable the highlighter\n        else{\n            clearHighlights(\"disabled\");\n            setUnderlineOffset(btnOffset + 2);\n        }\n    }, [displayedFilter])\n\n    //function to submit filter votes and highlights\n    async function sendResults(){\n\n        //I create a basic array of highlights to send\n        let dataToSend = filterVotes.map((filterVote, index) => {\n            if(filterHighlights[index].length === 1 && filterHighlights[index][0].type === \"not_highlighted\"){\n                return {...filterVote, filterHighlights: []};\n            }else{\n                return {...filterVote, filterHighlights: filterHighlights[index]};\n            }\n        });\n\n        //I create the object to send\n        let screeningData = {\n            project_paper_id: paperData.id,\n            vote:{\n                metadata: {type: \"multi-predicate\", highlights: dataToSend, tags: tagsData}\n            }\n        };\n\n        //I check if all filter have been screened\n        if(filterVotes.findIndex((vote) => (vote.outcome === \"\")) === -1){\n            //I set the vote submission to true so this way the form will be disabled while it sends data\n            setVoteSubmission(true);\n\n            //call the dao\n            let resx = await projectScreeningDao.submitVote(screeningData);\n            \n            //error checking\n            if (mountRef.current && resx && resx.message) {\n                //pass error object to global context\n                appConsumer.setError(resx);  \n            }\n            //if successfull submission\n            else if(mountRef.current && resx.data){\n                //I trigger the effect to get a new paper\n                setNextPaper(!nextPaper);\n                //I reset all votes so they're ready for the new paper\n                setFilterVotes(filtersList.map((filter) => ({filter_id: filter.id, filter_predicate: filter.data.predicate, outcome: \"\"})));\n                setVoteSubmission(false);\n            }   \n        }\n    }\n\n    let output = <></>;\n\n    //if there's a paper to display\n    if(paperData && paperData.data && paperData.data.title!==\"Finished!\"){\n        \n        //I create the form\n        output = (\n            <form className=\"light-modal m-p-form\" onSubmit={sendResults}>\n\n                <InfoTooltip className={\"s-p-form\"}>\n                    You can cast your vote by using the keyboard:<br/>\n                    <b>A : </b> <i>yes</i><br/>\n                    <b>S : </b> <i>no</i><br/>\n                    <b>D : </b> <i>undecided</i><br/>\n                </InfoTooltip>\n\n                {/*mini navbar for the filter*/}\n                <div className=\"filters-nav\">\n                {filtersList.map((element) =>\n                    <button key={element.id} type=\"button\" className=\"filter-btn\" onClick={() => {setDisplayedFilter(element)}}>\n                        {element.data.name || \"[!]\"}\n                    </button>\n                )}\n                <button className=\"filter-btn summary\" type=\"button\" onClick={() => {setDisplayedFilter(\"summary\")}}>\n                    Summary\n                </button>\n                {/*underline for selected filter tab*/}\n                <div className=\"underline\" style={{left: underlineOffset + \"px\", width: underlineWidth+\"px\"}}></div>\n                </div>\n\n                <FilterScreen filter={displayedFilter} display={display} \n                    filterHighlights={filterHighlights} setFilterHighlights={setFilterHighlights}\n                    filterVotes={filterVotes} setFilterVotes={setFilterVotes} \n                    highlightedData={highlightedData} voteSubmission={voteSubmission}/>\n            </form>\n        );\n    }\n\n    return output;\n\n\n};\n\n/**\n * actual form part displaying the vote button\n */\nconst FilterScreen = function({ filter, display, \n                                filterHighlights, setFilterHighlights,\n                                filterVotes, setFilterVotes, \n                                highlightedData, voteSubmission}) {\n\n    //current filter vote\n    const [currentOutcome, setCurrentOutcome] = useState(\"\");\n\n    //index of the displayed filter\n    const currentIndex = useRef(filterVotes.findIndex((filterx) => (filterx.filter_id === filter.id)));\n\n    //every time the filter change I update the currentOutcome in order to display the current filter vote\n    useEffect(() => {\n        if(filter.id){\n            currentIndex.current = filterVotes.findIndex((filterx) => (filterx.filter_id === filter.id));\n            setCurrentOutcome(filterVotes[currentIndex.current].outcome);\n        }\n    }, [filter])\n\n    //I update the filter highlights when I detect a change in the currently highlighted text\n    useEffect(() => {\n        if(filter.id && filterHighlights && highlightedData !== filterHighlights[currentIndex.current]){\n            let localHighlight = filterHighlights;\n            localHighlight[currentIndex.current] = highlightedData;\n            setFilterHighlights([...localHighlight]);\n        }\n    }, [highlightedData])\n\n    //function for casting the filter vote in the filterVotes array\n    async function arraySubmission(key){\n\n        let localOutcome = \"\";\n        \n        switch (key) {\n            case \"s\":\n                setCurrentOutcome(\"0\");\n                localOutcome = \"0\";\n                break;\n            case \"a\":\n                setCurrentOutcome(\"1\");\n                localOutcome = \"1\";\n                break;\n            case \"d\":\n                setCurrentOutcome(\"2\");\n                localOutcome = \"2\";\n                break;\n            default:\n                break;\n        }\n\n        //I update the array of filter votes\n        setFilterVotes(\n            filterVotes.map((vote) => ((vote.filter_id === filter.id) ? {...vote, outcome : localOutcome} : vote))\n        );\n    }\n\n    //wrapper function for the vote submission in order to stop submission if necessary\n    function handleKey(key){\n        //I send the submission only if I'm not on an input text and there's a displayed paper and I'm not already submitting\n        if(document.activeElement.type !== \"text\" && display && !voteSubmission){\n            arraySubmission(key);\n        }\n    }\n\n    let output = <></>;\n\n    //if I'm displaying a filter\n    if(filter.id){\n\n        //I create output asking for vote\n        output = (\n            <>\n                {/*add keyboard handler to deal with keayboard commands */}\n                <KeyboardEventHandler handleKeys={['a', 's', 'd']}  handleFocusableElements onKeyEvent={(key) => handleKey(key)} />\n\n                <div className=\"filter-data\">\n                    <h2 className=\"filter-title\">\n                        {filter.data.predicate}\n                    </h2>\n                    <p className=\"criteria-type\">\n                        inclusion criteria:\n                    </p>\n                    <p className=\"criteria-description\">\n                        {filter.data.inclusion_description || <i>empty criterion</i>}\n                    </p>\n                    <p className=\"criteria-type\">\n                        exclusion criteria:\n                    </p>\n                    <p className=\"criteria-description\">\n                        {filter.data.exclusion_description || <i>empty criterion</i>}\n                    </p>\n                </div>\n\n                <div className=\"screening-choice multi-predicate\">\n\n                    <h3 className=\"filter-question\">Is the paper relevant for this eligibility criterion?</h3>\n                    <p className=\"hl-tip\">Please highlight in the text the evidence that supports your answer</p>\n                    \n                    <div className=\"yes-no-und\">\n                        <div className=\"btn-decision-holder\">\n                            <button className=\"yes\" type=\"button\" style={{backgroundColor: (currentOutcome === \"1\") ? \"#0b8a42\" : \"\"}}\n                                onClick={() => {handleKey(\"a\")}}\n                            >\n                                <PositiveAnswer color={(currentOutcome === \"1\") ? \"white\" : \"#696969\"}/>\n                            </button>\n                            <div className=\"decision-tooltip\">yes</div>\n                        </div>\n                        <div className=\"btn-decision-holder\">\n                            <button className=\"no\" type=\"button\" style={{backgroundColor: (currentOutcome === \"0\") ? \"#c31f1f\" : \"\"}}\n                                onClick={() => {handleKey(\"s\")}}\n                            >\n                                <NegativeAnswer color={(currentOutcome === \"0\") ? \"white\" : \"#696969\"}/>\n                            </button>\n                            <div className=\"decision-tooltip\">no</div>\n                        </div>\n                        <div className=\"btn-decision-holder\">\n                            <button className=\"und\" type=\"button\" style={{backgroundColor: (currentOutcome=== \"2\") ? \"#4242e1\" : \"\"}}\n                                onClick={() => {handleKey(\"d\")}}\n                            >\n                                <UndecidedAnswer color={(currentOutcome === \"2\") ? \"white\" : \"#696969\"}/>\n                            </button>\n                            <div className=\"decision-tooltip\">undecided</div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n    //otherwise\n    else{\n        //I show the summary tab\n        output = (\n            <div className=\"m-p-screening-summary\">\n                {filterVotes.map((vote, index)=>(\n                    <div key={index} className=\"filter-vote-summary\"><p>{vote.filter_predicate}</p> <div className=\"outcome-result\">\n                        {(vote.outcome === \"2\") ? \"undecided\" : \n                         ((vote.outcome === \"1\") ? \"yes\" : \"no\")}\n                    </div></div>\n                ))}\n                <button type=\"sumbit\" className=\"outcomes-submission\" disabled={((filterVotes.findIndex((vote) => (vote.outcome === \"\")) !== -1) || voteSubmission)}>\n                    Submit your outcomes\n                </button>\n            </div>\n        );\n    }\n\n    return output;\n};\n\nexport default MultiPredicateForm;","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Link} from 'react-router-dom';\n\nimport {projectScreeningDao} from 'dao/projectScreening.dao';\n\nimport LoadIcon from 'components/svg/loadIcon';\n\nimport {AppContext} from 'components/providers/appProvider'\n\n\nimport MultiPredicateForm from \"components/screenings_page/multiPredicateForm\";\nimport HighLighter from 'components/modules/highlighter';\nimport Tags from 'components/modules/paperTags';\n\nconst _array = require('lodash/array');\n\n/**\n * multi-predicate screening page\n * */\n\nconst MultiPredicateScreening = function ({screening, filtersList}) {\n\n    const mountRef = useRef(false);\n\n    //paper to screen data\n    const [paperData, setPaperData] = useState(undefined);\n\n    //bool to control the visualization of page\n    const [display, setDisplay] = useState(false);\n\n    //paper wrapper-height js animation\n    const [paperHeight, setPaperHeight] = useState(220)\n\n    //highlighted data\n    const [highlightedData, setHighlightedData] = useState([]);\n\n    //selected tags\n    const [selectedTags, setSelectedTags] = useState([]);\n\n    //available tags (there's no need to re-render the page when these changes because they're hidden, that's why I use useRef)\n    const availableTags = useRef(screening.data.tags);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //bool to trigger next paper fetch\n    const [nextPaper, setNextPaper] = useState(false);\n\n    //component lifecycle hook\n    useEffect(() => {\n        mountRef.current = true;\n        //execute only on unmount\n        return () => {\n            mountRef.current = false;\n        };\n    },[]);\n\n    //effect for updating the paper wrapper height once it's displayed\n    useEffect(() =>{\n        if(display){\n            setPaperHeight(document.getElementsByClassName('s-paper')[0].clientHeight+20);\n        }\n    }, [display])\n\n    //this will run on mount and every time the user votes a paper so we ask for a new one to vote\n    useEffect(() => {\n\n        //flag that represents the state of component\n        let mnt = true;\n\n        //a wrapper function ask by react hook\n        const fetchData = async () => {\n\n            //I hide the page before fetching a new paper\n            setDisplay(false);\n\n            //I reset the tags\n            availableTags.current = _array.union(availableTags.current, selectedTags);\n            setSelectedTags([]);\n\n            //call dao for getting next paper\n            let res = await projectScreeningDao.getProjectPaperToScreen(screening.id);\n\n            //error checking\n            //if the component is still mounted and  is 404 error it means there are no more papers to screen\n            if (mnt && res && res.message === \"Not Found\") {\n\n                //I create a 'fake' paper data so the user knows he's done\n                setPaperData({data: {title:\"Finished!\", \n                abstract:(\n                    <>There are no more papers to screen in this project<br/>\n                        <Link to={\"/screenings\"}>Go back to screenings list</Link>\n                    </>\n                    )}});\n                //show the page\n                setDisplay(true);\n            }\n            //if the component is still mounted and  there are some other errors\n            else if (mnt && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //otherwise it means I got a paper to screen\n            else if (mnt && res) {\n\n                //I set the paper\n                setPaperData(res);\n                //and reset the highlighted data\n                setHighlightedData([{data: res.data.abstract, start: 0, end: res.data.abstract.length-1, type:\"not_highlighted\"}])\n                //show the page\n                setDisplay(true);\n            }\n        };\n\n\n        fetchData();\n        \n\n        //when the component will unmount or the useEffect will finish\n        return () => {\n            //set flag as unmounted\n            mnt = false;\n        };\n\n    }, [screening, nextPaper]);  //re-execute when these variables change\n\n    //function to clear highlights\n    function clearHighlights(type = \"not_highlighted\"){\n        if(highlightedData && paperData){\n            setHighlightedData([{data: paperData.data.abstract, start: 0, end: paperData.data.abstract.length-1, type: type}])\n        }\n    }\n\n    //page parts\n    let resultPart = <></>;\n    let paperToDisplay = <></>;\n\n    //if I don't have paper to display yet\n    if(display === false){\n        //I display a loading icon\n        paperToDisplay = <LoadIcon class=\"small\"/>\n    }\n    //otherwise\n    else if(paperData.data){\n        //I display the paper\n        paperToDisplay = (\n            <>\n                <h2 className=\"paper-title\">{paperData.data.title}</h2>\n                <HighLighter data={paperData.data.abstract} disabled={paperData.data.title===\"Finished!\"} className={\"paragraph\"} \n                    highlightedData={highlightedData} setHighlightedData={setHighlightedData}\n                />\n            </>\n        )\n    }\n\n    //I create the resulting page to display\n    resultPart = (\n        <>\n            <div className=\"right-side-wrapper tags-holder\" style={{display: (paperData && paperData.data && paperData.data.title===\"Finished!\") ? \"none\" : \"\"}}>\n                <Tags className={\"right\"} display={display} selectedTags={selectedTags} setSelectedTags={setSelectedTags}\n                    availableTags={availableTags}\n                />\n            </div>\n            \n            {/*div wrapper to set height animation*/}\n            <div style={{height: paperHeight+\"px\",overflow:\"hidden\", transition: \"all 0.5s linear\"}}>\n                {/*content of the animated div*/}\n                <div className=\"left-side-wrapper s-paper\">\n                {paperToDisplay}\n                </div>\n            </div>\n\n            {/*I check whether there are filters*/}\n            {(filtersList.length === 0) ? \n                <p className=\"empty-filters-description\"> There are no filters here, add new filters before starting here</p>\n                :\n                <>\n                <MultiPredicateForm paperData={paperData}\n                    tagsData={selectedTags} nextPaper={nextPaper} setNextPaper={setNextPaper}\n                    filtersList={filtersList} display={display} mountRef={mountRef}\n                    clearHighlights={clearHighlights}\n                    highlightedData={highlightedData} setHighlightedData={setHighlightedData}\n                />\n                </>\n            }\n        </>\n    );\n\n    let output = (\n        <>\n            <div className=\"multi-predicate-screening-wrapper\">\n                {resultPart}\n            </div>\n        </>\n    );\n\n    return output;\n};\n\n\nexport default MultiPredicateScreening;","import React, {useState, useEffect, useContext, useRef} from \"react\";\nimport {Route, Switch, withRouter} from 'react-router-dom';\n\nimport {projectsDao} from 'dao/projects.dao';\nimport {projectFiltersDao} from 'dao/projectFilters.dao';\nimport {projectScreeningDao} from 'dao/projectScreening.dao';\nimport Forbidden from 'components/svg/forbidden';\n\nimport {AppContext} from 'components/providers/appProvider';\nimport SinglePredicateScreening from 'components/screenings_page/singlePredicate';\nimport MultiPredicateScreening from 'components/screenings_page/multiPredicate';\nimport LoadIcon from \"components/svg/loadIcon\";\n\n\n/**\n *this component will show a screenings page\n */\nconst ScreeningPage = (props) => {\n\n    const mountRef = useRef(false); \n\n    //screening object of page\n    const [screening, setScreening] = useState({data: {name: \"loading...\"}});\n\n    //flag for unauthorized user\n    const [unauthorized, setUnauthorized] = useState(false);\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    const screening_id = props.match.params.id;\n\n    //filters of the project\n    const [filtersList, setFiltersList] = useState([]);\n\n    //display flag\n    const [display, setDisplay] = useState(false)\n\n    //set the project title of the screening\n    useEffect(() => {\n\n        if(mountRef.current && (screening.data.name === \"loading...\" || screening.data.name === \"UNAUTHORIZED OR INEXISTENT SCREENING\")){\n            appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">{screening.data.name}</h2> </div>);//I set the page title\n        }else if(mountRef.current){\n            appConsumer.setTitle(<div className=\"nav-elements\"> <h2 className=\"static-title\">{screening.data.name} screening</h2> </div>);//I set the page title\n            appConsumer.setProjectName(screening.data.name);\n        }\n\n    }, [screening.data.name]);\n\n    useEffect(() => {\n\n        mountRef.current = true;\n\n        //hide the page before fetching new data\n        setDisplay(false);\n\n        //a wrapper function ask by react hook\n        const fetchProjectData = async () => {\n\n            //call dao\n            let res = await projectScreeningDao.getScreening(screening_id);\n\n            //error checking\n            //if unauthorized user or inexistent screening\n            if(mountRef.current && res.payload && (res.payload.statusCode === 404 || res.payload.statusCode === 401 || res.payload.message === \"the token does not match any user!\" || res.payload.message === \"empty token id in header, the user must first login!\")){\n                setUnauthorized(true);\n                setScreening({data: {name: \"UNAUTHORIZED OR INEXISTENT SCREENING\"}});\n            }\n            //if the component is still mounted and there is some other errors\n            else if (mountRef.current && res && res.message) {\n                //pass error object to global context\n                appConsumer.setError(res);\n            }\n            //if the component is still mounted and res isn't null\n            else if (mountRef.current && res ) {\n\n                //the user has access to the screening\n                setUnauthorized(false);\n                //update state\n                setScreening(res);\n\n                //call the dao to also get the filters\n                let resx = await projectFiltersDao.getFiltersList({\"project_id\" : res.project_id, \"sort\":\"ASC\"});\n\n                //error checking\n                //if the component is still mounted and  is 404 error\n                if (mountRef.current && resx && resx.message === \"Not Found\") {\n                    setFiltersList([]);\n                }\n                //if the component is still mounted and  there are some other errors\n                else if (mountRef.current && resx && resx.message) {\n                    //pass error object to global context\n                    appConsumer.setError(resx);\n                }\n                //if the component is still mounted and  res isn't null\n                else if (mountRef.current && resx) {\n                    //update state\n                    setFiltersList([...resx.results]);\n                }\n            }\n\n            //I show the page after I fetched all the data\n            setDisplay(true);\n            \n        };\n\n        fetchProjectData();\n\n        //when the component will unmount\n        return () => {\n            mountRef.current = false;\n        };\n    }, [screening_id, appConsumer.user]); //re-execute when these variables change\n\n\n    let output;\n\n    //if the user doesn't have access\n    if(unauthorized){\n        output = (\n            <div className=\"forbidden-wrapper\">\n                <Forbidden/>\n                <p>This screening does not exist or maybe you are not allowed to see it</p>\n            </div>\n        )\n    }\n    //else if there's a single-predicate screening\n    else if(display && screening.data.manual_screening_type === \"single-predicate\"){\n        //I get the page for single-predicate screening\n        output = (\n            <SinglePredicateScreening screening={screening} filtersList={filtersList}/>\n        );\n    }\n    //else if there's a multi-predicate screening\n    else if(display && screening.data.manual_screening_type === \"multi-predicate\"){\n        //I get the page for multi-predicate screening\n        output = (\n            <MultiPredicateScreening screening={screening} filtersList={filtersList}/>\n        );\n    }\n    //otherwise it means I'm fetching data and I should display a loading icon\n    else{\n        output = <LoadIcon/>\n    }\n\n    return output;\n};\n\n\n\nexport default withRouter(ScreeningPage);\n","import React, {useContext} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n\nimport {AppContext} from 'components/providers/appProvider';\n\nimport Home from 'components/home';\nimport ProjectsList from 'components/projects_page/projectsList';\nimport ProjectPage from 'components/projects_page/projectPage';\nimport ScreeningsList from 'components/screenings_page/screeningsList';\nimport ScreeningPage from 'components/screenings_page/screeningPage';\nimport LoadIcon from 'components/svg/loadIcon';\nimport PageNotFound from \"./modules/pageNotFound\";\n\n/**\n * compotent main of page\n */\nconst Main = function(props){\n\n    let output = \"\";\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //If I'm fecthing the user I dispay a loading icon\n    if(appConsumer.userFetch){\n        output = (<LoadIcon/>);\n    }\n    //I render all the routes only if the user is logged\n    else if(appConsumer.user){\n        output = (\n            <Switch>\n                <Route exact path=\"/\" render={() => <Home/> }/>\n                <Route exact path=\"/projects\" render={(props) => <ProjectsList {...props} />}/>\n                <Route path=\"/projects/:id\" render={(props) => <ProjectPage {...props} />}/>\n                <Route exact path=\"/screenings\" render={() => <ScreeningsList />}/>\n                <Route path=\"/screenings/:id\" render={() => <ScreeningPage />}/>\n                <Route render={(props) => <PageNotFound/>}/>\n            </Switch>\n        );\n    }\n    else{\n        //two routes accessible to unlogged users\n        output = (\n            <Switch>\n                <Route path=\"/projects/:id\" render={(props) => <ProjectPage {...props} />}/>\n                <Route render={() => <Home/>}/>\n            </Switch>\n        );\n    }\n\n    return output;\n};\n\nexport default Main;","import React, {useContext} from \"react\";\n\nimport {AppContext} from \"components/providers/appProvider\";\n\n/**\n * this is the head component of page\n * @param props\n * @param \"menu_elements\" contains the list of menu-items\n */\n\n\nconst NavBar = function(props){\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    \n    return (\n        <div className=\"navigation-wrapper\">\n\n            {/*background of the menu-bar*/}\n            <nav className={appConsumer.user ? \"main-nav\" : \"main-nav nav-title-to-left\"}>\n                {appConsumer.title}\n            </nav>\n            {props.children}\n\n        </div>\n    );\n}\n\nexport default NavBar;","import React, {useContext} from \"react\";\nimport { AppContext } from 'components/providers/appProvider'\n\nimport Image from 'components/modules/image';\n/*\n* this is the component that visualize user information box\n* */\nconst UserInfo = function(props){\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //not logged in as default\n    let output = (\n        <div className=\"user\">\n            <h3>you're not logged in</h3>\n        </div>\n    );\n\n    //if user is logged in I load his data\n    if(appConsumer.user){\n        output = (\n            <div className=\"user\" >\n                <Image className=\"face\" alt=\"profile picture\" src={appConsumer.user.image}/>\n                <div className=\"user-info\">\n                    <span className=\"name\">{appConsumer.user.name}</span>\n                    <span className=\"surname\">{appConsumer.user.surname}</span>\n                </div>\n            </div>\n        );\n    }\n\n    return output;\n\n};\n\nexport  default  UserInfo;","import React from \"react\";\n\n/**\n * component svg menu button\n */\nconst MenuButton = function (props) {\n\n    return (\n\n        <svg id=\"menu-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n             x=\"0px\" y=\"0px\"\n             viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M214,482.1\"/>\n            <line className=\"st-t\" x1=\"172\" y1=\"482.1\" x2=\"172\" y2=\"482.1\"/>\n            <line className=\"st-m\" x1=\"500\" y1=\"482.1\" x2=\"500\" y2=\"482.1\"/>\n            <line className=\"st-b\" x1=\"828\" y1=\"482.1\" x2=\"828\" y2=\"482.1\"/>\n        </svg>\n    );\n};\n\nexport default MenuButton;\n","import React, {useState, useContext} from \"react\";\nimport {Link} from 'react-router-dom';\n\nimport { AppContext } from 'components/providers/appProvider';\n\nimport UserInfo from 'components/navigation/userInfo';\nimport config from 'config/index';\nimport MenuButton from 'components/svg/menuButton';\nimport Cover from 'components/modules/cover';\n\n/**\n *this is the side menu component\n */\nconst SideMenu = function (props) {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    //bool to control the visualization of menu\n    const [shown, setShown] = useState(false);\n    const [firstTime, setFirstTime] = useState(true);\n\n\n    //function to open/close the menu\n    function handleToggleMenuButton() {\n        setShown(!shown);\n        setFirstTime(false);\n    }\n\n    //function to close the menu\n    function handleMenuBlur(e) {\n        setShown(false);\n    }\n\n    /**\n     * logout handler function\n     */\n    async function logout (e){\n        console.log(\"logging out\");\n\n        //this way we won't trigger the menu animation again if the user logs in again \n        setFirstTime(true);\n        //remove token from storage\n        localStorage.removeItem(\"userToken\");\n        //remove user info from context\n        appConsumer.setUser(null);\n\n    }\n\n    //change the class of element by menu state\n    var clsidemenu = \"modal side-menu up\";\n    var clsbutton = \"button-wrapper close\";\n\n    if (firstTime) {\n        clsidemenu = \"modal side-menu\"\n    }\n    if (shown) {\n        clsbutton = \"button-wrapper open\"\n        clsidemenu = \"modal side-menu down\"\n    }\n\n    if(appConsumer.user){\n        return (\n            <div className=\"menu\">\n                <Cover cls={(shown) ? \"full-screen-transparent\" : \"\"} handler={handleMenuBlur}/>\n                <div className={clsbutton} onClick={handleToggleMenuButton}>\n                    <MenuButton/>\n                </div>\n\n                <div className={clsidemenu} tabIndex={-1}>\n\n                    {/*user info box*/}\n                    <UserInfo/>\n                    <PrintMenu handleMenuBlur={handleMenuBlur}/>\n                    <div className=\"entry-holder\">\n                        <button type=\"button\" className=\"menu-option\" onClick={logout} onMouseUp={handleMenuBlur}>Log out</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }else{\n        return (\n            <div className=\"menu\">\n            </div>\n        );\n    }\n};\n\n/**\n *internal component that is used only for print menu items\n */\nconst PrintMenu = function (props) {\n\n    let output = (\n        config.menu_list.map((element, index) => (\n                <div key={index} className=\"entry-holder\">\n                    <Link to={element.link} className=\"menu-option\"\n                          onMouseUp={props.handleMenuBlur}>{element.content}</Link>\n                </div>\n            )\n        )\n    );\n    return output;\n\n\n}\n\n\nexport default SideMenu;","import React, {useContext} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport {AppContext} from 'components/providers/appProvider';\n\n\nconst BreadCrumbs = function(props) {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n    \n    let bcPath = <></>;\n\n    function createBreadCrumbs(){\n\n        //I extract the location from the router\n        const { location } = props;\n\n        //I split the pathname by '/' and remove empty strings\n        let path = location.pathname.split('/').filter(x => x);\n\n        //will contain the partial url\n        let href= \"/\";\n        //will contain the link element\n        let link;\n        //array of JSX elements containing the links\n        let bc = [];\n\n        //I don't print ' > ' at the end if there's only one link\n        if(path.length === 0){\n            link = (<div key={0}></div>);\n        }else{\n            link = (<Link key={0} to={href}>Home<span> > </span></Link>);\n        }\n\n        //I push the initial breadcrumb (</> if we are in the home)\n        bc.push(link);\n\n        //I iterate over the paths taking care of links\n        for(let i = 0; i < path.length; i++){\n\n            //avoids the path '/' and the trailing slash\n            if(href === \"/\"){\n                href += path[i];//I update the partial url\n            }else{\n                href += (\"/\" + path[i]);//I update the partial url\n            }\n            \n            //I check whether is the ID of a project \n            if(path[i-1] && path[i-1] === \"projects\"){\n                //I retrieve the project title from the context\n                link = (<Link key={i+1} to={href}>{appConsumer.projectName}</Link>);\n            }else if(path[i-1] && path[i-1] === \"screenings\"){\n                //I retrieve the project title from the context\n                link = (<span key={i+1}>{appConsumer.projectName} screening</span>);\n            }else{\n                switch (path[i]) {\n                    case \"projects\":\n                        link = (<Link key={i+1} to={href}>My Projects</Link>);\n                        break;\n                    case \"screenings\":\n                        link = (<Link key={i+1} to={href}>My Screenings</Link>);\n                        break;\n                    case \"searchsimilar\":\n                        link = (<Link key={i+1} to={href}>Search for similar papers</Link>);\n                        break;\n                    case \"searchautomated\":\n                        link = (<Link key={i+1} to={href}>Intelligent papers search</Link>);\n                        break;\n                    case \"single_predicate\":\n                        link = (<Link key={i+1} to={href}>Single predicate Mode</Link>);\n                        break;\n                    case \"multi_predicate\":\n                        link = (<Link key={i+1} to={href}>Multi predicate Mode</Link>);\n                        break;\n                    case \"screening\":\n                        link = (<span key={i+1}>Screening</span>);\n                        break;\n                    default:\n                        link = (<Link key={i+1} to={href}>{path[i].charAt(0).toUpperCase() + path[i].slice(1)}</Link>);\n                        break;\n                }\n            }\n\n            //I push the link into the list of breadcrumbs\n            bc.push(link);\n\n            //I put ' > ' at the end\n            if(i < (path.length - 1)){\n                bc.push(<span key={i+9999}>{\" > \"}</span>);\n            }\n            \n        }\n        return bc;\n\n    }\n\n    if(appConsumer.user){\n        bcPath = createBreadCrumbs();\n    }\n    \n\n    return (\n        <div className=\"relative-header\">\n            <div className=\"breadcrumbs\">{bcPath}</div>\n        </div>\n    );\n\n}\n\nexport default withRouter(BreadCrumbs);\n","import React, {useContext, useRef} from \"react\";\n\nimport { AppContext } from 'components/providers/appProvider'\nimport CloseButton from 'components/svg/closeButton';\n\n/**\n * component for notification\n */\nconst Notification = function (props) {\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    const notificationTimeout = useRef();\n\n    let output = <></>;\n\n    //if there's a notification I sent it in input\n    if(appConsumer.notificationMessage){\n\n        //I automatically remove it after 5 seconds\n        notificationTimeout.current = setTimeout(() => {\n            appConsumer.setNotificationMessage(undefined);\n        }, 5000);\n\n        output = (\n            <div className=\"top-right-notification\">\n                <div className=\"message-content\">\n                    {appConsumer.notificationMessage}\n                </div>\n                <button type=\"button\" className=\"close-notification-btn\" \n                    onClick={(e) => {\n                        appConsumer.setNotificationMessage(undefined);\n                        clearTimeout(notificationTimeout.current);\n                    }}>\n                    <CloseButton/>\n                </button>\n            </div>\n        );\n    }\n    return output;\n};\n\nexport default Notification;","import React, {useContext} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {GoogleLogin} from 'react-google-login';\n\nimport config from 'config/index'\n\nimport {AppContext} from 'components/providers/appProvider';\n\n\n/**\n * this component handles the google login and logout from the platform\n */\nconst UsersLogin = function (props) {\n\n    //output var\n    let output = <></>;\n\n    //get the localStorage object\n    const storage = window.localStorage;\n\n    //get data from global context\n    const appConsumer = useContext(AppContext);\n\n    /**\n     * google response handler function\n     */\n    async function responseGoogle(response){\n        //if the google login is succeeded\n        if (response.tokenId) {\n            console.log(response.profileObj);\n            let user = {\"email\": response.profileObj.email, \n                        \"name\": response.profileObj.givenName, \n                        \"surname\": response.profileObj.familyName, \n                        \"image\": response.profileObj.imageUrl};\n\n            // set the user data in context provider\n            appConsumer.setUser(user);\n            //and save the token as string in localStorage\n            storage.setItem(\"userToken\", response.tokenId);\n\n            \n        }\n    }\n\n    //part of visualization-----------------------------\n\n    //if there's no token or I'm not fetching an user\n    if (!appConsumer.userFetch && !appConsumer.user) {\n        output = (\n            <div className=\"login-holder\">\n                <GoogleLogin\n                    clientId={config.google_login_client_id}\n                    buttonText=\"Login\"\n                    onSuccess={responseGoogle}\n                    onFailure={responseGoogle}\n                    cookiePolicy={'single_host_origin'}\n                />\n            </div>\n        );\n    }\n    return output;\n\n}\n\nexport default UsersLogin;\n","import React, {useEffect} from 'react';\n\nimport Main from 'components/main';\n\nimport NavBar from 'components/navigation/navBar';\nimport SideMenu from 'components/navigation/sideMenu';\nimport BreadCrumbs from 'components/navigation/breadCrumbs';\n\nimport Notification from 'components/modules/notification';\n\nimport UsersLogin from 'components/modules/usersLogin';\n\n\nimport  {AppProvider} from 'components/providers/appProvider';\n\n\n/**\n *this is the start point of application\n */\n\nconst App = function(props) {\n\n\n        return (\n                <div className=\"app\">\n\n                    {/*mount a root context object*/}\n                    <AppProvider testing={props.testing}>\n\n                        <NavBar>\n                            {/*component menu*/}\n                            <SideMenu/>\n                        </NavBar>\n\n                        <BreadCrumbs/>\n\n                        <Notification/>\n\n                        <div className=\"main-wrapper\">\n\n                            <Main/>\n\n                            <UsersLogin/>\n\n                        </div>\n                        \n                    </AppProvider>\n                </div>\n        );\n\n}\n\nexport default App;\n","import React from 'react';\nimport {HashRouter as Router} from 'react-router-dom';\n\nimport App from 'App';\n\n/**\n *this is the router wrapper of application\n */\n\nconst AppRouter = function(props) {\n\n\n        return (\n            <Router basename={\"/\"}>\n                <App/>\n            </Router>\n        );\n\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from 'AppRouter';\nimport * as serviceWorker from 'serviceWorker';\n\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}