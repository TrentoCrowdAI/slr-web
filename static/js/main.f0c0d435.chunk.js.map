{"version":3,"sources":["utils/conn.js","components/loadicon.js","providers/AccountProvider.js","components/navigation/sidemenu.js","components/navigation/navbar.js","components/main.js","config/index.js","dao/projects.dao.js","components/forms/projectForm.js","utils/stringUtils.js","components/projectslist.js","components/forms/checkbox.js","dao/paper.dao.js","dao/projectPapers.dao.js","components/forms/searchform.js","components/projectpage.js","App.js","serviceWorker.js","index.js"],"names":["abortController","LoadIcon","react_default","a","createElement","id","xmlns","xmlnsXlink","x","y","viewBox","d","AccountContext","React","createContext","AccountProvider","Provider","value","image","className","alt","src","name","surname","this","props","children","Component","AccountConsumer","Consumer","UserInfo","_ref","SideMenu","state","shown","firsttime","handleToggleMenuButton","_this","setState","prevstate","menufocus","focus","handleMenuBlur","_this2","clsidemenu","clsbutton","onClick","x1","y1","x2","y2","tabIndex","sidemenu_UserInfo","user","menu_elements","map","element","index","key","react_router_dom","to","link","onMouseUp","content","NavBar","menuhandler","user_elements","sidemenu","handler","Main","main_element","http","get","post","delete","put","abortRequest","abort","request","_callee","url","options","signal","requestOptions","response","_args","arguments","regenerator_default","wrap","_context","prev","next","length","undefined","AbortController","Object","assign","credentials","mode","fetch","checkResponseStatus","sent","parseResponseData","abrupt","t0","stop","_callee2","queryData","query","_args2","_context2","encodeURIComponent","slice","_callee3","_context3","method","_callee4","bodyData","jsonHeaders","body","_args4","_context4","Headers","append","JSON","stringify","headers","_callee5","_args5","_context5","status","error","Error","statusText","data","_callee6","contentType","_context6","indexOf","text","formData","blob","json","config","home","search","projects","papers","project_id","projectsDao","getProjectsList","getProject","postProject","putProject","deleteProject","ProjectForm","projectName","useRef","projectDescription","_createProject","asyncToGenerator","mark","e","preventDefault","current","description","alert","apply","_updateProject","project","projectInputData","submitAction","_x","_x2","Fragment","style","visibility","type","setVisibility","ref","defaultValue","join","base","path","charAt","ProjectsList","match","_useState","useState","_useState2","slicedToArray","toggleform","setToggleForm","_useState3","_useState4","projectslist","setProjectsList","_useState5","_useState6","fetching","setFetching","useEffect","_ref2","res","fetchData","loadicon","projectForm","CheckBox","val","label","isSelected","checked","onChange","paperDao","message","paper_id","console","log","projectPapersDao","getPapersList","getPaper","postPaperIntoProject","putPaper","deletePaper","OPTIONS1","SearchForm","projectId","setQuery","checkboxes","setCheckboxes","results","setResults","selectedpapers","setSelectedPapers","searching","setSearching","handleCheckboxChange","target","prevCheckboxes","one","objectSpread","defineProperty","handlePaperSelection","array","includes","filter","arr","push","updateSearchResults","_ref3","onSubmit","position","placeholder","disabled","option","forms_checkbox","i","postData","_React$createElement","Title","lib_default","Abstract","lines","ellipsis","moreText","lessText","PapersList","setPapersList","ProjectPage","setProject","_useState7","_useState8","_useState9","_useState10","slider","setSlider","_useState11","_useState12","_useState13","_useState14","_useState15","reduce","_useState16","_useState17","_useState18","substr","window","location","pathname","substring","_ref4","res2","params","toUpperCase","es","flipKey","flipId","react_router","exact","render","projectpage_PapersList","searchform","App","menu_list","AccountProvider_AccountProvider","navbar","main","components_projectslist","projectpage","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0c0d435.chunk.js","sourcesContent":["/*this is the file to communicate with backend*/\n\n//signal to abort the request\nvar abortController;\n\n//object to export\nconst http = {\n    \"get\": get,\n    \"post\": post,\n    \"delete\": deletes,\n    \"put\": put,\n    \"abortRequest\": abortRequest,\n\n}\n\n\n/**\n * abort all request in progeress\n */\nfunction abortRequest() {\n    abortController.abort();\n}\n\n/**\n * create a basic fetch request\n * @param url\n * @param options request config\n * @return {object} response data\n */\nasync function request(url, options = {}) {\n    try {\n\n        //create a new abortController for this request\n        abortController =  new AbortController();\n        let signal = abortController.signal;\n        let requestOptions = Object.assign(\n            {\n                //enable the  sending of cookie\n                credentials: 'include',\n                \"mode\": 'cors',\n                \"signal\": signal\n            },\n            options\n        );\n\n\n        let response = await fetch(url, requestOptions);\n        //response error check\n        checkResponseStatus(response);\n        //parse response data\n        response = await parseResponseData(response);\n        //console.log(response);\n\n        return response;\n\n    } catch (error) {\n        throw error;\n        return null;\n    }\n}\n\n/**\n * get method\n * @param url\n * @param queryData quey string\n * @return {object} response data\n */\nasync function get(url, queryData = \"\") {\n    let query = \"\";\n    if (queryData !== \"\") {\n        query = \"?\";\n        for (let key in queryData) {\n            query += key + \"=\" + encodeURIComponent(queryData[key]) + \"&\";\n        }\n        //delete the last &\n        query = query.slice(0, query.length - 1);\n    }\n    return await request(url + query);\n}\n\n/**\n * deletes method\n * @param url\n */\nasync function deletes(url) {\n    let options = {\n        \"method\": 'DELETE'\n    };\n\n    await request(url, options);\n}\n\n/**\n * post method\n * @param url\n * @param bodyData\n * @return {object } response data\n */\nasync function post(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'POST',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options);\n}\n\n\n\n\n/**\n * put method\n * @param url\n * @param bodyData\n */\nasync function put(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'PUT',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options);\n}\n\n\n/**\n *  * check resposonse status\n * @param response to check\n * @throws {Error} if  status code < 200 or status code >= 300\n */\nfunction checkResponseStatus(response) {\n    if (response.status < 200 || response.status >= 300) {\n        const error = new Error(response.statusText);\n        error.data = response;\n        throw error;\n    }\n\n}\n\n/**\n * parse the response of  http request\n * @param response\n * @return {object} data parsed\n */\nasync function parseResponseData(response) {\n    //get response data type\n    const contentType = response.headers.get('Content-Type');\n    let data;\n    //parse the data by its type\n    if (contentType != null) {\n        if (contentType.indexOf('text') > -1) {\n            data = await response.text()\n        }\n        if (contentType.indexOf('form') > -1) {\n            data = await response.formData();\n        }\n        if (contentType.indexOf('video') > -1) {\n            data = await response.blob();\n        }\n        if (contentType.indexOf('json') > -1) {\n            data = await response.json();\n        }\n    } else {\n        data = await response.text();\n    }\n    return data;\n}\n\n\nexport {http};","import React from \"react\";\n\n/**\n * component loading-icon\n */\nconst LoadIcon = () => (\n  <svg id=\"loading-icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n    viewBox=\"0 0 1000 1000\">\n    <g>\n      <path id=\"loading-circle1\" d=\"\n              M 500, 500\n              m -160, 0\n              a 160,160 0 1,0 320,0\n              a 160,160 0 1,0 -320,0\n      \"/>\n      <path id=\"loading-circle2\" d=\"\n              M 500, 500\n              m -305, 0\n              a 305,305 0 1,0 610,0\n              a 305,305 0 1,0 -610,0\n      \"/>\n    </g>\n  </svg>\n);\n\nexport default LoadIcon;\n","import React, {Component} from 'react';\n\n//create a context object\nconst AccountContext = React.createContext();\n\n/**\n * account component\n * offers a context object that storage user information and it can be acessed by all component-children\n */\nclass AccountProvider extends Component {\n    render() {\n        return (\n\n         //*set the values of contenxt*\n        <AccountContext.Provider value={{\n            image: <img className=\"face\" alt=\"profile\" src=\"https://placekitten.com/100/100\"></img>,\n            name: \"Bobinsky\",\n            surname: \"Sylvester\"\n        }}>\n\n            {/*mount all components received by props*/}\n            {this.props.children}\n\n        </AccountContext.Provider>\n        );\n    }\n}\n\nconst AccountConsumer = AccountContext.Consumer;\nexport {AccountProvider, AccountConsumer};","import React, {Component} from \"react\";\nimport { AccountConsumer } from '../../providers/AccountProvider'\nimport { Link } from 'react-router-dom'\n\nconst UserInfo = () => (\n  <AccountConsumer>\n     {({ image, name, surname }) => (\n      <div className=\"user\" >\n        {image}\n        <div className=\"user-info\">\n          {name}\n          <br/>\n          {surname}\n        </div>\n      </div>  \n     )}\n  </AccountConsumer>\n);\n\nclass SideMenu extends Component{\n  state = {\n    shown: false, \n    firsttime: true\n  };\n\n  handleToggleMenuButton = () =>{\n    this.setState(prevstate => ({\n      shown: !prevstate.shown,\n      firsttime: false,\n      menufocus: !prevstate.focus\n    }));\n  }\n\n  handleMenuBlur = () =>{\n    this.setState(prevstate => ({\n      shown: false\n    }));\n  }\n\n  render(){\n    var clsidemenu = \"modal side-menu up\";\n    var clsbutton = \"button-wrapper close\";\n    if(this.state.firsttime){\n      clsidemenu=\"modal side-menu\"\n    }\n    if(this.state.shown){\n      clsbutton=\"button-wrapper open\"\n      clsidemenu=\"modal side-menu down\"\n    }\n    return (\n      <div className=\"menu\">\n        <div className={clsbutton} onClick={this.handleToggleMenuButton}>\n          <svg id=\"menu-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M214,482.1\"/>\n            <line className=\"st-t\" x1=\"172\" y1=\"482.1\" x2=\"172\" y2=\"482.1\"/>\n            <line className=\"st-m\" x1=\"500\" y1=\"482.1\" x2=\"500\" y2=\"482.1\"/>\n            <line className=\"st-b\" x1=\"828\" y1=\"482.1\" x2=\"828\" y2=\"482.1\"/>\n          </svg>\n      </div>\n      <div className={clsidemenu} tabIndex={-1}>\n        <UserInfo user={this.props.user}></UserInfo>\n        {this.props.menu_elements.map((element, index) =>\n          <div key={index}>\n            <Link to={element.link} className=\"menu-option\" onMouseUp={this.handleMenuBlur}>{element.content}</Link>          \n          </div>\n        )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SideMenu;","import React from \"react\";\nimport SideMenu from './sidemenu';\n\n\n/**\n * this is the head component of page\n * @param \"menu_elements\" contains the list of menu-items\n */\n\nconst NavBar = ({menuhandler, user_elements, menu_elements}) => {\n    return (\n        <div className=\"navigation-wrapper\">\n\n            {/*background of the menu-bar*/}\n            <nav className=\"main-nav\"></nav>\n            {/*component menu*/}\n            <SideMenu handler={menuhandler} user={user_elements} menu_elements={menu_elements}></SideMenu>\n\n        </div>\n    );\n}\n\nexport default NavBar;","import React, {Component} from \"react\";\n\n/**\n * compotent main of page\n */\nclass Main extends Component {\n    state = {};\n\n    render() {\n        return (\n            <div className=\"main-wrapper\">\n                {this.props.main_element}\n            </div>\n        );\n    }\n};\n\nexport default Main;","/**\n * this is the config file\n */\n\n\nconst config = {\n    \"home\" : \"http://localhost:3000/\",\n    \"search\" : \"search\",\n    \"projects\" : \"projects\",\n    \"papers\" : \"papers\"\n\n}\n\nexport {config};","import {http} from './../utils/conn'\nimport {config} from './../config/index'\n\n/**\n * dao to get a projects list\n * @param queryData\n * @return {array[objects]}\n */\nasync function getProjectsList(queryData = \"\") {\n    let url = config.home + config.projects\n    return await http.get(url, queryData);\n}\n\n/**\n * dao to get a project\n * @param project_id\n * @return {Object} project requested\n */\nasync function getProject(project_id) {\n    let url = config.home + config.projects+\"/\"+project_id;\n    return await http.get(url);\n}\n\n/**\n * dao to post a new project\n * @param bodyData\n * @return {Object} project created\n */\nasync function postProject(bodyData) {\n    let url = config.home + config.projects;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to put a old project\n * @param project_id\n * @param bodyData\n */\nasync function putProject(project_id, bodyData) {\n    let url = config.home + config.projects+\"/\"+project_id;\n    await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a project\n * @param project_id\n * @param bodyData\n */\nasync function deleteProject(project_id) {\n    let url = config.home + config.projects+\"/\"+project_id;\n    await http.delete(url);\n}\n\n\n\nconst projectsDao = {\n    \"getProjectsList\": getProjectsList,\n    \"getProject\": getProject,\n    \"postProject\": postProject,\n    \"putProject\": putProject,\n    \"deleteProject\": deleteProject,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {projectsDao};","import React, {useEffect, useRef} from \"react\";\nimport {projectsDao} from './../../dao/projects.dao'\n\n\n/**\n * this is the form for create or edit the project\n * @param props.project  project object if we want to update a old project\n * @param null if we want to create a new project\n */\nfunction ProjectForm(props) {\n\n    //field of project name\n    const projectName = useRef(null);\n    //field of project description\n    const projectDescription = useRef(null);\n\n    /**\n     * action to create a new project\n      */\n    async function createProject(e) {\n        //disable default action\n        e.preventDefault();\n        //prepare the data object to post\n        let bodyData = {name: projectName.current.value, description: projectDescription.current.value};\n        //call dao\n        let res = await projectsDao.postProject(bodyData);\n\n        alert(\"inserted correctly\");\n    }\n\n    /**\n     * action to update a old project\n     */\n    async function updateProject(e) {\n        //disable default action\n        e.preventDefault();\n        //prepare the data object to post\n        let bodyData = {name: projectName.current.value, description: projectDescription.current.value};\n        //call dao  with project_id and data object\n        await projectsDao.putProject(props.project.id, bodyData);\n\n        alert(\"updated correctly\");\n    }\n\n\n    //defalut input values are empty\n    let projectInputData = {name: \"\", description: \"\"};\n    //default action is create a project\n    let submitAction = createProject;\n    //if we want update a old project\n    if (props.project !== undefined) {\n        //get old project data\n        projectInputData.name = props.project.data.name;\n        projectInputData.description = props.project.data.description;\n        //set action as update\n        submitAction = updateProject;\n    }\n\n    return (\n        <>\n        <form className=\"modal add-project\" style={{visibility: (!props.visibility) ? 'hidden' : '' }}>\n            <button type=\"button\" className=\"close-btn\" onClick={(e) => {\n                props.setVisibility(!props.visibility);\n            }}>X</button>\n            <label>name</label>\n            <br/>\n            <input ref={projectName} type=\"text\" defaultValue={projectInputData.name}/>\n            <br/>\n            <label>description</label>\n            <br/>\n            <input ref={projectDescription} type=\"text\" defaultValue={projectInputData.description}/>\n            <br/>\n            <button type=\"submit\" onClick={submitAction} value=\"submit\">submit</button>\n        </form>\n        </>\n    );\n\n\n}\n\n\nexport default ProjectForm;","export default function join(base, path){\n    return base.charAt(base.length-1) === '/'\n      ? base.slice(0,-1) + path\n      : base + path\n  }","import React, {useState, useEffect} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {projectsDao} from '../dao/projects.dao';\nimport LoadIcon from '../components/loadicon';\nimport ProjectForm from '../components/forms/projectForm';\nimport join from '../utils/stringUtils';\n\n/**\n *this component will show a projects list\n */\n\nconst ProjectsList = ({match}) => {\n\n    const [toggleform, setToggleForm] = useState(false);\n    const [projectslist, setProjectsList] = useState([]);\n    //bool variable to decide show  or not show list\n    const [fetching, setFetching] = useState(true);\n\n    useEffect(() => {\n\n        //a wrapper function ask by reat hook\n        const fetchData = async () => {\n            //call the dao\n            const res = await projectsDao.getProjectsList();\n\n            //update only when there is a result\n            if (res !== null) {\n                //update state\n                setProjectsList(res);\n                setFetching(false);\n            }\n\n        }\n        fetchData();\n        //when the component will unmount\n        return () => {\n            //stop all ongoing request\n            projectsDao.abortRequest();\n        };\n    }, []);\n\n    if (fetching) {\n        return <LoadIcon></LoadIcon>;\n    }\n    else {\n        return (\n            <>\n                <div className=\"project-cards-holder\">\n                    <div className=\"title\">PROJECTS</div>\n                    {projectslist.map((element, index) =>\n                        <Link key={index} to={join(match.url,\"/\"+element.id)}>\n                            <div className=\"light-modal project-card\">\n                                <h3>{element.data.name}</h3>\n                                <p>{element.data.description}</p>\n                            </div>\n                        </Link>\n                    )}\n                </div>\n                <ProjectForm visibility={toggleform} setVisibility={setToggleForm}></ProjectForm>\n                <button className=\"bottom-left-btn\" type=\"button\" value=\"toggle-insert-form\"\n                onClick={(e) => {\n                    setToggleForm(!toggleform);\n                  }}\n                >+</button>\n            </>\n\n        );\n    }\n}\n\nexport default ProjectsList;","import React from \"react\";\n\nconst CheckBox = ({ val, label, isSelected, handler }) => (\n    <label className=\"checkbox-container\">\n      <input type=\"checkbox\" value={val} name={label} checked={isSelected} onChange={handler} />\n      <span className=\"checkmark\"></span>\n      <span>{label}</span>\n    </label>\n);\n\nexport default CheckBox;","import {http} from './../utils/conn'\nimport {config} from './../config/index'\n\n/**\n * dao to search papers\n * @param queryData\n * @return {array[objects]}\n */\nasync function search(queryData){\n    let url = config.home+config.search\n    try{\n        const res = await http.get(url, queryData);\n        return res;\n    }catch(e){\n        return [\"not_found\"];\n    }\n}\n\n\n\nconst paperDao = {\n    \"search\" : search,\n    \"abortRequest\" : http.abortRequest\n}\n\n\n\nexport {paperDao};","import {http} from './../utils/conn'\nimport {config} from './../config/index'\n\n/**\n * dao to get a list of paper associated with a project\n * @param queryData\n * @return {array[objects]}\n */\nasync function getPapersList(queryData) {\n    let url = config.home + config.papers\n    try{\n        const res = await http.get(url, queryData);\n        return res;\n    }catch(e){\n        if(e.message === \"Not Found\"){\n            return null;\n        }else{\n            return e;\n        }\n    }\n}\n\n/**\n * dao to get a paper\n * @param paper_id\n * @return {Object} paper requested\n */\nasync function getPaper(paper_id) {\n    let url = config.home + config.papers+\"/\"+paper_id;\n    return await http.get(url);\n}\n\n/**\n * dao to post a new paper\n * @param bodyData\n * @return {Object} project created\n */\nasync function postPaperIntoProject(bodyData) {\n    let url = config.home + config.papers;\n    console.log(bodyData);\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to put a old paper\n * @param paper_id\n * @param bodyData\n */\nasync function putPaper(paper_id, bodyData) {\n    let url = config.home + config.papers+\"/\"+paper_id;\n    await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a paper\n * @param paper_id\n * @param bodyData\n */\nasync function deletePaper(paper_id) {\n    let url = config.home + config.papers+\"/\"+paper_id;\n    await http.delete(url);\n}\n\n\n\nconst projectPapersDao = {\n    \"getPapersList\": getPapersList,\n    \"getPaper\": getPaper,\n    \"postPaperIntoProject\": postPaperIntoProject,\n    \"putPaper\": putPaper,\n    \"deletePaper\": deletePaper,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {projectPapersDao};","import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom'\nimport CheckBox from \"./checkbox\";\nimport ClampLines from 'react-clamp-lines';\nimport {paperDao} from '../../dao/paper.dao';\nimport {projectPapersDao} from '../../dao/projectPapers.dao'\nimport LoadIcon from '../loadicon';\n\nconst OPTIONS1 = [\"option one\", \"option two\", \"option three\"];\n\nconst  SearchForm = ({projectId, query, setQuery, checkboxes, setCheckboxes, results, setResults, selectedpapers, setSelectedPapers}) => {\n  const [searching, setSearching] = useState(false);\n  function handleCheckboxChange(e){\n    const { name } = e.target;\n    const prevCheckboxes = checkboxes;\n    setCheckboxes({\n      one: {\n        ...prevCheckboxes.one,\n        [name]: !prevCheckboxes.one[name]\n      }\n    });\n  }\n\n  function handlePaperSelection(e){\n    const id = e.target.value;\n    if(!selectedpapers.includes(id)){\n      var array = selectedpapers;\n      array.push(id);\n      setSelectedPapers(array);\n    }else{\n      var array = selectedpapers.filter(function(value, index, arr){\n        return value !== id;\n      });\n      setSelectedPapers(array);\n    }\n  }\n\n  function addPapers(){\n    const postData = async () => {\n      for(let i = 0; i < selectedpapers.length; i++){\n        let res = await projectPapersDao.postPaperIntoProject({paper_id: selectedpapers[i], project_id: projectId});\n      }\n    }\n    postData();\n  }\n\n  function createCheckboxes(){return OPTIONS1.map(option => {return <CheckBox label={option} isSelected={checkboxes.one[option]} handler={handleCheckboxChange} key={option} />})}\n\n  function updateSearchResults(){\n    //a wrapper function ask by reat hook\n    const fetchData = async () => {\n      //call the dao\n      setSearching(true);\n      let res = await paperDao.search({query : query});\n      //update state\n      setSearching(false);\n      setResults(res);\n    }\n    fetchData();\n  }\n\n  function showResults(){\n    if(results[0] === \"not_found\"){\n      return <>not found :(</>\n    }else{\n      return results.map((element, index) =>\n      <div key={index} className=\"paper-card\">\n      <CheckBox val={element.id} label={\"\"} handler={handlePaperSelection}/>\n        <Link to={\"#\"}><h3>{element.data.Title}</h3></Link>\n        <ClampLines\n          text={element.data.Abstract}\n          lines= {4}\n          ellipsis=\"...\"\n          moreText=\"Expand\"\n          lessText=\"Collapse\"\n          className=\"paragraph\"\n          moreText=\"more\"\n          lessText=\"less\"\n        />\n      </div>\n    )\n    }\n  }\n\n  useEffect(() => {\n    if(query !== ''){\n      updateSearchResults();\n    }\n    if(query === ''){\n      setResults([]);\n    }\n  }, []);//this way is executed only on mount\n\n  useEffect(() => {\n    setSelectedPapers([]);\n  }, [results]);\n\n  return(\n    <>\n      <form className={(results.length === 0) ? 'search-form' : 'search-form small' } onSubmit={(e) => {\n        e.preventDefault();\n        updateSearchResults();\n        }}>\n        <div style={{position:'relative'}}>\n          <input\n            type=\"text\"\n            placeholder=\"search\"\n            value={query}\n            onChange={e => setQuery(e.target.value)}\n          />\n          <button type=\"submit\" value=\"Submit\" disabled={(query === '' || searching)}>\n            <svg id=\"search-icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n              <path className=\"st0\" d=\"M626.9,644.3c-73.5,0-142.6-28.6-194.6-80.6s-80.6-121.1-80.6-194.6s28.6-142.6,80.6-194.6\n                c52-52,121.1-80.6,194.6-80.6c73.5,0,142.6,28.6,194.6,80.6c52,52,80.6,121.1,80.6,194.6s-28.6,142.6-80.6,194.6\n                S700.4,644.3,626.9,644.3z\"/>\n              <line className=\"st1\" x1=\"145.2\" y1=\"850.8\" x2=\"431.7\" y2=\"564.3\"/>\n          </svg>\n          </button>\n        </div>\n        <div className=\"option-holder\">\n          <label>Option:</label><br/>\n          <div className=\"checkboxes-holder\">\n            {createCheckboxes()}\n          </div>\n        </div>\n      </form>\n      <div className=\"loading-holder\" style={{visibility: (!searching) ? 'hidden' : '' }}>\n        <LoadIcon></LoadIcon>\n      </div>\n      <form className=\"search-results\" style={{visibility: (results.length === 0 || searching) ? 'hidden' : '' }} onSubmit={(e) => {\n          e.preventDefault();\n          addPapers();\n        }}>\n          {showResults()}\n          <button className=\"bottom-left-btn\" type=\"submit\" value=\"Submit\" style={{visibility: (results.length === 0 || results[0] === \"not_found\") ? 'hidden' : '' }}>+</button>\n        </form>\n    </>\n\n  );\n}\n\nexport default SearchForm;","import React, {useState, useEffect} from \"react\";\nimport {Route, Link} from 'react-router-dom';\nimport {Flipper, Flipped} from 'react-flip-toolkit';\nimport SearchForm from '../components/forms/searchform';\nimport {projectPapersDao} from '../dao/projectPapers.dao';\nimport {projectsDao} from '../dao/projects.dao';\nimport LoadIcon from '../components/loadicon';\nimport ClampLines from 'react-clamp-lines';\nimport join from '../utils/stringUtils';\n\nconst OPTIONS1 = [\"option one\", \"option two\", \"option three\"];\n\nconst PapersList = ({id, papers, setPapersList}) => {\n    const [fetching, setFetching] = useState(true);\n    useEffect(() => {\n        //a wrapper function ask by reat hook\n        const fetchData = async () => {\n\n            //call the dao\n            let res = await projectPapersDao.getPapersList({project_id: id});\n            //let res2 = await projectsDao.getProject(match.params.id);\n            console.log(res);\n            setFetching(false);\n            //update only when there are the results\n            if (res !== null /*&& res2 !== null*/) {\n                setPapersList(res);\n                //setProject(res2);\n            }\n        }\n        fetchData();\n        //when the component will unmount\n        return () => {\n            //stop all ongoing request\n            projectPapersDao.abortRequest();\n        };\n    }, []);//this way is executed only on mount\n    if (fetching) {\n        return <div className=\"papers-list\"><LoadIcon></LoadIcon></div>;\n    }else {\n        if(papers.length === 0){\n            return <div className=\"papers-list\">there are no papers here, you can add new ones by searching</div>;\n        }else{\n            return(\n                <div className=\"papers-list\">\n                    {papers.map((element, index) =>\n                        <div key={index} className=\"paper-card\">\n                            <Link to={\"#\"}><h3>{element.data.Title}</h3></Link>\n                            <ClampLines\n                                text={element.data.Abstract}\n                                lines={4}\n                                ellipsis=\"...\"\n                                moreText=\"Expand\"\n                                lessText=\"Collapse\"\n                                className=\"paragraph\"\n                                moreText=\"more\"\n                                lessText=\"less\"\n                            />\n                        </div>\n                    )}\n                </div>\n        );\n        }\n    }\n}\n\nconst ProjectPage = ({match}) => {\n    const [papers, setPapersList] = useState([]);\n    const [project, setProject] = useState({});\n    const [fetching, setFetching] = useState(true);\n    const [slider, setSlider] = useState(true);\n    const [query, setQuery] = useState('');\n    const [selectedpapers, setSelectedPapers] = useState([]);\n    const [checkboxes, setCheckboxes] = useState({\n        one: OPTIONS1.reduce(\n            (options, option) => ({\n                ...options,\n                [option]: false\n            }),\n            {}\n        )\n    });\n    const [results, setResults] = useState([])\n\n\n    useEffect(() => {\n        var substr = window.location.pathname.substring(window.location.pathname.length - 7, window.location.pathname.length);\n        if (substr === '/search' || substr === 'search/') {\n            setSlider(false);\n        }\n        else {\n            setSlider(true);\n        }\n    });\n\n    useEffect(() => {\n        //a wrapper function ask by reat hook\n        const fetchData = async () => {\n\n            //call the dao\n            //let res = await projectPapersDao.getPapersList({project_id: match.params.id});\n            let res2 = await projectsDao.getProject(match.params.id);\n\n            //update only when there are the results\n            if (/*res !== null && */res2 !== null) {\n                //setPapersList(res);\n                setProject(res2);\n                setFetching(false);\n            }\n        }\n        fetchData();\n        //when the component will unmount\n        return () => {\n            //stop all ongoing request\n            projectPapersDao.abortRequest();\n        };\n    }, []);//this way is executed only on mount\n\n    if (fetching) {\n        return <LoadIcon></LoadIcon>;\n    }\n    else {\n        return (\n            <div className=\"project-wrapper\">\n                <div className=\"title\">{project.data.name.toUpperCase()}</div>\n                <div className=\"project-nav-link-wrapper\">\n                    <div className=\"nav-link\">\n                        <Link to={match.url}>papers</Link>\n                    </div>\n                    <div className=\"nav-link\">\n                        <Link to={join(match.url,\"/search\")}>search</Link>\n                    </div>\n                    <Flipper flipKey={slider}>\n                        <Flipped flipId=\"underline\">\n                            <div className={slider ? \"underline underline-to-left\" : \"underline underline-to-right\"}/>\n                        </Flipped>\n                    </Flipper>\n                </div>\n                <Route exact path={match.url} render={() =>\n                    <>\n                        <div className=\"project-description\">{project.data.description}</div>\n                        <PapersList id={match.params.id} papers={papers} setPapersList={setPapersList}/>\n                    </>\n                }/>\n                <Route path = {match.url + \"/search\"} render={() =>\n                    <SearchForm projectId={project.id} query={query} setQuery={setQuery}\n                                checkboxes={checkboxes} setCheckboxes={setCheckboxes}\n                                results={results} setResults={setResults}\n                                selectedpapers={selectedpapers} setSelectedPapers={setSelectedPapers}/>\n                } />\n            </div>\n        );\n    }\n}\n\nexport default ProjectPage;","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, /*Link, Switch*/} from \"react-router-dom\";\n//import logo from './svg/logo.svg';\nimport './App.css';\n\nimport LoadIcon from './components/loadicon';\nimport NavBar from './components/navigation/navbar';\nimport Main from './components/main';\nimport ProjectsList from './components/projectslist';\nimport ProjectPage from './components/projectpage';\n\nimport {AccountProvider} from './providers/AccountProvider';\n\nclass App extends Component {\n    state = {\n        menu_list: [\n            {id: 4, content: \"my projects\", link: \"/projects\"},\n            {id: 5, content: \"option3\", link: \"/\"},\n            {id: 6, content: \"option4\", link: \"/projects/1\"}],\n    };\n\n    render() {\n        return (\n            <Router>\n                <div className=\"app\">\n\n                    {/*mount component with context object*/}\n                    <AccountProvider>\n\n                        {/*inputs of AccountProvider*/}\n                        <NavBar menu_elements={this.state.menu_list}></NavBar>\n                        {/*router by url*/}\n                        <Route exact path=\"/\" render={() => <Main main_element={<LoadIcon/>}></Main>}/>\n                        <Route exact path=\"/projects\" render={(props) => <Main main_element={<ProjectsList {...props} />}></Main>}/>\n                        <Route path=\"/projects/:id\" render={(props) => <Main main_element={<ProjectPage {...props} />}></Main>}/>\n\n                    </AccountProvider>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}