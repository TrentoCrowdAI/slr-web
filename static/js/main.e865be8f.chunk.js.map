{"version":3,"sources":["utils/conn.js","components/loadicon.js","providers/AccountProvider.js","components/navigation/sidemenu.js","components/navigation/navbar.js","components/main.js","config/index.js","dao/projects.dao.js","components/forms/projectForm.js","utils/stringUtils.js","components/projectslist.js","components/forms/checkbox.js","dao/paper.dao.js","dao/projectPapers.dao.js","components/forms/searchform.js","components/projectpage.js","App.js","serviceWorker.js","index.js"],"names":["abortController","abortRequestType","LoadIcon","react_default","a","createElement","id","xmlns","xmlnsXlink","x","y","viewBox","d","AccountContext","React","createContext","AccountProvider","Provider","value","image","className","alt","src","name","surname","this","props","children","Component","AccountConsumer","Consumer","UserInfo","_ref","SideMenu","state","shown","firsttime","handleToggleMenuButton","_this","setState","prevstate","menufocus","focus","handleMenuBlur","_this2","clsidemenu","clsbutton","onClick","x1","y1","x2","y2","tabIndex","sidemenu_UserInfo","user","menu_elements","map","element","index","key","react_router_dom","to","link","onMouseUp","content","NavBar","menuhandler","user_elements","sidemenu","handler","Main","main_element","timeOutTime","http","get","post","delete","put","abortRequest","abort","request","_callee","url","options","signal","requestOptions","response","timeOutError","_args","arguments","regenerator_default","wrap","_context","prev","next","length","undefined","AbortController","Object","assign","credentials","mode","setTimeout","fetch","checkResponseStatus","sent","parseResponseData","abrupt","t0","Error","stop","_callee2","queryData","query","_args2","_context2","encodeURIComponent","slice","_callee3","_context3","method","_callee4","bodyData","jsonHeaders","body","_args4","_context4","Headers","append","JSON","stringify","headers","_callee5","_args5","_context5","status","error","statusText","data","_callee6","contentType","_context6","indexOf","text","formData","blob","json","config","home","search","projects","papers","res","project_id","projectsDao","getProjectsList","getProject","postProject","putProject","deleteProject","ProjectForm","projectName","useRef","projectDescription","_createProject","asyncToGenerator","mark","e","preventDefault","current","description","alert","apply","_updateProject","project","projectInputData","submitAction","_x","_x2","Fragment","style","visibility","type","setVisibility","ref","defaultValue","join","base","path","charAt","ProjectsList","match","_useState","useState","_useState2","slicedToArray","toggleform","setToggleForm","_useState3","_useState4","projectslist","setProjectsList","_useState5","_useState6","fetching","setFetching","useEffect","_ref2","console","log","message","results","fetchData","loadicon","projectForm","CheckBox","val","label","isSelected","checked","onChange","paperDao","paper_id","projectPapersDao","getPapersList","getPaper","postPaperIntoProject","putPaper","deletePaper","OPTIONS1","SearchForm","projectId","setQuery","checkboxes","setCheckboxes","setResults","selectedpapers","setSelectedPapers","searching","setSearching","handleCheckboxChange","target","prevCheckboxes","one","objectSpread","defineProperty","handlePaperSelection","array","includes","filter","arr","push","updateSearchResults","_ref3","onSubmit","position","placeholder","disabled","option","forms_checkbox","i","postData","_React$createElement","Title","lib_default","Abstract","lines","ellipsis","moreText","lessText","PapersList","setPapersList","ProjectPage","setProject","_useState7","_useState8","_useState9","_useState10","slider","setSlider","_useState11","_useState12","_useState13","_useState14","_useState15","reduce","_useState16","_useState17","_useState18","substr","window","location","pathname","substring","_ref4","res2","params","toUpperCase","es","flipKey","flipId","react_router","exact","render","projectpage_PapersList","searchform","App","menu_list","AccountProvider_AccountProvider","navbar","main","components_projectslist","projectpage","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e865be8f.chunk.js","sourcesContent":["/*this is the file to communicate with backend*/\n\n//signal to abort the request\nvar abortController;\n//int to know abort error type\nvar abortRequestType;\n//10seconds for timeout\nvar timeOutTime = 10 * 1000;\n\n//object to export\nconst http = {\n    \"get\": get,\n    \"post\": post,\n    \"delete\": deletes,\n    \"put\": put,\n    \"abortRequest\": abortRequest,\n\n}\n\n\n/**\n * abort all request in progeress by user\n */\nfunction abortRequest() {\n    abortController.abort();\n    abortRequestType = 1;\n}\n\n/**\n * abort all request if timeout\n */\nfunction timeOut(){\n\n    abortController.abort();\n    abortRequestType = 2;\n}\n\n/**\n * create a basic fetch request\n * @param url\n * @param options request config\n * @return {object} response data\n */\nasync function request(url, options = {}) {\n    try {\n\n        //create a new abortController for this request\n        abortController =  new AbortController();\n        let signal = abortController.signal;\n        //initialize as 0 for every request\n        abortRequestType=0;\n\n        let requestOptions = Object.assign(\n            {\n                //enable the  sending of cookie\n                credentials: 'include',\n                \"mode\": 'cors',\n                \"signal\": signal\n            },\n            options\n        );\n\n        setTimeout(() => abortController.abort(), timeOutTime);\n        let response = await fetch(url, requestOptions);\n\n        //response error check\n        checkResponseStatus(response);\n        //parse response data\n        response = await parseResponseData(response);\n        //console.log(response);\n\n        return response;\n\n    } catch (error) {\n        //if abort error is caused by timeout\n        if(abortRequestType === 2){\n            //create a custom error for timeout\n            let timeOutError = new Error(\"Error: Time out to get response from backend\");\n            timeOutError.name =\"timeout\";\n            throw  timeOutError;\n        }\n        //if isn't a abort error  caused by user\n        else if(abortRequestType !== 1){\n            throw error;\n        }\n\n        return null;\n    }\n}\n\n/**\n * get method\n * @param url\n * @param queryData quey string\n * @return {object} response data\n */\nasync function get(url, queryData = \"\") {\n    let query = \"\";\n    if (queryData !== \"\") {\n        query = \"?\";\n        for (let key in queryData) {\n            query += key + \"=\" + encodeURIComponent(queryData[key]) + \"&\";\n        }\n        //delete the last &\n        query = query.slice(0, query.length - 1);\n    }\n    return await request(url + query);\n}\n\n/**\n * deletes method\n * @param url\n */\nasync function deletes(url) {\n    let options = {\n        \"method\": 'DELETE'\n    };\n\n    await request(url, options);\n}\n\n/**\n * post method\n * @param url\n * @param bodyData\n * @return {object } response data\n */\nasync function post(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'POST',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options);\n}\n\n\n\n\n/**\n * put method\n * @param url\n * @param bodyData\n */\nasync function put(url, bodyData = \"\") {\n\n    let jsonHeaders = new Headers();\n    jsonHeaders.append('Accept', 'application/json, text/plain, */*');\n    jsonHeaders.append('Cache-Control', 'no-cache');\n    jsonHeaders.append('Content-Type', 'application/json;charset=UTF-8');\n    let body = JSON.stringify(bodyData, null, 2);\n    let options = {\n        \"method\": 'PUT',\n        \"headers\": jsonHeaders,\n        \"body\": body,\n    };\n\n    return await request(url, options);\n}\n\n\n/**\n *  * check resposonse status\n * @param response to check\n * @throws {Error} if  status code < 200 or status code >= 300\n */\nfunction checkResponseStatus(response) {\n    if (response.status < 200 || response.status >= 300) {\n        const error = new Error(response.statusText);\n        error.data = response;\n        throw error;\n    }\n\n}\n\n/**\n * parse the response of  http request\n * @param response\n * @return {object} data parsed\n */\nasync function parseResponseData(response) {\n    //get response data type\n    const contentType = response.headers.get('Content-Type');\n    let data;\n    //parse the data by its type\n    if (contentType != null) {\n        if (contentType.indexOf('text') > -1) {\n            data = await response.text()\n        }\n        if (contentType.indexOf('form') > -1) {\n            data = await response.formData();\n        }\n        if (contentType.indexOf('video') > -1) {\n            data = await response.blob();\n        }\n        if (contentType.indexOf('json') > -1) {\n            data = await response.json();\n        }\n    } else {\n        data = await response.text();\n    }\n    return data;\n}\n\n\nexport {http};","import React from \"react\";\n\n/**\n * component loading-icon\n */\nconst LoadIcon = () => (\n  <svg id=\"loading-icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n    viewBox=\"0 0 1000 1000\">\n    <g>\n      <path id=\"loading-circle1\" d=\"\n              M 500, 500\n              m -160, 0\n              a 160,160 0 1,0 320,0\n              a 160,160 0 1,0 -320,0\n      \"/>\n      <path id=\"loading-circle2\" d=\"\n              M 500, 500\n              m -305, 0\n              a 305,305 0 1,0 610,0\n              a 305,305 0 1,0 -610,0\n      \"/>\n    </g>\n  </svg>\n);\n\nexport default LoadIcon;\n","import React, {Component} from 'react';\n\n//create a context object\nconst AccountContext = React.createContext();\n\n/**\n * account component\n * offers a context object that storage user information and it can be acessed by all component-children\n */\nclass AccountProvider extends Component {\n    render() {\n        return (\n\n         //*set the values of contenxt*\n        <AccountContext.Provider value={{\n            image: <img className=\"face\" alt=\"profile\" src=\"https://placekitten.com/100/100\"></img>,\n            name: \"Bobinsky\",\n            surname: \"Sylvester\"\n        }}>\n\n            {/*mount all components received by props*/}\n            {this.props.children}\n\n        </AccountContext.Provider>\n        );\n    }\n}\n\nconst AccountConsumer = AccountContext.Consumer;\nexport {AccountProvider, AccountConsumer};","import React, {Component} from \"react\";\nimport { AccountConsumer } from '../../providers/AccountProvider'\nimport { Link } from 'react-router-dom'\n\nconst UserInfo = () => (\n  <AccountConsumer>\n     {({ image, name, surname }) => (\n      <div className=\"user\" >\n        {image}\n        <div className=\"user-info\">\n          {name}\n          <br/>\n          {surname}\n        </div>\n      </div>  \n     )}\n  </AccountConsumer>\n);\n\nclass SideMenu extends Component{\n  state = {\n    shown: false, \n    firsttime: true\n  };\n\n  handleToggleMenuButton = () =>{\n    this.setState(prevstate => ({\n      shown: !prevstate.shown,\n      firsttime: false,\n      menufocus: !prevstate.focus\n    }));\n  }\n\n  handleMenuBlur = () =>{\n    this.setState(prevstate => ({\n      shown: false\n    }));\n  }\n\n  render(){\n    var clsidemenu = \"modal side-menu up\";\n    var clsbutton = \"button-wrapper close\";\n    if(this.state.firsttime){\n      clsidemenu=\"modal side-menu\"\n    }\n    if(this.state.shown){\n      clsbutton=\"button-wrapper open\"\n      clsidemenu=\"modal side-menu down\"\n    }\n    return (\n      <div className=\"menu\">\n        <div className={clsbutton} onClick={this.handleToggleMenuButton}>\n          <svg id=\"menu-button\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n            <path className=\"st0\" d=\"M214,482.1\"/>\n            <line className=\"st-t\" x1=\"172\" y1=\"482.1\" x2=\"172\" y2=\"482.1\"/>\n            <line className=\"st-m\" x1=\"500\" y1=\"482.1\" x2=\"500\" y2=\"482.1\"/>\n            <line className=\"st-b\" x1=\"828\" y1=\"482.1\" x2=\"828\" y2=\"482.1\"/>\n          </svg>\n      </div>\n      <div className={clsidemenu} tabIndex={-1}>\n        <UserInfo user={this.props.user}></UserInfo>\n        {this.props.menu_elements.map((element, index) =>\n          <div key={index}>\n            <Link to={element.link} className=\"menu-option\" onMouseUp={this.handleMenuBlur}>{element.content}</Link>          \n          </div>\n        )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SideMenu;","import React from \"react\";\nimport SideMenu from './sidemenu';\n\n\n/**\n * this is the head component of page\n * @param \"menu_elements\" contains the list of menu-items\n */\n\nconst NavBar = ({menuhandler, user_elements, menu_elements}) => {\n    return (\n        <div className=\"navigation-wrapper\">\n\n            {/*background of the menu-bar*/}\n            <nav className=\"main-nav\"></nav>\n            {/*component menu*/}\n            <SideMenu handler={menuhandler} user={user_elements} menu_elements={menu_elements}></SideMenu>\n\n        </div>\n    );\n}\n\nexport default NavBar;","import React, {Component} from \"react\";\n\n/**\n * compotent main of page\n */\nclass Main extends Component {\n    state = {};\n\n    render() {\n        return (\n            <div className=\"main-wrapper\">\n                {this.props.main_element}\n            </div>\n        );\n    }\n};\n\nexport default Main;","/**\n * this is the config file\n */\n\n\nconst config = {\n    \"home\" : \"http://localhost:3000/\",\n    \"search\" : \"search\",\n    \"projects\" : \"projects\",\n    \"papers\" : \"papers\"\n\n}\n\nexport {config};","import {http} from './../utils/conn'\nimport {config} from './../config/index'\n\n/**\n * dao to get a projects list\n * @param queryData\n * @return {array[objects]}\n */\nasync function getProjectsList(queryData = \"\") {\n    let url = config.home + config.projects\n    try{\n        const res =  await http.get(url, queryData);\n        return res;\n    }catch(e){\n        return e;\n    }\n    \n}\n\n/**\n * dao to get a project\n * @param project_id\n * @return {Object} project requested\n */\nasync function getProject(project_id) {\n    let url = config.home + config.projects+\"/\"+project_id;\n    return await http.get(url);\n}\n\n/**\n * dao to post a new project\n * @param bodyData\n * @return {Object} project created\n */\nasync function postProject(bodyData) {\n    let url = config.home + config.projects;\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to put a old project\n * @param project_id\n * @param bodyData\n */\nasync function putProject(project_id, bodyData) {\n    let url = config.home + config.projects+\"/\"+project_id;\n    await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a project\n * @param project_id\n * @param bodyData\n */\nasync function deleteProject(project_id) {\n    let url = config.home + config.projects+\"/\"+project_id;\n    await http.delete(url);\n}\n\n\n\nconst projectsDao = {\n    \"getProjectsList\": getProjectsList,\n    \"getProject\": getProject,\n    \"postProject\": postProject,\n    \"putProject\": putProject,\n    \"deleteProject\": deleteProject,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {projectsDao};","import React, {useEffect, useRef} from \"react\";\nimport {projectsDao} from './../../dao/projects.dao'\n\n\n/**\n * this is the form for create or edit the project\n * @param props.project  project object if we want to update a old project\n * @param null if we want to create a new project\n */\nfunction ProjectForm(props) {\n\n    //field of project name\n    const projectName = useRef(null);\n    //field of project description\n    const projectDescription = useRef(null);\n\n    /**\n     * action to create a new project\n      */\n    async function createProject(e) {\n        //disable default action\n        e.preventDefault();\n        //prepare the data object to post\n        let bodyData = {name: projectName.current.value, description: projectDescription.current.value};\n        //call dao\n        let res = await projectsDao.postProject(bodyData);\n\n        alert(\"inserted correctly\");\n    }\n\n    /**\n     * action to update a old project\n     */\n    async function updateProject(e) {\n        //disable default action\n        e.preventDefault();\n        //prepare the data object to post\n        let bodyData = {name: projectName.current.value, description: projectDescription.current.value};\n        //call dao  with project_id and data object\n        await projectsDao.putProject(props.project.id, bodyData);\n\n        alert(\"updated correctly\");\n    }\n\n\n    //defalut input values are empty\n    let projectInputData = {name: \"\", description: \"\"};\n    //default action is create a project\n    let submitAction = createProject;\n    //if we want update a old project\n    if (props.project !== undefined) {\n        //get old project data\n        projectInputData.name = props.project.data.name;\n        projectInputData.description = props.project.data.description;\n        //set action as update\n        submitAction = updateProject;\n    }\n\n    return (\n        <>\n        <form className=\"modal add-project\" style={{visibility: (!props.visibility) ? 'hidden' : '' }}>\n            <button type=\"button\" className=\"close-btn\" onClick={(e) => {\n                props.setVisibility(!props.visibility);\n            }}>X</button>\n            <label>name</label>\n            <br/>\n            <input ref={projectName} type=\"text\" defaultValue={projectInputData.name}/>\n            <br/>\n            <label>description</label>\n            <br/>\n            <input ref={projectDescription} type=\"text\" defaultValue={projectInputData.description}/>\n            <br/>\n            <button type=\"submit\" onClick={submitAction} value=\"submit\">submit</button>\n        </form>\n        </>\n    );\n\n\n}\n\n\nexport default ProjectForm;","export default function join(base, path){\n    return base.charAt(base.length-1) === '/'\n      ? base.slice(0,-1) + path\n      : base + path\n  }","import React, {useState, useEffect} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {projectsDao} from '../dao/projects.dao';\nimport LoadIcon from '../components/loadicon';\nimport ProjectForm from '../components/forms/projectForm';\nimport join from '../utils/stringUtils';\n\n/**\n *this component will show a projects list\n */\n\nconst ProjectsList = ({match}) => {\n\n    const [toggleform, setToggleForm] = useState(false);\n    const [projectslist, setProjectsList] = useState([]);\n    //bool variable to decide show  or not show list\n    const [fetching, setFetching] = useState(true);\n\n    useEffect(() => {\n\n        //a wrapper function ask by reat hook\n        const fetchData = async () => {\n            //call the dao\n            const res = await projectsDao.getProjectsList();\n            //update only when there is a result\n            console.log(res);\n            if (res !== null) {\n                //update state\n                if(res.message){//I check if I get an error message\n                    setProjectsList({\"results\": [{\"data\": {\"name\": res.message}}]});//momentary way to display error message as a project\n                }else{//if there's no error message it means I got a list of projects\n                    setProjectsList(res);\n                }\n                setFetching(false);\n            }\n\n        }\n        fetchData();\n        //when the component will unmount\n        return () => {\n            //stop all ongoing request\n            projectsDao.abortRequest();\n        };\n    }, []);\n\n    if (fetching) {\n        return <LoadIcon></LoadIcon>;\n    }\n    else {\n        return (\n            <>\n                <div className=\"project-cards-holder\">\n                    <div className=\"title\">PROJECTS</div>\n                    {projectslist.results.map((element, index) =>\n                        <Link key={index} to={join(match.url,\"/\"+element.id)}>\n                            <div className=\"light-modal project-card\">\n                                <h3>{element.data.name}</h3>\n                                <p>{element.data.description}</p>\n                            </div>\n                        </Link>\n                    )}\n                </div>\n                <ProjectForm visibility={toggleform} setVisibility={setToggleForm}></ProjectForm>\n                <button className=\"bottom-left-btn\" type=\"button\" value=\"toggle-insert-form\"\n                onClick={(e) => {\n                    setToggleForm(!toggleform);\n                  }}\n                >+</button>\n            </>\n\n        );\n    }\n}\n\nexport default ProjectsList;","import React from \"react\";\n\nconst CheckBox = ({ val, label, isSelected, handler }) => (\n    <label className=\"checkbox-container\">\n      <input type=\"checkbox\" value={val} name={label} checked={isSelected} onChange={handler} />\n      <span className=\"checkmark\"></span>\n      <span>{label}</span>\n    </label>\n);\n\nexport default CheckBox;","import {http} from './../utils/conn'\nimport {config} from './../config/index'\n\n/**\n * dao to search papers\n * @param queryData\n * @return {array[objects]}\n */\nasync function search(queryData){\n    let url = config.home+config.search\n    try{\n        const res = await http.get(url, queryData);\n        console.log(res);\n        return res.results;\n    }catch(e){\n        return [\"not_found\"];\n    }\n}\n\n\n\nconst paperDao = {\n    \"search\" : search,\n    \"abortRequest\" : http.abortRequest\n}\n\n\n\nexport {paperDao};","import {http} from './../utils/conn'\nimport {config} from './../config/index'\n\n/**\n * dao to get a list of paper associated with a project\n * @param queryData\n * @return {array[objects]}\n */\nasync function getPapersList(queryData) {\n    let url = config.home + config.papers\n    try{\n        const res = await http.get(url, queryData);\n        return res;\n    }catch(e){\n        if(e.message === \"Not Found\"){\n            return null;\n        }else{\n            return e;\n        }\n    }\n}\n\n/**\n * dao to get a paper\n * @param paper_id\n * @return {Object} paper requested\n */\nasync function getPaper(paper_id) {\n    let url = config.home + config.papers+\"/\"+paper_id;\n    return await http.get(url);\n}\n\n/**\n * dao to post a new paper\n * @param bodyData\n * @return {Object} project created\n */\nasync function postPaperIntoProject(bodyData) {\n    let url = config.home + config.papers;\n    console.log(bodyData);\n    return await http.post(url, bodyData);\n}\n\n/**\n * dao to put a old paper\n * @param paper_id\n * @param bodyData\n */\nasync function putPaper(paper_id, bodyData) {\n    let url = config.home + config.papers+\"/\"+paper_id;\n    await http.put(url, bodyData);\n}\n\n/**\n * dao to delete a paper\n * @param paper_id\n * @param bodyData\n */\nasync function deletePaper(paper_id) {\n    let url = config.home + config.papers+\"/\"+paper_id;\n    await http.delete(url);\n}\n\n\n\nconst projectPapersDao = {\n    \"getPapersList\": getPapersList,\n    \"getPaper\": getPaper,\n    \"postPaperIntoProject\": postPaperIntoProject,\n    \"putPaper\": putPaper,\n    \"deletePaper\": deletePaper,\n    \"abortRequest\": http.abortRequest\n}\n\n\nexport {projectPapersDao};","import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom'\nimport CheckBox from \"./checkbox\";\nimport ClampLines from 'react-clamp-lines';\nimport {paperDao} from '../../dao/paper.dao';\nimport {projectPapersDao} from '../../dao/projectPapers.dao'\nimport LoadIcon from '../loadicon';\n\nconst OPTIONS1 = [\"option one\", \"option two\", \"option three\"];\n\nconst  SearchForm = ({projectId, query, setQuery, checkboxes, setCheckboxes, results, setResults, selectedpapers, setSelectedPapers}) => {\n  const [searching, setSearching] = useState(false);\n  function handleCheckboxChange(e){\n    const { name } = e.target;\n    const prevCheckboxes = checkboxes;\n    setCheckboxes({\n      one: {\n        ...prevCheckboxes.one,\n        [name]: !prevCheckboxes.one[name]\n      }\n    });\n  }\n\n  function handlePaperSelection(e){\n    const id = e.target.value;\n    if(!selectedpapers.includes(id)){\n      var array = selectedpapers;\n      array.push(id);\n      setSelectedPapers(array);\n    }else{\n      var array = selectedpapers.filter(function(value, index, arr){\n        return value !== id;\n      });\n      setSelectedPapers(array);\n    }\n  }\n\n  function addPapers(){\n    const postData = async () => {\n      for(let i = 0; i < selectedpapers.length; i++){\n        let res = await projectPapersDao.postPaperIntoProject({paper_id: selectedpapers[i], project_id: projectId});\n      }\n    }\n    postData();\n  }\n\n  function createCheckboxes(){return OPTIONS1.map(option => {return <CheckBox label={option} isSelected={checkboxes.one[option]} handler={handleCheckboxChange} key={option} />})}\n\n  function updateSearchResults(){\n    //a wrapper function ask by reat hook\n    const fetchData = async () => {\n      //call the dao\n      setSearching(true);\n      let res = await paperDao.search({query : query});\n      //update state\n      setSearching(false);\n      setResults(res);\n    }\n    fetchData();\n  }\n\n  function showResults(){\n    if(results[0] === \"not_found\"){\n      return <>not found :(</>\n    }else{\n      return results.map((element, index) =>\n      <div key={index} className=\"paper-card\">\n      <CheckBox val={element.id} label={\"\"} handler={handlePaperSelection}/>\n        <Link to={\"#\"}><h3>{element.data.Title}</h3></Link>\n        <ClampLines\n          text={element.data.Abstract}\n          lines= {4}\n          ellipsis=\"...\"\n          moreText=\"Expand\"\n          lessText=\"Collapse\"\n          className=\"paragraph\"\n          moreText=\"more\"\n          lessText=\"less\"\n        />\n      </div>\n    )\n    }\n  }\n\n  useEffect(() => {\n    if(query !== ''){\n      updateSearchResults();\n    }\n    if(query === ''){\n      setResults([]);\n    }\n  }, []);//this way is executed only on mount\n\n  useEffect(() => {\n    setSelectedPapers([]);\n  }, [results]);\n\n  return(\n    <>\n      <form className={(results.length === 0) ? 'search-form' : 'search-form small' } onSubmit={(e) => {\n        e.preventDefault();\n        updateSearchResults();\n        }}>\n        <div style={{position:'relative'}}>\n          <input\n            type=\"text\"\n            placeholder=\"search\"\n            value={query}\n            onChange={e => setQuery(e.target.value)}\n          />\n          <button type=\"submit\" value=\"Submit\" disabled={(query === '' || searching)}>\n            <svg id=\"search-icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 1000 1000\">\n              <path className=\"st0\" d=\"M626.9,644.3c-73.5,0-142.6-28.6-194.6-80.6s-80.6-121.1-80.6-194.6s28.6-142.6,80.6-194.6\n                c52-52,121.1-80.6,194.6-80.6c73.5,0,142.6,28.6,194.6,80.6c52,52,80.6,121.1,80.6,194.6s-28.6,142.6-80.6,194.6\n                S700.4,644.3,626.9,644.3z\"/>\n              <line className=\"st1\" x1=\"145.2\" y1=\"850.8\" x2=\"431.7\" y2=\"564.3\"/>\n          </svg>\n          </button>\n        </div>\n        <div className=\"option-holder\">\n          <label>Option:</label><br/>\n          <div className=\"checkboxes-holder\">\n            {createCheckboxes()}\n          </div>\n        </div>\n      </form>\n      <div className=\"loading-holder\" style={{visibility: (!searching) ? 'hidden' : '' }}>\n        <LoadIcon></LoadIcon>\n      </div>\n      <form className=\"search-results\" style={{visibility: (results.length === 0 || searching) ? 'hidden' : '' }} onSubmit={(e) => {\n          e.preventDefault();\n          addPapers();\n        }}>\n          {showResults()}\n          <button className=\"bottom-left-btn\" type=\"submit\" value=\"Submit\" style={{visibility: (results.length === 0 || results[0] === \"not_found\") ? 'hidden' : '' }}>+</button>\n        </form>\n    </>\n\n  );\n}\n\nexport default SearchForm;","import React, {useState, useEffect} from \"react\";\nimport {Route, Link} from 'react-router-dom';\nimport {Flipper, Flipped} from 'react-flip-toolkit';\nimport SearchForm from '../components/forms/searchform';\nimport {projectPapersDao} from '../dao/projectPapers.dao';\nimport {projectsDao} from '../dao/projects.dao';\nimport LoadIcon from '../components/loadicon';\nimport ClampLines from 'react-clamp-lines';\nimport join from '../utils/stringUtils';\n\nconst OPTIONS1 = [\"option one\", \"option two\", \"option three\"];\n\nconst PapersList = ({id, papers, setPapersList}) => {\n    const [fetching, setFetching] = useState(true);\n    useEffect(() => {\n        //a wrapper function ask by reat hook\n        const fetchData = async () => {\n\n            //call the dao\n            let res = await projectPapersDao.getPapersList({project_id: id});\n            //let res2 = await projectsDao.getProject(match.params.id);\n            console.log(res);\n            setFetching(false);\n            //update only when there are the results\n            if (res !== null /*&& res2 !== null*/) {\n                setPapersList(res);\n                //setProject(res2);\n            }\n        }\n        fetchData();\n        //when the component will unmount\n        return () => {\n            //stop all ongoing request\n            projectPapersDao.abortRequest();\n        };\n    }, []);//this way is executed only on mount\n    if (fetching) {\n        return <div className=\"papers-list\"><LoadIcon></LoadIcon></div>;\n    }else {\n        if(papers.length === 0){\n            return <div className=\"papers-list\">there are no papers here, you can add new ones by searching</div>;\n        }else{\n            return(\n                <div className=\"papers-list\">\n                    {papers.map((element, index) =>\n                        <div key={index} className=\"paper-card\">\n                            <Link to={\"#\"}><h3>{element.data.Title}</h3></Link>\n                            <ClampLines\n                                text={element.data.Abstract}\n                                lines={4}\n                                ellipsis=\"...\"\n                                moreText=\"Expand\"\n                                lessText=\"Collapse\"\n                                className=\"paragraph\"\n                                moreText=\"more\"\n                                lessText=\"less\"\n                            />\n                        </div>\n                    )}\n                </div>\n        );\n        }\n    }\n}\n\nconst ProjectPage = ({match}) => {\n    const [papers, setPapersList] = useState([]);\n    const [project, setProject] = useState({});\n    const [fetching, setFetching] = useState(true);\n    const [slider, setSlider] = useState(true);\n    const [query, setQuery] = useState('');\n    const [selectedpapers, setSelectedPapers] = useState([]);\n    const [checkboxes, setCheckboxes] = useState({\n        one: OPTIONS1.reduce(\n            (options, option) => ({\n                ...options,\n                [option]: false\n            }),\n            {}\n        )\n    });\n    const [results, setResults] = useState([])\n\n\n    useEffect(() => {\n        var substr = window.location.pathname.substring(window.location.pathname.length - 7, window.location.pathname.length);\n        if (substr === '/search' || substr === 'search/') {\n            setSlider(false);\n        }\n        else {\n            setSlider(true);\n        }\n    });\n\n    useEffect(() => {\n        //a wrapper function ask by reat hook\n        const fetchData = async () => {\n\n            //call the dao\n            //let res = await projectPapersDao.getPapersList({project_id: match.params.id});\n            let res2 = await projectsDao.getProject(match.params.id);\n\n            //update only when there are the results\n            if (/*res !== null && */res2 !== null) {\n                //setPapersList(res);\n                setProject(res2);\n                setFetching(false);\n            }\n        }\n        fetchData();\n        //when the component will unmount\n        return () => {\n            //stop all ongoing request\n            projectPapersDao.abortRequest();\n        };\n    }, []);//this way is executed only on mount\n\n    if (fetching) {\n        return <LoadIcon></LoadIcon>;\n    }\n    else {\n        return (\n            <div className=\"project-wrapper\">\n                <div className=\"title\">{project.data.name.toUpperCase()}</div>\n                <div className=\"project-nav-link-wrapper\">\n                    <div className=\"nav-link\">\n                        <Link to={match.url}>papers</Link>\n                    </div>\n                    <div className=\"nav-link\">\n                        <Link to={join(match.url,\"/search\")}>search</Link>\n                    </div>\n                    <Flipper flipKey={slider}>\n                        <Flipped flipId=\"underline\">\n                            <div className={slider ? \"underline underline-to-left\" : \"underline underline-to-right\"}/>\n                        </Flipped>\n                    </Flipper>\n                </div>\n                <Route exact path={match.url} render={() =>\n                    <>\n                        <div className=\"project-description\">{project.data.description}</div>\n                        <PapersList id={match.params.id} papers={papers} setPapersList={setPapersList}/>\n                    </>\n                }/>\n                <Route path = {match.url + \"/search\"} render={() =>\n                    <SearchForm projectId={project.id} query={query} setQuery={setQuery}\n                                checkboxes={checkboxes} setCheckboxes={setCheckboxes}\n                                results={results} setResults={setResults}\n                                selectedpapers={selectedpapers} setSelectedPapers={setSelectedPapers}/>\n                } />\n            </div>\n        );\n    }\n}\n\nexport default ProjectPage;","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, /*Link, Switch*/} from \"react-router-dom\";\n//import logo from './svg/logo.svg';\nimport './App.css';\n\nimport LoadIcon from './components/loadicon';\nimport NavBar from './components/navigation/navbar';\nimport Main from './components/main';\nimport ProjectsList from './components/projectslist';\nimport ProjectPage from './components/projectpage';\n\nimport {AccountProvider} from './providers/AccountProvider';\n\nclass App extends Component {\n    state = {\n        menu_list: [\n            {id: 4, content: \"my projects\", link: \"/projects\"},\n            {id: 5, content: \"option3\", link: \"/\"},\n            {id: 6, content: \"option4\", link: \"/projects/1\"}],\n    };\n\n    render() {\n        return (\n            <Router>\n                <div className=\"app\">\n\n                    {/*mount component with context object*/}\n                    <AccountProvider>\n\n                        {/*inputs of AccountProvider*/}\n                        <NavBar menu_elements={this.state.menu_list}></NavBar>\n                        {/*router by url*/}\n                        <Route exact path=\"/\" render={() => <Main main_element={<LoadIcon/>}></Main>}/>\n                        <Route exact path=\"/projects\" render={(props) => <Main main_element={<ProjectsList {...props} />}></Main>}/>\n                        <Route path=\"/projects/:id\" render={(props) => <Main main_element={<ProjectPage {...props} />}></Main>}/>\n\n                    </AccountProvider>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}